0001   0000             ;***************************************************************
0002   0000             ;* Major Havoc MainLine Program (Gamma Processor)              *
0003   0000             ;***************************************************************
0004   0000                 .title "Major Havoc GAMMA Processor"               
0005   0000             ;*************************************************************** 
0006   0000             
0007   0000             #locallabelchar "?"
0008   0000             #include "logic.ah"
0001+  0000             ;***********************************************
0002+  0000             ;* 6505 Style Logical Instruction Macros       *
0003+  0000             ;*                                             *
0004+  0000             ;***********************************************
0005+  0000             .module logic
0006+  0000             
0007+  0000             var1_		.equ	$00
0008+  0000             var2_		.equ	$00
0009+  0000             var3_		.equ	$00
0010+  0000             var4_		.equ	$00
0011+  0000             
0012+  0000             #define     FLAG_IF    	0
0013+  0000             #define     FLAG_ELSE 	1
0014+  0000             #define		FLAG_BEGIN 	2
0015+  0000             #define 	FLAG_IF_FAR	4
0016+  0000             
0017+  0000             ;*******************************************************************
0018+  0000             ;* Locate: Pushes two Words                                        *
0019+  0000             ;*                                                                 *
0020+  0000             ;*            Word 1 - address of branch location                  *
0021+  0000             ;*            Word 2 - Type of Operation                           *
0022+  0000             ;*                     0 - Standard ENDIF                          *
0023+  0000             ;*                     1 - ELSE or Logical ELSE                    *
0024+  0000             ;*                     2 - Loop                                    *
0025+  0000             ;*******************************************************************
0026+  0000             #define	logic_loc(type)	     \ .push  *, type
0027+  0000             
0028+  0000             ;*******************************************************************
0029+  0000             ;* Ifxx: These are the standard 'if' statements, they will always  *
0030+  0000             ;*       be of type 0.                                             *
0031+  0000             ;*******************************************************************
0032+  0000             #define	logic_ifxx(x)	     logic_loc(FLAG_IF) \ x  * 
0033+  0000             ;*******************************************************************
0034+  0000             ;* FAR Version will put a JMP to address in the middle when ended
0035+  0000             ;*******************************************************************
0036+  0000             #define	logic_ifxx_(x)	     logic_loc((FLAG_IF_FAR)) \ .db x,$03,$EA,$EA,$EA
0037+  0000             
0038+  0000             ;*******************************************************************
0039+  0000             ;* Begin: The start marker for logical loops, must terminate with  *
0040+  0000             ;*        an 'xxend' statement.                                    *
0041+  0000             ;******************************************************************* 
0042+  0000             #define     begin		     logic_loc(FLAG_BEGIN)
0043+  0000             
0044+  0000             ;*******************************************************************
0045+  0000             ;* Logic End: This is the end macro for the 'begin' statement. It  *
0046+  0000             ;*            pulls the pc location of the beginning of the loop   *
0047+  0000             ;*            and verifies that the 'type' is correct.             *
0048+  0000             ;*******************************************************************
0049+  0000             #define logic_loopend(x,y)	\ .pop var1_, var2_
0050+  0000             #defcont				\#if (var1_ & FLAG_BEGIN)
0051+  0000             #defcont					\#if ((var2_-*-2+127) <= 0) 
0052+  0000             #defcont						\ y	*+5
0053+  0000             #defcont						\ jmp	var2_
0054+  0000             #defcont					\#else
0055+  0000             #defcont						\ x	var2_
0056+  0000             #defcont					\#endif
0057+  0000             #defcont				\#else
0058+  0000             #defcont					\ .error "Inappropriate End for BEGIN Loop."
0059+  0000             #defcont				\#endif
0060+  0000             
0061+  0000             ;*******************************************************************
0062+  0000             ;* Logic Find: Used for ENDIF statement. Will find the pc for the  *
0063+  0000             ;*             previous IF (or ELSE) and update the branch or jump *
0064+  0000             ;*             at that address to point to the current address.    *
0065+  0000             ;*                                                                 *
0066+  0000             ;*  This will also look at the FLAG_FAR to determine more structure*
0067+  0000             ;*******************************************************************
0068+  0000             #define logic_end \var1_ .set *
0069+  0000             #defcont		\ .pop var3_, var4_
0070+  0000             #defcont		\#if (var3_ & FLAG_BEGIN)==0 	
0071+  0000             #defcont			\#if (var3_ & FLAG_ELSE)==0	
0072+  0000             #defcont                \#if (var3_ & FLAG_IF_FAR)==0	 
0073+  0000             #defcont  					\var2_ .set var1_-var4_-2
0074+  0000             #defcont					\#if var2_+127 < 0
0075+  0000             #defcont						\ .error "Branch Range < -127, use far logic"
0076+  0000             #defcont					\#else
0077+  0000             #defcont						\#if var2_-128 > 0
0078+  0000             #defcont							\ .error "Branch Range > 128, use far logic"
0079+  0000             #defcont						\#else
0080+  0000             #defcont   	 						\ .org var4_+1
0081+  0000             #defcont							\ .byte var2_
0082+  0000             #defcont						\#endif
0083+  0000             #defcont					\#endif
0084+  0000             #defcont				\#else
0085+  0000             #defcont					\ .org var4_+2
0086+  0000             #defcont					\ jmp var1_
0087+  0000             #defcont				\#endif
0088+  0000             #defcont			\#else	
0089+  0000             #defcont    			\ .org  var4_-2	
0090+  0000             #defcont				\ .word var1_
0091+  0000             #defcont			\#endif
0092+  0000             #defcont			\ .org	var1_
0093+  0000             #defcont		\#else
0094+  0000             #defcont			\ .error "Wrong Endtype for IF block"
0095+  0000             #defcont		\#endif
0096+  0000             
0097+  0000             ;*******************************************************************
0098+  0000             ;* Logic Else: Can act as a standard else or a complex else        *
0099+  0000             ;*             (ie. with additional logic as defined below). The   *
0100+  0000             ;*             ELSE block will resove how to terminate the current *
0101+  0000             ;*             code and then set the owning IF statement's data    *
0102+  0000             ;*             byte.                                               *
0103+  0000             ;*******************************************************************
0104+  0000             #define	logic_else(x,y)	\var1_ .set $
0105+  0000             #defcont		\ .pop var3_, var4_
0106+  0000             #defcont		\#if (var3_ & FLAG_BEGIN)==0
0107+  0000             #defcont			\#if (var3_ & FLAG_ELSE)==0
0108+  0000             #defcont				\ .org var4_+1
0109+  0000             #defcont	      		\#if x==0
0110+  0000             #defcont  					\var2_ .set var1_-var4_-2+3
0111+  0000             #defcont					\#if var2_+127 < 0
0112+  0000             #defcont						\ .error "Branch Range < -127, use far logic"
0113+  0000             #defcont					\#else
0114+  0000             #defcont						\#if var2_-128 > 0
0115+  0000             #defcont							\ .error "Branch Range > 128, use far logic"
0116+  0000             #defcont						\#else
0117+  0000             #defcont					        \ .byte var1_-var4_-2+3
0118+  0000             #defcont					        \ .org var1_
0119+  0000             #defcont					        \.push $+3, 1
0120+  0000             #defcont					        \ jmp $
0121+  0000             #defcont						\#endif
0122+  0000             #defcont					\#endif
0123+  0000             #defcont				\#else
0124+  0000             #defcont					\ .byte var1_-var4_-2+2
0125+  0000             #defcont					\ .org var1_
0126+  0000             #defcont					\.push $, 0
0127+  0000             #defcont					\ y $		
0128+  0000             #defcont				\#endif
0129+  0000             #defcont			\#else
0130+  0000             #defcont				\.error "Duplicate ELSE Statement"
0131+  0000             #defcont			\#endif
0132+  0000             #defcont		\#else
0133+  0000             #defcont			\ .error "Misplaced Else"
0134+  0000             #defcont		\#endif
0135+  0000             
0136+  0000             
0137+  0000             ;*******************************************************************
0138+  0000             ;* Defines how to use the various logic macros defined above.      *
0139+  0000             ;* NOTICE: How these inverse, ifeq becomes BNE
0140+  0000             ;*******************************************************************
0141+  0000             #define	ifeq	logic_ifxx(BNE)		
0142+  0000             #define	ifne	logic_ifxx(BEQ)
0143+  0000             #define	ifpl	logic_ifxx(BMI)
0144+  0000             #define	ifmi	logic_ifxx(BPL)
0145+  0000             #define	ifcs	logic_ifxx(BCC)
0146+  0000             #define	ifcc	logic_ifxx(BCS)
0147+  0000             #define iflt	logic_ifxx(BCS)
0148+  0000             #define	ifge	logic_ifxx(BCC)
0149+  0000             #define ifvc	logic_ifxx(BVS)
0150+  0000             #define ifvs	logic_ifxx(BVC)
0151+  0000             
0152+  0000             #define	else  	logic_else(0,0)
0153+  0000             #define	else_eq	logic_else(1,BEQ)
0154+  0000             #define	else_ne	logic_else(1,BNE)
0155+  0000             #define	else_pl	logic_else(1,BPL)
0156+  0000             #define	else_mi	logic_else(1,BMI)
0157+  0000             #define	else_cc	logic_else(1,BCC)
0158+  0000             #define	else_cs	logic_else(1,BCS)
0159+  0000             
0160+  0000             #define endif		logic_end
0161+  0000             
0162+  0000             #define	eqend	logic_loopend(BNE,BEQ)		
0163+  0000             #define	neend	logic_loopend(BEQ,BNE)		
0164+  0000             #define	plend	logic_loopend(BMI,BPL)
0165+  0000             #define	miend	logic_loopend(BPL,BMI)
0166+  0000             #define	csend	logic_loopend(BCC,BCS)
0167+  0000             #define	gtend	logic_loopend(BCC,BCS)
0168+  0000             #define	ccend	logic_loopend(BCS,BCC)
0169+  0000             #define	leend	logic_loopend(BCS,BCC)
0170+  0000             #define	vcend	logic_loopend(BVS,BVC)
0171+  0000             #define	vsend	logic_loopend(BVC,BVS)
0172+  0000             #define	doloop	logic_loopend(JMP,0)
0173+  0000             
0174+  0000             ;*******************************************************************
0175+  0000             ;* FAR LOGIC, will always assume a JMP, this is longer bytewise
0176+  0000             ;* but is required if the branch is farther then +/127 away.
0177+  0000             ;* NOTICE: These don't invert the call to the actual branch.
0178+  0000             ;*******************************************************************
0179+  0000             #define	ifeq_	logic_ifxx_($F0)
0180+  0000             #define	ifne_	logic_ifxx_($D0)
0181+  0000             #define	ifpl_	logic_ifxx_($10)
0182+  0000             #define	ifmi_	logic_ifxx_($30)
0183+  0000             #define	ifcs_	logic_ifxx_($B0)
0184+  0000             #define	ifcc_	logic_ifxx_($90)
0185+  0000             #define ifvc_	logic_ifxx_($50)
0186+  0000             #define ifvs_	logic_ifxx_($70)
0187+  0000             #define iflt_	logic_ifxx_($90)
0188+  0000             #define	ifge_	logic_ifxx_($B0)
0009   0000             #include "macros.ah"
0001+  0000             ;******************************************************************************
0002+  0000             	.title 	"Macro Definitions"
0003+  0000             	.sbttl 	"Global Macros"
0004+  0000             ;******************************************************************************
0005+  0000             
0006+  0000             #DEFINE orgchk(addr,curaddr)	\ #IF $ > (addr)
0007+  0000             #DEFCONT						\	.error "ORG definition (?0) is LOWER than the current address(?1). Check listing for overlap."
0008+  0000             #DEFCONT						\ #ENDIF
0009+  0000             #DEFCONT						\ .org addr
0010+  0000             
0011+  0000             ;*********************************************************************************************************************
0012+  0000             ;* Vector Call Wrappers for brevity
0013+  0000             ;*********************************************************************************************************************
0014+  0000             ; Push a JSRL onto the VGLIST and tidy
0015+  0000             #DEFINE vgadd_jsrl(obj)	\ laljsr(obj) 
0016+  0000             #DEFCONT				\ lxhjsr(obj)
0017+  0000             #DEFCONT				\ jsr vgadd2
0018+  0000             
0019+  0000             ;* Push some STAT data all immediate onto the VGLIST and tidy
0020+  0000             #DEFINE vgadd_stat(sp,xf,pg,int,clr)	\ lda # ((int*16)+clr)
0021+  0000             #DEFCONT								\ ldx # ($60|((sp*8)+(xf*4)+(pg)))
0022+  0000             #DEFCONT								\ jsr vgadd2
0023+  0000             
0024+  0000             ;* Push SCALE data
0025+  0000             #DEFINE	vgadd_scale(ywindow,b_scale,l_scale)	\ lda # (l_scale)
0026+  0000             #DEFCONT										\ ldx # ($70|(ywindow*8)|b_scale))
0027+  0000             #DEFCONT										\ jsr vgadd2
0028+  0000             
0029+  0000             ;* Draw a character by byte index
0030+  0000             #DEFINE JSR_VGCHAR(charidx)  	\ ldx vgmsga+(charidx*2)+1
0031+  0000             #DEFCONT						\ lda vgmsga+(charidx*2)
0032+  0000             #DEFCONT						\ jsr vgadd2          ;Add JSRL to this char
0033+  0000             
0034+  0000             ;* Draw a character which is in Y
0035+  0000             #DEFINE JSR_VGCHARY()  			\ ldx vgmsga+1,Y
0036+  0000             #DEFCONT						\ lda vgmsga,Y
0037+  0000             #DEFCONT						\ jsr vgadd2          ;Add JSRL to this char
0038+  0000             
0039+  0000             #DEFINE	lbyte(add)	(add&$ff)
0040+  0000             #DEFINE	ubyte(add)	((add&$ff00)/$100)0010   0000             #include "havoc.ah"
0001+  0000             .module globals
0002+  0000             ;******************************************************************************
0003+  0000             ;* Version Number for release
0004+  0000             ;* This will tag each ROM with a version number for identification purposes
0005+  0000             ;******************************************************************************
0006+  0000             MAJOR_VERSION = $1
0007+  0000             MINOR_VERSION = $00
0008+  0000             
0009+  0000             ;******************************************************************************
0010+  0000             ; LANGUAGE - we can build multiple languages now!
0011+  0000             ; NOTES: These are single builds, so a ROMset is 
0012+  0000             ;        PRE-compiled for a specific language.
0013+  0000             ;  
0014+  0000             ; ENGLISH = 0
0015+  0000             ; GERMAN  = 1	Contributed by Thomas Sontowski
0016+  0000             ; FRENCH  = 2	Contributed by Jerome Vince
0017+  0000             ;******************************************************************************
0018+  0000             LANGUAGE = 0
0019+  0000             
0020+  0000             ;******************************************************************************
0021+  0000             ;* TOURNAMENT EDITION flag does alternate build for Jerky's maze changes
0022+  0000             ;******************************************************************************
0023+  0000             TOURNAMENT_EDITION = 0
0024+  0000             
0025+  0000             ;******************************************************************************
0026+  0000             ;* DEBUGGING DEFINES, Take these out for final builds
0027+  0000             ;******************************************************************************
0028+  0000             DEBUG = 0
0029+  0000             
0030+  0000             ;******************************************************************************
0031+  0000             ;* SPEECH - Which format should speech be compiled with
0032+  0000             ;* 
0033+  0000             ;*	ADPCM = 0
0034+  0000             ;*  TILPC = 1
0035+  0000             ;******************************************************************************
0036+  0000             SPEECH = 0
0037+  0000             
0038+  0000             ;******************************************************************************
0039+  0000             ;* LEVEL EDITOR BUILD
0040+  0000             ;******************************************************************************
0041+  0000             ;This will build ROM's targeted for the Major Havoc Level Editor
0042+  0000             ;It takes out specific parts of the game to streamline playing 
0043+  0000             ;a single level for play testing.
0044+  0000             LEVEL_EDITOR = 0
0045+  0000             
0046+  0000             ;******************************************************************************
0047+  0000             ;* Display the Atari Copyright Message during attract mode
0048+  0000             ;******************************************************************************
0049+  0000             DISPLAY_COPYRIGHT = 0
0050+  0000             
0051+  0000             ;******************************************************************************
0052+  0000             ;* Override the number of Rex's to start the game.
0053+  0000             ;******************************************************************************
0054+  0000             NUMLIVES = 9d
0055+  0000             
0056+  0000             ;******************************************************************************
0057+  0000             ;* Sets Beginning Level - This also affects Select-a-Level
0058+  0000             ;******************************************************************************
0059+  0000             ;* Normal start is 1d
0060+  0000             ;* Star Castle is is 21d
0061+  0000             STARTLEVEL = 1
0062+  0000             
0063+  0000             ;******************************************************************************
0064+  0000             ;* Disable Demo mode - toggle this to keep the dips from setting this to enabled;
0065+  0000             ;******************************************************************************
0066+  0000             ;DISABLE_DEMO = 0
0067+  0000             
0068+  0000             ;******************************************************************************
0069+  0000             ;* Disable HCOUNT VGResets - this was part of the original code but not sure 
0070+  0000             ;* it is needed for now. Will disable but this will make it
0071+  0000             ;* super easy to re-enable if needed
0072+  0000             ;* DEFAULT is 0
0073+  0000             ;******************************************************************************
0074+  0000             DISABLE_HCOUNT = 0
0075+  0000             
0076+  0000             ;******************************************************************************
0077+  0000             ;* Normally the game has faster than normal transitions between major 
0078+  0000             ;* scenes, I think this was done to make the game time shorter, so Im
0079+  0000             ;* going to take it out but this makes it easy to turn back on.
0080+  0000             ;* DEFAULT is 0
0081+  0000             ;******************************************************************************
0082+  0000             DISABLE_FASTTRANSITIONS = 1
0083+  0000             
0084+  0000             ;******************************************************************************
0085+  0000             ;* WASTE is a step in the IRQ that will keep the VG busy if the main loop has
0086+  0000             ;* not restarted the VG in a certain amount of time.
0087+  0000             ;* DEFAULT is 1
0088+  0000             ;******************************************************************************
0089+  0000             ENABLE_WASTE = 0
0090+  0000             
0091+  0000             
0092+  0000             ;Flag to do the O2 animations, Owen didn't like this so it is turned off
0093+  0000             ANIMATE_OXYGEN = 1
0094+  0000             
0095+  0000             ;Show the yellow 'levitations' under Max robot
0096+  0000             MAX_LEVITATIONS = 1
0097+  0000             
0098+  0000             ;If this is level editor, override STARTLEVEL to be 1
0099+  0000~            #IF LEVEL_EDITOR != 0
0100+  0000~            STARTLEVEL .set 1d
0101+  0000~            NUMLIVES   .set 9d
0102+  0000             #ENDIF
0103+  0000             
0104+  0000             ;Handy flag to force an animation on each tact, never allow on 
0105+  0000             ;Non-Debug builds tho
0106+  0000             FORCE_TESSERACT_ANIMATION	= 0
0107+  0000             
0108+  0000             #IF DEBUG = 0
0109+  0000             FORCE_TESSERACT_ANIMATION .set 0
0110+  0000             #ENDIF
0111+  0000             
0112+  0000             ;Force hide the framecounter even if in debug mode 
0113+  0000             ;This is handy for taking screenshots in debug if you don't want it showing
0114+  0000             FORCE_HIDE_FRAMECOUNT = 1
0115+  0000             
0116+  0000             ;Another handly flag to force the bonus countup after each level
0117+  0000             ;never allow on non-debug builds
0118+  0000             FORCE_HOMEWORLD_BONUS	= 0
0119+  0000             
0120+  0000             ;Force showing the designer page
0121+  0000             FORCE_DESIGNERS = 0
0122+  0000             
0123+  0000             #IF DEBUG = 0
0124+  0000             FORCE_HOMEWORLD_BONUS .set 0
0125+  0000             FORCE_DESIGNERS .set 0
0126+  0000             #ENDIF
0127+  0000             
0128+  0000             ;************************************
0129+  0000             ;* ROM Identifiers are here so they
0130+  0000             ;* are all in one place. These also
0131+  0000             ;* match CSUM key values for ALPHA.
0132+  0000             ;************************************
0133+  0000             IDENTIFIER_AL = 00d
0134+  0000             IDENTIFIER_AH = 01d
0135+  0000             IDENTIFIER_P0 = 02d
0136+  0000             IDENTIFIER_P1 = 03d
0137+  0000             IDENTIFIER_P2 = 04d
0138+  0000             IDENTIFIER_P3 = 05d
0139+  0000             IDENTIFIER_P4 = 06d
0140+  0000             IDENTIFIER_P5 = 07d
0141+  0000             IDENTIFIER_P6 = 08d
0142+  0000             IDENTIFIER_P7 = 09d
0143+  0000             IDENTIFIER_VR = 10d
0144+  0000             IDENTIFIER_V0 = 11d
0145+  0000             IDENTIFIER_V1 = 12d
0146+  0000             IDENTIFIER_V2 = 13d
0147+  0000             IDENTIFIER_V3 = 14d
0148+  0000             IDENTIFIER_GG = 15d
0149+  0000             IDENTIFIER_BL = 16d
0150+  0000             IDENTIFIER_BH = 17d
0151+  0000             
0152+  0000             IDCOUNT	.equ IDENTIFIER_BH + 1 - IDENTIFIER_AL
0011   0000             
0012   0000             
0013   0000             ;***********************************************************
0014   0000                 .sbttl "Declaration of RPM Variables"
0015   0000             ;***********************************************************
0016   0000             ___tlk  =   0   ;TMS 5220 SPEECH
0017   0000             ___oki  =   1   ;OKI MSM6295 ADPCM 
0018   0000             ___imm  =   1   ;IMMEDIATE Mode Functions
0019   0000             ___nmi  =   1   ;NMI port control
0020   0000             ___exm  =   1   ;support EXCEPTION mode 
0021   0000             
0022   0000             ;Carry through main config into here for speech coding
0023   0000             #IF SPEECH = 0
0024   0000             ___oki .set 1
0025   0000             ___tlk .set 0
0026   0000~            #ELSE
0027   0000~            ___oki .set 0
0028   0000~            ___tlk .set 1
0029   0000             #ENDIF    
0030   0000                        
0031   0000~            #IF ___tlk != 0 & ___oki != 0 
0032   0000~            	.error "Both ___tlk and ___oki appear to be enabled, only 1 speech option can be enabled at a time when compiling"
0033   0000             #ENDIF		   
0034   0000                         
0035   0000             ;************************************************************
0036   0000             ;* Declare all tables large enough. The macros will fill in
0037   0000             ;* the entries....
0038   0000             ;*
0039   0000             ;* ***** Table Limits *****
0040   0000             ;* 
0041   0000             ;* Byte Tables: these are addressed using Y as an index, so 
0042   0000             ;*              they are limited to 256d entries. Defining
0043   0000             ;*              them smaller saves space tho.
0044   0000             ;************************************************************
0045   0000             
0046   0000             numcom  	=   $AD;$89		;$B3     ;Total Number of legal commands (need to include oki commands in here)
0047   0000             numsnd  	=   $90     ;MAX number of sound groups - original value in mhavoc was $60, but this was insufficient because we actually had $67... not sure how this didn't cause issues actualy
0048   0000             numtun  	=   $90     ;MAX number of tunes to group
0049   0000             numimm  	=   $10     ;MAX number of immediates
0050   0000             numtlk  	=   $27     ;MAX number of speech samples
0051   0000             numenv  	=   $90     ;MAX number of envelopes (freq and amplitude) - this was $68 originally
0052   0000             ;numextend   =   8		;MAX Extensions
0053   0000             
0054   0000             ;* Word Tables: these are limited to 128d entries for the 
0055   0000             ;*              same reason.
0056   0000             
0057   0000             numexc      =   36d     ;MAX Exceptions, even tho many commands outside of EXCEPT can have an
0058   0000             						;exception pointer, this limits our table size (words) to just the amount needed
0059   0000             numfcns     =   2       ;Number of legal user functions
0060   0000             ;************************************************************
0061   0000             ;* This is the end of the User Configuration Section        
0062   0000             ;************************************************************
0063   0000             
0064   0000             ;****************************************************************
0065   0000             ;*   Variables and Hardware Allocation                     
0066   0000             ;****************************************************************
0067   0000             g_numhs		= 	10	;Number of shown high scores and initials
0068   0000             g_savecnt   =   3   ;Number of High Scores and Initials Saved
0069   0000                                 ;This is used later for Memory allocation
0070   0000             
0071   0000             g_tout      =   $02         ;Signals that Gamma has timed out
0072   0000             g_done      =   $03         ;Signals that Gamma is done sending stuff   
0073   0000             
0074   0000             qsize       =   $80     ;Max size of the roundabout command queue
0075   0000             ticmdbflen  =   $08     ;Max size of of the speech command queue
0076   0000             
0077   0000             counter1    =   1       ;Byte Location of Coin Counter 1
0078   0000             counter2    =   2       ;Byte Location of Coin Counter 2
0079   0000             
0080   0000             ; EEROM Flags
0081   0000             EE_ERASE    =   $80		
0082   0000             EE_WRITE    =   $40
0083   0000             EE_READ     =   $20
0084   0000             EE_DONE		= 	$00
0085   0000             
0086   0000             ;Input Bit Definitions
0087   0000             alphaxmtd   =   $01     ;Alpha Processor Transmitted
0088   0000             alpharcvd   =   $02     ;Alpha Processor Ready to Recieve
0089   0000             tirdyflg    =   $04     ;TI Speech Chip Ready
0090   0000             
0091   0000                 .sbttl "Hardware Equates"
0092   0000             
0093   0000             POKEYBASE   =   $2000
0094   0000             
0095   0000             .include "pokey4.ah"
0001+  0000             ;********************************************************************
0002+  0000             ;* Atari QUAD POKEY Device Constants
0003+  0000             ;********************************************************************
0004+  0000             ;* Device Declarations - This allows the macro STSND to start
0005+  0000             ;*                       logical named channels more easily.
0006+  0000             NUMPOKEY    =   4
0007+  0000             
0008+  0000             POKEY_CH0     =   0   ;Channel Offsets
0009+  0000             POKEY_CH1     =   4
0010+  0000             POKEY_CH2     =   8
0011+  0000             POKEY_CH3     =   12
0012+  0000             
0013+  0000             ;Some DEFAULT values
0014+  0000             DEFAULT_VOLUME  =   $07     ;This is the volume set upon start until overridden by the specific sound def
0015+  0000             
0016+  0000             ;* 4 Channels per Pokey
0017+  0000             NUM_CHANNELS  =   4*NUMPOKEY
0018+  0000             
0019+  0000             POKEY_0  =   POKEYBASE
0020+  0000             POKEY_1  =   POKEYBASE + $08
0021+  0000             POKEY_2  =   POKEYBASE + $10
0022+  0000             POKEY_3  =   POKEYBASE + $18
0023+  0000             
0024+  0000             
0025+  0000             ; Quad pokey hookup (based on schematics):
0026+  0000             ; Address:654321
0027+  0000             ;         |||||\- pokey A0
0028+  0000             ;         ||||\-- pokey A1
0029+  0000             ;         |||\--- pokey A2
0030+  0000             ;         ||\---- pokey chip number LSB
0031+  0000             ;         |\----- pokey chip number MSB
0032+  0000             ;         \------ pokey A3 
0033+  0000             ;
0034+  0000             ;**********************************************************
0035+  0000             ;QUAD POKEY Register Offsets, with A3 shifted up to bit 6
0036+  0000             ;This is the common way Atari wires up the Quad Pokey
0037+  0000             ;**********************************************************
0038+  0000             POKEY_FREQ1    	=   $00 ;CH1: Frequency
0039+  0000             POKEY_CONT1    	=   $01 ;CH1: Control
0040+  0000             POKEY_FREQ2    	=   $02 ;CH2: Frequency
0041+  0000             POKEY_CONT2    	=   $03 ;CH2: Control
0042+  0000             POKEY_FREQ3    	=   $04 ;CH3: Frequency
0043+  0000             POKEY_CONT3    	=   $05 ;CH3: Control
0044+  0000             POKEY_FREQ4    	=   $06 ;CH4: Frequency
0045+  0000             POKEY_CONT4    	=   $07 ;CH4: Control
0046+  0000             
0047+  0000             POKEY_AUDCTL    =   $20 ;WRITE Audio Control
0048+  0000             POKEY_ALLPOT    =   $20 ;READ 8 Line POT Port State
0049+  0000             POKEY_STIMER    =   $21 ;WRITE Start Timers
0050+  0000             POKEY_KBCODE    =   $21 ;READ Keyboard Code
0051+  0000             POKEY_SKRES     =   $22 ;WRITE Reset Serial Status
0052+  0000             POKEY_RANDOM    =   $22 ;READ Get Random Number
0053+  0000             POKEY_POTGO     =   $23 ;WRITE Start POT Scan Sequence
0054+  0000                                     ;READ No Read at Register $23
0055+  0000             POKEY_SEROUT    =   $25 ;WRITE Serial Port Data Output
0056+  0000             POKEY_SERIN     =   $25 ;READ Serial Port Data Input
0057+  0000             POKEY_IRQEN     =   $26 ;WRITE IRQ Enable
0058+  0000             POKEY_IRQST     =   $26 ;READ IRQ Status
0059+  0000             POKEY_SKCTL     =   $27 ;WRITE Serial Port Control
0060+  0000             POKEY_SKSTAT    =   $27 ;READ Serial Port Status
0061+  0000             
0062+  0000             
0063+  0000             ;AUDCTL BITS
0064+  0000             AUDCTL_POLY9    =   $80
0065+  0000             AUDCTL_CH1_179  =   $40
0066+  0000             AUDCTL_CH3_179  =   $20
0067+  0000             AUDCTL_12_16B   =   $10
0068+  0000             AUDCTL_34_16B   =   $08
0069+  0000             AUDCTL_13HP     =   $04
0070+  0000             AUDCTL_34HP     =   $02
0071+  0000             AUDCTL_15K      =   $01
0072+  0000             
0073+  0000             ;CHANNEL CONTROL BITS
0074+  0000             CHCTL_POLY17_5	= $00		;Noisey
0075+  0000             CHCTL_POLY5		= $20		;Triangle Wave, Bell Tones
0076+  0000             CHCTL_POLY4_5	= $40		;Fuzzy + Howly
0077+  0000             CHCTL_POLY5X	= $60		;Fussy + Phasery
0078+  0000             CHCTL_POLY17	= $80		;Noisy + Airy
0079+  0000             CHCTL_NOPOLY	= $A0		;Square Wave, Pure Tones
0080+  0000             CHCTL_POLY4		= $C0		;Sawtooth Wave - squeaky
0081+  0000             CHCTL_NOPOLY2	= $E0		;Same as NOPOLY
0082+  0000             CHCTL_FORCE		= $10
0083+  0000             
0084+  0000             
0096   0000             
0097   0000             
0098   0000             audctl  =   POKEY_0+POKEY_AUDCTL    
0099   0000             allpot  =   POKEY_0+POKEY_ALLPOT    
0100   0000             potgo   =   POKEY_0+POKEY_POTGO     
0101   0000             random  =   POKEY_0+POKEY_RANDOM 
0102   0000                
0103   0000             random1  =  POKEY_1+POKEY_RANDOM   
0104   0000             
0105   0000             ;Inputs
0106   0000             portst  =   $2800
0107   0000             input   =   $2800
0108   0000             indata  =   $3000
0109   0000             leta    =   $3800
0110   0000             
0111   0000             ;Outputs
0112   0000             intack  =   $4000
0113   0000             counter =   $4800
0114   0000             outdata =   $5000
0115   0000             
0116   0000             ;************************************************************
0117   0000             ;* Normally the WS signal of the TMS5220 is set via two
0118   0000             ;* different address locations (look at the Return of the 
0119   0000             ;* Jedi schematics for example). One sets it high and the
0120   0000             ;* other clears it. However, in MH, since the speech was
0121   0000             ;* not implemented completely, the WS signal is cleared 
0122   0000             ;* with every data write, then the code will set it directly
0123   0000             ;* afterwards, so tiwrite is meaningless in this case.
0124   0000             ;* What we will do is set it to an unused address, which 
0125   0000             ;* will allow RPM to be set up as normal, but will not 
0126   0000             ;* actually do anything.
0127   0000             ;************************************************************
0128   0000             tirdy  		=   $2800
0129   0000             tidata      =   $5800
0130   0000             tiwrite     =   $5900		;TI /WS is on a flip flop, must be turned off after by writing to tidata
0131   0000             ;tiwson      =   $5800
0132   0000             tireset		= 	$8000 		;NOT WIRED IN HAVOC JUST WRITE TO ROM - DOES NOTHING
0133   0000             eerom       =   $6020		;This is moved up 32 bytes so that we don't overwrite any existing MHAVOC data
0134   0000             
0135   0000             ;*****************************************************************
0136   0000             ;* RAM Allocation                                                
0137   0000             ;*****************************************************************
0138   0000             .include "g_ram.ah"
0001+  0000             ;*************************************************************
0002+  0000                 .sbttl "RPM RAM Allocation"
0003+  0000             ;*************************************************************
0004+  0000             ;* RAM Equates for RPM and game variables                    *
0005+  0000             ;*************************************************************
0006+  0000                 .org $0000  
0007+  0000                 
0008+  0000             irqcnt      .block  1
0009+  0001             framecnt    .block  1
0010+  0002             eflg0       .block  1       
0011+  0003             eflg1       .block  1
0012+  0004             eflg2       .block  1
0013+  0005             eflg3       .block  1
0014+  0006             eflg4       .block  1
0015+  0007             eflg5       .block  1
0016+  0008             eflg6       .block  1
0017+  0009             eflg7       .block  1
0018+  000A             cur_snd     .block  1
0019+  000B             xferbuf     .block  2
0020+  000D             tuneptr     .block  2
0021+  000F             devptr   .block  2
0022+  0011             fasave     .block  2
0023+  0013             silevel      .block  1
0024+  0014             
0025+  0014             sirqcnt		.block 	1
0026+  0015             lastoki		.block  1
0027+  0016             
0028+  0016~            #IF ___tlk != 0
0029+  0016~            
0030+  0016~            ;Speech Params
0031+  0016~            ti_addr     .block  2
0032+  0016~            ti_len      .block  2
0033+  0016~            ti_stat     .block  1		    
0034+  0016~            ;ti_stat has the folling values                    
0035+  0016~            TISTAT_IDLE		= $00	; 00 = Idle, check for new command in queue
0036+  0016~            TISTAT_START 	= $80	; 80 = Starting - sends a $60 (Speak External Command) to the TI
0037+  0016~            TISTAT_WAIT		= $11	; 11 = Here after data runs out, continues to deincrement - Pads silence before next speech starts
0038+  0016~            TISTAT_SENDING	= $FF	; FF = Sending Data(stays here until data runs out)
0039+  0016~            
0040+  0016~            ti_count    .block  1
0041+  0016~            ti_irqcnt   .block  1
0042+  0016~            
0043+  0016             #ENDIF
0044+  0016             
0045+  0016             ;**********************************************
0046+  0016             ;* Game Specific Variable Definition
0047+  0016             ;**********************************************
0048+  0016                 
0049+  0016             temp1       .block  2
0050+  0018             temp2       .block  2       ;A few temps
0051+  001A             temp3       .block  2       
0052+  001C             eerdy       .block  1       ;=80 if stats ready to send
0053+  001D             eesrce      .block  2       ;Next byte source pointer
0054+  001F             eedest      .block  2       ;Next byte dest(EEROM) pointer
0055+  0021             eezflg      .block  1       ;Zero flag for erase
0056+  0022             eerequ      .block  1       ;Action request
0057+  0023             eerwrq      .block  1       ;Write request
0058+  0024             eebad       .block  1       ;If a bit is set, that corresponding request came back bad (csum error)
0059+  0025             eeflg       .block  1       ;Busy Flag
0060+  0026             eebc        .block  1       ;Byte Index to source data
0061+  0027             eeidx       .block  1       ;Byte offset into eerom for next access
0062+  0028             eelen       .block  1       ;Total Length of Data Chunk
0063+  0029             eesel       .block  1       ;Index code for current 'batch' operation
0064+  002A             eecsum      .block  1       ;Checksum (operation)
0065+  002B             kilscores   .block  1       ;Request to clobber scores
0066+  002C             reqwai      .block  1       ;How long to wait until we re-init the eerom
0067+  002D             cnt1        .block  1       ;Coin Counter 1 
0068+  002E             cnt2        .block  1       ;Duh?
0069+  002F             maxsnd		.block 	1		;If not zero, this is the base freq of the Max background sound
0070+  0030             maxcounter	.block	1		;Counter to keep max logic from clobbering itself
0071+  0031             
0072+  0031             ;***********************************************************
0073+  0031             ;* RPM RAM will begin again at $0200
0074+  0031             ;***********************************************************
0075+  0200             .org $0200
0076+  0200             
0077+  0200             ch_sid          .block  NUM_CHANNELS
0078+  0210             ch_eflg         .block  NUM_CHANNELS
0079+  0220             ch_tuneptr    .block  NUM_CHANNELS			;pointer to start of current tune
0080+  0230             ch_tuneptr+___CHNS    .block  NUM_CHANNELS
0081+  0240             ch_ctrl_l       .block  NUM_CHANNELS			;pointer to current amplitude envelope
0082+  0250             ch_ctrl_h       .block  NUM_CHANNELS
0083+  0260             ch_freq    	.block  NUM_CHANNELS			;pointer to current frequency envelope
0084+  0270             ch_freq+___CHNS    	.block  NUM_CHANNELS
0085+  0280             ch_mys_28       .block  NUM_CHANNELS			;current output note count
0086+  0290             ch_mys_29       .block  NUM_CHANNELS
0087+  02A0             ch_ratedif_l    .block  NUM_CHANNELS			;current output duration remaining
0088+  02B0             ch_ratedif_h    .block  NUM_CHANNELS
0089+  02C0             ch_vol          .block  NUM_CHANNELS			;median voice volume
0090+  02D0             ch_localpc      .block  NUM_CHANNELS			;CURRENT TUNE SEQUENCE #
0091+  02E0             ch_pri          .block  NUM_CHANNELS	
0092+  02F0             ch_ctrldidx     .block  NUM_CHANNELS
0093+  0300             ch_ctrl_run     .block  NUM_CHANNELS
0094+  0310             ch_ctrl_lastv   .block  NUM_CHANNELS
0095+  0320             ch_ctrl_lcnt    .block  NUM_CHANNELS
0096+  0330             ch_freqdidx     .block  NUM_CHANNELS
0097+  0340             ch_freq_run     .block  NUM_CHANNELS
0098+  0350             ch_freq_lastd   .block  NUM_CHANNELS
0099+  0360             ch_freq_last   .block  NUM_CHANNELS
0100+  0370             ch_freq_last+___CHNS   .block  NUM_CHANNELS
0101+  0380             ch_freq_lcnt    .block  NUM_CHANNELS
0102+  0390             ch_rate         .block  NUM_CHANNELS
0103+  03A0             ch_key          .block  NUM_CHANNELS			;the current pitch shift from defined data stream
0104+  03B0             ch_mys_3b       .block  NUM_CHANNELS			
0105+  03C0             ch_mys_3c       .block  NUM_CHANNELS
0106+  03D0             ch_ctrlmask     .block  NUM_CHANNELS
0107+  03E0             ch_synthmode    .block  NUM_CHANNELS			;VOICE SYNTH. MODE FLAG
0108+  03F0             ch_synthfadj  .block  NUM_CHANNELS			;SYNTH. MODE FREQ. ADJUST
0109+  0400             ch_synthfadj+___CHNS  .block  NUM_CHANNELS			
0110+  0410             ch_jmppc      .block  NUM_CHANNELS			;OUTPUT POINTER SUB-PHRASE SAVE
0111+  0420             ch_jmppc+___CHNS      .block  NUM_CHANNELS
0112+  0430             ch_jmplocpc     .block  NUM_CHANNELS
0113+  0440             ch_looppc     .block  NUM_CHANNELS			;OUTPUT POINTER LOOP SAVE
0114+  0450             ch_looppc+___CHNS     .block  NUM_CHANNELS
0115+  0460             ch_looplocalpc  .block  NUM_CHANNELS
0116+  0470             ch_loopcount    .block  NUM_CHANNELS			;LOOP COUNTER
0117+  0480             ch_mys_48       .block  NUM_CHANNELS
0118+  0490             ch_mys_49       .block  NUM_CHANNELS
0119+  04A0             preg_chanp      .block  NUM_CHANNELS
0120+  04B0             ch_mys_4b       .block  NUM_CHANNELS
0121+  04C0             ch_pchan        .block  1
0122+  04C1             po_4c1          .block  1
0123+  04C2             po_4c2          .block  1
0124+  04C3             po_even_odd     .block  1       ;this will contain either a 00 or a 01. Determine if the Sound Channel is maybe 8-bit 16-bit?
0125+  04C4             po_4c4          .block  1
0126+  04C5             loc_even_cont   .block  1
0127+  04C6             loc_even_freq   .block  1
0128+  04C7             po_odd_cont     .block  1
0129+  04C8             po_even_cont    .block  1
0130+  04C9             loc_odd_freq    .block  1
0131+  04CA             po_odd_freq     .block  1
0132+  04CB             po_even_freq    .block  1
0133+  04CC             po_4cc          .block  1
0134+  04CD             po_choff        .block  1
0135+  04CE             po_4ce          .block  1
0136+  04CF             po_4cf          .block  1
0137+  04D0             po_4d0          .block  1
0138+  04D1             po_audctl       .block  1
0139+  04D2             po_4d2          .block  1
0140+  04D3             po_4d3          .block  1
0141+  04D4             po_4d4          .block  1
0142+  04D5             po_audctl_mask  .block  1
0143+  04D6             
0144+  04D6             ;********************************************************************
0145+  04D6             ;* Put more game specific variables here!!
0146+  04D6             ;********************************************************************
0147+  04D6             gw_queue        .block  qsize   
0148+  0556             gw_i            .block  1
0149+  0557             gw_ia           .block  1
0150+  0558             
0151+  0558             reportf         .block  1
0152+  0559             sindex          .block  1
0153+  055A             
0154+  055A             gr_queue        .block  qsize
0155+  05DA             gr_i            .block  1
0156+  05DB             gr_ia           .block  1
0157+  05DC             r_nptr          .block  1
0158+  05DD             datnum          .block  1
0159+  05DE             datflg          .block  1
0160+  05DF             curctrl			.block  1			;Which player do we read controls for? 00 = player 1, 01 = player 2
0161+  05E0             ;********************************************************************
0162+  05E0             ;* Game Variables Finished in here
0163+  05E0             ;********************************************************************
0164+  05E0             ; Variables used for immediate mode only
0165+  05E0             #IF ___imm == 1
0166+  05E0             imm_id          .block  1
0167+  05E1             iarg            .block  1
0168+  05E2             #ENDIF
0169+  05E2             
0170+  05E2             ; Variables used for speech only
0171+  05E2~            #IF ___tlk == 1
0172+  05E2~            
0173+  05E2~            tiquecur        .block  1           ;the current talk command 
0174+  05E2~            tiquelst        .block  1           ;the last talk command index 
0175+  05E2~            tiqueue         .block  ticmdbflen  ;the amount of speech commands that can queue up in the command buffer
0176+  05E2~            tiframe         .block  1           ;
0177+  05E2~            
0178+  05E2             #ENDIF
0179+  05E2             
0180+  05E2             ;Special Sound Data for MAX Background sound
0181+  05E2             maxsndcbuf		.block  maxsndcbuflen
0182+  05E6             
0183+  05E6             	\ #IF $ > ($05F6)\	.error "ORG definition ($05F6) is LOWER than the current address($). Check listing for overlap."\ #ENDIF\ .org $05F6
0183+  05E6~            	orgchk($05F6,$)
0183+  05E6~            	orgchk($05F6,$)
0183+  05E6             
0183+  05F6             
0184+  05F6             maxsndfbuf		.block  maxsndfbuflen
0185+  05FF             
0186+  05FF             ;*****************************************************************
0187+  05FF             ; RAM Allocation for NVRAM Buffer
0188+  05FF             ;*****************************************************************
0189+  05FF             	\ #IF $ > ($0600)\	.error "ORG definition ($0600) is LOWER than the current address($). Check listing for overlap."\ #ENDIF\ .org $0600
0189+  05FF~            	orgchk($0600,$)
0189+  05FF~            	orgchk($0600,$)
0189+  05FF             
0189+  0600             
0190+  0600             
0191+  0600             ;How Many Entries in the High Score Table saved in EEROM
0192+  0600             numsths     =   g_savecnt*4 ;8 Digits/4 Bytes per score
0193+  0600             numstit     =   g_savecnt*3 ;3 Initials per score
0194+  0600             numtessers	=	g_savecnt*1	;1 Byte per icons
0195+  0600             numwarps    =  	7			;Number of Warps to save
0196+  0600             numstmz     = 	8*25d		;Maze Stats 
0197+  0600             numstop     =   2			;Number of Option switch settings
0198+  0600             numstxl		=   2			;Bytes to save Xlife data
0199+  0600             
0200+  0600             starts
0201+  0600             options     .block  numstop     
0202+  0602             cksumop     .block  1 
0203+  0603             extlie      .block  numstxl       ;Extra Lives Earned 
0204+  0605             warps       .block  2*numwarps     ;Number of warps done - 2 bytes per warp
0205+  0613             numstxw     = * - extlie    ;Size of XLives+Warp Block
0206+  0613             cksumxw     .block  1       ;Checksum for XLives+Warps
0207+  0614             
0208+  0614             game1       .block  4       ;1 Player Games
0209+  0618             game2       .block  4       ;2 Player Games
0210+  061C             atime1      .block  4       ;Accum time for 1 Player Games
0211+  0620             atime2      .block  4       ;Accum time for 2 Player Games
0212+  0624             numstgs     = * - game1     ;Size of Game Stats Block
0213+  0624             cksumgs     .block  1       ;Checksum for Game Stats
0214+  0625             
0215+  0625             ;Maze Stats hold 4 parameters per maze
0216+  0625             ;spdt       .block  2       ;Deaths in Space
0217+  0625             ;lddt       .block  2       ;Deaths in Landing
0218+  0625             ;mzdt       .block  2       ;Deaths in Maze
0219+  0625             ;mzd2       .block  2       ;Maze Deaths after Reactor
0220+  0625             
0221+  0625             mzstats     .block  numstmz
0222+  06ED             cksummz     .block  1       ;Checksum for above
0223+  06EE             
0224+  06EE             warpcodes   .block  numwarps*2 ;Defined Warp Number Data
0225+  06FC             cksumwc     .block  1         ;Checksum for Warp Numbers
0226+  06FD             
0227+  06FD             initl       .block  numstit	;Initials
0228+  0706             cksumit     .block  1		
0229+  0707             
0230+  0707             hscore      .block  numsths	;High Scores
0231+  0713             cksumhs     .block  1
0232+  0714             
0233+  0714             tessers		.block 	numtessers	;Tesseract data per score
0234+  0717             cksumts		.block 1
0235+  0718             
0236+  0718             ;This is a little more complicated too
0237+  0718             ;When Game, Warp and Maze Stats come back, they come back with deltas, 
0238+  0718             ;not totals with existing data. So we have to add the new data to the 
0239+  0718             ;existing data, we need a temp place to store the deltas so that after 
0240+  0718             ;they are all loaded, we can decimal add them into the existing GAMMA data. 
0241+  0718             ;This can be used by all of them individually, but the Xlife+Warp data
0242+  0718             ;happens to be the largest, so we allocate that much
0243+  0718             stats_temp  .block numstxw
0244+  0728             
0245+  0728             ;Define some variables that Alpha needs 
0246+  0728             g_numstop   =   numstop  
0247+  0728             g_numstxl   =   numstxl
0248+  0728             g_numstwx   =   numstxw
0249+  0728             g_numstgs   =   numstgs
0250+  0728             g_numstmz   =   numstmz
0251+  0728             g_numstit   =   numstit
0252+  0728             g_numsths   =   numsths
0253+  0728             g_numwarps  =   numwarps
0254+  0728             g_numtessr	= 	numtessers
0255+  0728             
0256+  0728             ;Export these for Alpha
0257+  0728             ;.export g_idxstwx,g_idxstxl,g_idxstgs,g_idxstmz,g_idxstit,g_idxsths,g_idxstop
0258+  0728             .export g_numstwx,g_numstxl,g_numstgs,g_numstmz,g_numstit,g_numsths,g_numstop,g_numwarps,g_numstxl,g_numtessr
0259+  0728             
0260+  0728             ;*****************************************************************
0261+  0728             ; RAM Allocation for Self Testing
0262+  0728             ;*****************************************************************
0263+  0780                 .org $0780
0264+  0780                 
0265+  0780             vram        .block  6   ;$0700
0266+  0786             vadl0       .block  1   ;$0706
0267+  0787             vadh0       .block  18  ;$0707
0268+  0799             vadl1       .block  1   ;$0719
0269+  079A             vadh1       .block  10  ;$071a
0270+  07A4             vadl2       .block  1   ;$0724
0271+  07A5             vadh2       .block  2   ;$0725
0272+  07A7             vadl3       .block  1   ;$0727
0273+  07A8             vadh3       .block  1   ;$0728
0274+  07A9             
0275+  07F0                 .org    $07f0
0276+  07F0                 
0277+  07F0             tstart      .block  2
0278+  07F2             tend        .block  2
0279+  07F4             rambad      .block  1
0280+  07F5             rombad      .block  1
0281+  07F6             pokbad      .block  1
0282+  07F7             eerbad      .block  1
0283+  07F8             
0284+  07F8             
0285+  07F8             ;******************************************************************
0286+  07F8             ;* Special Variables for Scott's FPGA Implementation
0287+  07F8             ;******************************************************************
0288+  07FF             	.org $07FF
0289+  07FF             fpgaspeech	.block 	10139   0800                       
0140   0800             ;***********************************************************
0141   0800                 .title "TWGamma"
0142   0800                 .sbttl "MainLine"
0143   8000                 .org $8000
0144   8000 0F 00       	.word ((LANGUAGE & $FF) * $100) + IDENTIFIER_GG
0145   8002 01 00       	.byte MAJOR_VERSION,MINOR_VERSION
0146   8004             
0147   8004             ;***********************************************************
0148   8004 2E545747414D    .TEXT ".TWGAMMA."
0148   800A 4D412E
0149   800D             ;***********************************************************
0150   800D 78          g_main	sei 
0151   800E D8                  cld 
0152   800F A2 FF               ldx #$FF            ;Set Stack Pointer 
0153   8011 9A                  txs 
0154   8012 A9 00       		lda #00
0155   8014 8D 00 50            sta outdata     	;Ack start but not ready  
0156   8017 20 C6 99            jsr g_stest         ;Test the Gamma system
0157   801A             		
0158   801A 48          cindy   pha                 ;Save the result.
0159   801B A2 FF               ldx #-1
0160   801D 8E DD 05            stx datnum          ;Set NMI to command mode
0161   8020 8E FF 07    		stx fpgaspeech		;For Scott's FPGA
0162   8023 86 2F       		stx maxsnd			;Normally at -1 for no max sound
0163   8025 E8                  inx 
0164   8026 86 01               stx framecnt
0165   8028 86 00               stx irqcnt
0166   802A 86 13               stx silevel
0167   802C 8E 56 05            stx gw_i            ;Reset the Alpha Write Queues
0168   802F 8E 57 05            stx gw_ia
0169   8032 8E DA 05            stx gr_i            ;Reset the Alpha Read Queues
0170   8035 8E DB 05            stx gr_ia
0171   8038 8E DF 05    		stx curctrl			;Set to player 1 controls by default
0172   803B AD 00 30            lda indata          ;Read a garbage byte from Alpha just in case it is waiting
0173   803E 68                  pla                 ;Get Self Test result from above
0174   803F 8D 00 50            sta outdata         ;Send it to the Alpha (Should be -1 if all okay)
0175   8042 20 7C 81    c_reset jsr initrpm         ;Initialize all RAM etc.
0176   8045 A2 00       		ldx #0				;Only set warps that are at -1
0177   8047 20 D8 98    		jsr genwarpsx		;Generate random warp codes if undefined
0178   804A 58                  cli      			;Enable commands from Alpha
0179   804B             		;************ Begin Main Process Loop ***********************
0180   804B             		\ .push  *, 2
0180   804B             
0181   804B A9 02       			lda #alpharcvd
0182   804D 2C 00 28    			bit portst          ;Alpha Ready?
0183   8050             			\ .push  *, 0 \ BEQ  *                 ;yes
0183   8050             
0183   8050 F0 FE       
0184   8052 AC 56 05    				ldy gw_i
0185   8055 CC 57 05    				cpy gw_ia           ;Check for anything in queue
0186   8058             				\ .push  *, 0 \ BEQ  *                 ;If not, then skip writing
0186   8058             
0186   8058 F0 FE       
0187   805A B9 D6 04    					lda gw_queue,Y      ;Get the next command
0188   805D 8D 00 50    					sta outdata         ;Write it!
0189   8060 C8          					iny 
0190   8061 C0 80       					cpy #qsize          ;buffer queue top
0191   8063             					\ .push  *, 0 \ BCC  * 
0191   8063             
0191   8063 90 FE       
0192   8065 A0 00       						ldy #00         ;Loop the queue
0193   8067             					\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0193   8067             
0193   8067             
0193   8067             
0193   8067             
0193   8067             
0193   8067             
0193   8067~            					endif
0193   8067~            					endif
0193   8067             
0193   8067~            					endif
0193   8067~            					endif
0193   8067             
0193   8064             
0193   8064 02          
0193   8065             
0193   8065             
0193   8065~            					endif
0193   8065~            					endif
0193   8065~            					endif
0193   8065             
0193   8065~            					endif
0193   8065~            					endif
0193   8065~            					endif
0193   8065             
0193   8067             
0193   8067~            					endif
0193   8067~            					endif
0193   8067             
0194   8067 8C 56 05    					sty gw_i            ;Store it
0195   806A             				\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0195   806A             
0195   806A             
0195   806A             
0195   806A             
0195   806A             
0195   806A             
0195   806A~            				endif
0195   806A~            				endif
0195   806A             
0195   806A~            				endif
0195   806A~            				endif
0195   806A             
0195   8059             
0195   8059 10          
0195   805A             
0195   805A             
0195   805A~            				endif
0195   805A~            				endif
0195   805A~            				endif
0195   805A             
0195   805A~            				endif
0195   805A~            				endif
0195   805A~            				endif
0195   805A             
0195   806A             
0195   806A~            				endif
0195   806A~            				endif
0195   806A             
0196   806A             			\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0196   806A             
0196   806A             
0196   806A             
0196   806A             
0196   806A             
0196   806A             
0196   806A~            			endif
0196   806A~            			endif
0196   806A             
0196   806A~            			endif
0196   806A~            			endif
0196   806A             
0196   8051             
0196   8051 18          
0196   8052             
0196   8052             
0196   8052~            			endif
0196   8052~            			endif
0196   8052~            			endif
0196   8052             
0196   8052~            			endif
0196   8052~            			endif
0196   8052~            			endif
0196   8052             
0196   806A             
0196   806A~            			endif
0196   806A~            			endif
0196   806A             
0197   806A             			;***************************************************
0198   806A             			;* Process the Alpha Command Queue now
0199   806A             			;***************************************************
0200   806A AE DA 05    			ldx gr_i
0201   806D EC DB 05    			cpx gr_ia           ;Check the read queue
0202   8070             			\ .push  *, 0 \ BEQ  *                 ;Something came in!
0202   8070             
0202   8070 F0 FE       
0203   8072 E8          				inx 
0204   8073 E0 80       				cpx #qsize
0205   8075             				\ .push  *, 0 \ BCC  * 
0205   8075             
0205   8075 90 FE       
0206   8077 A2 00       					ldx #00         ;Reset the queue
0207   8079             				\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif               
0207   8079             
0207   8079             
0207   8079             
0207   8079             
0207   8079             
0207   8079             
0207   8079~            				endif               
0207   8079~            				endif               
0207   8079             
0207   8079~            				endif               
0207   8079~            				endif               
0207   8079             
0207   8076             
0207   8076 02          
0207   8077             
0207   8077             
0207   8077~            				endif               
0207   8077~            				endif               
0207   8077~            				endif               
0207   8077             
0207   8077~            				endif               
0207   8077~            				endif               
0207   8077~            				endif               
0207   8077             
0207   8079             
0207   8079~            				endif               
0207   8079~            				endif               
0207   8079             
0208   8079 8E DA 05    				stx gr_i            ;Save new queue location
0209   807C BC 5A 05    				ldy gr_queue,X
0210   807F 20 EE 81    				jsr scomm           ;Go to it!
0211   8082             			\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0211   8082             
0211   8082             
0211   8082             
0211   8082             
0211   8082             
0211   8082             
0211   8082~            			endif
0211   8082~            			endif
0211   8082             
0211   8082~            			endif
0211   8082~            			endif
0211   8082             
0211   8071             
0211   8071 10          
0211   8072             
0211   8072             
0211   8072~            			endif
0211   8072~            			endif
0211   8072~            			endif
0211   8072             
0211   8072~            			endif
0211   8072~            			endif
0211   8072~            			endif
0211   8072             
0211   8082             
0211   8082~            			endif
0211   8082~            			endif
0211   8082             
0212   8082             			;************************
0213   8082             			;Other main loop stuff
0214   8082             			;************************
0215   8082 20 AA 80    			jsr framecntl       ;Update the Coin Counters   
0216   8085 20 D3 80    			jsr domaxsound
0217   8088             		\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ 0	*+5\ jmp	var2_\#else\ JMP	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0217   8088             
0217   8088             
0217   8088~            		doloop
0217   8088~            		doloop
0217   8088~            		doloop
0217   8088             
0217   8088 4C 4B 80    
0217   808B             
0217   808B~            		doloop
0217   808B~            		doloop
0217   808B             
0218   808B             
0219   808B             ;*****************************************************
0220   808B A5 24       chkwrps lda eebad		;only if EEROM has passed
0221   808D             		\ .push  *, 0 \ BNE  * 		
0221   808D             
0221   808D D0 FE       
0222   808F A9 EE       			lda # (warpcodes&$ff)
0223   8091 85 1D       			sta eesrce
0224   8093 A9 06       			lda # ((warpcodes&$ff00)/$100)
0225   8095 85 1E       			sta eesrce+1
0226   8097 A0 0D       			ldy #cksumwc-warpcodes-1		;skip csum byte at top
0227   8099 A9 00       			lda #0		;start with zero
0228   809B             			\ .push  *, 2
0228   809B             
0229   809B 11 1D       				ora (eesrce,Y) 
0230   809D 85 18       				sta temp2
0231   809F 88          				dey
0232   80A0             			\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0232   80A0             
0232   80A0             
0232   80A0~            			miend
0232   80A0~            			miend
0232   80A0~            			miend
0232   80A0             
0232   80A0 10 F9       
0232   80A2             
0232   80A2~            			miend
0232   80A2~            			miend
0232   80A2             
0233   80A2 A5 18       			lda temp2
0234   80A4             			\ .push  *, 0 \ BNE  * 		
0234   80A4             
0234   80A4 D0 FE       
0235   80A6             				;for some reason warps are all zeros, reset them all
0236   80A6 20 BF 98    				jsr warpclass		;reset warps to classic, flag to write back to EEROM
0237   80A9             			\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0237   80A9             
0237   80A9             
0237   80A9             
0237   80A9             
0237   80A9             
0237   80A9             
0237   80A9~            			endif
0237   80A9~            			endif
0237   80A9             
0237   80A9~            			endif
0237   80A9~            			endif
0237   80A9             
0237   80A5             
0237   80A5 03          
0237   80A6             
0237   80A6             
0237   80A6~            			endif
0237   80A6~            			endif
0237   80A6~            			endif
0237   80A6             
0237   80A6~            			endif
0237   80A6~            			endif
0237   80A6~            			endif
0237   80A6             
0237   80A9             
0237   80A9~            			endif
0237   80A9~            			endif
0237   80A9             
0238   80A9             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0238   80A9             
0238   80A9             
0238   80A9             
0238   80A9             
0238   80A9             
0238   80A9             
0238   80A9~            		endif
0238   80A9~            		endif
0238   80A9             
0238   80A9~            		endif
0238   80A9~            		endif
0238   80A9             
0238   808E             
0238   808E 1A          
0238   808F             
0238   808F             
0238   808F~            		endif
0238   808F~            		endif
0238   808F~            		endif
0238   808F             
0238   808F~            		endif
0238   808F~            		endif
0238   808F~            		endif
0238   808F             
0238   80A9             
0238   80A9~            		endif
0238   80A9~            		endif
0238   80A9             
0239   80A9 60          		rts
0240   80AA             		
0241   80AA             ;*****************************************************
0242   80AA                     .sbttl "Coin Counter Update"
0243   80AA             ;*****************************************************
0244   80AA             framecntl   
0245   80AA A9 00               lda #00             ;Guess Off
0246   80AC A4 2D               ldy cnt1            ;Mech On??
0247   80AE                     \ .push  *, 0 \ BPL  * 
0247   80AE             
0247   80AE 10 FE       
0248   80B0 A9 02                   lda #counter2       ;Turn on this one
0249   80B2                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0249   80B2             
0249   80B2             
0249   80B2             
0249   80B2             
0249   80B2             
0249   80B2             
0249   80B2~                    endif
0249   80B2~                    endif
0249   80B2             
0249   80B2~                    endif
0249   80B2~                    endif
0249   80B2             
0249   80AF             
0249   80AF 02          
0249   80B0             
0249   80B0             
0249   80B0~                    endif
0249   80B0~                    endif
0249   80B0~                    endif
0249   80B0             
0249   80B0~                    endif
0249   80B0~                    endif
0249   80B0~                    endif
0249   80B0             
0249   80B2             
0249   80B2~                    endif
0249   80B2~                    endif
0249   80B2             
0250   80B2 A4 2E               ldy cnt2
0251   80B4                     \ .push  *, 0 \ BPL  * 
0251   80B4             
0251   80B4 10 FE       
0252   80B6 09 01                   ora #counter1
0253   80B8                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0253   80B8             
0253   80B8             
0253   80B8             
0253   80B8             
0253   80B8             
0253   80B8             
0253   80B8~                    endif
0253   80B8~                    endif
0253   80B8             
0253   80B8~                    endif
0253   80B8~                    endif
0253   80B8             
0253   80B5             
0253   80B5 02          
0253   80B6             
0253   80B6             
0253   80B6~                    endif
0253   80B6~                    endif
0253   80B6~                    endif
0253   80B6             
0253   80B6~                    endif
0253   80B6~                    endif
0253   80B6~                    endif
0253   80B6             
0253   80B8             
0253   80B8~                    endif
0253   80B8~                    endif
0253   80B8             
0254   80B8 8D 00 48            sta counter         ;Output Pulse
0255   80BB 60                  rts 
0256   80BC             
0257   80BC             ;******************************************************************
0258   80BC             ; This will copy our frequency data for the Max Background sound
0259   80BC             ; from ROM into RAM where we can easily manipulate the data
0260   80BC             ; for seemless changes
0261   80BC             ;******************************************************************
0262   80BC             initmaxbuf
0263   80BC A2 04       		ldx #maxsndcbuflen
0264   80BE             		\ .push  *, 2
0264   80BE             
0265   80BE BD D0 BD    			lda maxsndcbufd,X
0266   80C1 9D E2 05    			sta maxsndcbuf,X
0267   80C4 CA          			dex
0268   80C5             		\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0268   80C5             
0268   80C5             
0268   80C5~            		miend
0268   80C5~            		miend
0268   80C5~            		miend
0268   80C5             
0268   80C5 10 F7       
0268   80C7             
0268   80C7~            		miend
0268   80C7~            		miend
0268   80C7             
0269   80C7 A2 09       		ldx #maxsndfbuflen
0270   80C9             		\ .push  *, 2
0270   80C9             
0271   80C9 BD D4 BD    			lda maxsndfbufd,X
0272   80CC 9D F6 05    			sta maxsndfbuf,X
0273   80CF CA          			dex
0274   80D0             		\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0274   80D0             
0274   80D0             
0274   80D0~            		miend
0274   80D0~            		miend
0274   80D0~            		miend
0274   80D0             
0274   80D0 10 F7       
0274   80D2             
0274   80D2~            		miend
0274   80D2~            		miend
0274   80D2             
0275   80D2 60          		rts
0276   80D3             
0277   80D3             ;********************************************************************
0278   80D3             ; Handler that is called from the main loop to update our background
0279   80D3             ; sound appropriately based upon the driver value maxsnd.
0280   80D3             ;********************************************************************	
0281   80D3             domaxsound
0282   80D3 A0 0F       		ldy #NUM_CHANNELS-1
0283   80D5             		\ .push  *, 2
0283   80D5             
0284   80D5 B9 00 02    			lda ch_sid,y
0285   80D8 C9 44       			cmp #cmdp_snd_maxmv	;bottom check, is it above or equal	
0286   80DA F0 0D       			beq ?maxplaying
0287   80DC             			; ifcs
0288   80DC             				; lda #cmdp_snd_rexmv7 	;upper check, is it below or equal
0289   80DC             				; cmp ch_sid,y
0290   80DC             				; bcs ?maxkicker			;between these two and still playing
0291   80DC             			; endif
0292   80DC CA          			dex
0293   80DD             		\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0293   80DD             
0293   80DD             
0293   80DD~            		miend
0293   80DD~            		miend
0293   80DD~            		miend
0293   80DD             
0293   80DD 10 F6       
0293   80DF             
0293   80DF~            		miend
0293   80DF~            		miend
0293   80DF             
0294   80DF             		;not currently playing, start it if needed
0295   80DF A5 2F       		lda maxsnd
0296   80E1             		\ .push  *, 0 \ BMI  * 
0296   80E1             
0296   80E1 30 FE       
0297   80E3 A0 6B       			ldy #snd_maxmv			;sound to play
0298   80E5 20 EE 81    			jsr scomm
0299   80E8             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0299   80E8             
0299   80E8             
0299   80E8             
0299   80E8             
0299   80E8             
0299   80E8             
0299   80E8~            		endif
0299   80E8~            		endif
0299   80E8             
0299   80E8~            		endif
0299   80E8~            		endif
0299   80E8             
0299   80E2             
0299   80E2 05          
0299   80E3             
0299   80E3             
0299   80E3~            		endif
0299   80E3~            		endif
0299   80E3~            		endif
0299   80E3             
0299   80E3~            		endif
0299   80E3~            		endif
0299   80E3~            		endif
0299   80E3             
0299   80E8             
0299   80E8~            		endif
0299   80E8~            		endif
0299   80E8             
0300   80E8 60          		rts
0301   80E9             
0302   80E9             ?maxplaying
0303   80E9             		;Y has the channel index of the current max sound
0304   80E9             		;make sure the loop counter for this channel is always @ 3
0305   80E9 A5 2F       		lda maxsnd
0306   80EB             		\ .push  *, 0 \ BMI  * 
0306   80EB             
0306   80EB 30 FE       
0307   80ED B9 E0 02    			lda ch_pri,Y			;is it playing?
0308   80F0             			\ .push  *, 0 \ BEQ  * 
0308   80F0             
0308   80F0 F0 FE       
0309   80F2             				;playing, continue it
0310   80F2 A9 02       				lda #2
0311   80F4 99 70 04    				sta ch_loopcount,Y
0312   80F7             				;set correct frequency, this is stored in the background sound RAM buffer
0313   80F7 A9 07       				lda #07
0314   80F9 C5 2F       				cmp maxsnd
0315   80FB A5 2F       				lda maxsnd
0316   80FD             				\ .push  *, 0 \ BCS  * 
0316   80FD             
0316   80FD B0 FE       
0317   80FF A9 07       					lda #07
0318   8101             				\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0318   8101             
0318   8101             
0318   8101             
0318   8101             
0318   8101             
0318   8101             
0318   8101~            				endif
0318   8101~            				endif
0318   8101             
0318   8101~            				endif
0318   8101~            				endif
0318   8101             
0318   80FE             
0318   80FE 02          
0318   80FF             
0318   80FF             
0318   80FF~            				endif
0318   80FF~            				endif
0318   80FF~            				endif
0318   80FF             
0318   80FF~            				endif
0318   80FF~            				endif
0318   80FF~            				endif
0318   80FF             
0318   8101             
0318   8101~            				endif
0318   8101~            				endif
0318   8101             
0319   8101 A8          				tay							;bytes
0320   8102 0A          				asl A						
0321   8103 AA          				tax							;words
0322   8104 B9 27 81    				lda ?maxvol,Y
0323   8107 8D E3 05    				sta maxsndcbuf+1			;volume
0324   810A BD 17 81    				lda ?maxfreq,X
0325   810D 8D F7 05    				sta maxsndfbuf+1			;frequency starts at offset 1
0326   8110 BD 18 81    				lda ?maxfreq+1,X 
0327   8113 8D F8 05    				sta maxsndfbuf+2			;high byte is at offset 2
0328   8116             			\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0328   8116             
0328   8116             
0328   8116             
0328   8116             
0328   8116             
0328   8116             
0328   8116~            			endif
0328   8116~            			endif
0328   8116             
0328   8116~            			endif
0328   8116~            			endif
0328   8116             
0328   80F1             
0328   80F1 24          
0328   80F2             
0328   80F2             
0328   80F2~            			endif
0328   80F2~            			endif
0328   80F2~            			endif
0328   80F2             
0328   80F2~            			endif
0328   80F2~            			endif
0328   80F2~            			endif
0328   80F2             
0328   8116             
0328   8116~            			endif
0328   8116~            			endif
0328   8116             
0329   8116             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0329   8116             
0329   8116             
0329   8116             
0329   8116             
0329   8116             
0329   8116             
0329   8116~            		endif
0329   8116~            		endif
0329   8116             
0329   8116~            		endif
0329   8116~            		endif
0329   8116             
0329   80EC             
0329   80EC 29          
0329   80ED             
0329   80ED             
0329   80ED~            		endif
0329   80ED~            		endif
0329   80ED~            		endif
0329   80ED             
0329   80ED~            		endif
0329   80ED~            		endif
0329   80ED~            		endif
0329   80ED             
0329   8116             
0329   8116~            		endif
0329   8116~            		endif
0329   8116             
0330   8116 60          		rts
0331   8117             	
0332   8117 20 FD       ?maxfreq 	.dw -736	
0333   8119 84 FD       			.dw -636	
0334   811B E8 FD       			.dw -536		
0335   811D 4C FE       			.dw -436	
0336   811F B0 FE       			.dw -336	
0337   8121 14 FF       			.dw -236	
0338   8123 78 FF       			.dw -136	
0339   8125 DC FF       			.dw -36		
0340   8127                     
0341   8127 30          ?maxvol		.db 24<<1
0342   8128 2C          			.db 22<<1
0343   8129 28          			.db 20<<1
0344   812A 24          			.db 18<<1
0345   812B 20          			.db 16<<1
0346   812C 1C          			.db 14<<1
0347   812D 18          			.db 12<<1
0348   812E 14          			.db 10<<1
0349   812F             			
0350   812F             ;******************************************************
0351   812F             ; Include RPM                                               
0352   812F             ;******************************************************
0353   812F             #include "rpm.asm"
0001+  812F             ;******************************************************************************
0002+  812F                 .title "Rusty's Pokey Music (RPM) Slave Module"
0003+  812F             ;******************************************************************************                                       
0004+  812F             ;******************************************************************************                                       
0005+  812F             ;* RPM Version 0.4     
0006+  812F             ;*                                                                       
0007+  812F             ;* This module is used on the slave processor to handle sound and interfacing 
0008+  812F             ;* It needs to be linked with game specific code and the following variables  
0009+  812F             ;* must be predefined for that game in order for RPM to work correctly.       
0010+  812F             ;*                                                                              
0011+  812F             ;* The following are pre-compilation flags to enable or disable individual    
0012+  812F             ;* features within RPM. The must be defined as 0 (not used) or 1 (used).      
0013+  812F             ;*                                                                            
0014+  812F             ;*  ___tlk  Enables SPEECH (TMS5220 Hardware installed)     
0015+  812F             ;*  ___oki  Enables SPEECH (MSM6295 Hardware installed)                  
0016+  812F             ;*  ___imm  IMMEDIATE Mode Functions                                          
0017+  812F             ;*  ___nmi  NMI port control                                                  
0018+  812F             ;*  ___exm  support EXCEPTION mode                                            
0019+  812F             ;*                                                                                     
0020+  812F             ;* Device Declarations - This allows the macro STSND to start logical named   
0021+  812F             ;*                       channels more easily. These equates should be common 
0022+  812F             ;*                       on all pokey driven games.                           
0023+  812F             ;*                                                                            
0024+  812F             ;*  POKEY_CH0 =   0   ;Channel Offsets                                
0025+  812F             ;*  POKEY_CH1 =   4                                                     
0026+  812F             ;*  POKEY_CH2 =   8                                                     
0027+  812F             ;*  POKEY_CH3 =   12                                                    
0028+  812F             ;*                                                                            
0029+  812F             ;* Declare all tables large enough. The macros will fill in                   
0030+  812F             ;* the entries....                                                            
0031+  812F             ;*                                                                            
0032+  812F             ;* ***** Table Limits *****                                                   
0033+  812F             ;*                                                                            
0034+  812F             ;* Byte Tables: these are addressed using Y as an index, so                   
0035+  812F             ;*              they are limited to 256d entries.                             
0036+  812F             ;*                                                                            
0037+  812F             ;*  numcom  Total Number of legal commands                              
0038+  812F             ;*  numsnd  MAX number of sound groups                                  
0039+  812F             ;*  numtun  MAX number of tunes to group                                
0040+  812F             ;*  numimm  MAX number of immediates                                    
0041+  812F             ;*                                                                            
0042+  812F             ;* Word Tables: these are limited to 128d entries for the same reason.                                       
0043+  812F             ;*                                                                            
0044+  812F             ;*  numexc  MAX exceptions                              
0045+  812F             ;*  numfcns Number of legal user functions                  
0046+  812F             ;******************************************************************************
0047+  812F                 .sbttl "RPM Macro Definitions"
0048+  812F             ;******************************************************************************
0049+  812F             ;*                                                                            
0050+  812F             ;* The Valid Macros are:                                                      
0051+  812F             ;*                                                                            
0052+  812F             ;* SILENT   name            This sets to ATTRACT/silent mode                
0053+  812F             ;* NOISY    name            This allows all sounds                          
0054+  812F             ;* SETATR   name,level      This sets a priority level level below          
0055+  812F             ;*                              which no sounds are heard.                
0056+  812F             ;******************************************************************************
0057+  812F             rt_attract  =   0
0058+  812F             
0059+  812F             ;******************************************************************************
0060+  812F             ;* SETFL    name,flag       Sets the event flag 1-8                         
0061+  812F             ;* CLRFL    name,flag       Clear the event flag 1-8                        
0062+  812F             ;******************************************************************************
0063+  812F             rt_eflag    =   1
0064+  812F             
0065+  812F             ;******************************************************************************
0066+  812F             ;* RESTI    name            Reset TI sound chip                             
0067+  812F             ;* KILALL   name            Installs call to allow resetting RPM.           
0068+  812F             ;* GOSUB    name,fname      This calls the function FNAME                   
0069+  812F             ;******************************************************************************
0070+  812F             rt_gosub    =    2  
0071+  812F               
0072+  812F             ;******************************************************************************
0073+  812F             ;* KILPRI   name,priority   Kills all sounds of given priority/class        
0074+  812F             ;******************************************************************************0
0075+  812F             rt_killpri  =  3
0076+  812F             
0077+  812F             ;******************************************************************************
0078+  812F             ;* KILID    name,ident      Kills sound started by name IDENT.              
0079+  812F             ;******************************************************************************
0080+  812F             rt_killid   =  4
0081+  812F             
0082+  812F             ;******************************************************************************
0083+  812F             ;* KILDEV   name,dev,chan   Kills all sounds on channel CHAN of device.     
0084+  812F             ;******************************************************************************
0085+  812F             rt_killdev  =  5
0086+  812F             
0087+  812F             ;******************************************************************************
0088+  812F             ;* STSND    name,replacement, START SOUND replacement is REPL or NOREPL,      
0089+  812F             ;*          priority,eflag,     priority 1 is lowest, eflag is 1-8        
0090+  812F             ;*          queue,tuneID.       queue is device-channel, tuenID is index  
0091+  812F             ;*                      into tunetable.                           
0092+  812F             ;*                                                    
0093+  812F             ;* CONT     pri,efl,q,tuneID  Continues by linking to previous STSND                                                           
0094+  812F             ;******************************************************************************
0095+  812F             rt_sound    =   6
0096+  812F             
0097+  812F             ;******************************************************************************
0098+  812F             ;* REPORT   name,value      Report VALUE throught port to game.             
0099+  812F             ;******************************************************************************
0100+  812F             rt_report   =   7
0101+  812F             
0102+  812F             ;******************************************************************************
0103+  812F             ;* TALK name,phrase     Speak a phrase                                  
0104+  812F             ;******************************************************************************
0105+  812F             rt_speech   =   8 
0106+  812F                                                             
0107+  812F             ;******************************************************************************
0108+  812F             ;* INSCMD   name,cmd,arg    Execute command CMD with arg ARG                
0109+  812F             ;* IMMED    name,ident,q,   This will execute the function in               
0110+  812F             ;*          fon,arg         immediate-mode when enabled.              
0111+  812F             ;******************************************************************************
0112+  812F             rt_immed    =   9
0113+  812F             
0114+  812F             ;******************************************************************************
0115+  812F             ;* EXCEPT   name,function   This causes IMMEDIATE response in NMI systems   
0116+  812F             ;******************************************************************************
0117+  812F             rt_except   =   -1
0118+  812F             no_exe      =   -1
0119+  812F             no_ext		= 	-1
0120+  812F             REPL        =   -1
0121+  812F             NOREPL      =   0
0122+  812F             
0123+  812F             ;*****************************************************************************
0124+  812F             ;* Sound Table Macros
0125+  812F             ;*****************************************************************************
0126+  812F             ;* NEWTUNE defines a seqence of TUNE parameters.
0127+  812F             ;*         Also fills the tunetable with the current location and     
0128+  812F             ;*         also defines an offset into the table with the name given in ID.  
0129+  812F             ;*****************************************************************************
0130+  812F             #define  NEWTUNE(id)    \tmpptr .set *
0131+  812F             #defcont                \ .org t_tune_l+i_tune
0132+  812F             #defcont                \ .byte (tmpptr&$FF)
0133+  812F             #defcont                \ .org t_tune_h+i_tune
0134+  812F             #defcont                \ .byte (tmpptr/$100)
0135+  812F             #defcont                \id = i_tune
0136+  812F             #defcont                \i_tune .set i_tune+1
0137+  812F             #defcont                \ .org tmpptr
0138+  812F             #defcont                \#IF i_tune > (numtun)
0139+  812F             #defcont			    \	.error "RPM: Too many Tunes defined. Increase limit."
0140+  812F             #defcont				\#ENDIF 
0141+  812F             ;*****************************************************************************
0142+  812F             ;* NEWSNDFREQ defines a pointer to a block of data used for the frequency 
0143+  812F             ;*            envelope for the sound.  
0144+  812F             ;*****************************************************************************
0145+  812F             #define  NEWSNDFREQ(id) \tmpptr .set *
0146+  812F             #defcont                \ .org t_freqenv_l+i_freqenv
0147+  812F             #defcont				\ .byte (tmpptr&$FF)
0148+  812F             #defcont                \ .org t_freqenv_h+i_freqenv
0149+  812F             #defcont                \ .byte (tmpptr/$100)
0150+  812F             #defcont                \id = i_freqenv
0151+  812F             #defcont                \i_freqenv .set i_freqenv + 1
0152+  812F             #defcont                \ .org tmpptr
0153+  812F             #defcont                \#IF i_freqenv > (numenv)
0154+  812F             #defcont			    \	.error "RPM: Too many frequency envelopes defined. Increase limit."
0155+  812F             #defcont				\#ENDIF 
0156+  812F             ;*****************************************************************************
0157+  812F             ;* NEWMXSNDFREQ defines a pointer to a block of data used for the frequency 
0158+  812F             ;*            envelope for the sound - THIS IS USED FOR THE MAX BACKGROUND 
0159+  812F             ;*            SOUND BUFFER.
0160+  812F             ;*****************************************************************************
0161+  812F             #define  NEWMXSNDFREQ(id) \tmpptr .set *
0162+  812F             #defcont				\maxsndfbufd = *
0163+  812F             #defcont                \ .org t_freqenv_l+i_freqenv
0164+  812F             #defcont				\ .byte (maxsndfbuf&$FF)
0165+  812F             #defcont                \ .org t_freqenv_h+i_freqenv
0166+  812F             #defcont                \ .byte (maxsndfbuf/$100)
0167+  812F             #defcont                \id = i_freqenv
0168+  812F             #defcont                \i_freqenv .set i_freqenv + 1
0169+  812F             #defcont                \ .org tmpptr
0170+  812F             #defcont                \#IF i_freqenv > (numenv)
0171+  812F             #defcont			    \	.error "RPM: Too many frequency envelopes defined. Increase limit."
0172+  812F             #defcont				\#ENDIF 
0173+  812F             ;*****************************************************************************
0174+  812F             ;* NEWSNDAMP defines a pointer to a block of data used for the amplitude 
0175+  812F             ;*            envelope for the sound.  
0176+  812F             ;*****************************************************************************
0177+  812F             #define  NEWSNDAMP(id) \tmpptr .set *
0178+  812F             #defcont                \ .org t_ampenv_l+i_ampenv
0179+  812F             #defcont				\ .byte (tmpptr&$FF)
0180+  812F             #defcont                \ .org t_ampenv_h+i_ampenv
0181+  812F             #defcont                \ .byte (tmpptr/$100)
0182+  812F             #defcont                \id = i_ampenv
0183+  812F             #defcont                \i_ampenv .set i_ampenv + 1
0184+  812F             #defcont                \ .org tmpptr
0185+  812F             #defcont                \#IF i_ampenv > (numenv)
0186+  812F             #defcont			    \	.error "RPM: Too many amplitude envelopes defined. Increase limit."
0187+  812F             #defcont				\#ENDIF 
0188+  812F             
0189+  812F             #define  NEWMXSNDENV(id) \tmpptr .set *
0190+  812F             #defcont				\maxsndcbufd = *
0191+  812F             #defcont                \ .org t_ampenv_l+i_ampenv
0192+  812F             #defcont				\ .byte (maxsndcbuf&$FF)
0193+  812F             #defcont                \ .org t_ampenv_h+i_ampenv
0194+  812F             #defcont                \ .byte (maxsndfbuf/$100)
0195+  812F             #defcont                \id = i_ampenv
0196+  812F             #defcont                \i_ampenv .set i_ampenv + 1
0197+  812F             #defcont                \ .org tmpptr
0198+  812F             #defcont                \#IF i_ampenv > (numenv)
0199+  812F             #defcont			    \	.error "RPM: Too many amplitude envelopes defined. Increase limit."
0200+  812F             #defcont				\#ENDIF 
0201+  812F             ;************************************************************************** 
0202+  812F             ;#define  CREATEGLOBAL(gname) \gname = o_commandnum
0203+  812F             ;#defcont                     \.export gname
0204+  812F             
0205+  812F             #define  SETCOMMAND(name,value)     \tmpptr .set *
0206+  812F             #defcont                            \.export name
0207+  812F             #defcont                            \name = o_commandnum
0208+  812F             #defcont                            \ .org t_commandtype+o_commandnum
0209+  812F             #defcont                            \ .byte value
0210+  812F             #defcont                            \o_commandnum .set o_commandnum+1 
0211+  812F             #defcont                            \ .org tmpptr
0212+  812F             #defcont                            \#IF o_commandnum > (numcom)
0213+  812F             #defcont			                \	.error "RPM: Too many command types defined. Increase 'numcom' limit."
0214+  812F             #defcont				            \#ENDIF  
0215+  812F             
0216+  812F             #define  SETCMDPARAM(value) \tmpptr .set *
0217+  812F             #defcont                    \ .org t_commandparam+o_commandparam
0218+  812F             #defcont                    \ .byte value
0219+  812F             #defcont                    \o_commandparam .set o_commandparam+1
0220+  812F             #defcont                    \ .org tmpptr
0221+  812F             #defcont                    \#IF o_commandparam > (numcom)
0222+  812F             #defcont			        \	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."
0223+  812F             #defcont				    \#ENDIF 
0224+  812F             
0225+  812F             ;NOTE: technically since other commands can use the exception pointer table, then the max value needs to be 'numcom' here
0226+  812F             ;      instead of numexc which might not make sense, but it is because any command can actually have an exception, not
0227+  812F             ;      really sure if numexc is actually needed in this case?
0228+  812F             #define  SETEXPIDX(value)   \tmpptr .set *
0229+  812F             #defcont                    \ .org t_exceptidx+o_exceptidx
0230+  812F             #defcont                    \ .byte value
0231+  812F             #defcont                    \o_exceptidx .set o_exceptidx+1
0232+  812F             #defcont                    \ .org tmpptr
0233+  812F             #defcont                    \#IF o_exceptidx > (numcom) 
0234+  812F             #defcont			        \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."
0235+  812F             #defcont				    \#ENDIF 
0236+  812F             
0237+  812F             ; #define  SETEXTENDIDX(value) \tmpptr .set *
0238+  812F             ; #defcont                    \ .org t_extendidx+o_extendidx
0239+  812F             ; #defcont                    \ .byte value
0240+  812F             ; #defcont                    \o_extendidx .set o_extendidx+1
0241+  812F             ; #defcont                    \ .org tmpptr
0242+  812F             ; #defcont                    \#IF o_extendidx > numcom
0243+  812F             ; #defcont			        \	.error "RPM: Too many extensions defined. Increase limit."
0244+  812F             ; #defcont				    \#ENDIF 
0245+  812F             
0246+  812F             #define  SETEXPPRT(value)   \tmpptr .set *
0247+  812F             #defcont                    \ .org t_exceptptr+(o_exceptptr*2)
0248+  812F             #defcont                    \ .word value-1
0249+  812F             #defcont                    \o_exceptptr .set o_exceptptr+1
0250+  812F             #defcont                    \ .org tmpptr
0251+  812F             #defcont                    \#IF o_exceptptr > numexc
0252+  812F             #defcont			        \	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."
0253+  812F             #defcont				    \#ENDIF 
0254+  812F             
0255+  812F             #define  INSERTFUNC(name)   \tmpptr .set *
0256+  812F             #defcont                    \ .org t_userfunction+(o_userfunction*2)
0257+  812F             #defcont                    \ .word name-1
0258+  812F             #defcont                    \o_userfunction .set o_userfunction+1
0259+  812F             #defcont                    \ .org tmpptr
0260+  812F             #defcont                    \#IF o_userfunction > numfcns
0261+  812F             #defcont			        \	.error "RPM: Too many user functions defined. Increase limit."
0262+  812F             #defcont				    \#ENDIF
0263+  812F             
0264+  812F             #define INSERTTUNEST(name)  \tmpptr .set *
0265+  812F             #defcont                    \ .org t_tunestarts+o_tunestarts
0266+  812F             #defcont                    \ .byte tunenum
0267+  812F             #defcont                    \o_tunestarts .set o_tunestarts+1
0268+  812F             #defcont                    \ .org tmpptr
0269+  812F             #defcont                    \#IF o_tunestarts > numsnd
0270+  812F             #defcont			        \	.error "RPM: Too many tune starts defined. Increase limit."
0271+  812F             #defcont				    \#ENDIF 
0272+  812F             
0273+  812F             ; #define INSERTREPL(thisrep) \tmpptr .set *
0274+  812F             ; #defcont                    \ .org t_replacement+o_replacement
0275+  812F             ; #defcont                    \ .byte thisrep
0276+  812F             ; #defcont                    \o_replacement .set o_replacement+1
0277+  812F             ; #defcont                    \ .org tmpptr
0278+  812F             ; #defcont                    \#IF o_replacement > (numsnd)
0279+  812F             ; #defcont			        \	.error "RPM: Too many replacements defined. Increase limit. $1"
0280+  812F             ; #defcont				    \#ENDIF 
0281+  812F             
0282+  812F             ; #define INSERTEFLAG(flag)   \tmpptr .set *
0283+  812F             ; #defcont                    \ .org t_eflag+o_eflag
0284+  812F             ; #defcont                    \ .byte flag
0285+  812F             ; #defcont                    \o_eflag .set o_eflag+1
0286+  812F             ; #defcont                    \ .org tmpptr
0287+  812F             ; #defcont                    \#IF o_eflag > (numtun)
0288+  812F             ; #defcont			        \	.error "RPM: Too many flags defined. Increase limit."
0289+  812F             ; #defcont				    \#ENDIF 
0290+  812F             
0291+  812F             #define INSERTPRIORITY(pri) \tmpptr .set *
0292+  812F             #defcont                    \ .org t_priority+o_priority
0293+  812F             #defcont                    \ .byte pri
0294+  812F             #defcont                    \o_priority .set o_priority+1
0295+  812F             #defcont                    \ .org tmpptr
0296+  812F             #defcont                    \#IF o_priority > (numtun)
0297+  812F             #defcont			        \	.error "RPM: Too many priorities defined. Increase limit."
0298+  812F             #defcont				    \#ENDIF 
0299+  812F             
0300+  812F             #define INSERTCHANNEL(que)    \tmpptr .set *
0301+  812F             #defcont                    \ .org t_schan+o_schann
0302+  812F             #defcont                    \ .byte que
0303+  812F             #defcont                    \o_schann .set o_schann+1
0304+  812F             #defcont                    \ .org tmpptr
0305+  812F             #defcont                    \#IF o_schann > (numtun)
0306+  812F             #defcont			        \	.error "RPM: Too many queues defined. Increase limit."
0307+  812F             #defcont				    \#ENDIF 
0308+  812F             
0309+  812F             #define SETTUNEID(id)       \tmpptr .set *
0310+  812F             #defcont                    \ .org t_stune+o_stune
0311+  812F             #defcont                    \ .byte id
0312+  812F             #defcont                    \o_stune .set o_stune+1
0313+  812F             #defcont                    \ .org tmpptr
0314+  812F             #defcont                    \#IF o_stune > (numtun)
0315+  812F             #defcont			        \	.error "RPM: Too many Tune IDs defined. Increase limit."
0316+  812F             #defcont				    \#ENDIF 
0317+  812F             
0318+  812F             #define INSERTTCONT(tcont)  \tmpptr .set *
0319+  812F             #defcont                    \ .org t_tunecont+tunenum-1
0320+  812F             #defcont                    \#IF tunenum!=0
0321+  812F             #defcont                    \ .byte tcont, $0
0322+  812F             #defcont                    \#ENDIF
0323+  812F             #defcont                    \ .org tmpptr
0324+  812F             
0325+  812F~            #IF ___tlk = 1
0326+  812F~            #define INSERTTALK(tstart,tend) \tmpptr .set *
0327+  812F~            #defcont                        \ .org t_spdptr+(o_spdptr*2)
0328+  812F~            #defcont                        \ .word tstart
0329+  812F~            #defcont                        \ .org t_spdlen+(o_spdptr*2)
0330+  812F~            #defcont                        \ .word tend-tstart
0331+  812F~            #defcont                        \o_spdptr .set o_spdptr+1
0332+  812F~            #defcont                        \ .org tmpptr
0333+  812F~            #defcont                        \#IF o_spdptr > (numtlk)
0334+  812F~            #defcont			            \	.error "RPM: Too many TALK IDs defined. Increase limit."
0335+  812F~            #defcont				        \#ENDIF 
0336+  812F             #ENDIF
0337+  812F             
0338+  812F             #IF ___oki = 1
0339+  812F             #define INSERTADPCM(achan,aatt) \tmpptr .set *
0340+  812F             #defcont                        \ .org t_okicmd+(o_okiptr)
0341+  812F             #defcont                        \ .db ($80 | o_okiptr+1)
0342+  812F             #defcont                        \ .org t_okiattch+(o_okiptr)
0343+  812F             #defcont                        \ .db (achan | aatt)
0344+  812F             #defcont                        \o_okiptr .set o_okiptr+1
0345+  812F             #defcont                        \ .org tmpptr
0346+  812F             #defcont                        \#IF o_okiptr > (numoki)
0347+  812F             #defcont			            \	.error "RPM: Too many ADPCM IDs defined. Increase limit."
0348+  812F             #defcont				        \#ENDIF 
0349+  812F             #ENDIF
0350+  812F             
0351+  812F             ;*****************************************************************************
0352+  812F             ;* Define the RPM Macros
0353+  812F             ;*****************************************************************************
0354+  812F             
0355+  812F             #define  SETATR(name,level) \ SETCOMMAND(name, rt_attract)
0356+  812F             #defcont                    \ SETCMDPARAM(level)
0357+  812F             #defcont                    \ SETEXPIDX(no_exe)
0358+  812F             ;#defcont					\ SETEXTENDIDX(no_ext)
0359+  812F             
0360+  812F             #define  SILENT(name)       \ SETATR(name,$ff)    
0361+  812F             #define  NOISY(name)        \ SETATR(name,$00)
0362+  812F             
0363+  812F             #define  CLRFL(name,flag)   \ SETCOMMAND(name,rt_eflag)
0364+  812F             #defcont                    \ SETCMDPARAM(flag)
0365+  812F             #defcont                    \ SETEXPIDX(no_exe)
0366+  812F             ;#defcont					\ SETEXTENDIDX(no_ext)
0367+  812F             
0368+  812F             #define  SETFL(name,flag)   \ CLRFL(name,flag|$80)
0369+  812F             
0370+  812F             #define  GOSUB(name,fname)  \ SETCOMMAND(name,rt_gosub)
0371+  812F             #defcont                    \ SETCMDPARAM(o_userfunction)
0372+  812F             #defcont                    \ INSERTFUNC(fname)
0373+  812F             #defcont                    \ SETEXPIDX(no_exe)
0374+  812F             ;#defcont					\ SETEXTENDIDX(no_ext)
0375+  812F             
0376+  812F             #define  KILALL(name)       \ GOSUB(name,initrpm)
0377+  812F             #define  RESTI(name)        \ GOSUB(name,res_ti)
0378+  812F             
0379+  812F             #define  KILPRI(name,priority)  \ SETCOMMAND(name,rt_killpri)
0380+  812F             #defcont                        \ SETCMDPARAM(priority)
0381+  812F             #defcont                        \ SETEXPIDX(no_exe)
0382+  812F             ;#defcont						\ SETEXTENDIDX(no_ext)
0383+  812F             
0384+  812F             #define  KILID(name,ident)  \ SETCOMMAND(name, rt_killid)
0385+  812F             #defcont                    \ SETCMDPARAM(ident)
0386+  812F             #defcont                    \ SETEXPIDX(no_exe)
0387+  812F             ;#defcont					\ SETEXTENDIDX(no_ext)
0388+  812F             
0389+  812F             #define  KILDEV(name,dev,chan)  \ SETCOMMAND(name, rt_killdev)
0390+  812F             #defcont                        \ SETCMDPARAM(dev)
0391+  812F             #defcont                        \ SETEXPIDX(no_exe)
0392+  812F             ;#defcont						\ SETEXTENDIDX(no_ext)
0393+  812F             
0394+  812F             #define  STSND(name,replacement,priority,eflag,queue,tuneID) \ SETCOMMAND(name, rt_sound)
0395+  812F             #defcont				\cmdp_+name = stsndcount
0396+  812F             #defcont                \ SETCMDPARAM(stsndcount) 
0397+  812F             #defcont                \ INSERTTUNEST(tuneID)
0398+  812F             ;#defcont                \ INSERTEFLAG(eflag)
0399+  812F             #defcont                \ INSERTPRIORITY(priority)
0400+  812F             #defcont                \ INSERTCHANNEL(queue)
0401+  812F             #defcont                \ SETTUNEID(tuneID)
0402+  812F             #defcont                \ INSERTTCONT(0)
0403+  812F             ;#defcont                \ INSERTREPL(replacement)
0404+  812F             #defcont                \ SETEXPIDX(no_exe)
0405+  812F             ;#defcont				\ SETEXTENDIDX(extension)
0406+  812F             #defcont                \tunenum .set tunenum+1
0407+  812F             #defcont                \stsndcount .set stsndcount+1
0408+  812F             
0409+  812F             #define  CONT(priority,eflag,queue,tuneID) \ INSERTPRIORITY(priority)
0410+  812F             ;#defcont                \ INSERTEFLAG(eflag)
0411+  812F             #defcont                \ INSERTCHANNEL(queue)
0412+  812F             #defcont                \ SETTUNEID(tuneID)
0413+  812F             #defcont                \ INSERTTCONT(tunenum)
0414+  812F             ;#defcont                \ INSERTREPL(REPL)
0415+  812F             #defcont                \ SETEXPIDX(no_exe)
0416+  812F             ;#defcont				\ SETEXTENDIDX(no_ext)
0417+  812F             #defcont                \tunenum .set tunenum+1
0418+  812F             
0419+  812F             #define  REPORT(name,value) \ SETCOMMAND(name,rt_report)
0420+  812F             #defcont                    \ SETCMDPARAM(value)
0421+  812F             #defcont                    \ SETEXPIDX(no_exe)
0422+  812F             ;#defcont					\ SETEXTENDIDX(no_ext)
0423+  812F             
0424+  812F~            #IF ___tlk == 1
0425+  812F~                #define  TALK(name,spstart,spend) \ SETCOMMAND(name,rt_speech)
0426+  812F~                #defcont                          \ SETCMDPARAM(o_spdptr)
0427+  812F~                #defcont                          \ INSERTTALK(spstart,spend)
0428+  812F~            ;    #defcont                          \ SETEXPIDX(no_exe)
0429+  812F~            ;	#defcont						  \ SETEXTENDIDX(no_ext)
0430+  812F             #ENDIF
0431+  812F             
0432+  812F             #IF ___oki == 1
0433+  812F                 #define  ADPCM(name,channel,att)  \ SETCOMMAND(name,rt_speech)
0434+  812F                 #defcont                          \ SETCMDPARAM(o_okiptr)
0435+  812F             	#defcont                          \ INSERTADPCM(channel,att)
0436+  812F             ;    #defcont                          \ SETEXPIDX(no_exe)
0437+  812F             ;	#defcont						  \ SETEXTENDIDX(no_ext)
0438+  812F             	
0439+  812F             dbm0	.equ	0
0440+  812F             dbm3	.equ	1
0441+  812F             dbm6	.equ    2
0442+  812F             dbm9	.equ    3
0443+  812F             dbm12	.equ	4
0444+  812F             dbm15	.equ	5
0445+  812F             dbm18	.equ	6
0446+  812F             dbm21	.equ	7
0447+  812F             dbm24	.equ	8
0448+  812F             
0449+  812F             chan1	.equ    $10
0450+  812F             chan2	.equ	$20
0451+  812F             chan3	.equ	$40
0452+  812F             chan4	.equ	$80
0453+  812F             
0454+  812F             #ENDIF
0455+  812F             
0456+  812F             #define  INSCMD(name,scmd,arg) 
0457+  812F             
0458+  812F             #IF ___imm != 0
0459+  812F                 #define  IMMED(name,ident,queue,fon,arg)
0460+  812F             #ENDIF
0461+  812F             
0462+  812F             #IF ___exm != 0
0463+  812F                 #define  EXCEPT(name,function)  \ SETCOMMAND(name,rt_except)
0464+  812F                 #defcont                        \ SETCMDPARAM(rt_except)
0465+  812F                 #defcont                        \ SETEXPIDX(o_exceptptr)
0466+  812F                 #defcont                        \ SETEXPPRT(function)
0467+  812F             	;#defcont						\ SETEXTENDIDX(no_ext)
0468+  812F             #ENDIF
0469+  812F             
0470+  812F             
0471+  812F             ;******************************************************************************
0472+  812F             ; RPM Sound Data Macros - These will allow us to define sound data in a 
0473+  812F             ;                         common way and easily allow switching between 
0474+  812F             ;                         several output formats.
0475+  812F             ;******************************************************************************
0476+  812F             ;#define     SDCTRL(ticks,value)		\ .db ticks \ .db ((value)<<3)
0477+  812F             
0478+  812F             ;**********************************************************************************
0479+  812F             ; Dissection of FREQ data
0480+  812F             ;**********************************************************************************
0481+  812F             ;	Frequency data consists of 3 bytes of data
0482+  812F             ;
0483+  812F             ;   Byte 1 	= (Timer)  Range $00-$FE, $FF is special and designates a JUMP/LOOP
0484+  812F             ;   Byte 2/3= (Addend) Encoded Decimal Number MSB+LSB (Signed)
0485+  812F             ;                      
0486+  812F             ; 
0487+  812F             ;   Examples: 
0488+  812F             ;
0489+  812F             ;       $01,$E0,$00: Byte1 =   1 Ticks, Byte 2/3 = ($00E0 << 3) =   $7.0  =   7.0d
0490+  812F             ;    	$02,$F0,$FF: Byte1 =   2 Ticks, Byte 2/3 = ($FFF0 << 3) =  $-0.8  =  -0.5d
0491+  812F             ;  		$03,$10,$00: Byte1 =   3 Ticks, Byte 2/3 = ($0010 << 3) =   $0.8  =   0.5d
0492+  812F             ;		$04,$20,$F7: Byte1 =   4 Ticks, Byte 2/3 = ($F720 << 3) = $-47.0  = -71.0d
0493+  812F             ;		$05,$00,$00: Byte1 =   5 Ticks, Byte 2/3 = ($0000 << 3) =   $0.0  =   0.0d
0494+  812F             ;
0495+  812F             ;   Notes on data values:
0496+  812F             ;      The data value passed in this table is a 8+4 bit number formatted as
0497+  812F             ;         XXXVVVVV VVV.SSSSX
0498+  812F             ;
0499+  812F             ;      Where:
0500+  812F             ;            X - Not Used
0501+  812F             ;            V - Whole Number Values
0502+  812F             ;            S - Significand Values
0503+  812F             ;
0504+  812F             ;  
0505+  812F             __rpmsloop	= 0;    
0506+  812F             #DEFINE SBEGIN	\ .push *
0507+  812F             
0508+  812F             #DEFINE SFREQ(slope,duration)	\ .db duration 
0509+  812F             #DEFCONT						\ #if (slope>$7FFF)
0510+  812F             #DEFCONT						\ 	.error "Slope value too high, must be less than 256."
0511+  812F             #DEFCONT						\ #else
0512+  812F             #DEFCONT						\	#if (duration > $FE)
0513+  812F             #DEFCONT						\		.error "Duration must be less than 255."
0514+  812F             #DEFCONT						\	#else
0515+  812F             #DEFCONT						\ 		.dw slope << 1
0516+  812F             #DEFCONT						\	#endif
0517+  812F             #DEFCONT						\ #endif
0518+  812F             
0519+  812F             #DEFINE SCTRL(slope,duration)	\ #if (slope>$64)
0520+  812F             #DEFCONT						\ 	.error "Slope value too high, must be less than 64."
0521+  812F             #DEFCONT						\ #else
0522+  812F             #DEFCONT						\ 	#if (slope<-$63)
0523+  812F             #DEFCONT						\ 		.error "Slope value too high, must be greater than -63."
0524+  812F             #DEFCONT						\   #else
0525+  812F             #DEFCONT						\		#if (duration > $FE)
0526+  812F             #DEFCONT						\			.error "Duration must be less than 255."
0527+  812F             #DEFCONT						\		#else
0528+  812F             #DEFCONT						\ 			.db duration 
0529+  812F             #DEFCONT						\ 			.db slope << 1
0530+  812F             #DEFCONT						\		#endif
0531+  812F             #DEFCONT						\   #endif
0532+  812F             #DEFCONT						\ #endif
0533+  812F             
0534+  812F             #DEFINE SLOOP(loops)	\ .pop __rpmsloop
0535+  812F             #DEFCONT				\ .db $FF,loops,(*-__rpmsloop+3)
0536+  812F             
0537+  812F             
0538+  812F             
0539+  812F             #DEFINE SFREQ2(slope,duration)	\ .db duration 
0540+  812F             #DEFCONT						\ #if (slope>32767)
0541+  812F             #DEFCONT						\ 	.error "Slope value too high, must be less than or equal to 32767."
0542+  812F             #DEFCONT						\ #else
0543+  812F             #DEFCONT						\   #if (slope<-32768)
0544+  812F             #DEFCONT						\       .error "Slope value too low, must be greater than or equal too -32768."
0545+  812F             #DEFCONT						\	#else
0546+  812F             #DEFCONT						\		#if (duration > $FE)
0547+  812F             #DEFCONT						\			.error "Duration must be less than 255."
0548+  812F             #DEFCONT						\		#else
0549+  812F             #DEFCONT						\ 			.dw slope
0550+  812F             #DEFCONT						\		#endif
0551+  812F             #DEFCONT						\ 	#endif
0552+  812F             #DEFCONT						\ #endif
0553+  812F             					
0554+  812F             
0555+  812F             
0556+  812F             ;******************************************************************************
0557+  812F                 .title "RPM Main Routines"
0558+  812F             ;******************************************************************************
0559+  812F                 .sbttl "IRQ Routine"
0560+  812F             ;******************************************************************************
0561+  812F             ;* This is the main timing routine of the RPM module. It takes care of syncing
0562+  812F             ;* all sound effects and communication.
0563+  812F             ;*
0564+  812F             ;* The pokey update function is called every IRQ. The subroutines called from
0565+  812F             ;* it take care of updating the sounds.
0566+  812F             ;*
0567+  812F             ;*  pokmain - Selects specific pokey chip
0568+  812F             ;*  dopokey - gets pokey address and channel offset
0569+  812F             ;*  updpokey - ?
0570+  812F             ;*  ?
0571+  812F             ;*
0572+  812F             ;* I believe this is getting called every 200ns
0573+  812F             ;******************************************************************************
0574+  812F                 
0575+  812F 8D 00 40    g_irq   sta intack
0576+  8132 48                  pha 
0577+  8133 A5 00               lda irqcnt      ;irqcnt always counts from 4-1
0578+  8135 4A                  lsr A
0579+  8136 C6 00               dec irqcnt
0580+  8138                     \ .push  *, 0 \ BPL  * 
0580+  8138             
0580+  8138 10 FE       
0581+  813A             			;***********************************
0582+  813A             			;special code to trigger speech every 3 seconds
0583+  813A             ; #IF DEBUG != 0
0584+  813A             			; inc sirqcnt
0585+  813A             			; ifeq
0586+  813A             				 ; inc lastoki
0587+  813A             				 ; lda lastoki
0588+  813A             				 ; cmp #o_okiptr
0589+  813A             				 ; ifcs
0590+  813A             					; lda #0
0591+  813A             					; sta lastoki
0592+  813A             				 ; endif
0593+  813A             				 ; jsr okicmd
0594+  813A             			; endif
0595+  813A             ; #ENDIF
0596+  813A             			;***********************************
0597+  813A A9 04                   lda #NUMPOKEY
0598+  813C 85 00                   sta irqcnt      ;Reset when becomes -
0599+  813E                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0599+  813E             
0599+  813E             
0599+  813E             
0599+  813E             
0599+  813E             
0599+  813E             
0599+  813E~                    endif
0599+  813E~                    endif
0599+  813E             
0599+  813E~                    endif
0599+  813E~                    endif
0599+  813E             
0599+  8139             
0599+  8139 04          
0599+  813A             
0599+  813A             
0599+  813A~                    endif
0599+  813A~                    endif
0599+  813A~                    endif
0599+  813A             
0599+  813A~                    endif
0599+  813A~                    endif
0599+  813A~                    endif
0599+  813A             
0599+  813E             
0599+  813E~                    endif
0599+  813E~                    endif
0599+  813E             
0600+  813E                     \ .push  *, 0 \ BCC  * 
0600+  813E             
0600+  813E 90 FE       
0601+  8140 8A                      txa 
0602+  8141 48                      pha 
0603+  8142 BA                      tsx 
0604+  8143                         ;lda $0100,X     
0605+  8143 E0 02                   cpx #$02		;if SP is at $01 or aggghh... $00, then we are too close to overflow... reset it
0606+  8145                         \ .push  *, 0 \ BCS  * 
0606+  8145             
0606+  8145 B0 FE       
0607+  8147 A2 FF                       ldx #$FF        ;Reset the stack pointer
0608+  8149 9A                          txs 
0609+  814A 4C 42 80                    jmp c_reset     ;Re-init this processor and throw away stack
0610+  814D                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0610+  814D             
0610+  814D             
0610+  814D             
0610+  814D             
0610+  814D             
0610+  814D             
0610+  814D~                        endif
0610+  814D~                        endif
0610+  814D             
0610+  814D~                        endif
0610+  814D~                        endif
0610+  814D             
0610+  8146             
0610+  8146 06          
0610+  8147             
0610+  8147             
0610+  8147~                        endif
0610+  8147~                        endif
0610+  8147~                        endif
0610+  8147             
0610+  8147~                        endif
0610+  8147~                        endif
0610+  8147~                        endif
0610+  8147             
0610+  814D             
0610+  814D~                        endif
0610+  814D~                        endif
0610+  814D             
0611+  814D 98                      tya 
0612+  814E 48                      pha 
0613+  814F A5 01                   lda framecnt    ;Get the current frame count
0614+  8151 20 63 98                jsr game_irq    ;Do game specific IRQ stuff
0615+  8154 20 5F 81                jsr pokmain     ;Update the Pokeys
0616+  8157 E6 01       			inc framecnt
0617+  8159 68                      pla 
0618+  815A A8                      tay 
0619+  815B 68                      pla 
0620+  815C AA                      tax
0621+  815D                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0621+  815D             
0621+  815D             
0621+  815D             
0621+  815D             
0621+  815D             
0621+  815D             
0621+  815D~                    endif
0621+  815D~                    endif
0621+  815D             
0621+  815D~                    endif
0621+  815D~                    endif
0621+  815D             
0621+  813F             
0621+  813F 1D          
0621+  8140             
0621+  8140             
0621+  8140~                    endif
0621+  8140~                    endif
0621+  8140~                    endif
0621+  8140             
0621+  8140~                    endif
0621+  8140~                    endif
0621+  8140~                    endif
0621+  8140             
0621+  815D             
0621+  815D~                    endif
0621+  815D~                    endif
0621+  815D             
0622+  815D 68                  pla 
0623+  815E 40                  rti
0624+  815F                     
0625+  815F             ;***********************************************
0626+  815F                     .sbttl "Pokey Mainline"
0627+  815F             ;***********************************************
0628+  815F             ;* This is the main routine for the pokey's    
0629+  815F             ;* It takes care of sharing pokey time between 
0630+  815F             ;* the 4 pokeys by updating only 2 at a time.  
0631+  815F             ;*
0632+  815F             ;* If Speech is loaded, it calls the speech 
0633+  815F             ;* update routine too.
0634+  815F             ;***********************************************       
0635+  815F             pokmain 
0636+  815F             
0637+  815F~            #IF ___tlk == 1
0638+  815F~                    jsr updspeech
0639+  815F             #ENDIF
0640+  815F A5 01               lda framecnt
0641+  8161 4A                  lsr A
0642+  8162                     \ .push  *, 0 \ BCC  *                 ;Lets do the even ones now
0642+  8162             
0642+  8162 90 FE       
0643+  8164 A2 00                   ldx #00
0644+  8166 20 A7 88                jsr dopokey
0645+  8169 A2 02                   ldx #02
0646+  816B 20 A7 88                jsr dopokey    
0647+  816E                     \var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif               ;Do the odd pokey's instead
0647+  816E             
0647+  816E             
0647+  816E             
0647+  816E             
0647+  8163             
0647+  8163             
0647+  8163             
0647+  8163~                    else               ;Do the odd pokey's instead
0647+  8163~                    else               ;Do the odd pokey's instead
0647+  8163             
0647+  8163~                    else               ;Do the odd pokey's instead
0647+  8163~                    else               ;Do the odd pokey's instead
0647+  8163             
0647+  8163 0D          
0647+  816E             
0647+  816E             
0647+  816E 4C 6E 81    
0647+  8171             
0647+  8171             
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171             
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171             
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171~                    else               ;Do the odd pokey's instead
0647+  8171             
0648+  8171 A2 01                   ldx #01
0649+  8173 20 A7 88                jsr dopokey
0650+  8176 A2 03                   ldx #03   
0651+  8178 20 A7 88                jsr dopokey
0652+  817B                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0652+  817B             
0652+  817B             
0652+  817B             
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B             
0652+  816F             
0652+  816F 7B 81       
0652+  8171             
0652+  817B             
0652+  817B~                    endif
0652+  817B~                    endif
0652+  817B             
0653+  817B                     
0654+  817B~            #IF ___tlk == 1
0655+  817B~                    jsr updspeech
0656+  817B             #ENDIF  
0657+  817B 60                  rts
0658+  817C             		
0659+  817C             ;************************************************
0660+  817C             ;* Initialize all the RPM sound RAM and prepare *
0661+  817C             ;* for running.                                 *
0662+  817C             ;************************************************
0663+  817C A9 00       initrpm lda #00
0664+  817E 08                  php 
0665+  817F 78                  sei 
0666+  8180 8D 56 05            sta gw_i
0667+  8183 8D 57 05            sta gw_ia
0668+  8186 8D 58 05            sta reportf     ;Clear the report flag (not used in MH)
0669+  8189 A2 1F               ldx #$1F
0670+  818B                     \ .push  *, 2
0670+  818B             
0671+  818B 9D A0 04                sta preg_chanp,X
0672+  818E CA                      dex 
0673+  818F                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0673+  818F             
0673+  818F             
0673+  818F~                    miend
0673+  818F~                    miend
0673+  818F~                    miend
0673+  818F             
0673+  818F 10 FA       
0673+  8191             
0673+  8191~                    miend
0673+  8191~                    miend
0673+  8191             
0674+  8191 A2 0F               ldx #NUM_CHANNELS-1
0675+  8193                     \ .push  *, 2
0675+  8193             
0676+  8193 9D E0 02                sta ch_pri,X
0677+  8196 9D 80 02                sta ch_mys_28,X
0678+  8199 9D 90 02                sta ch_mys_29,X
0679+  819C 9D C0 02                sta ch_vol,X
0680+  819F 9D D0 03                sta ch_ctrlmask,X		;clear all the volumes and poly settings
0681+  81A2 CA                      dex
0682+  81A3                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0682+  81A3             
0682+  81A3             
0682+  81A3~                    miend
0682+  81A3~                    miend
0682+  81A3~                    miend
0682+  81A3             
0682+  81A3 10 EE       
0682+  81A5             
0682+  81A5~                    miend
0682+  81A5~                    miend
0682+  81A5             
0683+  81A5 A2 03               ldx #03             ;Do this for each POKEY in the QUAD
0684+  81A7                     \ .push  *, 2
0684+  81A7             
0685+  81A7 BD DC 8A                lda devadl,X
0686+  81AA 85 0F                   sta devptr
0687+  81AC BD E0 8A                lda devadh,X
0688+  81AF 85 10                   sta devptr+1
0689+  81B1 A9 00                   lda #00
0690+  81B3 A0 20                   ldy #POKEY_AUDCTL
0691+  81B5 91 0F                   sta (devptr,Y)
0692+  81B7 86 11                   stx fasave
0693+  81B9 18                      clc 
0694+  81BA A5 0F                   lda devptr
0695+  81BC 85 12                   sta fasave+1
0696+  81BE A9 27                   lda #$27
0697+  81C0 65 0F                   adc devptr
0698+  81C2 85 0F                   sta devptr
0699+  81C4 A2 00                   ldx #00
0700+  81C6 8A                      txa 
0701+  81C7 81 0F                   sta (devptr,X)
0702+  81C9                         \ .push  *, 2
0702+  81C9             
0703+  81C9 69 01                       adc #01
0704+  81CB C9 03                       cmp #03
0705+  81CD                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
0705+  81CD             
0705+  81CD             
0705+  81CD~                        eqend
0705+  81CD~                        eqend
0705+  81CD~                        eqend
0705+  81CD             
0705+  81CD D0 FA       
0705+  81CF             
0705+  81CF~                        eqend
0705+  81CF~                        eqend
0705+  81CF             
0706+  81CF 81 0F                   sta (devptr,X)
0707+  81D1 A6 11                   ldx fasave
0708+  81D3 A5 12                   lda fasave+1
0709+  81D5 85 0F                   sta devptr
0710+  81D7 A0 20                   ldy #POKEY_AUDCTL
0711+  81D9 A9 00                   lda #00
0712+  81DB 91 0F                   sta (devptr,Y)
0713+  81DD A9 00                   lda #00
0714+  81DF A0 08                   ldy #08             ;This will store a $00 in each control and frequency address
0715+  81E1                         \ .push  *, 2
0715+  81E1             
0716+  81E1 88                          dey 
0717+  81E2 91 0F                       sta (devptr,Y)
0718+  81E4                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
0718+  81E4             
0718+  81E4             
0718+  81E4~                        eqend
0718+  81E4~                        eqend
0718+  81E4~                        eqend
0718+  81E4             
0718+  81E4 D0 FB       
0718+  81E6             
0718+  81E6~                        eqend
0718+  81E6~                        eqend
0718+  81E6             
0719+  81E6 CA                      dex 
0720+  81E7                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0720+  81E7             
0720+  81E7             
0720+  81E7~                    miend
0720+  81E7~                    miend
0720+  81E7~                    miend
0720+  81E7             
0720+  81E7 10 BE       
0720+  81E9             
0720+  81E9~                    miend
0720+  81E9~                    miend
0720+  81E9             
0721+  81E9             		;Special addition... initrpm should also init the max background sound too
0722+  81E9 20 BC 80    		jsr initmaxbuf		;Initialize the Max background sound data into RAM
0723+  81EC 28                  plp 
0724+  81ED 60                  rts 
0725+  81EE                     
0726+  81EE             ;*****************************************************
0727+  81EE             ;* Slave Command Parser - This routine will check to *
0728+  81EE             ;* be sure that our command is valid. It will then   *
0729+  81EE             ;* pull that commands controlling routine out of the *
0730+  81EE             ;* tables and also load the local parameter for that *
0731+  81EE             ;* command and pass it to the routine via the A reg. *
0732+  81EE             ;*****************************************************
0733+  81EE C0 9F       scomm   cpy #o_commandnum           ;Is it above our max command value?
0734+  81F0                     \ .push  *, 0 \ BCS  *             
0734+  81F0             
0734+  81F0 B0 FE       
0735+  81F2 B9 79 8B                lda t_commandtype,Y
0736+  81F5 C9 0A                   cmp #(rt_immed+1)           ;Is it above the valid command type?
0737+  81F7                         \ .push  *, 0 \ BCS  *     
0737+  81F7             
0737+  81F7 B0 FE       
0738+  81F9 0A                          asl A               ;X2
0739+  81FA AA                          tax 
0740+  81FB BD 08 84                    lda functbl+1,X         ;Get the address of the function routine
0741+  81FE 48                          pha 
0742+  81FF BD 07 84                    lda functbl,X
0743+  8202 48                          pha 
0744+  8203 B9 26 8C                    lda t_commandparam,Y        ;Send the Name as well for reference
0745+  8206                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0745+  8206             
0745+  8206             
0745+  8206             
0745+  8206             
0745+  8206             
0745+  8206             
0745+  8206~                        endif
0745+  8206~                        endif
0745+  8206             
0745+  8206~                        endif
0745+  8206~                        endif
0745+  8206             
0745+  81F8             
0745+  81F8 0D          
0745+  81F9             
0745+  81F9             
0745+  81F9~                        endif
0745+  81F9~                        endif
0745+  81F9~                        endif
0745+  81F9             
0745+  81F9~                        endif
0745+  81F9~                        endif
0745+  81F9~                        endif
0745+  81F9             
0745+  8206             
0745+  8206~                        endif
0745+  8206~                        endif
0745+  8206             
0746+  8206                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0746+  8206             
0746+  8206             
0746+  8206             
0746+  8206             
0746+  8206             
0746+  8206             
0746+  8206~                    endif
0746+  8206~                    endif
0746+  8206             
0746+  8206~                    endif
0746+  8206~                    endif
0746+  8206             
0746+  81F1             
0746+  81F1 14          
0746+  81F2             
0746+  81F2             
0746+  81F2~                    endif
0746+  81F2~                    endif
0746+  81F2~                    endif
0746+  81F2             
0746+  81F2~                    endif
0746+  81F2~                    endif
0746+  81F2~                    endif
0746+  81F2             
0746+  8206             
0746+  8206~                    endif
0746+  8206~                    endif
0746+  8206             
0747+  8206 60                  rts             ;Done
0748+  8207             
0749+  8207             ;****************************************************
0750+  8207                 .sbttl "ATTRACT/SILENT Level"
0751+  8207             ;****************************************************
0752+  8207             ;* This routine sets the priority level at which    
0753+  8207             ;* sounds will be heard.                            
0754+  8207             ;*                                                  
0755+  8207             ;* Accumulator Value            Result          
0756+  8207             ;*    00                        All Sounds(Noisy)     
0757+  8207             ;*    FF                        No Sounds (Silent)    
0758+  8207             ;*    XX                        Priority Cutoff       
0759+  8207             ;****************************************************
0760+  8207 85 13       setslvl sta silevel
0761+  8209 60                  rts 
0762+  820A                     
0763+  820A             ;****************************************************
0764+  820A                 .sbttl "Set/Reset E-Flag"
0765+  820A             ;****************************************************
0766+  820A 48          sceflg  pha 
0767+  820B 29 07               and #07
0768+  820D A8                  tay 
0769+  820E 68                  pla 
0770+  820F 29 80               and #$80
0771+  8211 99 02 00            sta eflg0,Y
0772+  8214 60                  rts 
0773+  8215                     
0774+  8215             ;*************************************************
0775+  8215             ;* Call a routine by name                        *
0776+  8215             ;*************************************************
0777+  8215 0A          callf   asl A           ;Directly call a CPU subroutine.
0778+  8216 A8                  tay 
0779+  8217 B9 76 8B            lda t_userfunction+1,Y
0780+  821A 48                  pha 
0781+  821B B9 75 8B            lda t_userfunction,Y
0782+  821E 48                  pha 
0783+  821F 60                  rts             ;Do it!
0784+  8220             
0785+  8220             ;*************************************************
0786+  8220             ;* Kill a sound by priority level                *
0787+  8220             ;*************************************************          
0788+  8220 08          killp   php 
0789+  8221 78                  sei 
0790+  8222 85 11               sta fasave
0791+  8224 A0 0F               ldy #NUM_CHANNELS-1
0792+  8226                     \ .push  *, 2
0792+  8226             
0793+  8226 B9 E0 02                lda ch_pri,Y
0794+  8229 4A                      lsr A
0795+  822A 45 11                   eor fasave
0796+  822C                         \ .push  *, 0 \ BNE  * 		
0796+  822C             
0796+  822C D0 FE       
0797+  822E A9 FF                       lda #-1
0798+  8230 99 00 02                    sta ch_sid,Y        ;Kill this Channel
0799+  8233                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0799+  8233             
0799+  8233             
0799+  8233             
0799+  8233             
0799+  8233             
0799+  8233             
0799+  8233~                        endif
0799+  8233~                        endif
0799+  8233             
0799+  8233~                        endif
0799+  8233~                        endif
0799+  8233             
0799+  822D             
0799+  822D 05          
0799+  822E             
0799+  822E             
0799+  822E~                        endif
0799+  822E~                        endif
0799+  822E~                        endif
0799+  822E             
0799+  822E~                        endif
0799+  822E~                        endif
0799+  822E~                        endif
0799+  822E             
0799+  8233             
0799+  8233~                        endif
0799+  8233~                        endif
0799+  8233             
0800+  8233 88                      dey
0801+  8234                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0801+  8234             
0801+  8234             
0801+  8234~                    miend
0801+  8234~                    miend
0801+  8234~                    miend
0801+  8234             
0801+  8234 10 F0       
0801+  8236             
0801+  8236~                    miend
0801+  8236~                    miend
0801+  8236             
0802+  8236 28                  plp 
0803+  8237 60                  rts
0804+  8238                     
0805+  8238             ;*************************************************
0806+  8238             ;* Kill a sound by ID which is in A
0807+  8238             ;*************************************************
0808+  8238 08          killid  php 
0809+  8239 78                  sei 
0810+  823A A8                  tay 
0811+  823B B9 79 8B            lda t_commandtype,Y     ;Get sound function type (00-10 or FF for ignore)
0812+  823E C9 06               cmp #(rt_sound)         ;Is this a sound function??
0813+  8240                     \ .push  *, 0 \ BNE  * 		                    ;yep!
0813+  8240             
0813+  8240 D0 FE       
0814+  8242 B9 26 8C                lda t_commandparam,Y        ;Get the ID of the sound number to kill
0815+  8245 85 11                   sta fasave
0816+  8247 A0 0F                   ldy #NUM_CHANNELS-1
0817+  8249                         \ .push  *, 2
0817+  8249             
0818+  8249 D9 00 02                    cmp ch_sid,Y        ;Does this Sound ID match?
0819+  824C                             \ .push  *, 0 \ BNE  * 		                ;yes
0819+  824C             
0819+  824C D0 FE       
0820+  824E A9 FF                           lda #-1     
0821+  8250 99 00 02                        sta ch_sid,Y        ;Kill it!
0822+  8253 A5 11                           lda fasave
0823+  8255                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0823+  8255             
0823+  8255             
0823+  8255             
0823+  8255             
0823+  8255             
0823+  8255             
0823+  8255~                            endif
0823+  8255~                            endif
0823+  8255             
0823+  8255~                            endif
0823+  8255~                            endif
0823+  8255             
0823+  824D             
0823+  824D 07          
0823+  824E             
0823+  824E             
0823+  824E~                            endif
0823+  824E~                            endif
0823+  824E~                            endif
0823+  824E             
0823+  824E~                            endif
0823+  824E~                            endif
0823+  824E~                            endif
0823+  824E             
0823+  8255             
0823+  8255~                            endif
0823+  8255~                            endif
0823+  8255             
0824+  8255 88                          dey
0825+  8256                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0825+  8256             
0825+  8256             
0825+  8256~                        miend
0825+  8256~                        miend
0825+  8256~                        miend
0825+  8256             
0825+  8256 10 F1       
0825+  8258             
0825+  8258~                        miend
0825+  8258~                        miend
0825+  8258             
0826+  8258 28                      plp
0827+  8259                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0827+  8259             
0827+  8259             
0827+  8259             
0827+  8259             
0827+  8259             
0827+  8259             
0827+  8259~                    endif
0827+  8259~                    endif
0827+  8259             
0827+  8259~                    endif
0827+  8259~                    endif
0827+  8259             
0827+  8241             
0827+  8241 17          
0827+  8242             
0827+  8242             
0827+  8242~                    endif
0827+  8242~                    endif
0827+  8242~                    endif
0827+  8242             
0827+  8242~                    endif
0827+  8242~                    endif
0827+  8242~                    endif
0827+  8242             
0827+  8259             
0827+  8259~                    endif
0827+  8259~                    endif
0827+  8259             
0828+  8259 60                  rts
0829+  825A             
0830+  825A             ;*************************************************
0831+  825A             ;* Kill a particular sound by device and channel *
0832+  825A             ;*************************************************  
0833+  825A 85 11       killch  sta fasave     ;A contains two nibbles of info
0834+  825C 4A                  lsr A           ;MSN = Device Number  (0-3)
0835+  825D 4A                  lsr A           ;LSN = Channel Number (0-3)
0836+  825E 4A                  lsr A
0837+  825F 4A                  lsr A
0838+  8260 A8                  tay             ;Y = Device
0839+  8261 A5 11               lda fasave
0840+  8263 29 0F               and #$0F
0841+  8265 18                  clc 
0842+  8266 79 E8 8A            adc choffl,Y    ;Channel Offset 
0843+  8269 A8                  tay 
0844+  826A 08                  php 
0845+  826B 78                  sei 
0846+  826C B9 A0 04            lda preg_chanp,Y
0847+  826F                     \ .push  *, 0 \ BEQ  * 
0847+  826F             
0847+  826F F0 FE       
0848+  8271                         \ .push  *, 2   
0848+  8271             
0849+  8271 A8                          tay
0850+  8272 88                          dey 
0851+  8273 A9 FF                       lda #-1
0852+  8275 99 00 02                    sta ch_sid,Y        ;Kill this one!
0853+  8278 B9 A0 04                    lda preg_chanp,Y
0854+  827B                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
0854+  827B             
0854+  827B             
0854+  827B~                        eqend
0854+  827B~                        eqend
0854+  827B~                        eqend
0854+  827B             
0854+  827B D0 F4       
0854+  827D             
0854+  827D~                        eqend
0854+  827D~                        eqend
0854+  827D             
0855+  827D                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0855+  827D             
0855+  827D             
0855+  827D             
0855+  827D             
0855+  827D             
0855+  827D             
0855+  827D~                    endif
0855+  827D~                    endif
0855+  827D             
0855+  827D~                    endif
0855+  827D~                    endif
0855+  827D             
0855+  8270             
0855+  8270 0C          
0855+  8271             
0855+  8271             
0855+  8271~                    endif
0855+  8271~                    endif
0855+  8271~                    endif
0855+  8271             
0855+  8271~                    endif
0855+  8271~                    endif
0855+  8271~                    endif
0855+  8271             
0855+  827D             
0855+  827D~                    endif
0855+  827D~                    endif
0855+  827D             
0856+  827D 28                  plp 
0857+  827E 60                  rts
0858+  827F                         
0859+  827F             ;*******************************************************
0860+  827F             ;* Report: Sends a preset bytes back to the Alpha      *
0861+  827F             ;*         processor. This macro is not used in MH.    *
0862+  827F             ;*******************************************************
0863+  827F AC 57 05    repbyte ldy gw_ia
0864+  8282 99 D6 04            sta gw_queue,Y
0865+  8285 C8                  iny 
0866+  8286 C0 80               cpy #$80
0867+  8288                     \ .push  *, 0 \ BCC  * 
0867+  8288             
0867+  8288 90 FE       
0868+  828A A0 00                   ldy #00
0869+  828C                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0869+  828C             
0869+  828C             
0869+  828C             
0869+  828C             
0869+  828C             
0869+  828C             
0869+  828C~                    endif
0869+  828C~                    endif
0869+  828C             
0869+  828C~                    endif
0869+  828C~                    endif
0869+  828C             
0869+  8289             
0869+  8289 02          
0869+  828A             
0869+  828A             
0869+  828A~                    endif
0869+  828A~                    endif
0869+  828A~                    endif
0869+  828A             
0869+  828A~                    endif
0869+  828A~                    endif
0869+  828A~                    endif
0869+  828A             
0869+  828C             
0869+  828C~                    endif
0869+  828C~                    endif
0869+  828C             
0870+  828C CC 56 05            cpy gw_i
0871+  828F                     \ .push  *, 0 \ BEQ  * 
0871+  828F             
0871+  828F F0 FE       
0872+  8291 8C 57 05                sty gw_ia
0873+  8294 60                      rts
0874+  8295                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif   
0874+  8295             
0874+  8295             
0874+  8295             
0874+  8295             
0874+  8295             
0874+  8295             
0874+  8295~                    endif   
0874+  8295~                    endif   
0874+  8295             
0874+  8295~                    endif   
0874+  8295~                    endif   
0874+  8295             
0874+  8290             
0874+  8290 04          
0874+  8291             
0874+  8291             
0874+  8291~                    endif   
0874+  8291~                    endif   
0874+  8291~                    endif   
0874+  8291             
0874+  8291~                    endif   
0874+  8291~                    endif   
0874+  8291~                    endif   
0874+  8291             
0874+  8295             
0874+  8295~                    endif   
0874+  8295~                    endif   
0874+  8295             
0875+  8295 A9 80               lda #$80
0876+  8297 8D 58 05            sta reportf     ;Set the report flag (not used in MH)
0877+  829A 60                  rts 
0878+  829B                 
0879+  829B             ;********************************************************
0880+  829B             ;* Immed: Command Immediate Response to a function code 
0881+  829B             ;*                                                    
0882+  829B             ;********************************************************   
0883+  829B A8          immexe  tay 
0884+  829C B9 26 8C            lda t_commandparam,Y    ;Get the ID of the sound
0885+  829F AA                  tax             
0886+  82A0 BD A3 8F            lda t_immfunc,X     ;Get the function number
0887+  82A3 C9 1C               cmp #$1C            ;Is it higher than allowed
0888+  82A5 B0 40               bcs ?ret            ;yep, ignore it!
0889+  82A7 C9 08               cmp #08
0890+  82A9                     \ .push  *, 0 \ BCC  * 
0890+  82A9             
0890+  82A9 90 FE       
0891+  82AB C9 0A                   cmp #$0A
0892+  82AD 90 38                   bcc ?ret
0893+  82AF C9 0D                   cmp #$0D
0894+  82B1                         \ .push  *, 0 \ BCC  * 
0894+  82B1             
0894+  82B1 90 FE       
0895+  82B3 C9 12                       cmp #$12
0896+  82B5 90 30                       bcc ?ret
0897+  82B7 C9 16                       cmp #$16
0898+  82B9                             \ .push  *, 0 \ BCC  * 
0898+  82B9             
0898+  82B9 90 FE       
0899+  82BB C9 19                           cmp #$19
0900+  82BD 90 28                           bcc ?ret
0901+  82BF                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0901+  82BF             
0901+  82BF             
0901+  82BF             
0901+  82BF             
0901+  82BF             
0901+  82BF             
0901+  82BF~                            endif
0901+  82BF~                            endif
0901+  82BF             
0901+  82BF~                            endif
0901+  82BF~                            endif
0901+  82BF             
0901+  82BA             
0901+  82BA 04          
0901+  82BB             
0901+  82BB             
0901+  82BB~                            endif
0901+  82BB~                            endif
0901+  82BB~                            endif
0901+  82BB             
0901+  82BB~                            endif
0901+  82BB~                            endif
0901+  82BB~                            endif
0901+  82BB             
0901+  82BF             
0901+  82BF~                            endif
0901+  82BF~                            endif
0901+  82BF             
0902+  82BF                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0902+  82BF             
0902+  82BF             
0902+  82BF             
0902+  82BF             
0902+  82BF             
0902+  82BF             
0902+  82BF~                        endif
0902+  82BF~                        endif
0902+  82BF             
0902+  82BF~                        endif
0902+  82BF~                        endif
0902+  82BF             
0902+  82B2             
0902+  82B2 0C          
0902+  82B3             
0902+  82B3             
0902+  82B3~                        endif
0902+  82B3~                        endif
0902+  82B3~                        endif
0902+  82B3             
0902+  82B3~                        endif
0902+  82B3~                        endif
0902+  82B3~                        endif
0902+  82B3             
0902+  82BF             
0902+  82BF~                        endif
0902+  82BF~                        endif
0902+  82BF             
0903+  82BF                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82BF             
0903+  82BF             
0903+  82BF             
0903+  82BF             
0903+  82BF             
0903+  82BF             
0903+  82BF~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82BF~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82BF             
0903+  82BF~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82BF~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82BF             
0903+  82AA             
0903+  82AA 14          
0903+  82AB             
0903+  82AB             
0903+  82AB~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82AB~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82AB~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82AB             
0903+  82AB~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82AB~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82AB~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82AB             
0903+  82BF             
0903+  82BF~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82BF~                    endif               ;Here for functions 00,01,02,03,04,05,06,07,0A,0B,0C,12,13,14,15,19,1A,1C
0903+  82BF             
0904+  82BF 0A                  asl A           ; x2
0905+  82C0 A8                  tay             ;Y = offset into functbl
0906+  82C1 BD D3 8F            lda t_immchn,X
0907+  82C4 18                  clc 
0908+  82C5 69 10               adc #$10
0909+  82C7 48                  pha 
0910+  82C8 BD B3 8F            lda t_immarg,X
0911+  82CB 8D E1 05            sta iarg            ;Save it in the Argument holder for later
0912+  82CE BD C3 8F            lda t_immsid,X
0913+  82D1 29 7F       		and #$7F
0914+  82D3 AA                  tax 
0915+  82D4 BD 79 8B            lda t_commandtype,X
0916+  82D7 C9 06               cmp #rt_sound       ;Was this a sound command?
0917+  82D9                     \ .push  *, 0 \ BNE  * 		                ;yes
0917+  82D9             
0917+  82D9 D0 FE       
0918+  82DB BD 26 8C                lda t_commandparam,X        ;Store the ID of this sound
0919+  82DE 8D E0 05                sta imm_id      
0920+  82E1 68                      pla 
0921+  82E2 AA                      tax 
0922+  82E3 4C D9 88                jmp ssimm
0923+  82E6                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0923+  82E6             
0923+  82E6             
0923+  82E6             
0923+  82E6             
0923+  82E6             
0923+  82E6             
0923+  82E6~                    endif
0923+  82E6~                    endif
0923+  82E6             
0923+  82E6~                    endif
0923+  82E6~                    endif
0923+  82E6             
0923+  82DA             
0923+  82DA 0B          
0923+  82DB             
0923+  82DB             
0923+  82DB~                    endif
0923+  82DB~                    endif
0923+  82DB~                    endif
0923+  82DB             
0923+  82DB~                    endif
0923+  82DB~                    endif
0923+  82DB~                    endif
0923+  82DB             
0923+  82E6             
0923+  82E6~                    endif
0923+  82E6~                    endif
0923+  82E6             
0924+  82E6 68                  pla 
0925+  82E7 60          ?ret    rts
0926+  82E8             
0927+  82E8             ;*****************************************************************
0928+  82E8             ;* Start Sound: This is the main routine used to start playing a *
0929+  82E8             ;*              sound using RPM. It uses the lookup tables based *
0930+  82E8             ;*              on the sound ID initally put in A to fill the    *
0931+  82E8             ;*              correct pokey registers and start playing a snd. *
0932+  82E8             ;*****************************************************************
0933+  82E8 85 0A       strtsnd sta cur_snd     			;Currend Sound ID# here
0934+  82EA A8                  tay 
0935+  82EB BE D3 8C            ldx t_tunestarts,Y          ;Load the start offset into the tunetablele
0936+  82EE                     ; lda t_replacement,Y         ;This happens to always be 0xff in TW = Always Replace
0937+  82EE                     ; ifeq
0938+  82EE                         ; lda cur_snd 
0939+  82EE                         ; ldy #NUM_CHANNELS-1
0940+  82EE                         ; begin
0941+  82EE                             ; cmp ch_sid,Y        ;See if this sound is playing
0942+  82EE                             ; ifeq                ;yes
0943+  82EE                                 ; lda ch_pri,Y        ;Still Playing?
0944+  82EE                                 ; ifne
0945+  82EE                                     ; rts         		;Yes, get outta here!
0946+  82EE                                 ; endif
0947+  82EE                                 ; lda cur_snd     	;Next data for loop
0948+  82EE                             ; endif
0949+  82EE                             ; dey         ;Loop it!
0950+  82EE                         ; miend   
0951+  82EE                     ; endif
0952+  82EE                     \ .push  *, 2
0952+  82EE             
0953+  82EE 8E 59 05                stx sindex              ;Store away our start sindex for later
0954+  82F1 A0 0F                   ldy #NUM_CHANNELS-1
0955+  82F3                         \ .push  *, 2
0955+  82F3             
0956+  82F3 B9 E0 02                    lda ch_pri,Y
0957+  82F6 F0 2D                       beq openchan            ;Found an empty Channel!
0958+  82F8 88                          dey
0959+  82F9                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0959+  82F9             
0959+  82F9             
0959+  82F9~                        miend
0959+  82F9~                        miend
0959+  82F9~                        miend
0959+  82F9             
0959+  82F9 10 F8       
0959+  82FB             
0959+  82FB~                        miend
0959+  82FB~                        miend
0959+  82FB             
0960+  82FB                         ;If here, there were no empty channels
0961+  82FB                         ;Look at the channel to see if it has a lower priority
0962+  82FB BC 63 8D                ldy t_priority,X
0963+  82FE BD F3 8D                lda t_schan,X
0964+  8301 18                      clc 
0965+  8302 69 10                   adc #$10                ;Channel + $10
0966+  8304 AA                      tax 
0967+  8305 98                      tya 
0968+  8306 08                      php 
0969+  8307 78                      sei 
0970+  8308 BC B0 04                ldy ch_pchan-$10,X         ;X = Channel + $10
0971+  830B                         \ .push  *, 0 \ BEQ  * 
0971+  830B             
0971+  830B F0 FE       
0972+  830D 88                          dey 
0973+  830E 38                          sec                 ; * 2 + 1
0974+  830F 2A                          rol A
0975+  8310 D9 E0 02                    cmp ch_pri,Y
0976+  8313                         \var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 1==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ BCS $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif
0976+  8313             
0976+  8313             
0976+  8313             
0976+  8313             
0976+  830C             
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C~                        else_cs
0976+  830C             
0976+  830C 08          
0976+  8313             
0976+  8313             
0976+  8313 B0 FE       
0976+  8315             
0976+  8315~                        else_cs
0976+  8315~                        else_cs
0976+  8315             
0976+  8315~                        else_cs
0976+  8315~                        else_cs
0976+  8315             
0977+  8315 28                          plp 				;new sounds is not higher priority, just leave now
0978+  8316 38                          sec 
0979+  8317 60                          rts
0980+  8318                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif   
0980+  8318             
0980+  8318             
0980+  8318             
0980+  8318             
0980+  8318             
0980+  8318             
0980+  8318~                        endif   
0980+  8318~                        endif   
0980+  8318             
0980+  8318~                        endif   
0980+  8318~                        endif   
0980+  8318             
0980+  8314             
0980+  8314 03          
0980+  8315             
0980+  8315             
0980+  8315~                        endif   
0980+  8315~                        endif   
0980+  8315~                        endif   
0980+  8315             
0980+  8315~                        endif   
0980+  8315~                        endif   
0980+  8315~                        endif   
0980+  8315             
0980+  8318             
0980+  8318~                        endif   
0980+  8318~                        endif   
0980+  8318             
0981+  8318 AE 59 05                ldx sindex          	;Get Back sindex Index
0982+  831B B9 A0 04                lda preg_chanp,Y
0983+  831E 9D B0 04                sta ch_mys_4b,X
0984+  8321 28                      plp 
0985+  8322 AE 59 05                ldx sindex          	;Get Back start sindex Index
0986+  8325                         ;Found an open Channel @ Y
0987+  8325                         ;Initialize starting values
0988+  8325 A9 07       openchan    lda #DEFAULT_VOLUME 	;Default Volume Level
0989+  8327 99 C0 02                sta ch_vol,Y
0990+  832A A9 40                   lda #RATE_DEFAULT
0991+  832C 99 90 03                sta ch_rate,Y
0992+  832F A9 A0                   lda #CHCTL_NOPOLY		;Poly = PURE TONE (default), Zero volume
0993+  8331 99 D0 03                sta ch_ctrlmask,Y
0994+  8334 A9 FF                   lda #$FF
0995+  8336 99 80 04                sta ch_mys_48,Y
0996+  8339 A9 00                   lda #00
0997+  833B 99 90 04                sta ch_mys_49,Y
0998+  833E 99 A0 04                sta preg_chanp,Y
0999+  8341 99 A0 03                sta ch_key,Y
1000+  8344 99 D0 02                sta ch_localpc,Y
1001+  8347 99 A0 02                sta ch_ratedif_l,Y
1002+  834A 99 B0 02                sta ch_ratedif_h,Y
1003+  834D 99 E0 03                sta ch_synthmode,Y
1004+  8350 99 70 04                sta ch_loopcount,Y
1005+  8353 99 F0 03                sta ch_synthfadj,Y
1006+  8356 99 00 04                sta ch_synthfadj+___CHNS,Y
1007+  8359 99 20 04                sta ch_jmppc+___CHNS,Y
1008+  835C 99 C0 03                sta ch_mys_3c,Y
1009+  835F 99 B0 03                sta ch_mys_3b,Y
1010+  8362 99 30 03                sta ch_freqdidx,Y
1011+  8365 99 80 03                sta ch_freq_lcnt,Y
1012+  8368 99 F0 02                sta ch_ctrldidx,Y
1013+  836B 99 20 03                sta ch_ctrl_lcnt,Y
1014+  836E A9 7E                   lda # (nullenvelope&$ff)
1015+  8370 99 40 02                sta ch_ctrl_l,Y
1016+  8373 99 60 02                sta ch_freq,Y
1017+  8376 A9 95                   lda # ((nullenvelope&$ff00)/$100) 
1018+  8378 99 50 02                sta ch_ctrl_h,Y
1019+  837B 99 70 02                sta ch_freq+___CHNS,Y
1020+  837E             			
1021+  837E BD 63 8D                lda t_priority,X        ;Get our new priority
1022+  8381 38                      sec 
1023+  8382 2A                      rol A                   ; * 2 + 1
1024+  8383 99 E0 02                sta ch_pri,Y            ;Store it 
1025+  8386 BD F3 8D                lda t_schan,X           ;Get the channel requested
1026+  8389 18                      clc 
1027+  838A 69 10                   adc #$10                ; + 0x10
1028+  838C 8D C0 04                sta ch_pchan            ;Store it too
1029+  838F BD 83 8E                lda t_stune,X           ;Get this sounds tune data offset
1030+  8392 AA                      tax 
1031+  8393 BD 90 90    			lda t_tune_l,X
1032+  8396 99 20 02    			sta ch_tuneptr,Y
1033+  8399 BD 20 91    			lda t_tune_h,X
1034+  839C 99 30 02    			sta ch_tuneptr+___CHNS,Y
1035+  839F AE 59 05                ldx sindex
1036+  83A2                         ; lda t_eflag,X       ;See if this sound needs to clear an Event Flag
1037+  83A2                         ; ifpl
1038+  83A2                             ; sta ch_eflg,Y       ;Save in this channels data, owns this flag
1039+  83A2                             ; tax 
1040+  83A2                             ; lda #00
1041+  83A2                             ; sta eflg0,X     ;Clear the Flag
1042+  83A2                         ; endif
1043+  83A2 AE C0 04                ldx ch_pchan
1044+  83A5 08                      php 
1045+  83A6 78                      sei 
1046+  83A7 8E C0 04    ?ssl45      stx ch_pchan
1047+  83AA BD A0 04                lda preg_chanp,X		;Is something already playing here?
1048+  83AD                         \ .push  *, 0 \ BEQ  * 
1048+  83AD             
1048+  83AD F0 FE       
1049+  83AF AA                          tax 				;rebias to sound channel index
1050+  83B0 CA                          dex 
1051+  83B1 BD E0 02                    lda ch_pri,X
1052+  83B4 09 01                       ora #01				;+1 for comparison
1053+  83B6 D9 E0 02                    cmp ch_pri,Y
1054+  83B9 90 EC                       bcc ?ssl45			;Nope, check next slot
1055+  83BB                             \ .push  *, 0 \ BEQ  * 
1055+  83BB             
1055+  83BB F0 FE       
1056+  83BD E8                              inx 
1057+  83BE 8A                              txa 
1058+  83BF B0 08                           bcs ?ssl55
1059+  83C1                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1059+  83C1             
1059+  83C1             
1059+  83C1             
1059+  83C1             
1059+  83C1             
1059+  83C1             
1059+  83C1~                            endif
1059+  83C1~                            endif
1059+  83C1             
1059+  83C1~                            endif
1059+  83C1~                            endif
1059+  83C1             
1059+  83BC             
1059+  83BC 04          
1059+  83BD             
1059+  83BD             
1059+  83BD~                            endif
1059+  83BD~                            endif
1059+  83BD~                            endif
1059+  83BD             
1059+  83BD~                            endif
1059+  83BD~                            endif
1059+  83BD~                            endif
1059+  83BD             
1059+  83C1             
1059+  83C1~                            endif
1059+  83C1~                            endif
1059+  83C1             
1060+  83C1 A9 00                       lda #00
1061+  83C3 9D E0 02                    sta ch_pri,X
1062+  83C6 BD A0 04                    lda preg_chanp,X
1063+  83C9 99 A0 04    ?ssl55          sta preg_chanp,Y		;Make it so
1064+  83CC AE C0 04                    ldx ch_pchan
1065+  83CF                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1065+  83CF             
1065+  83CF             
1065+  83CF             
1065+  83CF             
1065+  83CF             
1065+  83CF             
1065+  83CF~                        endif
1065+  83CF~                        endif
1065+  83CF             
1065+  83CF~                        endif
1065+  83CF~                        endif
1065+  83CF             
1065+  83AE             
1065+  83AE 20          
1065+  83AF             
1065+  83AF             
1065+  83AF~                        endif
1065+  83AF~                        endif
1065+  83AF~                        endif
1065+  83AF             
1065+  83AF~                        endif
1065+  83AF~                        endif
1065+  83AF~                        endif
1065+  83AF             
1065+  83CF             
1065+  83CF~                        endif
1065+  83CF~                        endif
1065+  83CF             
1066+  83CF A5 0A                   lda cur_snd     	;Get Sound ID back
1067+  83D1 99 00 02                sta ch_sid,Y        ;Store it in the Channel Defines
1068+  83D4 C8                      iny 
1069+  83D5 98                      tya 
1070+  83D6 9D A0 04                sta preg_chanp,X		;Offically book it now! This is POKEY register indexed ($00-01F)
1071+  83D9 28                      plp 
1072+  83DA AC 59 05                ldy sindex
1073+  83DD BE 13 8F                ldx t_tunecont,Y    ;Does this sound continue into another?
1074+  83E0                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
1074+  83E0             
1074+  83E0             
1074+  83E0             
1074+  83E0 F0 03       
1074+  83E2 4C EE 82    
1074+  83E5~                    eqend
1074+  83E5~                    eqend
1074+  83E5             
1074+  83E5~                    eqend
1074+  83E5~                    eqend
1074+  83E5             
1075+  83E5 60                  rts
1076+  83E6             
1077+  83E6             #IF ___oki == 1
1078+  83E6             
1079+  83E6             okicmd	;Command index is in A
1080+  83E6 08          		php
1081+  83E7 78          		sei
1082+  83E8             		;***************************
1083+  83E8             		; For Scott Swazey's FPGA
1084+  83E8             		; implementation
1085+  83E8             		;***************************
1086+  83E8 8D FF 07    		sta fpgaspeech
1087+  83EB             		;***************************
1088+  83EB 48          		pha
1089+  83EC A8          		tay                     ; Y contains our actual OKI index now I think
1090+  83ED B9 80 94    		lda t_okicmd,Y        	; Load the OKI Sound Command here
1091+  83F0 20 FD 83    		jsr	okiwrite
1092+  83F3             		;restore y for bitflip
1093+  83F3 68          		pla
1094+  83F4 A8          		tay
1095+  83F5 B9 FF 94    		lda t_okiattch,Y      	; Load the OKI Attenuation data nibble
1096+  83F8             		;ora t_okichan,Y       	; Load the OKI Channel #
1097+  83F8 20 FD 83    		jsr	okiwrite      		; Send it to the OKI
1098+  83FB 28          		plp
1099+  83FC 60          		rts
1100+  83FD             
1101+  83FD             ; ;does the /ws dance to latch in a command
1102+  83FD             ; also flips bits due to D0 being connected to D7 etc
1103+  83FD             okiwrite	
1104+  83FD             		;jsr bitflip
1105+  83FD 8D 00 58    		sta tidata	
1106+  8400 8D 00 59    		sta tiwrite
1107+  8403             		;ldx #2
1108+  8403             		;begin
1109+  8403             		;	dex
1110+  8403             		;miend
1111+  8403 8D 00 58    		sta tidata
1112+  8406 60          		rts 
1113+  8407             
1114+  8407             ;Swaps bits making D0 = D7 and D7 = D0 plus all bits inbetween		
1115+  8407             ; bitflip pha
1116+  8407             		; and #$0F
1117+  8407             		; tax
1118+  8407             		; pla
1119+  8407             		; lsr A
1120+  8407             		; lsr A
1121+  8407             		; lsr A
1122+  8407             		; lsr A
1123+  8407             		; tay
1124+  8407             		; lda _bf1,x
1125+  8407             		; ora _bf2,y
1126+  8407             		; rts
1127+  8407             
1128+  8407             ; _bf1 	.db $00,$80,$40,$C0,$20,$A0,$60,$E0,$10,$90,$50,$D0,$30,$B0,$70,$F0
1129+  8407             ; _bf2 	.db $00,$08,$04,$0C,$02,$0A,$06,$0E,$01,$09,$05,$0D,$03,$0B,$07,$0F
1130+  8407             
1131+  8407             #ENDIF
1132+  8407             
1133+  8407             
1134+  8407             
1135+  8407             
1136+  8407~            #IF ___tlk == 1
1137+  8407~            
1138+  8407~            talkit  ldy ti_stat
1139+  8407~                    ifeq
1139+  8407~                    ifeq
1139+  8407~                    ifeq
1140+  8407~            			;we are TISTAT_IDLE, do it
1141+  8407~            talkit2 	php
1142+  8407~            			sei
1143+  8407~            			;***************************
1144+  8407~            			; For Scott Swazey's FPGA
1145+  8407~            			; implementation
1146+  8407~            			;***************************
1147+  8407~            			sta fpgaspeech
1148+  8407~            			;***************************
1149+  8407~            			asl A
1150+  8407~            			tay 
1151+  8407~            			lda t_spdptr,Y
1152+  8407~            			sta ti_addr
1153+  8407~            			lda t_spdptr+1,Y
1154+  8407~            			sta ti_addr+1
1155+  8407~            			lda t_spdlen,Y 
1156+  8407~            			sta ti_len
1157+  8407~            			lda t_spdlen+1,Y 
1158+  8407~            			sta ti_len+1
1159+  8407~            			lda #$80
1160+  8407~            			sta ti_stat
1161+  8407~            			plp
1162+  8407~            			rts
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1163+  8407~            		endif
1164+  8407~            		;This seems to advance the current talk queue and save A into 
1165+  8407~            		php     
1166+  8407~                    sei     
1167+  8407~                    ldy tiquelst
1168+  8407~                    iny     
1169+  8407~                    cpy #ticmdbflen
1170+  8407~                    ifcs
1170+  8407~                    ifcs
1170+  8407~                    ifcs
1171+  8407~                        ldy #00
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1172+  8407~                    endif
1173+  8407~                    cpy tiquecur
1174+  8407~                    ifne
1174+  8407~                    ifne
1174+  8407~                    ifne
1175+  8407~                        sty tiquelst
1176+  8407~                        sta tiqueue,y
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1177+  8407~                    endif
1178+  8407~                    plp     
1179+  8407~                    rts     
1180+  8407~            		
1181+  8407~            ;***********************************************
1182+  8407~            ;* Reset Speech: Resets all speech params to   *
1183+  8407~            ;*               initial state.                *
1184+  8407~            ;***********************************************
1185+  8407~            
1186+  8407~            res_ti  php
1187+  8407~                    sei
1188+  8407~                    ldy #00        
1189+  8407~                    sty tiquecur                ;Clear the buffer pointer offsets
1190+  8407~                    sty tiquelst 
1191+  8407~            		;**********************************************************
1192+  8407~            		; Doesn't do anything in mhavoc
1193+  8407~            		;**********************************************************
1194+  8407~            		sty tireset                           
1195+  8407~            		;**********************************************************
1196+  8407~            		;**********************************************************
1197+  8407~                    sty tiwrite                 ;Turn off TI /WS   
1198+  8407~                    dey                                  
1199+  8407~                    sty ti_count                        
1200+  8407~                    lda # ubyte(deftalk)               	;Load up the dummy data into the sample params           
1201+  8407~                    sta ti_addr+1                          
1202+  8407~                    lda # lbyte(deftalk)                            
1203+  8407~                    sta ti_addr                          
1204+  8407~                    lda # ubyte(deftalklen)    	;Set the dummy data length                       
1205+  8407~                    sta ti_len+1                          
1206+  8407~                    lda # lbyte(deftalklen)                           
1207+  8407~                    sta ti_len                          
1208+  8407~                    lda irqcnt                         
1209+  8407~                    clc                
1210+  8407~                    adc #$10                            
1211+  8407~                    ora #$01                            
1212+  8407~                    sta ti_irqcnt                    	;Set to IRQ count+$11      
1213+  8407~                    lda #TISTAT_START                            
1214+  8407~                    sta ti_stat                     ;Let it start filling data                   
1215+  8407~                    plp      
1216+  8407~                    rts 
1217+  8407~            
1218+  8407~            ;This is default(dummy) data for the speech init to point to
1219+  8407~            deftalk .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
1220+  8407~                    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
1221+  8407~            deftalkend
1222+  8407~            
1223+  8407~            deftalklen = deftalkend - deftalk
1224+  8407~            
1225+  8407~            ;******************************************************************************
1226+  8407~            ;* Update Speech: Called from IRQ (twice), to 
1227+  8407~            ;* queue data into the speech chip buffer.           
1228+  8407~            ;******************************************************************************     
1229+  8407~            TICMD_NOP		= $00	;Same as 80
1230+  8407~            TICMD_READ		= $10	;Same as 10
1231+  8407~            TICMD_NOP2		= $20	;Same as 20
1232+  8407~            TICMD_READB		= $30	;Same as 30
1233+  8407~            TICMD_LOAD		= $40	;Same as 40
1234+  8407~            TICMD_SPEAK 	= $50	;Same as 50
1235+  8407~            TICMD_SPEAKEX	= $60   ;Same as 60
1236+  8407~            TICMD_RESET 	= $FF   ;Same as 70
1237+  8407~            
1238+  8407~            updspeech   
1239+  8407~                    ; lda	ti_irqcnt
1240+  8407~                    ; ifne
1241+  8407~                        ; sec     
1242+  8407~                        ; sbc	irqcnt
1243+  8407~                        ; beq ?ups10
1244+  8407~                        ; sbc #08
1245+  8407~                        ; ifeq
1246+  8407~            				; rol A
1247+  8407~            				; sta tireset
1248+  8407~            ; ?ups10          lda	#00
1249+  8407~                            ; sta ti_irqcnt
1250+  8407~                        ; endif
1251+  8407~                        ; rts     
1252+  8407~                    ; endif
1253+  8407~                    lda #tirdyflg
1254+  8407~                    bit tirdy       ;check to see if the TI has read the last value
1255+  8407~                    ifne            ;if still high, then it is not ready for another byte, start a timer
1255+  8407~                    ifne            ;if still high, then it is not ready for another byte, start a timer
1255+  8407~                    ifne            ;if still high, then it is not ready for another byte, start a timer
1256+  8407~                        lda	irqcnt
1257+  8407~                        lsr A
1258+  8407~                        bit ti_count
1259+  8407~                        ifpl
1259+  8407~                        ifpl
1259+  8407~                        ifpl
1260+  8407~                            eor ti_count
1261+  8407~                            bne ?tirts      ;get out, will come back again later
1262+  8407~                            beq res_ti      ;if we are here, the TI was not ready for a long time, must reset it
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1263+  8407~                        endif
1264+  8407~                        adc #$10
1265+  8407~                        and #$7f
1266+  8407~                        sta ti_count
1267+  8407~                        bpl ?tirts      ;update the counter and leave for later
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1268+  8407~                    endif
1269+  8407~                    ;If we are here, then we have something to do
1270+  8407~                    lda #TICMD_RESET            ;reset the counter first
1271+  8407~                    sta ti_count
1272+  8407~                    sta tidata	;tiwrite         ;this disables the TI /WS signal (negative -> positive transition)
1273+  8407~                    lda tiframe
1274+  8407~                    ifmi
1274+  8407~                    ifmi
1274+  8407~                    ifmi
1275+  8407~                        asl     A
1276+  8407~                        eor     irqcnt
1277+  8407~                        bne     ?tirts
1278+  8407~                        sta     tiframe         ;tiframe = $00 here
1279+  8407~                        lda     #TICMD_RESET
1280+  8407~                        bne     ?tiwr       ;write an $FF here
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1281+  8407~                    endif
1282+  8407~                    lda     #TICMD_RESET	;Data for RESET, written if not changed below
1283+  8407~                    ldy     ti_stat         ;Get the software status of the TI
1284+  8407~                    ifeq                
1284+  8407~                    ifeq                
1284+  8407~                    ifeq                
1285+  8407~            			;we are TISTAT_IDLE 
1286+  8407~                        ldy     tiquecur        
1287+  8407~                        cpy     tiquelst
1288+  8407~                        beq     ?tiwr           ;Is the TALK queue caught up? Yes if zero, write an TICMD_RESET to the TI and then move on.
1289+  8407~                        iny                     ;Move to next queue slot
1290+  8407~                        cpy     #ticmdbflen     ;Is it at the top?
1291+  8407~                        ifcs    
1291+  8407~                        ifcs    
1291+  8407~                        ifcs    
1292+  8407~                            ldy     #00             ;roll it over
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1293+  8407~                        endif
1294+  8407~                        sty tiquecur            ;Save new current queue index
1295+  8407~                        lda tiqueue,y           ;Get the next talk command, fall through to load it up
1296+  8407~                        jmp talkit2
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1297+  8407~                    endif
1298+  8407~                    iny     
1299+  8407~                    bne ?ups12			
1300+  8407~                    lda (ti_addr,Y)         ;Get next data byte
1301+  8407~                    inc ti_addr             ;Increment pointer
1302+  8407~                    ifeq
1302+  8407~                    ifeq
1302+  8407~                    ifeq
1303+  8407~                        inc ti_addr+1           ;Dont forget to carry over!
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1304+  8407~                    endif
1305+  8407~                    dec ti_len          ;Take one off
1306+  8407~                    ifeq                ;Out of data LSB!
1306+  8407~                    ifeq                ;Out of data LSB!
1306+  8407~                    ifeq                ;Out of data LSB!
1307+  8407~                        dec ti_len+1
1308+  8407~                        ifmi                    ;Out of data MSB, just plain out of data!
1308+  8407~                        ifmi                    ;Out of data MSB, just plain out of data!
1308+  8407~                        ifmi                    ;Out of data MSB, just plain out of data!
1309+  8407~            				ldy #$FF
1310+  8407~            				sty fpgaspeech
1311+  8407~                            ldy #TISTAT_WAIT
1312+  8407~                            sty ti_stat         	;$11 cycles to wait for next speech phrase
1313+  8407~                            ifeq					;NEVER
1313+  8407~                            ifeq					;NEVER
1313+  8407~                            ifeq					;NEVER
1314+  8407~            ?ups12              cpy #$81					;Last value of ti_stat + 1
1315+  8407~                                bne ?decstat				;This is TRUE 
1316+  8407~                                lda #TISTAT_SENDING
1317+  8407~                                sta ti_stat
1318+  8407~                                lda #TICMD_SPEAKEX        	;TI Speak External Command
1319+  8407~                                ifeq						;NEVER - FALL THROUGH
1319+  8407~                                ifeq						;NEVER - FALL THROUGH
1319+  8407~                                ifeq						;NEVER - FALL THROUGH
1320+  8407~            ?decstat                dec ti_stat
1321+  8407~                                    lda #TICMD_NOP       ;This is a TI NOP Command here
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1322+  8407~                                endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1323+  8407~                            endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1324+  8407~                        endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1325+  8407~                    endif
1326+  8407~            ?tiwr   sta tidata          ;write a byte here!
1327+  8407~            		sta tiwrite
1328+  8407~            ?tirts  rts 
1329+  8407~            
1330+  8407             #ENDIF
1331+  8407             
1332+  8407             ;***********************************************
1333+  8407             ;* Table Pointers to each macro routine        
1334+  8407             ;***********************************************
1335+  8407 06 82       functbl .word setslvl-1     ;00 - Set Silent/Attract Level
1336+  8409 09 82               .word sceflg-1      ;01 - Set/Reset E-Flag
1337+  840B 14 82               .word callf-1       ;02 - Call Subroutine
1338+  840D 1F 82               .word killp-1       ;03 - Kill Sound by Priority
1339+  840F 37 82               .word killid-1      ;04 - Kill Sound by ID
1340+  8411 59 82               .word killch-1      ;05 - Kill Sound by Device
1341+  8413 E7 82               .word strtsnd-1     ;06 - Start Sound
1342+  8415 7E 82               .word repbyte-1     ;07 - Report Value
1343+  8417~            #IF ___tlk == 1
1344+  8417~                    .word talkit-1      ;08 - Talk LPC
1345+  8417             #ELSE
1346+  8417             #IF ___oki == 1
1347+  8417 E5 83       		.word okicmd-1
1348+  8419~            #ELSE
1349+  8419~            		.word nocmd
1350+  8419             #ENDIF
1351+  8419             #ENDIF
1352+  8419 9A 82               .word immexe-1      ;09 - Execute Immediate Mode Command
1353+  841B             
1354+  841B             
1355+  841B 60          nocmd	rts
1356+  841C             ;************************************************
1357+  841C             ; RPM Main Proc - processes the sound through 
1358+  841C             ; the macro driven commands.
1359+  841C             ;************************************************
1360+  841C             ; X = Channel Offset (0-F)
1361+  841C             ;************************************************
1362+  841C             rpmmain 
1363+  841C BD E0 02            lda ch_pri,X            ;If Priority was #00, then just leave, never plays
1364+  841F F0 07               beq ?rpmex
1365+  8421 BC 00 02            ldy ch_sid,X            ;See if a sound has been assigned here
1366+  8424 C8                  iny 
1367+  8425                     \ .push  *, 0 \ BNE  * 		
1367+  8425             
1367+  8425 D0 FE       
1368+  8427 98                      tya 
1369+  8428 4C FD 84    ?rpmex      jmp sifin               ;If the ch_sid was #$FF, then leave
1370+  842B                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1370+  842B             
1370+  842B             
1370+  842B             
1370+  842B             
1370+  842B             
1370+  842B             
1370+  842B~                    endif
1370+  842B~                    endif
1370+  842B             
1370+  842B~                    endif
1370+  842B~                    endif
1370+  842B             
1370+  8426             
1370+  8426 04          
1370+  8427             
1370+  8427             
1370+  8427~                    endif
1370+  8427~                    endif
1370+  8427~                    endif
1370+  8427             
1370+  8427~                    endif
1370+  8427~                    endif
1370+  8427~                    endif
1370+  8427             
1370+  842B             
1370+  842B~                    endif
1370+  842B~                    endif
1370+  842B             
1371+  842B 29 01               and #01                 ;Check priority flag LSB
1372+  842D 8D C3 04            sta po_even_odd			;Save the Even/Odd flag for the rest of the RPM code
1373+  8430 A8                  tay 
1374+  8431 BD E0 02            lda ch_pri,X
1375+  8434 99 C1 04            sta po_4c1,Y
1376+  8437 BD 20 02            lda ch_tuneptr,X      ;Pointer to data stream for this sound LSB
1377+  843A 85 0D               sta tuneptr         	;Save the pointer in RAM LSB
1378+  843C BD 30 02            lda ch_tuneptr+___CHNS,X  	;Pointer to data stream for this sound MSB
1379+  843F 85 0E               sta tuneptr+1         	;Save the pointer in RAM MSB
1380+  8441 38                  sec 
1381+  8442 BD A0 02            lda ch_ratedif_l,X     	;Frames to keep this value
1382+  8445 FD 90 03            sbc ch_rate,X     		;Subtract our channels sample rate ($40 is default)
1383+  8448 9D A0 02            sta ch_ratedif_l,X     	;Save it for next time
1384+  844B                     \ .push  *, 0 \ BCS  *                     
1384+  844B             
1384+  844B B0 FE       
1385+  844D DE B0 02                dec ch_ratedif_h,X		;did it go zero... yes, take away 1 from MSB of sample rate counter
1386+  8450                     \var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 1==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ BMI $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif
1386+  8450             
1386+  8450             
1386+  8450             
1386+  8450             
1386+  844C             
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C~                    else_mi
1386+  844C             
1386+  844C 05          
1386+  8450             
1386+  8450             
1386+  8450 30 FE       
1386+  8452             
1386+  8452~                    else_mi
1386+  8452~                    else_mi
1386+  8452             
1386+  8452~                    else_mi
1386+  8452~                    else_mi
1386+  8452             
1387+  8452 4C 97 85                jmp rpmm3   			;Not timed out yet
1388+  8455                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1388+  8455             
1388+  8455             
1388+  8455             
1388+  8455             
1388+  8455             
1388+  8455             
1388+  8455~                    endif
1388+  8455~                    endif
1388+  8455             
1388+  8455~                    endif
1388+  8455~                    endif
1388+  8455             
1388+  8451             
1388+  8451 03          
1388+  8452             
1388+  8452             
1388+  8452~                    endif
1388+  8452~                    endif
1388+  8452~                    endif
1388+  8452             
1388+  8452~                    endif
1388+  8452~                    endif
1388+  8452~                    endif
1388+  8452             
1388+  8455             
1388+  8455~                    endif
1388+  8455~                    endif
1388+  8455             
1389+  8455                     
1390+  8455 BC D0 02    rpmnext ldy ch_localpc,X
1391+  8458 98                  tya 
1392+  8459 18                  clc 
1393+  845A 69 02               adc #02					;Always 2 bytes per instruction
1394+  845C 9D D0 02            sta ch_localpc,X
1395+  845F                     \ .push  *, 0 \ BCC  * 
1395+  845F             
1395+  845F 90 FE       
1396+  8461 FE 30 02                inc ch_tuneptr+___CHNS,X		;Update the base high pointer if this flipped over 255
1397+  8464                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1397+  8464             
1397+  8464             
1397+  8464             
1397+  8464             
1397+  8464             
1397+  8464             
1397+  8464~                    endif
1397+  8464~                    endif
1397+  8464             
1397+  8464~                    endif
1397+  8464~                    endif
1397+  8464             
1397+  8460             
1397+  8460 03          
1397+  8461             
1397+  8461             
1397+  8461~                    endif
1397+  8461~                    endif
1397+  8461~                    endif
1397+  8461             
1397+  8461~                    endif
1397+  8461~                    endif
1397+  8461~                    endif
1397+  8461             
1397+  8464             
1397+  8464~                    endif
1397+  8464~                    endif
1397+  8464             
1398+  8464 B1 0D               lda (tuneptr,Y)         ;Is this data a sound function selection?
1399+  8466                     \ .push  *, 0 \ BPL  *                     ;Yes, only if minus
1399+  8466             
1399+  8466 10 FE       
1400+  8468 20 BA 88                jsr simmsel             ;special function here
1401+  846B                         \ .push  *, 0 \ BCC  * 
1401+  846B             
1401+  846B 90 FE       
1402+  846D BD 30 02                    lda ch_tuneptr+___CHNS,X
1403+  8470 85 0E                       sta tuneptr+1
1404+  8472 B0 E1                       bcs rpmnext     ;Always
1405+  8474                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1405+  8474             
1405+  8474             
1405+  8474             
1405+  8474             
1405+  8474             
1405+  8474             
1405+  8474~                        endif
1405+  8474~                        endif
1405+  8474             
1405+  8474~                        endif
1405+  8474~                        endif
1405+  8474             
1405+  846C             
1405+  846C 07          
1405+  846D             
1405+  846D             
1405+  846D~                        endif
1405+  846D~                        endif
1405+  846D~                        endif
1405+  846D             
1405+  846D~                        endif
1405+  846D~                        endif
1405+  846D~                        endif
1405+  846D             
1405+  8474             
1405+  8474~                        endif
1405+  8474~                        endif
1405+  8474             
1406+  8474 A9 00                   lda #00
1407+  8476 AC C3 04                ldy po_even_odd
1408+  8479 99 C1 04                sta po_4c1,Y
1409+  847C 4C 19 87                jmp rnext
1410+  847F             			;*******************
1411+  847F                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1411+  847F             
1411+  847F             
1411+  847F             
1411+  847F             
1411+  847F             
1411+  847F             
1411+  847F~                    endif
1411+  847F~                    endif
1411+  847F             
1411+  847F~                    endif
1411+  847F~                    endif
1411+  847F             
1411+  8467             
1411+  8467 17          
1411+  8468             
1411+  8468             
1411+  8468~                    endif
1411+  8468~                    endif
1411+  8468~                    endif
1411+  8468             
1411+  8468~                    endif
1411+  8468~                    endif
1411+  8468~                    endif
1411+  8468             
1411+  847F             
1411+  847F~                    endif
1411+  847F~                    endif
1411+  847F             
1412+  847F                     ;Here for a standard NOTE, A = positive for a NOTE and ZERO for 1-Time Sound
1413+  847F 84 11               sty fasave         	;Store away our current pc location for later
1414+  8481 AC C3 04            ldy po_even_odd
1415+  8484                     \ .push  *, 0 \ BEQ  * 
1415+  8484             
1415+  8484 F0 FE       
1416+  8486 C9 00                   cmp #00
1417+  8488 F0 04                   beq ?rpm5
1418+  848A                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1418+  848A             
1418+  848A             
1418+  848A             
1418+  848A             
1418+  848A             
1418+  848A             
1418+  848A~                    endif
1418+  848A~                    endif
1418+  848A             
1418+  848A~                    endif
1418+  848A~                    endif
1418+  848A             
1418+  8485             
1418+  8485 04          
1418+  8486             
1418+  8486             
1418+  8486~                    endif
1418+  8486~                    endif
1418+  8486~                    endif
1418+  8486             
1418+  8486~                    endif
1418+  8486~                    endif
1418+  8486~                    endif
1418+  8486             
1418+  848A             
1418+  848A~                    endif
1418+  848A~                    endif
1418+  848A             
1419+  848A 18                  clc 
1420+  848B 7D A0 03            adc ch_key,X			;Add in the current base freq, typically zero
1421+  848E AC C3 04    ?rpm5   ldy po_even_odd
1422+  8491                     \ .push  *, 0 \ BNE  * 		
1422+  8491             
1422+  8491 D0 FE       
1423+  8493 48                      pha 
1424+  8494 38                      sec 
1425+  8495 FD 80 02                sbc ch_mys_28,X
1426+  8498 9D F0 03                sta ch_synthfadj,X
1427+  849B 0A                      asl A
1428+  849C A9 FF                   lda #$FF
1429+  849E                         \ .push  *, 0 \ BCS  * 
1429+  849E             
1429+  849E B0 FE       
1430+  84A0 A9 00                       lda #00
1431+  84A2                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1431+  84A2             
1431+  84A2             
1431+  84A2             
1431+  84A2             
1431+  84A2             
1431+  84A2             
1431+  84A2~                        endif
1431+  84A2~                        endif
1431+  84A2             
1431+  84A2~                        endif
1431+  84A2~                        endif
1431+  84A2             
1431+  849F             
1431+  849F 02          
1431+  84A0             
1431+  84A0             
1431+  84A0~                        endif
1431+  84A0~                        endif
1431+  84A0~                        endif
1431+  84A0             
1431+  84A0~                        endif
1431+  84A0~                        endif
1431+  84A0~                        endif
1431+  84A0             
1431+  84A2             
1431+  84A2~                        endif
1431+  84A2~                        endif
1431+  84A2             
1432+  84A2 9D 00 04                sta ch_synthfadj+___CHNS,X
1433+  84A5 68                      pla 
1434+  84A6 9D 80 02                sta ch_mys_28,X
1435+  84A9 A9 00                   lda #00
1436+  84AB 9D 90 02                sta ch_mys_29,X
1437+  84AE                     \var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif 
1437+  84AE             
1437+  84AE             
1437+  84AE             
1437+  84AE             
1437+  8492             
1437+  8492             
1437+  8492             
1437+  8492~                    else 
1437+  8492~                    else 
1437+  8492             
1437+  8492~                    else 
1437+  8492~                    else 
1437+  8492             
1437+  8492 1E          
1437+  84AE             
1437+  84AE             
1437+  84AE 4C AE 84    
1437+  84B1             
1437+  84B1             
1437+  84B1~                    else 
1437+  84B1~                    else 
1437+  84B1~                    else 
1437+  84B1~                    else 
1437+  84B1~                    else 
1437+  84B1             
1437+  84B1~                    else 
1437+  84B1~                    else 
1437+  84B1             
1437+  84B1~                    else 
1437+  84B1~                    else 
1437+  84B1             
1438+  84B1 0A          			asl A				;words in note table
1439+  84B2 A8          			tay 
1440+  84B3 38          			sec 
1441+  84B4 BD 80 02    			lda ch_mys_28,X
1442+  84B7 F9 6E 96    			sbc notes-2,Y
1443+  84BA 9D F0 03    			sta ch_synthfadj,X
1444+  84BD BD 90 02    			lda ch_mys_29,X
1445+  84C0 F9 6F 96    			sbc notes-2+1,Y
1446+  84C3 9D 00 04    			sta ch_synthfadj+___CHNS,X
1447+  84C6 B9 6E 96    			lda notes-2,Y
1448+  84C9 9D 80 02    			sta ch_mys_28,X
1449+  84CC B9 6F 96    			lda notes-2+1,Y
1450+  84CF 9D 90 02    			sta ch_mys_29,X
1451+  84D2             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1451+  84D2             
1451+  84D2             
1451+  84D2             
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2             
1451+  84AF             
1451+  84AF D2 84       
1451+  84B1             
1451+  84D2             
1451+  84D2~            		endif
1451+  84D2~            		endif
1451+  84D2             
1452+  84D2 A4 11       		ldy fasave
1453+  84D4 C8                  iny 						;Move to second data byte of NOTE($00,XX) command
1454+  84D5 A9 00               lda #00
1455+  84D7 85 11               sta fasave
1456+  84D9 B1 0D               lda (tuneptr,Y)             ;Get next tune data (2nd Byte)
1457+  84DB                     \ .push  *, 0 \ BNE  * 		                        ;Command Finished
1457+  84DB             
1457+  84DB D0 FE       
1458+  84DD BD 20 04                lda ch_jmppc+___CHNS,X            ;Was there a sound JSR
1459+  84E0                         \ .push  *, 0 \ BEQ  *                         ;yes, pull old data
1459+  84E0             
1459+  84E0 F0 FE       
1460+  84E2 9D 30 02                    sta ch_tuneptr+___CHNS,X
1461+  84E5 85 0E                       sta tuneptr+1
1462+  84E7 BD 10 04                    lda ch_jmppc,X
1463+  84EA 9D 20 02                    sta ch_tuneptr,X
1464+  84ED 85 0D                       sta tuneptr
1465+  84EF A9 00                       lda #00
1466+  84F1 9D 20 04                    sta ch_jmppc+___CHNS,X
1467+  84F4 BD 30 04                    lda ch_jmplocpc,X
1468+  84F7 9D D0 02                    sta ch_localpc,X
1469+  84FA 4C 55 84                    jmp rpmnext					;Continue outside execution back at old routine
1470+  84FD                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1470+  84FD             
1470+  84FD             
1470+  84FD             
1470+  84FD             
1470+  84FD             
1470+  84FD             
1470+  84FD~                        endif
1470+  84FD~                        endif
1470+  84FD             
1470+  84FD~                        endif
1470+  84FD~                        endif
1470+  84FD             
1470+  84E1             
1470+  84E1 1B          
1470+  84E2             
1470+  84E2             
1470+  84E2~                        endif
1470+  84E2~                        endif
1470+  84E2~                        endif
1470+  84E2             
1470+  84E2~                        endif
1470+  84E2~                        endif
1470+  84E2~                        endif
1470+  84E2             
1470+  84FD             
1470+  84FD~                        endif
1470+  84FD~                        endif
1470+  84FD             
1471+  84FD                         ;Sound is finished if here, clear all old data
1472+  84FD 9D E0 02    sifin       sta ch_pri,X        
1473+  8500 9D C0 02                sta ch_vol,X
1474+  8503 9D 00 02    			sta ch_sid,X			;added this JMA 4/27/2020
1475+  8506 BD A0 04                lda preg_chanp,X
1476+  8509 AE CC 04                ldx po_4cc
1477+  850C 9D A0 04                sta preg_chanp,X
1478+  850F A9 00                   lda #00
1479+  8511 4C 19 87                jmp rnext				;Continue in current outside context
1480+  8514                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1480+  8514             
1480+  8514             
1480+  8514             
1480+  8514             
1480+  8514             
1480+  8514             
1480+  8514~                    endif
1480+  8514~                    endif
1480+  8514             
1480+  8514~                    endif
1480+  8514~                    endif
1480+  8514             
1480+  84DC             
1480+  84DC 37          
1480+  84DD             
1480+  84DD             
1480+  84DD~                    endif
1480+  84DD~                    endif
1480+  84DD~                    endif
1480+  84DD             
1480+  84DD~                    endif
1480+  84DD~                    endif
1480+  84DD~                    endif
1480+  84DD             
1480+  8514             
1480+  8514~                    endif
1480+  8514~                    endif
1480+  8514             
1481+  8514             		;********************************************************************
1482+  8514             		;SDATA with data byte in A, these are flags of some sort
1483+  8514             		; $80-$04: Valid value which is the 
1484+  8514             		; $02	 : ROR into fasave, adc into ch_ratedif_h, add into ch_ratedif_l
1485+  8514             		; $01	 : When clear, initialize the FREQ and CRTL streams with next pointer data
1486+  8514             		;
1487+  8514             		; Special Values:
1488+  8514             		; $FF - Branch
1489+  8514             		; $FE - 
1490+  8514             		;********************************************************************
1491+  8514 4A                  lsr A
1492+  8515 4A                  lsr A
1493+  8516 66 11               ror fasave				;fasave now has a bit set at $80 from original bit $02 in SDATA followup command
1494+  8518 48                  pha 
1495+  8519 38                  sec 
1496+  851A A5 11               lda fasave
1497+  851C 7D A0 02            adc ch_ratedif_l,X
1498+  851F 9D A0 02            sta ch_ratedif_l,X
1499+  8522 68                  pla 
1500+  8523 7D B0 02            adc ch_ratedif_h,X
1501+  8526 9D B0 02            sta ch_ratedif_h,X
1502+  8529 B1 0D               lda (tuneptr,Y)         ;Get initial Data Value, this is the 'note' length it seems
1503+  852B 29 01               and #01					;Even intial values will trigger a reset of FREQ and CTRL data and move to next of each
1504+  852D                     \ .push  *, 0 \ BNE  * 			
1504+  852D             
1504+  852D D0 FE       
1505+  852F             			;****************************************************************
1506+  852F             			;FREQ initialization here.... sets up all pointers and init data
1507+  852F             			;****************************************************************
1508+  852F             			;Clear all these A = 0
1509+  852F 9D F0 03                sta ch_synthfadj,X
1510+  8532 9D 00 04                sta ch_synthfadj+___CHNS,X
1511+  8535 9D 50 03                sta ch_freq_lastd,X		;set freq values to zero
1512+  8538 9D 60 03                sta ch_freq_last,X
1513+  853B 9D 70 03                sta ch_freq_last+___CHNS,X
1514+  853E 9D 80 03                sta ch_freq_lcnt,X
1515+  8541 A8          			tay						;Clear Y too 
1516+  8542 BD 60 02                lda ch_freq,X			;Load pointer to frequency table
1517+  8545 85 0D                   sta tuneptr
1518+  8547 BD 70 02                lda ch_freq+___CHNS,X
1519+  854A 85 0E                   sta tuneptr+1
1520+  854C B1 0D                   lda (tuneptr,Y)         ;Get index freq data which was specified by the SDATA byte 2 data (this value is -1 of actual stored value)
1521+  854E 9D 40 03                sta ch_freq_run,X
1522+  8551 C8                      iny 					
1523+  8552 11 0D                   ora (tuneptr,Y)         ;OR with next data
1524+  8554 C8                      iny 
1525+  8555 11 0D                   ora (tuneptr,Y)         ;OR with next data
1526+  8557                         \ .push  *, 0 \ BEQ  * 
1526+  8557             
1526+  8557 F0 FE       
1527+  8559 FE 40 03                    inc ch_freq_run,X		;Increment our first value +1
1528+  855C 98                          tya
1529+  855D                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif   
1529+  855D             
1529+  855D             
1529+  855D             
1529+  855D             
1529+  855D             
1529+  855D             
1529+  855D~                        endif   
1529+  855D~                        endif   
1529+  855D             
1529+  855D~                        endif   
1529+  855D~                        endif   
1529+  855D             
1529+  8558             
1529+  8558 04          
1529+  8559             
1529+  8559             
1529+  8559~                        endif   
1529+  8559~                        endif   
1529+  8559~                        endif   
1529+  8559             
1529+  8559~                        endif   
1529+  8559~                        endif   
1529+  8559~                        endif   
1529+  8559             
1529+  855D             
1529+  855D~                        endif   
1529+  855D~                        endif   
1529+  855D             
1530+  855D 9D 30 03                sta ch_freqdidx,X		;This is zero if all 3 bytes were zero
1531+  8560             			;******************************************
1532+  8560             			;CTRL Initialization here
1533+  8560             			;******************************************
1534+  8560 A9 00                   lda #00
1535+  8562 A8                      tay 
1536+  8563 9D 10 03                sta ch_ctrl_lastv,X
1537+  8566 9D 20 03                sta ch_ctrl_lcnt,X
1538+  8569             			;Point to base of control table
1539+  8569 BD 40 02                lda ch_ctrl_l,X
1540+  856C 85 0D                   sta tuneptr
1541+  856E BD 50 02                lda ch_ctrl_h,X
1542+  8571 85 0E                   sta tuneptr+1
1543+  8573 B1 0D                   lda (tuneptr,Y)         ;Loading Initial Control Register data (one less, incremented later) here...
1544+  8575 9D 00 03                sta ch_ctrl_run,X
1545+  8578 C8                      iny 
1546+  8579 11 0D                   ora (tuneptr,Y)         ;OR with next eq data
1547+  857B                         \ .push  *, 0 \ BEQ  * 
1547+  857B             
1547+  857B F0 FE       
1548+  857D FE 00 03                    inc ch_ctrl_run,X		;Add one always in Byte 1
1549+  8580 98                          tya
1550+  8581                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif   
1550+  8581             
1550+  8581             
1550+  8581             
1550+  8581             
1550+  8581             
1550+  8581             
1550+  8581~                        endif   
1550+  8581~                        endif   
1550+  8581             
1550+  8581~                        endif   
1550+  8581~                        endif   
1550+  8581             
1550+  857C             
1550+  857C 04          
1550+  857D             
1550+  857D             
1550+  857D~                        endif   
1550+  857D~                        endif   
1550+  857D~                        endif   
1550+  857D             
1550+  857D~                        endif   
1550+  857D~                        endif   
1550+  857D~                        endif   
1550+  857D             
1550+  8581             
1550+  8581~                        endif   
1550+  8581~                        endif   
1550+  8581             
1551+  8581 9D F0 02                sta ch_ctrldidx,X		;Zero will be stored here if CTRL data ended with $00,$00 (does this mean it loops back to start?)
1552+  8584 AC C3 04                ldy po_even_odd
1553+  8587                         \ .push  *, 0 \ BEQ  * 
1553+  8587             
1553+  8587 F0 FE       
1554+  8589 4C 19 87                    jmp rnext
1555+  858C                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1555+  858C             
1555+  858C             
1555+  858C             
1555+  858C             
1555+  858C             
1555+  858C             
1555+  858C~                        endif
1555+  858C~                        endif
1555+  858C             
1555+  858C~                        endif
1555+  858C~                        endif
1555+  858C             
1555+  8588             
1555+  8588 03          
1555+  8589             
1555+  8589             
1555+  8589~                        endif
1555+  8589~                        endif
1555+  8589~                        endif
1555+  8589             
1555+  8589~                        endif
1555+  8589~                        endif
1555+  8589~                        endif
1555+  8589             
1555+  858C             
1555+  858C~                        endif
1555+  858C~                        endif
1555+  858C             
1556+  858C                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1556+  858C             
1556+  858C             
1556+  858C             
1556+  858C             
1556+  858C             
1556+  858C             
1556+  858C~                    endif
1556+  858C~                    endif
1556+  858C             
1556+  858C~                    endif
1556+  858C~                    endif
1556+  858C             
1556+  852E             
1556+  852E 5D          
1556+  852F             
1556+  852F             
1556+  852F~                    endif
1556+  852F~                    endif
1556+  852F~                    endif
1556+  852F             
1556+  852F~                    endif
1556+  852F~                    endif
1556+  852F~                    endif
1556+  852F             
1556+  858C             
1556+  858C~                    endif
1556+  858C~                    endif
1556+  858C             
1557+  858C BD E0 03            lda ch_synthmode,X
1558+  858F                     \ .push  *, 0 \ BNE  * 		
1558+  858F             
1558+  858F D0 FE       
1559+  8591 9D F0 03                sta ch_synthfadj,X
1560+  8594 9D 00 04                sta ch_synthfadj+___CHNS,X
1561+  8597                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1561+  8597             
1561+  8597             
1561+  8597             
1561+  8597             
1561+  8597             
1561+  8597             
1561+  8597~                    endif
1561+  8597~                    endif
1561+  8597             
1561+  8597~                    endif
1561+  8597~                    endif
1561+  8597             
1561+  8590             
1561+  8590 06          
1561+  8591             
1561+  8591             
1561+  8591~                    endif
1561+  8591~                    endif
1561+  8591~                    endif
1561+  8591             
1561+  8591~                    endif
1561+  8591~                    endif
1561+  8591~                    endif
1561+  8591             
1561+  8597             
1561+  8597~                    endif
1561+  8597~                    endif
1561+  8597             
1562+  8597 AD C3 04    rpmm3   lda po_even_odd
1563+  859A                     \ .push  *, 0 \ BEQ  * 
1563+  859A             
1563+  859A F0 FE       
1564+  859C BD 80 02                lda ch_mys_28,X
1565+  859F 1D 90 02                ora ch_mys_29,X
1566+  85A2                         \ .push  *, 0 \ BNE  * 		
1566+  85A2             
1566+  85A2 D0 FE       
1567+  85A4 4C 19 87                    jmp rnext
1568+  85A7                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif           
1568+  85A7             
1568+  85A7             
1568+  85A7             
1568+  85A7             
1568+  85A7             
1568+  85A7             
1568+  85A7~                        endif           
1568+  85A7~                        endif           
1568+  85A7             
1568+  85A7~                        endif           
1568+  85A7~                        endif           
1568+  85A7             
1568+  85A3             
1568+  85A3 03          
1568+  85A4             
1568+  85A4             
1568+  85A4~                        endif           
1568+  85A4~                        endif           
1568+  85A4~                        endif           
1568+  85A4             
1568+  85A4~                        endif           
1568+  85A4~                        endif           
1568+  85A4~                        endif           
1568+  85A4             
1568+  85A7             
1568+  85A7~                        endif           
1568+  85A7~                        endif           
1568+  85A7             
1569+  85A7                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1569+  85A7             
1569+  85A7             
1569+  85A7             
1569+  85A7             
1569+  85A7             
1569+  85A7             
1569+  85A7~                    endif
1569+  85A7~                    endif
1569+  85A7             
1569+  85A7~                    endif
1569+  85A7~                    endif
1569+  85A7             
1569+  859B             
1569+  859B 0B          
1569+  859C             
1569+  859C             
1569+  859C~                    endif
1569+  859C~                    endif
1569+  859C~                    endif
1569+  859C             
1569+  859C~                    endif
1569+  859C~                    endif
1569+  859C~                    endif
1569+  859C             
1569+  85A7             
1569+  85A7~                    endif
1569+  85A7~                    endif
1569+  85A7             
1570+  85A7 A5 01               lda framecnt
1571+  85A9 29 06               and #06
1572+  85AB                     \ .push  *, 0 \ BNE  * 		
1572+  85AB             
1572+  85AB D0 FE       
1573+  85AD BD 00 04                lda ch_synthfadj+___CHNS,X
1574+  85B0 0A                      asl A
1575+  85B1 7E 00 04                ror ch_synthfadj+___CHNS,X
1576+  85B4 7E F0 03                ror ch_synthfadj,X
1577+  85B7                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1577+  85B7             
1577+  85B7             
1577+  85B7             
1577+  85B7             
1577+  85B7             
1577+  85B7             
1577+  85B7~                    endif
1577+  85B7~                    endif
1577+  85B7             
1577+  85B7~                    endif
1577+  85B7~                    endif
1577+  85B7             
1577+  85AC             
1577+  85AC 0A          
1577+  85AD             
1577+  85AD             
1577+  85AD~                    endif
1577+  85AD~                    endif
1577+  85AD~                    endif
1577+  85AD             
1577+  85AD~                    endif
1577+  85AD~                    endif
1577+  85AD~                    endif
1577+  85AD             
1577+  85B7             
1577+  85B7~                    endif
1577+  85B7~                    endif
1577+  85B7             
1578+  85B7             		;*******************************
1579+  85B7             		; Process Frequency Data Stream
1580+  85B7             		;*******************************
1581+  85B7 BD 60 02            lda ch_freq,X
1582+  85BA 85 0D               sta tuneptr
1583+  85BC BD 70 02            lda ch_freq+___CHNS,X
1584+  85BF 85 0E               sta tuneptr+1
1585+  85C1 BC 30 03            ldy ch_freqdidx,X
1586+  85C4                     \ .push  *, 0 \ BNE  * 		
1586+  85C4             
1586+  85C4 D0 FE       
1587+  85C6 98                      tya 
1588+  85C7 18                      clc
1589+  85C8                     \var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif    
1589+  85C8             
1589+  85C8             
1589+  85C8             
1589+  85C8             
1589+  85C5             
1589+  85C5             
1589+  85C5             
1589+  85C5~                    else    
1589+  85C5~                    else    
1589+  85C5             
1589+  85C5~                    else    
1589+  85C5~                    else    
1589+  85C5             
1589+  85C5 05          
1589+  85C8             
1589+  85C8             
1589+  85C8 4C C8 85    
1589+  85CB             
1589+  85CB             
1589+  85CB~                    else    
1589+  85CB~                    else    
1589+  85CB~                    else    
1589+  85CB~                    else    
1589+  85CB~                    else    
1589+  85CB             
1589+  85CB~                    else    
1589+  85CB~                    else    
1589+  85CB             
1589+  85CB~                    else    
1589+  85CB~                    else    
1589+  85CB             
1590+  85CB DE 40 03                dec ch_freq_run,X			;Initial Data +1 is here, now one less (this is the FREQ countdown)
1591+  85CE D0 56                   bne ?rm17
1592+  85D0                         \ .push  *, 2						;Here if Freq Counter was Zero (trigger)
1592+  85D0             
1593+  85D0                             \ .push  *, 2
1593+  85D0             
1594+  85D0                                 \ .push  *, 2
1594+  85D0             
1595+  85D0 C8                                  iny 
1596+  85D1 B1 0D                               lda (tuneptr,Y)         ;Get next freq byte, this is the 'delta' data byte
1597+  85D3 9D 40 03                            sta ch_freq_run,X		;Save it to channel RAM
1598+  85D6 C8                                  iny 
1599+  85D7 C9 FF                               cmp #$FF				;Was it $FF - this indicates a jump
1600+  85D9 D0 26                               bne ?rm15
1601+  85DB BD 80 03                            lda ch_freq_lcnt,X		;Get last jump count
1602+  85DE F0 08                               beq ?ldjcnt				;If it was zero then this is first time, load count
1603+  85E0 DE 80 03                            dec ch_freq_lcnt,X
1604+  85E3 D0 08                               bne ?rm14
1605+  85E5 C8                                  iny 
1606+  85E6                                 \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
1606+  85E6             
1606+  85E6             
1606+  85E6~                                eqend
1606+  85E6~                                eqend
1606+  85E6~                                eqend
1606+  85E6             
1606+  85E6 D0 E8       
1606+  85E8             
1606+  85E8~                                eqend
1606+  85E8~                                eqend
1606+  85E8             
1607+  85E8 B1 0D       ?ldjcnt             lda (tuneptr,Y)         ;Get next byte... this is the JMP loop counter
1608+  85EA 9D 80 03                        sta ch_freq_lcnt,X		;Save it
1609+  85ED C8          ?rm14               iny 
1610+  85EE 38                              sec 
1611+  85EF A5 0D                           lda tuneptr				;Load loop offset (positive numbers go backwards)
1612+  85F1 F1 0D                           sbc (tuneptr,Y)         ;Subtract offset
1613+  85F3 85 0D                           sta tuneptr				;Save pointer update
1614+  85F5 9D 60 02                        sta ch_freq,X			;Save in RAM too
1615+  85F8                             \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BCC	*+5\ jmp	var2_\#else\ BCS	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1615+  85F8             
1615+  85F8             
1615+  85F8~                            ccend
1615+  85F8~                            ccend
1615+  85F8~                            ccend
1615+  85F8             
1615+  85F8 B0 D6       
1615+  85FA             
1615+  85FA~                            ccend
1615+  85FA~                            ccend
1615+  85FA             
1616+  85FA C6 0E                       dec tuneptr+1
1617+  85FC DE 70 02                    dec ch_freq+___CHNS,X
1618+  85FF                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BCS	*+5\ jmp	var2_\#else\ BCC	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1618+  85FF             
1618+  85FF             
1618+  85FF~                        csend
1618+  85FF~                        csend
1618+  85FF~                        csend
1618+  85FF             
1618+  85FF 90 CF       
1618+  8601             
1618+  8601~                        csend
1618+  8601~                        csend
1618+  8601             
1619+  8601 11 0D       ?rm15       ora (tuneptr,Y)         ;Get next tune data
1620+  8603 C8                      iny 
1621+  8604 C0 F9                   cpy #$F9
1622+  8606 11 0D                   ora (tuneptr,Y)         ;OR with next data
1623+  8608 D0 07                   bne ?rm16
1624+  860A 9D 30 03                sta ch_freqdidx,X
1625+  860D A8                      tay 
1626+  860E 18                      clc 
1627+  860F                         \ .push  *, 0 \ BEQ  * 
1627+  860F             
1627+  860F F0 FE       
1628+  8611 98          ?rm16           tya 
1629+  8612                             \ .push  *, 0 \ BCC  * 
1629+  8612             
1629+  8612 90 FE       
1630+  8614 E9 02                           sbc #02
1631+  8616 7D 60 02                        adc ch_freq,X
1632+  8619 9D 60 02                        sta ch_freq,X
1633+  861C A9 01                           lda #01
1634+  861E                                 \ .push  *, 0 \ BCC  * 
1634+  861E             
1634+  861E 90 FE       
1635+  8620 FE 70 02                            inc ch_freq+___CHNS,X
1636+  8623                                 \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1636+  8623             
1636+  8623             
1636+  8623             
1636+  8623             
1636+  8623             
1636+  8623             
1636+  8623~                                endif
1636+  8623~                                endif
1636+  8623             
1636+  8623~                                endif
1636+  8623~                                endif
1636+  8623             
1636+  861F             
1636+  861F 03          
1636+  8620             
1636+  8620             
1636+  8620~                                endif
1636+  8620~                                endif
1636+  8620~                                endif
1636+  8620             
1636+  8620~                                endif
1636+  8620~                                endif
1636+  8620~                                endif
1636+  8620             
1636+  8623             
1636+  8623~                                endif
1636+  8623~                                endif
1636+  8623             
1637+  8623                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1637+  8623             
1637+  8623             
1637+  8623             
1637+  8623             
1637+  8623             
1637+  8623             
1637+  8623~                            endif
1637+  8623~                            endif
1637+  8623             
1637+  8623~                            endif
1637+  8623~                            endif
1637+  8623             
1637+  8613             
1637+  8613 0F          
1637+  8614             
1637+  8614             
1637+  8614~                            endif
1637+  8614~                            endif
1637+  8614~                            endif
1637+  8614             
1637+  8614~                            endif
1637+  8614~                            endif
1637+  8614~                            endif
1637+  8614             
1637+  8623             
1637+  8623~                            endif
1637+  8623~                            endif
1637+  8623             
1638+  8623 9D 30 03                    sta ch_freqdidx,X
1639+  8626             ?rm17           ;here if FREQ counter is not zero yet
1640+  8626 A9 00       				lda #00
1641+  8628 85 12                       sta fasave+1
1642+  862A B1 0D                       lda (tuneptr,Y)         ;Get next FREQ data
1643+  862C                             \ .push  *, 0 \ BPL  * 
1643+  862C             
1643+  862C 10 FE       
1644+  862E C6 12                           dec fasave+1			;Make MSB negative for loaded byte
1645+  8630                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1645+  8630             
1645+  8630             
1645+  8630             
1645+  8630             
1645+  8630             
1645+  8630             
1645+  8630~                            endif
1645+  8630~                            endif
1645+  8630             
1645+  8630~                            endif
1645+  8630~                            endif
1645+  8630             
1645+  862D             
1645+  862D 02          
1645+  862E             
1645+  862E             
1645+  862E~                            endif
1645+  862E~                            endif
1645+  862E~                            endif
1645+  862E             
1645+  862E~                            endif
1645+  862E~                            endif
1645+  862E~                            endif
1645+  862E             
1645+  8630             
1645+  8630~                            endif
1645+  8630~                            endif
1645+  8630             
1646+  8630 85 11                       sta fasave				;Finish updating fasave (word) with data
1647+  8632 88                          dey 					;Put Y back
1648+  8633 B1 0D                       lda (tuneptr,Y)         ;Get next FREQ data (LSB)
1649+  8635 0A                          asl A
1650+  8636 26 11                       rol fasave
1651+  8638 26 12                       rol fasave+1
1652+  863A 0A                          asl A
1653+  863B 26 11                       rol fasave
1654+  863D 26 12                       rol fasave+1
1655+  863F 0A                          asl A
1656+  8640 26 11                       rol fasave
1657+  8642 26 12                       rol fasave+1
1658+  8644 18                          clc 
1659+  8645 7D 50 03                    adc ch_freq_lastd,X
1660+  8648 9D 50 03                    sta ch_freq_lastd,X
1661+  864B A5 11                       lda fasave				
1662+  864D 7D 60 03                    adc ch_freq_last,X
1663+  8650 9D 60 03                    sta ch_freq_last,X
1664+  8653 85 11                       sta fasave
1665+  8655 A5 12                       lda fasave+1
1666+  8657 7D 70 03                    adc ch_freq_last+___CHNS,X
1667+  865A 9D 70 03                    sta ch_freq_last+___CHNS,X
1668+  865D A8                          tay 
1669+  865E 18                          clc 
1670+  865F A5 11                       lda fasave
1671+  8661                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1671+  8661             
1671+  8661             
1671+  8661             
1671+  8661             
1671+  8661             
1671+  8661             
1671+  8661~                        endif
1671+  8661~                        endif
1671+  8661             
1671+  8661~                        endif
1671+  8661~                        endif
1671+  8661             
1671+  8610             
1671+  8610 50          
1671+  8611             
1671+  8611             
1671+  8611~                        endif
1671+  8611~                        endif
1671+  8611~                        endif
1671+  8611             
1671+  8611~                        endif
1671+  8611~                        endif
1671+  8611~                        endif
1671+  8611             
1671+  8661             
1671+  8661~                        endif
1671+  8661~                        endif
1671+  8661             
1672+  8661                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1672+  8661             
1672+  8661             
1672+  8661             
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661             
1672+  85C9             
1672+  85C9 61 86       
1672+  85CB             
1672+  8661             
1672+  8661~                    endif
1672+  8661~                    endif
1672+  8661             
1673+  8661 7D 80 02            adc ch_mys_28,X
1674+  8664 85 11               sta fasave
1675+  8666 98                  tya 
1676+  8667 7D 90 02            adc ch_mys_29,X
1677+  866A A8                  tay 
1678+  866B 18                  clc 
1679+  866C A5 11               lda fasave
1680+  866E 7D F0 03            adc ch_synthfadj,X
1681+  8671 85 11               sta fasave
1682+  8673 98                  tya 
1683+  8674 7D 00 04            adc ch_synthfadj+___CHNS,X
1684+  8677 8D CB 04            sta po_even_freq
1685+  867A AC C3 04            ldy po_even_odd
1686+  867D A5 11               lda fasave
1687+  867F 99 C9 04            sta loc_odd_freq,Y
1688+  8682             		;*****************************
1689+  8682             		; Process CTRL Data Stream
1690+  8682             		;*****************************
1691+  8682 BD 40 02            lda ch_ctrl_l,X
1692+  8685 85 0D               sta tuneptr
1693+  8687 BD 50 02            lda ch_ctrl_h,X
1694+  868A 85 0E               sta tuneptr+1				;Set up pointers again
1695+  868C BC F0 02            ldy ch_ctrldidx,X			;Do we have data at this index?
1696+  868F                     \ .push  *, 0 \ BNE  * 		
1696+  868F             
1696+  868F D0 FE       
1697+  8691 BD C0 02    ?2ctrldone  lda ch_vol,X
1698+  8694 4C 16 87                jmp ?ctrldone				;Nope, move on
1699+  8697                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1699+  8697             
1699+  8697             
1699+  8697             
1699+  8697             
1699+  8697             
1699+  8697             
1699+  8697~                    endif
1699+  8697~                    endif
1699+  8697             
1699+  8697~                    endif
1699+  8697~                    endif
1699+  8697             
1699+  8690             
1699+  8690 06          
1699+  8691             
1699+  8691             
1699+  8691~                    endif
1699+  8691~                    endif
1699+  8691~                    endif
1699+  8691             
1699+  8691~                    endif
1699+  8691~                    endif
1699+  8691~                    endif
1699+  8691             
1699+  8697             
1699+  8697~                    endif
1699+  8697~                    endif
1699+  8697             
1700+  8697 DE 00 03            dec ch_ctrl_run,X			;-1.... is it ready now for action?
1701+  869A                     \ .push  *, 0 \ BNE  * 		
1701+  869A             
1701+  869A D0 FE       
1702+  869C                         \ .push  *, 2
1702+  869C             
1703+  869C                             \ .push  *, 2
1703+  869C             
1704+  869C                                 \ .push  *, 2
1704+  869C             
1705+  869C C8                                  iny 
1706+  869D B1 0D                               lda (tuneptr,Y)         ;Get next CTRL data
1707+  869F 9D 00 03                            sta ch_ctrl_run,X
1708+  86A2 C8                                  iny 					;move next
1709+  86A3 C9 FF                               cmp #$FF				;Is this a branch/jump
1710+  86A5 D0 26                               bne ?rm22
1711+  86A7 BD 20 03                            lda ch_ctrl_lcnt,X		;Yes, load the previous loop counter
1712+  86AA F0 08                               beq ?rm20
1713+  86AC DE 20 03                            dec ch_ctrl_lcnt,X		;If it wasn't zero, then this is weird, subtract one
1714+  86AF D0 08                               bne ?rm21				;branch if was at != 1 originally
1715+  86B1 C8                                  iny 
1716+  86B2                                 \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
1716+  86B2             
1716+  86B2             
1716+  86B2~                                eqend
1716+  86B2~                                eqend
1716+  86B2~                                eqend
1716+  86B2             
1716+  86B2 D0 E8       
1716+  86B4             
1716+  86B4~                                eqend
1716+  86B4~                                eqend
1716+  86B4             
1717+  86B4 B1 0D       ?rm20               lda (tuneptr,Y)         ;Load the loop counter and save it
1718+  86B6 9D 20 03                        sta ch_ctrl_lcnt,X
1719+  86B9 C8          ?rm21               iny 
1720+  86BA 38                              sec 
1721+  86BB A5 0D                           lda tuneptr
1722+  86BD F1 0D                           sbc (tuneptr,Y)         ;Subtract the offset
1723+  86BF 85 0D                           sta tuneptr
1724+  86C1 9D 40 02                        sta ch_ctrl_l,X			;Save it and continue
1725+  86C4                             \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BCC	*+5\ jmp	var2_\#else\ BCS	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1725+  86C4             
1725+  86C4             
1725+  86C4~                            ccend
1725+  86C4~                            ccend
1725+  86C4~                            ccend
1725+  86C4             
1725+  86C4 B0 D6       
1725+  86C6             
1725+  86C6~                            ccend
1725+  86C6~                            ccend
1725+  86C6             
1726+  86C6 C6 0E                       dec tuneptr+1
1727+  86C8 DE 50 02                    dec ch_ctrl_h,X
1728+  86CB                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BCS	*+5\ jmp	var2_\#else\ BCC	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1728+  86CB             
1728+  86CB             
1728+  86CB~                        csend
1728+  86CB~                        csend
1728+  86CB~                        csend
1728+  86CB             
1728+  86CB 90 CF       
1728+  86CD             
1728+  86CD~                        csend
1728+  86CD~                        csend
1728+  86CD             
1729+  86CD C0 F9       ?rm22       cpy #$F9				;This must be the max length of a CTRL data stream?
1730+  86CF 11 0D                   ora (tuneptr,Y)         ;OR with next data
1731+  86D1                         \ .push  *, 0 \ BNE  * 		
1731+  86D1             
1731+  86D1 D0 FE       
1732+  86D3 9D F0 02                    sta ch_ctrldidx,X		;CTRL data stream is done, end this sound 
1733+  86D6 4C 91 86                    jmp ?2ctrldone
1734+  86D9                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1734+  86D9             
1734+  86D9             
1734+  86D9             
1734+  86D9             
1734+  86D9             
1734+  86D9             
1734+  86D9~                        endif
1734+  86D9~                        endif
1734+  86D9             
1734+  86D9~                        endif
1734+  86D9~                        endif
1734+  86D9             
1734+  86D2             
1734+  86D2 06          
1734+  86D3             
1734+  86D3             
1734+  86D3~                        endif
1734+  86D3~                        endif
1734+  86D3~                        endif
1734+  86D3             
1734+  86D3~                        endif
1734+  86D3~                        endif
1734+  86D3~                        endif
1734+  86D3             
1734+  86D9             
1734+  86D9~                        endif
1734+  86D9~                        endif
1734+  86D9             
1735+  86D9 98                      tya 
1736+  86DA                         \ .push  *, 0 \ BCC  * 					;If the first CTRL data is $F9 or greater, then do this..
1736+  86DA             
1736+  86DA 90 FE       
1737+  86DC E9 02                       sbc #02				;This is (FirstByte|SecondByte)-2
1738+  86DE 7D 40 02                    adc ch_ctrl_l,X
1739+  86E1 9D 40 02                    sta ch_ctrl_l,X			;Adjust the outside loop by this amount (allows a loop to update data)
1740+  86E4 A9 01                       lda #01
1741+  86E6                             \ .push  *, 0 \ BCC  * 
1741+  86E6             
1741+  86E6 90 FE       
1742+  86E8 FE 50 02                        inc ch_ctrl_h,X
1743+  86EB                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1743+  86EB             
1743+  86EB             
1743+  86EB             
1743+  86EB             
1743+  86EB             
1743+  86EB             
1743+  86EB~                            endif
1743+  86EB~                            endif
1743+  86EB             
1743+  86EB~                            endif
1743+  86EB~                            endif
1743+  86EB             
1743+  86E7             
1743+  86E7 03          
1743+  86E8             
1743+  86E8             
1743+  86E8~                            endif
1743+  86E8~                            endif
1743+  86E8~                            endif
1743+  86E8             
1743+  86E8~                            endif
1743+  86E8~                            endif
1743+  86E8~                            endif
1743+  86E8             
1743+  86EB             
1743+  86EB~                            endif
1743+  86EB~                            endif
1743+  86EB             
1744+  86EB                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1744+  86EB             
1744+  86EB             
1744+  86EB             
1744+  86EB             
1744+  86EB             
1744+  86EB             
1744+  86EB~                        endif
1744+  86EB~                        endif
1744+  86EB             
1744+  86EB~                        endif
1744+  86EB~                        endif
1744+  86EB             
1744+  86DB             
1744+  86DB 0F          
1744+  86DC             
1744+  86DC             
1744+  86DC~                        endif
1744+  86DC~                        endif
1744+  86DC~                        endif
1744+  86DC             
1744+  86DC~                        endif
1744+  86DC~                        endif
1744+  86DC~                        endif
1744+  86DC             
1744+  86EB             
1744+  86EB~                        endif
1744+  86EB~                        endif
1744+  86EB             
1745+  86EB 9D F0 02                sta ch_ctrldidx,X		;Save our last CTRL data indexer
1746+  86EE                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1746+  86EE             
1746+  86EE             
1746+  86EE             
1746+  86EE             
1746+  86EE             
1746+  86EE             
1746+  86EE~                    endif
1746+  86EE~                    endif
1746+  86EE             
1746+  86EE~                    endif
1746+  86EE~                    endif
1746+  86EE             
1746+  869B             
1746+  869B 52          
1746+  869C             
1746+  869C             
1746+  869C~                    endif
1746+  869C~                    endif
1746+  869C~                    endif
1746+  869C             
1746+  869C~                    endif
1746+  869C~                    endif
1746+  869C~                    endif
1746+  869C             
1746+  86EE             
1746+  86EE~                    endif
1746+  86EE~                    endif
1746+  86EE             
1747+  86EE B1 0D               lda (tuneptr,Y)         ;Get next CTRL data byte (Addend)
1748+  86F0 18                  clc 
1749+  86F1 7D 10 03            adc ch_ctrl_lastv,X		;Add it to the last value for this control, running sum value
1750+  86F4                     \ .push  *, 0 \ BVC  * 
1750+  86F4             
1750+  86F4 50 FE       
1751+  86F6 A9 80                   lda #$80
1752+  86F8                         \ .push  *, 0 \ BCS  * 
1752+  86F8             
1752+  86F8 B0 FE       
1753+  86FA A9 7F                       lda #$7F
1754+  86FC                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1754+  86FC             
1754+  86FC             
1754+  86FC             
1754+  86FC             
1754+  86FC             
1754+  86FC             
1754+  86FC~                        endif
1754+  86FC~                        endif
1754+  86FC             
1754+  86FC~                        endif
1754+  86FC~                        endif
1754+  86FC             
1754+  86F9             
1754+  86F9 02          
1754+  86FA             
1754+  86FA             
1754+  86FA~                        endif
1754+  86FA~                        endif
1754+  86FA~                        endif
1754+  86FA             
1754+  86FA~                        endif
1754+  86FA~                        endif
1754+  86FA~                        endif
1754+  86FA             
1754+  86FC             
1754+  86FC~                        endif
1754+  86FC~                        endif
1754+  86FC             
1755+  86FC                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1755+  86FC             
1755+  86FC             
1755+  86FC             
1755+  86FC             
1755+  86FC             
1755+  86FC             
1755+  86FC~                    endif
1755+  86FC~                    endif
1755+  86FC             
1755+  86FC~                    endif
1755+  86FC~                    endif
1755+  86FC             
1755+  86F5             
1755+  86F5 06          
1755+  86F6             
1755+  86F6             
1755+  86F6~                    endif
1755+  86F6~                    endif
1755+  86F6~                    endif
1755+  86F6             
1755+  86F6~                    endif
1755+  86F6~                    endif
1755+  86F6~                    endif
1755+  86F6             
1755+  86FC             
1755+  86FC~                    endif
1755+  86FC~                    endif
1755+  86FC             
1756+  86FC 9D 10 03            sta ch_ctrl_lastv,X		;Save adjusted control value
1757+  86FF 4A                  lsr A
1758+  8700 4A                  lsr A
1759+  8701 4A                  lsr A
1760+  8702 C9 10               cmp #$10				;Signed upper nybble, FORCED VOLUME
1761+  8704                     \ .push  *, 0 \ BCC  * 
1761+  8704             
1761+  8704 90 FE       
1762+  8706 09 F0                   ora #$F0				;Mask for PCM Data in LSB
1763+  8708                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8708             
1763+  8708             
1763+  8708             
1763+  8708             
1763+  8708             
1763+  8708             
1763+  8708~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8708~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8708             
1763+  8708~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8708~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8708             
1763+  8705             
1763+  8705 02          
1763+  8706             
1763+  8706             
1763+  8706~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8706~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8706~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8706             
1763+  8706~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8706~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8706~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8706             
1763+  8708             
1763+  8708~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8708~                    endif					;Examples: $3C -> $07, $CC -> $F7
1763+  8708             
1764+  8708 18                  clc 
1765+  8709 7D C0 02            adc ch_vol,X			;Add base volume level back in
1766+  870C                     \ .push  *, 0 \ BPL  * 
1766+  870C             
1766+  870C 10 FE       
1767+  870E A9 00                   lda #00
1768+  8710                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1768+  8710             
1768+  8710             
1768+  8710             
1768+  8710             
1768+  8710             
1768+  8710             
1768+  8710~                    endif
1768+  8710~                    endif
1768+  8710             
1768+  8710~                    endif
1768+  8710~                    endif
1768+  8710             
1768+  870D             
1768+  870D 02          
1768+  870E             
1768+  870E             
1768+  870E~                    endif
1768+  870E~                    endif
1768+  870E~                    endif
1768+  870E             
1768+  870E~                    endif
1768+  870E~                    endif
1768+  870E~                    endif
1768+  870E             
1768+  8710             
1768+  8710~                    endif
1768+  8710~                    endif
1768+  8710             
1769+  8710 C9 10               cmp #$10
1770+  8712                     \ .push  *, 0 \ BCC  * 
1770+  8712             
1770+  8712 90 FE       
1771+  8714 A9 0F                   lda #$0F			;If it flipped (over 15), then reset to Max volume
1772+  8716                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1772+  8716             
1772+  8716             
1772+  8716             
1772+  8716             
1772+  8716             
1772+  8716             
1772+  8716~                    endif
1772+  8716~                    endif
1772+  8716             
1772+  8716~                    endif
1772+  8716~                    endif
1772+  8716             
1772+  8713             
1772+  8713 02          
1772+  8714             
1772+  8714             
1772+  8714~                    endif
1772+  8714~                    endif
1772+  8714~                    endif
1772+  8714             
1772+  8714~                    endif
1772+  8714~                    endif
1772+  8714~                    endif
1772+  8714             
1772+  8716             
1772+  8716~                    endif
1772+  8716~                    endif
1772+  8716             
1773+  8716             		;Fall through
1774+  8716             ?ctrldone   
1775+  8716 1D D0 03    		ora ch_ctrlmask,X			;Get the TONE bits that define the poly dividers etc
1776+  8719 AC C3 04    rnext   ldy po_even_odd
1777+  871C 99 C7 04            sta po_odd_cont,Y
1778+  871F E0 10               cpx #$10
1779+  8721                     \ .push  *, 0 \ BCS  * 
1779+  8721             
1779+  8721 B0 FE       
1780+  8723 BD 90 04                lda ch_mys_49,X
1781+  8726 99 CE 04                sta po_4ce,Y
1782+  8729 BD 80 04                lda ch_mys_48,X
1783+  872C 99 D2 04                sta po_4d2,Y
1784+  872F                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1784+  872F             
1784+  872F             
1784+  872F             
1784+  872F             
1784+  872F             
1784+  872F             
1784+  872F~                    endif
1784+  872F~                    endif
1784+  872F             
1784+  872F~                    endif
1784+  872F~                    endif
1784+  872F             
1784+  8722             
1784+  8722 0C          
1784+  8723             
1784+  8723             
1784+  8723~                    endif
1784+  8723~                    endif
1784+  8723~                    endif
1784+  8723             
1784+  8723~                    endif
1784+  8723~                    endif
1784+  8723~                    endif
1784+  8723             
1784+  872F             
1784+  872F~                    endif
1784+  872F~                    endif
1784+  872F             
1785+  872F BD A0 04            lda preg_chanp,X
1786+  8732                     \ .push  *, 0 \ BEQ  * 
1786+  8732             
1786+  8732 F0 FE       
1787+  8734 8E CC 04                stx po_4cc
1788+  8737 AA                      tax 
1789+  8738 CA                      dex 
1790+  8739 4C 1C 84                jmp rpmmain
1791+  873C                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1791+  873C             
1791+  873C             
1791+  873C             
1791+  873C             
1791+  873C             
1791+  873C             
1791+  873C~                    endif
1791+  873C~                    endif
1791+  873C             
1791+  873C~                    endif
1791+  873C~                    endif
1791+  873C             
1791+  8733             
1791+  8733 08          
1791+  8734             
1791+  8734             
1791+  8734~                    endif
1791+  8734~                    endif
1791+  8734~                    endif
1791+  8734             
1791+  8734~                    endif
1791+  8734~                    endif
1791+  8734~                    endif
1791+  8734             
1791+  873C             
1791+  873C~                    endif
1791+  873C~                    endif
1791+  873C             
1792+  873C 60                  rts 
1793+  873D             
1794+  873D             ;***************************************************************
1795+  873D             ;* Parse the next RPM instruction from the logic loop.
1796+  873D             ;* 
1797+  873D             ;* Y = channel offset
1798+  873D             ;*
1799+  873D             ;* If Carry SET on return, then channels is configured for 
1800+  873D             ;* 16-Bit Frequency Register values.
1801+  873D             ;***************************************************************
1802+  873D             rpm_inst    
1803+  873D 98                  tya 				;Preserve Y
1804+  873E 48                  pha 
1805+  873F C8                  iny                 ;Goto next index first (jump head, will go back down below)
1806+  8740 A9 00               lda #00             ;Clear all of these parameters by default
1807+  8742 8D C4 04            sta po_4c4
1808+  8745 8D C5 04            sta loc_even_cont
1809+  8748 8D C1 04            sta po_4c1
1810+  874B 8D C2 04            sta po_4c2
1811+  874E 8D C8 04            sta po_even_cont
1812+  8751 8D C7 04            sta po_odd_cont
1813+  8754 8D CE 04            sta po_4ce
1814+  8757 8D CF 04            sta po_4cf
1815+  875A 8D D0 04            sta po_4d0
1816+  875D A9 FF               lda #$FF            ;Set to -1 for these
1817+  875F 8D D2 04            sta po_4d2
1818+  8762 8D D3 04            sta po_4d3
1819+  8765 8D D4 04            sta po_4d4
1820+  8768 BE A0 04            ldx ch_mys_4b-$10,Y		;Data has $10 added
1821+  876B                     \ .push  *, 0 \ BEQ  * 					;If not zero, then we have something to do
1821+  876B             
1821+  876B F0 FE       
1822+  876D CA                      dex 
1823+  876E 8C CC 04                sty po_4cc
1824+  8771 20 1C 84                jsr rpmmain
1825+  8774 AD C1 04                lda po_4c1
1826+  8777 8D C4 04                sta po_4c4
1827+  877A 4A                      lsr A
1828+  877B C5 13                   cmp silevel
1829+  877D A9 00                   lda #00
1830+  877F                         \ .push  *, 0 \ BCC  * 
1830+  877F             
1830+  877F 90 FE       
1831+  8781 AD CE 04                    lda po_4ce
1832+  8784 8D D0 04                    sta po_4d0
1833+  8787 AD D2 04                    lda po_4d2
1834+  878A 8D D4 04                    sta po_4d4
1835+  878D AD C7 04                    lda po_odd_cont
1836+  8790                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1836+  8790             
1836+  8790             
1836+  8790             
1836+  8790             
1836+  8790             
1836+  8790             
1836+  8790~                        endif
1836+  8790~                        endif
1836+  8790             
1836+  8790~                        endif
1836+  8790~                        endif
1836+  8790             
1836+  8780             
1836+  8780 0F          
1836+  8781             
1836+  8781             
1836+  8781~                        endif
1836+  8781~                        endif
1836+  8781~                        endif
1836+  8781             
1836+  8781~                        endif
1836+  8781~                        endif
1836+  8781~                        endif
1836+  8781             
1836+  8790             
1836+  8790~                        endif
1836+  8790~                        endif
1836+  8790             
1837+  8790 8D C5 04                sta loc_even_cont
1838+  8793 AD C9 04                lda loc_odd_freq
1839+  8796 8D C6 04                sta loc_even_freq
1840+  8799 A9 00                   lda #00
1841+  879B 8D C1 04                sta po_4c1
1842+  879E 8D C2 04                sta po_4c2
1843+  87A1 8D C8 04                sta po_even_cont
1844+  87A4 8D C7 04                sta po_odd_cont
1845+  87A7 8D CE 04                sta po_4ce
1846+  87AA 8D CF 04                sta po_4cf
1847+  87AD A9 FF                   lda #$FF
1848+  87AF 8D D2 04                sta po_4d2
1849+  87B2 8D D3 04                sta po_4d3
1850+  87B5                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1850+  87B5             
1850+  87B5             
1850+  87B5             
1850+  87B5             
1850+  87B5             
1850+  87B5             
1850+  87B5~                    endif
1850+  87B5~                    endif
1850+  87B5             
1850+  87B5~                    endif
1850+  87B5~                    endif
1850+  87B5             
1850+  876C             
1850+  876C 48          
1850+  876D             
1850+  876D             
1850+  876D~                    endif
1850+  876D~                    endif
1850+  876D~                    endif
1850+  876D             
1850+  876D~                    endif
1850+  876D~                    endif
1850+  876D~                    endif
1850+  876D             
1850+  87B5             
1850+  87B5~                    endif
1850+  87B5~                    endif
1850+  87B5             
1851+  87B5 68                  pla 
1852+  87B6 A8                  tay 
1853+  87B7 BE A0 04            ldx ch_mys_4b-$10,Y			;Data has $10 added
1854+  87BA                     \ .push  *, 0 \ BEQ  * 
1854+  87BA             
1854+  87BA F0 FE       
1855+  87BC CA                      dex 
1856+  87BD 8C CC 04                sty po_4cc
1857+  87C0 20 1C 84                jsr rpmmain
1858+  87C3                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1858+  87C3             
1858+  87C3             
1858+  87C3             
1858+  87C3             
1858+  87C3             
1858+  87C3             
1858+  87C3~                    endif
1858+  87C3~                    endif
1858+  87C3             
1858+  87C3~                    endif
1858+  87C3~                    endif
1858+  87C3             
1858+  87BB             
1858+  87BB 07          
1858+  87BC             
1858+  87BC             
1858+  87BC~                    endif
1858+  87BC~                    endif
1858+  87BC~                    endif
1858+  87BC             
1858+  87BC~                    endif
1858+  87BC~                    endif
1858+  87BC~                    endif
1858+  87BC             
1858+  87C3             
1858+  87C3~                    endif
1858+  87C3~                    endif
1858+  87C3             
1859+  87C3 AD C1 04            lda po_4c1
1860+  87C6 CD C2 04            cmp po_4c2
1861+  87C9                     \ .push  *, 0 \ BCS  * 
1861+  87C9             
1861+  87C9 B0 FE       
1862+  87CB AD C2 04                lda po_4c2
1863+  87CE                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1863+  87CE             
1863+  87CE             
1863+  87CE             
1863+  87CE             
1863+  87CE             
1863+  87CE             
1863+  87CE~                    endif
1863+  87CE~                    endif
1863+  87CE             
1863+  87CE~                    endif
1863+  87CE~                    endif
1863+  87CE             
1863+  87CA             
1863+  87CA 03          
1863+  87CB             
1863+  87CB             
1863+  87CB~                    endif
1863+  87CB~                    endif
1863+  87CB~                    endif
1863+  87CB             
1863+  87CB~                    endif
1863+  87CB~                    endif
1863+  87CB~                    endif
1863+  87CB             
1863+  87CE             
1863+  87CE~                    endif
1863+  87CE~                    endif
1863+  87CE             
1864+  87CE 4A                  lsr A
1865+  87CF C5 13               cmp silevel
1866+  87D1                     \ .push  *, 0 \ BCS  * 
1866+  87D1             
1866+  87D1 B0 FE       
1867+  87D3 A9 00                   lda #00
1868+  87D5 8D C7 04                sta po_odd_cont
1869+  87D8 8D C8 04                sta po_even_cont
1870+  87DB 8D CE 04                sta po_4ce
1871+  87DE 8D CF 04                sta po_4cf
1872+  87E1 A9 FF                   lda #$FF
1873+  87E3 8D D2 04                sta po_4d2
1874+  87E6 8D D3 04                sta po_4d3
1875+  87E9                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1875+  87E9             
1875+  87E9             
1875+  87E9             
1875+  87E9             
1875+  87E9             
1875+  87E9             
1875+  87E9~                    endif
1875+  87E9~                    endif
1875+  87E9             
1875+  87E9~                    endif
1875+  87E9~                    endif
1875+  87E9             
1875+  87D2             
1875+  87D2 16          
1875+  87D3             
1875+  87D3             
1875+  87D3~                    endif
1875+  87D3~                    endif
1875+  87D3~                    endif
1875+  87D3             
1875+  87D3~                    endif
1875+  87D3~                    endif
1875+  87D3~                    endif
1875+  87D3             
1875+  87E9             
1875+  87E9~                    endif
1875+  87E9~                    endif
1875+  87E9             
1876+  87E9 AD C1 04            lda po_4c1
1877+  87EC CD C4 04            cmp po_4c4
1878+  87EF                     \ .push  *, 0 \ BCC  * 
1878+  87EF             
1878+  87EF 90 FE       
1879+  87F1 8D C4 04                sta po_4c4
1880+  87F4                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1880+  87F4             
1880+  87F4             
1880+  87F4             
1880+  87F4             
1880+  87F4             
1880+  87F4             
1880+  87F4~                    endif
1880+  87F4~                    endif
1880+  87F4             
1880+  87F4~                    endif
1880+  87F4~                    endif
1880+  87F4             
1880+  87F0             
1880+  87F0 03          
1880+  87F1             
1880+  87F1             
1880+  87F1~                    endif
1880+  87F1~                    endif
1880+  87F1~                    endif
1880+  87F1             
1880+  87F1~                    endif
1880+  87F1~                    endif
1880+  87F1~                    endif
1880+  87F1             
1880+  87F4             
1880+  87F4~                    endif
1880+  87F4~                    endif
1880+  87F4             
1881+  87F4 AD C2 04            lda po_4c2
1882+  87F7 CD C4 04            cmp po_4c4
1883+  87FA                     \ .push  *, 0 \ BCC  * 
1883+  87FA             
1883+  87FA 90 FE       
1884+  87FC             			;Carry Set: 16-Bit Audio Config
1885+  87FC A9 00                   lda #00
1886+  87FE 8D C7 04                sta po_odd_cont
1887+  8801 AD D3 04                lda po_4d3
1888+  8804 2D D5 04                and po_audctl_mask
1889+  8807 8D D5 04                sta po_audctl_mask
1890+  880A AD CF 04                lda po_4cf
1891+  880D 0D D1 04                ora po_audctl
1892+  8810                         ;rts
1893+  8810             		\var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif
1893+  8810             
1893+  8810             
1893+  8810             
1893+  8810             
1893+  87FB             
1893+  87FB             
1893+  87FB             
1893+  87FB~            		else
1893+  87FB~            		else
1893+  87FB             
1893+  87FB~            		else
1893+  87FB~            		else
1893+  87FB             
1893+  87FB 17          
1893+  8810             
1893+  8810             
1893+  8810 4C 10 88    
1893+  8813             
1893+  8813             
1893+  8813~            		else
1893+  8813~            		else
1893+  8813~            		else
1893+  8813~            		else
1893+  8813~            		else
1893+  8813             
1893+  8813~            		else
1893+  8813~            		else
1893+  8813             
1893+  8813~            		else
1893+  8813~            		else
1893+  8813             
1894+  8813             			;Carry Clear: 8-Bit Audio Config
1895+  8813 AD C6 04    			lda loc_even_freq
1896+  8816 8D CB 04    			sta po_even_freq        ;This is the data that will be written to the EVEN Channel AUDF register
1897+  8819 AD C9 04    			lda loc_odd_freq
1898+  881C 8D CA 04    			sta po_odd_freq         ;This is the data that will be written to the ODD Channel AUDF register
1899+  881F AD C5 04    			lda loc_even_cont
1900+  8822 8D C8 04    			sta po_even_cont        
1901+  8825 AD D2 04    			lda po_4d2
1902+  8828 2D D4 04    			and po_4d4
1903+  882B 2D D5 04    			and po_audctl_mask
1904+  882E 8D D5 04    			sta po_audctl_mask
1905+  8831 AD CE 04    			lda po_4ce
1906+  8834 0D D0 04    			ora po_4d0
1907+  8837 0D D1 04    			ora po_audctl
1908+  883A             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1908+  883A             
1908+  883A             
1908+  883A             
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A             
1908+  8811             
1908+  8811 3A 88       
1908+  8813             
1908+  883A             
1908+  883A~            		endif
1908+  883A~            		endif
1908+  883A             
1909+  883A             		;Carry comes out too
1910+  883A 60                  rts 
1911+  883B             
1912+  883B             ;**************************************************************
1913+  883B                 .sbttl "Pokey Dump"
1914+  883B             ;**************************************************************
1915+  883B             ;* This routine will dump data specific to a physical pokey   
1916+  883B             ;* chip. The base address of the pokey chip to update is in   
1917+  883B             ;* devptr.                                       
1918+  883B             ;*                                                            
1919+  883B             ;* Inputs: X = Pokey Chip Index                               
1920+  883B             ;* Pokey Base Address: devptr
1921+  883B             ;* Channel Offset: po_choff
1922+  883B             ;**************************************************************
1923+  883B A9 00       updpok  lda #00
1924+  883D 8D D1 04            sta po_audctl
1925+  8840 A9 FF               lda #$FF
1926+  8842 8D D5 04            sta po_audctl_mask  ;Unmask all bits here
1927+  8845 8A                  txa 
1928+  8846 48                  pha             ;Push pokey index for later
1929+  8847 BD E8 8A            lda choffl,X    ;Load this chips channel offset
1930+  884A 48                  pha             ;Push for later
1931+  884B A8                  tay 
1932+  884C C8                  iny 
1933+  884D C8                  iny             ;Y = channel offset + 2
1934+  884E 20 3D 87            jsr rpm_inst
1935+  8851                     \ .push  *, 0 \ BCC  * 
1935+  8851             
1935+  8851 90 FE       
1936+  8853 09 28                   ora #AUDCTL_CH3_179+AUDCTL_34_16B   ;#$28
1937+  8855                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1937+  8855             
1937+  8855             
1937+  8855             
1937+  8855             
1937+  8855             
1937+  8855             
1937+  8855~                    endif
1937+  8855~                    endif
1937+  8855             
1937+  8855~                    endif
1937+  8855~                    endif
1937+  8855             
1937+  8852             
1937+  8852 02          
1937+  8853             
1937+  8853             
1937+  8853~                    endif
1937+  8853~                    endif
1937+  8853~                    endif
1937+  8853             
1937+  8853~                    endif
1937+  8853~                    endif
1937+  8853~                    endif
1937+  8853             
1937+  8855             
1937+  8855~                    endif
1937+  8855~                    endif
1937+  8855             
1938+  8855 8D D1 04            sta po_audctl
1939+  8858 A0 04               ldy #04             
1940+  885A AD CA 04            lda po_odd_freq
1941+  885D 91 0F               sta (devptr,Y)       ;Pokey Channel 3 Freq
1942+  885F C8                  iny 
1943+  8860 C8                  iny 
1944+  8861 AD CB 04            lda po_even_freq
1945+  8864 91 0F               sta (devptr,Y)       ;Pokey Channel 4 Freq
1946+  8866 88                  dey 
1947+  8867 AD C7 04            lda po_odd_cont
1948+  886A 91 0F               sta (devptr,Y)       ;Pokey Channel 3 Control
1949+  886C C8                  iny 
1950+  886D C8                  iny 
1951+  886E AD C8 04            lda po_even_cont
1952+  8871 91 0F               sta (devptr,Y)       ;Pokey Channel 4 Control
1953+  8873             		
1954+  8873 68                  pla                     ;Pull pokey channel offset
1955+  8874 A8                  tay                     ;Channel Offset
1956+  8875 20 3D 87            jsr rpm_inst
1957+  8878                     \ .push  *, 0 \ BCC  * 
1957+  8878             
1957+  8878 90 FE       
1958+  887A 09 50                   ora #AUDCTL_CH1_179+AUDCTL_12_16B   ;$50    
1959+  887C                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1959+  887C             
1959+  887C             
1959+  887C             
1959+  887C             
1959+  887C             
1959+  887C             
1959+  887C~                    endif
1959+  887C~                    endif
1959+  887C             
1959+  887C~                    endif
1959+  887C~                    endif
1959+  887C             
1959+  8879             
1959+  8879 02          
1959+  887A             
1959+  887A             
1959+  887A~                    endif
1959+  887A~                    endif
1959+  887A~                    endif
1959+  887A             
1959+  887A~                    endif
1959+  887A~                    endif
1959+  887A~                    endif
1959+  887A             
1959+  887C             
1959+  887C~                    endif
1959+  887C~                    endif
1959+  887C             
1960+  887C 8D D1 04            sta po_audctl
1961+  887F 68                  pla                 ;Pull pokey chip index
1962+  8880 AA                  tax 
1963+  8881 AD D1 04            lda po_audctl
1964+  8884 2D D5 04            and po_audctl_mask
1965+  8887 A0 20               ldy #POKEY_AUDCTL       ;Offset to the AUDCTL Register for this entire POKEY
1966+  8889 91 0F               sta (devptr,Y)
1967+  888B A0 00               ldy #00
1968+  888D AD CA 04            lda po_odd_freq
1969+  8890 91 0F               sta (devptr,Y)       ;Pokey Channel 1 Freq
1970+  8892 C8                  iny 
1971+  8893 C8                  iny 
1972+  8894 AD CB 04            lda po_even_freq
1973+  8897 91 0F               sta (devptr,Y)       ;Pokey Channel 2 Freq
1974+  8899 88                  dey 
1975+  889A AD C7 04            lda po_odd_cont
1976+  889D 91 0F               sta (devptr,Y)       ;Pokey Channel 1 Control
1977+  889F C8                  iny 
1978+  88A0 C8                  iny 
1979+  88A1 AD C8 04            lda po_even_cont
1980+  88A4 91 0F               sta (devptr,Y)       ;Pokey Channel 2 Control
1981+  88A6 60                  rts
1982+  88A7             
1983+  88A7             ;****************************************
1984+  88A7             ;* This routine takes the index passed  *
1985+  88A7             ;* in X and sets up devptr to hold   *
1986+  88A7             ;* the address that updpok will update. *
1987+  88A7             ;****************************************   
1988+  88A7 BD DC 8A    dopokey lda devadl,X       ;Get Pokey LSB
1989+  88AA 85 0F               sta devptr
1990+  88AC BD E0 8A            lda devadh,X       ;Get Pokey MSB
1991+  88AF 85 10               sta devptr+1
1992+  88B1 BD E4 8A            lda choffh,X        ;Load the channel offset for later
1993+  88B4 8D CD 04            sta po_choff
1994+  88B7 4C 3B 88            jmp updpok      	;Update the selected pokey!
1995+  88BA             
1996+  88BA             ;****************************************
1997+  88BA             ;* Run a sound immediate command.         
1998+  88BA             ;****************************************       
1999+  88BA             simmsel   
2000+  88BA C9 9E               cmp #($80+_isccount)		;#isc_clctl+1    ;Base of 0x80(must be minus to be a function call) 
2001+  88BC                     \ .push  *, 0 \ BCC  *                 ;With a limit of functions (0x1C)
2001+  88BC             
2001+  88BC 90 FE       
2002+  88BE 4C FD 84                jmp sifin      ;Not a function selector
2003+  88C1                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2003+  88C1             
2003+  88C1             
2003+  88C1             
2003+  88C1             
2003+  88C1             
2003+  88C1             
2003+  88C1~                    endif
2003+  88C1~                    endif
2003+  88C1             
2003+  88C1~                    endif
2003+  88C1~                    endif
2003+  88C1             
2003+  88BD             
2003+  88BD 03          
2003+  88BE             
2003+  88BE             
2003+  88BE~                    endif
2003+  88BE~                    endif
2003+  88BE~                    endif
2003+  88BE             
2003+  88BE~                    endif
2003+  88BE~                    endif
2003+  88BE~                    endif
2003+  88BE             
2003+  88C1             
2003+  88C1~                    endif
2003+  88C1~                    endif
2003+  88C1             
2004+  88C1 C8                  iny 
2005+  88C2 86 11               stx fasave
2006+  88C4 0A                  asl A
2007+  88C5 AA                  tax 
2008+  88C6 BD FC 88            lda sfunctbl+1,X
2009+  88C9 48                  pha 
2010+  88CA BD FB 88            lda sfunctbl,X
2011+  88CD 48                  pha 
2012+  88CE A6 11               ldx fasave
2013+  88D0 B1 0D               lda (tuneptr,Y)     ;Get original data
2014+  88D2 BC 30 02            ldy ch_tuneptr+___CHNS,X
2015+  88D5 84 0E               sty tuneptr+1
2016+  88D7 38                  sec 
2017+  88D8 60                  rts 
2018+  88D9                     
2019+  88D9             ;*******************************************
2020+  88D9             ;* Prepares to call a sound immediate fuction
2021+  88D9             ;*
2022+  88D9             ;* Inputs:  Y = Method Select
2023+  88D9             ;*          X = Queue + 0x10
2024+  88D9             ;*******************************************
2025+  88D9             ssimm    
2026+  88D9 08                  php 
2027+  88DA 78                  sei 
2028+  88DB                     \ .push  *, 2
2028+  88DB             
2029+  88DB BD A0 04                lda preg_chanp,X
2030+  88DE F0 0D                   beq ?ms10
2031+  88E0 AA                      tax 
2032+  88E1 CA                      dex 
2033+  88E2 BD 00 02                lda ch_sid,X    
2034+  88E5 CD E0 05                cmp imm_id
2035+  88E8                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
2035+  88E8             
2035+  88E8             
2035+  88E8~                    eqend
2035+  88E8~                    eqend
2035+  88E8~                    eqend
2035+  88E8             
2035+  88E8 D0 F1       
2035+  88EA             
2035+  88EA~                    eqend
2035+  88EA~                    eqend
2035+  88EA             
2036+  88EA 20 EF 88            jsr dosimm
2037+  88ED 28          ?ms10   plp 
2038+  88EE 60                  rts
2039+  88EF             
2040+  88EF             ;************************************
2041+  88EF             ; Start an immediate-mode function
2042+  88EF             ;   command in Y
2043+  88EF             ;************************************        
2044+  88EF B9 FC 88    dosimm  lda sfunctbl+1,Y
2045+  88F2 48                  pha 
2046+  88F3 B9 FB 88            lda sfunctbl,Y
2047+  88F6 48                  pha 
2048+  88F7 AD E1 05            lda iarg    ;get the arg if passed too
2049+  88FA 60                  rts
2050+  88FB             
2051+  88FB             ;************************************************************************
2052+  88FB             ;* Special Sound Functions - These routines can be called from the main 
2053+  88FB             ;* tune definitions to alter the normal sounds.                         
2054+  88FB             ;*                                                                      
2055+  88FB             ;* All special functions will return with carry set or not set. 
2056+  88FB             ;************************************************************************
2057+  88FB             _isccount   = 0
2058+  88FB             _iscbase    = $
2059+  88FB             
2060+  88FB             #define ISCMD(name,entry)   \name .equ $80 +_isccount
2061+  88FB             #defcont                    \_isccount .set _isccount + 1
2062+  88FB             #defcont                    \ .word entry-1
2063+  88FB             #defcont                    \_iscbase .set _iscbase + 2
2064+  88FB             
2065+  88FB             #define SETSNDFREQ(envdata)    \ .db isc_freq,envdata
2066+  88FB             #define SETSNDCONT(envdata)    \ .db isc_ctrl,envdata
2067+  88FB             #define SETDIST(data)          \ .db isc_ctrlm,data
2068+  88FB             #define SETDCTL(data)          \ .db isc_dctl,data
2069+  88FB             #define SETBVOL(data)          \ .db isc_sebvol,data
2070+  88FB             #define ADDBVOL(data)          \ .db isc_adbvol,data
2071+  88FB             #define SETBFREQ(data)         \ .db isc_sbfreq,data
2072+  88FB             #define ADDBFREQ(data)         \ .db isc_abfreq,data
2073+  88FB             #define SETBFREQD(zpadd)       \ .db isc_sbfreqd,zpadd
2074+  88FB             #define ADDBFREQD(zpadd)       \ .db isc_abfreqd,zpadd
2075+  88FB             #define SETNRATE(data)         \ .db isc_srate,data
2076+  88FB             #define SJSR(data)             \ .db isc_sjsr,data
2077+  88FB             #define SLOOPSTART(data)       \ .db isc_sloops,data
2078+  88FB             #define SLOOPEND               \ .db isc_sloope,$00
2079+  88FB             #define SNOATTRACT             \ .db isc_sfunc10,$00
2080+  88FB             #define NOTE(npitch,ndur)      \ .db npitch,ndur
2081+  88FB             ;#define NOTESH(b1,b2,b3)       \ .db b1+b2,b3
2082+  88FB             #define ENDSND                 \ .dw $0000
2083+  88FB             
2084+  88FB             sfunctbl 
2085+  88FB                 \isc_srate .equ $80 +_isccount\_isccount .set _isccount + 1\ .word ssetrate-1\_iscbase .set _iscbase + 2   ;80 - Set Sample Rate Explicitly
2085+  88FB             
2085+  88FB             
2085+  88FB B6 89       
2085+  88FD             
2086+  88FD                 \isc_arate .equ $80 +_isccount\_isccount .set _isccount + 1\ .word saddrate-1\_iscbase .set _iscbase + 2   ;81 - Add to Sample Rate
2086+  88FD             
2086+  88FD             
2086+  88FD B2 89       
2086+  88FF             
2087+  88FF                 \isc_sebvol .equ $80 +_isccount\_isccount .set _isccount + 1\ .word ssebamp-1\_iscbase .set _iscbase + 2   ;82 - Set Amplitude
2087+  88FF             
2087+  88FF             
2087+  88FF BF 89       
2087+  8901             
2088+  8901                 \isc_adbvol .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sadbamp-1\_iscbase .set _iscbase + 2   ;83 - Add to Amplitude
2088+  8901             
2088+  8901             
2088+  8901 BB 89       
2088+  8903             
2089+  8903                 \isc_sbfreq .equ $80 +_isccount\_isccount .set _isccount + 1\ .word ssetkey-1\_iscbase .set _iscbase + 2   ;84 - Set Base Frequency 
2089+  8903             
2089+  8903             
2089+  8903 C8 89       
2089+  8905             
2090+  8905                 \isc_abfreq .equ $80 +_isccount\_isccount .set _isccount + 1\ .word saddkey-1\_iscbase .set _iscbase + 2   ;85 - Add to Base Frequency
2090+  8905             
2090+  8905             
2090+  8905 C4 89       
2090+  8907             
2091+  8907                 \isc_freq .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sfreqenv-1\_iscbase .set _iscbase + 2    ;86 - Set the Frequency Envelope?
2091+  8907             
2091+  8907             
2091+  8907 A3 89       
2091+  8909             
2092+  8909                 \isc_ctrl .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sampenv-1\_iscbase .set _iscbase + 2     ;87 - Set the Amplitune Envelope?
2092+  8909             
2092+  8909             
2092+  8909 94 89       
2092+  890B             
2093+  890B                 \isc_unk1 .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sfunc08-1\_iscbase .set _iscbase + 2     ;88 - 
2093+  890B             
2093+  890B             
2093+  890B 36 89       
2093+  890D             
2094+  890D                 \isc_unk2 .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sfunc09-1\_iscbase .set _iscbase + 2     ;89 - 
2094+  890D             
2094+  890D             
2094+  890D 8B 89       
2094+  890F             
2095+  890F                 \isc_ctrlm .equ $80 +_isccount\_isccount .set _isccount + 1\ .word ssetctrlm-1\_iscbase .set _iscbase + 2  ;8A - Set Channel Control Register
2095+  890F             
2095+  890F             
2095+  890F E3 89       
2095+  8911             
2096+  8911                 \isc_dctl .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sdctl-1\_iscbase .set _iscbase + 2       ;8B - Set Pokey Chip Control Register
2096+  8911             
2096+  8911             
2096+  8911 E7 89       
2096+  8913             
2097+  8913                 \isc_syn .equ $80 +_isccount\_isccount .set _isccount + 1\ .word ssynth-1\_iscbase .set _iscbase + 2       ;8C - Set value of SYNTH mode
2097+  8913             
2097+  8913             
2097+  8913 12 8A       
2097+  8915             
2098+  8915                 \isc_sjsr .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sjsr-1\_iscbase .set _iscbase + 2        ;8D - JSR to another 'Tune'?
2098+  8915             
2098+  8915             
2098+  8915 16 8A       
2098+  8917             
2099+  8917                 \isc_sloops .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sloopi-1\_iscbase .set _iscbase + 2    ;8E - Loop Start
2099+  8917             
2099+  8917             
2099+  8917 40 8A       
2099+  8919             
2100+  8919                 \isc_sloope .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sloopj-1\_iscbase .set _iscbase + 2    ;8F - Loop End
2100+  8919             
2100+  8919             
2100+  8919 56 8A       
2100+  891B             
2101+  891B                 \isc_sfunc10 .equ $80 +_isccount\_isccount .set _isccount + 1\ .word spriclrb0-1\_iscbase .set _iscbase + 2;90 - ?
2101+  891B             
2101+  891B             
2101+  891B 72 8A       
2101+  891D             
2102+  891D                 \isc_sfunc11 .equ $80 +_isccount\_isccount .set _isccount + 1\ .word spriadd-1\_iscbase .set _iscbase + 2  ;91 - ?
2102+  891D             
2102+  891D             
2102+  891D 8B 8A       
2102+  891F             
2103+  891F                 \isc_envsh .equ $80 +_isccount\_isccount .set _isccount + 1\ .word rpmnext-1\_iscbase .set _iscbase + 2    ;92 - Not Implemented in this code
2103+  891F             
2103+  891F             
2103+  891F 54 84       
2103+  8921             
2104+  8921                 \isc_nzper .equ $80 +_isccount\_isccount .set _isccount + 1\ .word rpmnext-1\_iscbase .set _iscbase + 2    ;93 - Not Implemented in this code
2104+  8921             
2104+  8921             
2104+  8921 54 84       
2104+  8923             
2105+  8923                 \isc_nzperl .equ $80 +_isccount\_isccount .set _isccount + 1\ .word rpmnext-1\_iscbase .set _iscbase + 2   ;94 - Not Implemented in this code
2105+  8923             
2105+  8923             
2105+  8923 54 84       
2105+  8925             
2106+  8925                 \isc_nzperh .equ $80 +_isccount\_isccount .set _isccount + 1\ .word rpmnext-1\_iscbase .set _iscbase + 2   ;95 - Not Implemented in this code
2106+  8925             
2106+  8925             
2106+  8925 54 84       
2106+  8927             
2107+  8927                 \isc_repb .equ $80 +_isccount\_isccount .set _isccount + 1\ .word srepb-1\_iscbase .set _iscbase + 2       ;96 - ?
2107+  8927             
2107+  8927             
2107+  8927 9A 8A       
2107+  8929             
2108+  8929                 \isc_unk4 .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sfunc17-1\_iscbase .set _iscbase + 2     ;97 - ?
2108+  8929             
2108+  8929             
2108+  8929 9F 8A       
2108+  892B             
2109+  892B                 \isc_unk5 .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sfunc18-1\_iscbase .set _iscbase + 2     ;98 - ?
2109+  892B             
2109+  892B             
2109+  892B B9 8A       
2109+  892D             
2110+  892D                 \isc_jmpback .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sjmpback-1\_iscbase .set _iscbase + 2 ;99 - Jump Back a certain distance?
2110+  892D             
2110+  892D             
2110+  892D CA 8A       
2110+  892F             
2111+  892F                 \isc_unk6 .equ $80 +_isccount\_isccount .set _isccount + 1\ .word rpmnext-1\_iscbase .set _iscbase + 2     ;9A - Not Implemented in this code
2111+  892F             
2111+  892F             
2111+  892F 54 84       
2111+  8931             
2112+  8931                 \isc_clctl .equ $80 +_isccount\_isccount .set _isccount + 1\ .word sfunc1B-1\_iscbase .set _iscbase + 2    ;9B - ?
2112+  8931             
2112+  8931             
2112+  8931 FB 89       
2112+  8933             
2113+  8933             	\isc_sbfreqd .equ $80 +_isccount\_isccount .set _isccount + 1\ .word ssetkeyd-1\_iscbase .set _iscbase + 2 ;9C - Set Base Frequency from ZPRAM Location
2113+  8933             
2113+  8933             
2113+  8933 DA 89       
2113+  8935             
2114+  8935                 \isc_abfreqd .equ $80 +_isccount\_isccount .set _isccount + 1\ .word saddkeyd-1\_iscbase .set _iscbase + 2 ;9D - Add to Base Frequency from ZPRAM Location
2114+  8935             
2114+  8935             
2114+  8935 CD 89       
2114+  8937             
2115+  8937             
2116+  8937 BC B0 03    sfunc08 ldy ch_mys_3b,X
2117+  893A                     \ .push  *, 0 \ BEQ  * 
2117+  893A             
2117+  893A F0 FE       
2118+  893C C8                      iny 
2119+  893D D0 33                   bne ?sf8_5
2120+  893F 38                      sec 
2121+  8940 60                      rts
2122+  8941                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2122+  8941             
2122+  8941             
2122+  8941             
2122+  8941             
2122+  8941             
2122+  8941             
2122+  8941~                    endif
2122+  8941~                    endif
2122+  8941             
2122+  8941~                    endif
2122+  8941~                    endif
2122+  8941             
2122+  893B             
2122+  893B 05          
2122+  893C             
2122+  893C             
2122+  893C~                    endif
2122+  893C~                    endif
2122+  893C~                    endif
2122+  893C             
2122+  893C~                    endif
2122+  893C~                    endif
2122+  893C~                    endif
2122+  893C             
2122+  8941             
2122+  8941~                    endif
2122+  8941~                    endif
2122+  8941             
2123+  8941 BD C0 03            lda ch_mys_3c,X
2124+  8944 9D B0 03            sta ch_mys_3b,X
2125+  8947 A0 0F               ldy #NUM_CHANNELS-1
2126+  8949                     \ .push  *, 2
2126+  8949             
2127+  8949 D9 C0 03                cmp ch_mys_3c,Y
2128+  894C                         \ .push  *, 0 \ BNE  * 		
2128+  894C             
2128+  894C D0 FE       
2129+  894E D9 B0 03                    cmp ch_mys_3b,Y
2130+  8951                             \ .push  *, 0 \ BEQ  * 
2130+  8951             
2130+  8951 F0 FE       
2131+  8953 B9 E0 02                        lda ch_pri,Y
2132+  8956 D0 1A                           bne ?sf8_5
2133+  8958 BD C0 03                        lda ch_mys_3c,X
2134+  895B                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2134+  895B             
2134+  895B             
2134+  895B             
2134+  895B             
2134+  895B             
2134+  895B             
2134+  895B~                            endif
2134+  895B~                            endif
2134+  895B             
2134+  895B~                            endif
2134+  895B~                            endif
2134+  895B             
2134+  8952             
2134+  8952 08          
2134+  8953             
2134+  8953             
2134+  8953~                            endif
2134+  8953~                            endif
2134+  8953~                            endif
2134+  8953             
2134+  8953~                            endif
2134+  8953~                            endif
2134+  8953~                            endif
2134+  8953             
2134+  895B             
2134+  895B~                            endif
2134+  895B~                            endif
2134+  895B             
2135+  895B                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2135+  895B             
2135+  895B             
2135+  895B             
2135+  895B             
2135+  895B             
2135+  895B             
2135+  895B~                        endif
2135+  895B~                        endif
2135+  895B             
2135+  895B~                        endif
2135+  895B~                        endif
2135+  895B             
2135+  894D             
2135+  894D 0D          
2135+  894E             
2135+  894E             
2135+  894E~                        endif
2135+  894E~                        endif
2135+  894E~                        endif
2135+  894E             
2135+  894E~                        endif
2135+  894E~                        endif
2135+  894E~                        endif
2135+  894E             
2135+  895B             
2135+  895B~                        endif
2135+  895B~                        endif
2135+  895B             
2136+  895B 88                      dey 
2137+  895C                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
2137+  895C             
2137+  895C             
2137+  895C~                    miend
2137+  895C~                    miend
2137+  895C~                    miend
2137+  895C             
2137+  895C 10 EB       
2137+  895E             
2137+  895E~                    miend
2137+  895E~                    miend
2137+  895E             
2138+  895E A0 0F               ldy #NUM_CHANNELS-1
2139+  8960                     \ .push  *, 2
2139+  8960             
2140+  8960 D9 C0 03                cmp ch_mys_3c,Y
2141+  8963                         \ .push  *, 0 \ BNE  * 		
2141+  8963             
2141+  8963 D0 FE       
2142+  8965 A9 FF                       lda #$FF
2143+  8967 99 B0 03                    sta ch_mys_3b,Y
2144+  896A BD C0 03                    lda ch_mys_3c,X
2145+  896D                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2145+  896D             
2145+  896D             
2145+  896D             
2145+  896D             
2145+  896D             
2145+  896D             
2145+  896D~                        endif
2145+  896D~                        endif
2145+  896D             
2145+  896D~                        endif
2145+  896D~                        endif
2145+  896D             
2145+  8964             
2145+  8964 08          
2145+  8965             
2145+  8965             
2145+  8965~                        endif
2145+  8965~                        endif
2145+  8965~                        endif
2145+  8965             
2145+  8965~                        endif
2145+  8965~                        endif
2145+  8965~                        endif
2145+  8965             
2145+  896D             
2145+  896D~                        endif
2145+  896D~                        endif
2145+  896D             
2146+  896D 88                      dey
2147+  896E                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif   
2147+  896E             
2147+  896E             
2147+  896E~                    miend   
2147+  896E~                    miend   
2147+  896E~                    miend   
2147+  896E             
2147+  896E 10 F0       
2147+  8970             
2147+  8970~                    miend   
2147+  8970~                    miend   
2147+  8970             
2148+  8970 18                  clc 
2149+  8971 60                  rts 
2150+  8972             		
2151+  8972 BD D0 02    ?sf8_5  lda ch_localpc,X
2152+  8975 C9 02               cmp #02             ;Will this flip upper byte
2153+  8977                     \ .push  *, 0 \ BCS  *                     ;yes
2153+  8977             
2153+  8977 B0 FE       
2154+  8979 DE 30 02                dec ch_tuneptr+___CHNS,X      ;take it down one
2155+  897C                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2155+  897C             
2155+  897C             
2155+  897C             
2155+  897C             
2155+  897C             
2155+  897C             
2155+  897C~                    endif
2155+  897C~                    endif
2155+  897C             
2155+  897C~                    endif
2155+  897C~                    endif
2155+  897C             
2155+  8978             
2155+  8978 03          
2155+  8979             
2155+  8979             
2155+  8979~                    endif
2155+  8979~                    endif
2155+  8979~                    endif
2155+  8979             
2155+  8979~                    endif
2155+  8979~                    endif
2155+  8979~                    endif
2155+  8979             
2155+  897C             
2155+  897C~                    endif
2155+  897C~                    endif
2155+  897C             
2156+  897C DE D0 02            dec ch_localpc,X
2157+  897F DE D0 02            dec ch_localpc,X            ;Remove them now
2158+  8982 A9 00               lda #00
2159+  8984 9D A0 02            sta ch_ratedif_l,X
2160+  8987 9D B0 02            sta ch_ratedif_h,X
2161+  898A 18                  clc 
2162+  898B 60                  rts 
2163+  898C                     
2164+  898C 9D C0 03    sfunc09 sta ch_mys_3c,X
2165+  898F A9 00               lda #00
2166+  8991 9D B0 03            sta ch_mys_3b,X
2167+  8994 60                  rts
2168+  8995             
2169+  8995             ;Load the Amplitude Envelope Pointer        
2170+  8995             sampenv 
2171+  8995 A8          		tay 
2172+  8996 B9 D0 92            lda t_ampenv_l,Y
2173+  8999 9D 40 02            sta ch_ctrl_l,X
2174+  899C B9 60 93            lda t_ampenv_h,Y
2175+  899F 9D 50 02            sta ch_ctrl_h,X
2176+  89A2 38                  sec 
2177+  89A3 60                  rts 
2178+  89A4                     
2179+  89A4             sfreqenv
2180+  89A4 A8                  tay 
2181+  89A5 B9 B0 91            lda t_freqenv_l,Y
2182+  89A8 9D 60 02            sta ch_freq,X
2183+  89AB B9 40 92            lda t_freqenv_h,Y
2184+  89AE 9D 70 02            sta ch_freq+___CHNS,X
2185+  89B1 38                  sec 
2186+  89B2 60                  rts
2187+  89B3                         
2188+  89B3             saddrate 
2189+  89B3 18                  clc 
2190+  89B4 7D 90 03            adc ch_rate,X
2191+  89B7             ssetrate
2192+  89B7 9D 90 03            sta ch_rate,X
2193+  89BA 38                  sec 
2194+  89BB 60                  rts 
2195+  89BC                     
2196+  89BC 18          sadbamp clc 
2197+  89BD 7D C0 02            adc ch_vol,X
2198+  89C0 9D C0 02    ssebamp sta ch_vol,X
2199+  89C3 38                  sec 
2200+  89C4 60                  rts 
2201+  89C5             
2202+  89C5             ;*********************************************
2203+  89C5             ; Pitch Shift - Used to set a static shift
2204+  89C5             ;               (positive only?) that will 
2205+  89C5             ;               be added to any notes played.
2206+  89C5             ;               Handy for the same tune at 
2207+  89C5             ;               different harmonies.
2208+  89C5             ;*********************************************        
2209+  89C5 18          saddkey clc 
2210+  89C6 7D A0 03            adc ch_key,X
2211+  89C9 9D A0 03    ssetkey sta ch_key,X
2212+  89CC 38                  sec 
2213+  89CD 60                  rts 
2214+  89CE             
2215+  89CE             ;Variant of above except A is a Zero page RAM address that contains 
2216+  89CE             ;the actual base freq value;		
2217+  89CE             saddkeyd 
2218+  89CE A8          		tay
2219+  89CF B9 00 00    		lda 0,Y
2220+  89D2 18          		clc 
2221+  89D3 7D A0 03            adc ch_key,X
2222+  89D6 9D A0 03    		sta ch_key,X
2223+  89D9 38                  sec 
2224+  89DA 60                  rts 
2225+  89DB             		
2226+  89DB             ssetkeyd 
2227+  89DB A8          		tay
2228+  89DC B9 00 00    		lda 0,Y
2229+  89DF 9D A0 03    		sta ch_key,X
2230+  89E2 38                  sec 
2231+  89E3 60                  rts 
2232+  89E4                     
2233+  89E4             ssetctrlm
2234+  89E4 9D D0 03    		sta ch_ctrlmask,X
2235+  89E7 60                  rts 
2236+  89E8                     
2237+  89E8 AC CD 04    sdctl 	ldy po_choff
2238+  89EB                     \ .push  *, 0 \ BEQ  * 
2238+  89EB             
2238+  89EB F0 FE       
2239+  89ED 4D CE 04                eor po_4ce
2240+  89F0 29 09                   and #09
2241+  89F2 4D CE 04                eor po_4ce
2242+  89F5                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2242+  89F5             
2242+  89F5             
2242+  89F5             
2242+  89F5             
2242+  89F5             
2242+  89F5             
2242+  89F5~                    endif
2242+  89F5~                    endif
2242+  89F5             
2242+  89F5~                    endif
2242+  89F5~                    endif
2242+  89F5             
2242+  89EC             
2242+  89EC 08          
2242+  89ED             
2242+  89ED             
2242+  89ED~                    endif
2242+  89ED~                    endif
2242+  89ED~                    endif
2242+  89ED             
2242+  89ED~                    endif
2242+  89ED~                    endif
2242+  89ED~                    endif
2242+  89ED             
2242+  89F5             
2242+  89F5~                    endif
2242+  89F5~                    endif
2242+  89F5             
2243+  89F5 1D 90 04            ora ch_mys_49,X
2244+  89F8 9D 90 04            sta ch_mys_49,X
2245+  89FB 60                  rts 
2246+  89FC                     
2247+  89FC 49 FF       sfunc1B eor #$FF
2248+  89FE AC CD 04            ldy po_choff
2249+  8A01                     \ .push  *, 0 \ BNE  * 		
2249+  8A01             
2249+  8A01 D0 FE       
2250+  8A03 3D 80 04                and ch_mys_48,X
2251+  8A06 9D 80 04                sta ch_mys_48,X
2252+  8A09 60                      rts
2253+  8A0A                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2253+  8A0A             
2253+  8A0A             
2253+  8A0A             
2253+  8A0A             
2253+  8A0A             
2253+  8A0A             
2253+  8A0A~                    endif
2253+  8A0A~                    endif
2253+  8A0A             
2253+  8A0A~                    endif
2253+  8A0A~                    endif
2253+  8A0A             
2253+  8A02             
2253+  8A02 07          
2253+  8A03             
2253+  8A03             
2253+  8A03~                    endif
2253+  8A03~                    endif
2253+  8A03~                    endif
2253+  8A03             
2253+  8A03~                    endif
2253+  8A03~                    endif
2253+  8A03~                    endif
2253+  8A03             
2253+  8A0A             
2253+  8A0A~                    endif
2253+  8A0A~                    endif
2253+  8A0A             
2254+  8A0A 09 F6               ora #$F6
2255+  8A0C 3D 90 04            and ch_mys_49,X
2256+  8A0F 9D 90 04            sta ch_mys_49,X
2257+  8A12 60                  rts 
2258+  8A13                     
2259+  8A13 9D E0 03    ssynth  sta ch_synthmode,X
2260+  8A16 60                  rts 
2261+  8A17                 
2262+  8A17             ;************************************************
2263+  8A17             ;* Jump Sound - JSR to another sound (A). Push  
2264+  8A17             ;* current location into jump locations.        
2265+  8A17             ;************************************************
2266+  8A17             sjsr    ;asl A
2267+  8A17 A8                  tay 
2268+  8A18 BD D0 02            lda ch_localpc,X        ;Push current local channel ptr
2269+  8A1B 9D 30 04            sta ch_jmplocpc,X
2270+  8A1E BD 20 02            lda ch_tuneptr,X
2271+  8A21 9D 10 04            sta ch_jmppc,X        ;Put old address low byte
2272+  8A24 BD 30 02            lda ch_tuneptr+___CHNS,X
2273+  8A27 9D 20 04            sta ch_jmppc+___CHNS,X        ;Put old address high byte
2274+  8A2A B9 90 90            lda t_tune_l,Y         	;Get new address
2275+  8A2D 9D 20 02            sta ch_tuneptr,X      ;Push it current
2276+  8A30 85 0D               sta tuneptr             ;Zero page too
2277+  8A32 B9 20 91            lda t_tune_h,Y
2278+  8A35 9D 30 02            sta ch_tuneptr+___CHNS,X
2279+  8A38 85 0E               sta tuneptr+1
2280+  8A3A A9 00               lda #00
2281+  8A3C 9D D0 02            sta ch_localpc,X        ;Reset the local channel ptr
2282+  8A3F 38                  sec 
2283+  8A40 60                  rts 
2284+  8A41                 
2285+  8A41             ;************************************************
2286+  8A41             ;* Loop Init - Sets the loop counter to value   *
2287+  8A41             ;* of accumulator and pushes position of current*
2288+  8A41             ;* tune location onto the loop pc.              *
2289+  8A41             ;************************************************   
2290+  8A41 9D 70 04    sloopi  sta ch_loopcount,X
2291+  8A44 BD D0 02            lda ch_localpc,X
2292+  8A47 9D 60 04            sta ch_looplocalpc,X
2293+  8A4A BD 20 02            lda ch_tuneptr,X
2294+  8A4D 9D 40 04            sta ch_looppc,X
2295+  8A50 BD 30 02            lda ch_tuneptr+___CHNS,X
2296+  8A53 9D 50 04            sta ch_looppc+___CHNS,X
2297+  8A56 60                  rts 
2298+  8A57             
2299+  8A57             ;************************************************
2300+  8A57             ;* Loop Jump - Will jump to the loop pc location*
2301+  8A57             ;* unless the loopcount is at 0. The loop count *
2302+  8A57             ;* is lowered each call.                        *
2303+  8A57             ;************************************************       
2304+  8A57 DE 70 04    sloopj  dec ch_loopcount,X
2305+  8A5A                     \ .push  *, 0 \ BEQ  * 
2305+  8A5A             
2305+  8A5A F0 FE       
2306+  8A5C BD 60 04                lda ch_looplocalpc,X
2307+  8A5F 9D D0 02                sta ch_localpc,X
2308+  8A62 BD 40 04                lda ch_looppc,X
2309+  8A65 9D 20 02                sta ch_tuneptr,X
2310+  8A68 85 0D                   sta tuneptr
2311+  8A6A BD 50 04                lda ch_looppc+___CHNS,X
2312+  8A6D 9D 30 02                sta ch_tuneptr+___CHNS,X
2313+  8A70 85 0E                   sta tuneptr+1
2314+  8A72                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2314+  8A72             
2314+  8A72             
2314+  8A72             
2314+  8A72             
2314+  8A72             
2314+  8A72             
2314+  8A72~                    endif
2314+  8A72~                    endif
2314+  8A72             
2314+  8A72~                    endif
2314+  8A72~                    endif
2314+  8A72             
2314+  8A5B             
2314+  8A5B 16          
2314+  8A5C             
2314+  8A5C             
2314+  8A5C~                    endif
2314+  8A5C~                    endif
2314+  8A5C~                    endif
2314+  8A5C             
2314+  8A5C~                    endif
2314+  8A5C~                    endif
2314+  8A5C~                    endif
2314+  8A5C             
2314+  8A72             
2314+  8A72~                    endif
2314+  8A72~                    endif
2314+  8A72             
2315+  8A72 60                  rts 
2316+  8A73                     
2317+  8A73             spriclrb0 
2318+  8A73 AC C3 04            ldy po_even_odd
2319+  8A76 A9 00               lda #00
2320+  8A78 99 C1 04            sta po_4c1,Y
2321+  8A7B BD E0 02            lda ch_pri,X
2322+  8A7E 29 FE               and #$FE
2323+  8A80 9D E0 02            sta ch_pri,X
2324+  8A83 A0 00               ldy #00
2325+  8A85 8C C3 04            sty po_even_odd
2326+  8A88 99 C1 04            sta po_4c1,Y
2327+  8A8B 60                  rts
2328+  8A8C                         
2329+  8A8C A0 01       spriadd ldy #01
2330+  8A8E 8C C3 04            sty po_even_odd
2331+  8A91 1D E0 02            ora ch_pri,X
2332+  8A94 9D E0 02            sta ch_pri,X
2333+  8A97 99 C1 04            sta po_4c1,Y
2334+  8A9A 60                  rts 
2335+  8A9B                     
2336+  8A9B 20 7F 82    srepb   jsr repbyte
2337+  8A9E 38                  sec 
2338+  8A9F 60                  rts
2339+  8AA0                         
2340+  8AA0 BC 10 02    sfunc17 ldy ch_eflg,X           ;See if this channel controls an event flag
2341+  8AA3                     \ .push  *, 0 \ BMI  * 
2341+  8AA3             
2341+  8AA3 30 FE       
2342+  8AA5 B9 02 00                lda eflg0,Y
2343+  8AA8                         \ .push  *, 0 \ BEQ  * 
2343+  8AA8             
2343+  8AA8 F0 FE       
2344+  8AAA 18                          clc 
2345+  8AAB A9 02                       lda #02
2346+  8AAD 7D D0 02                    adc ch_localpc,X
2347+  8AB0 9D D0 02                    sta ch_localpc,X
2348+  8AB3                             \ .push  *, 0 \ BCC  * 
2348+  8AB3             
2348+  8AB3 90 FE       
2349+  8AB5 FE 30 02                        inc ch_tuneptr+___CHNS,X
2350+  8AB8                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2350+  8AB8             
2350+  8AB8             
2350+  8AB8             
2350+  8AB8             
2350+  8AB8             
2350+  8AB8             
2350+  8AB8~                            endif
2350+  8AB8~                            endif
2350+  8AB8             
2350+  8AB8~                            endif
2350+  8AB8~                            endif
2350+  8AB8             
2350+  8AB4             
2350+  8AB4 03          
2350+  8AB5             
2350+  8AB5             
2350+  8AB5~                            endif
2350+  8AB5~                            endif
2350+  8AB5~                            endif
2350+  8AB5             
2350+  8AB5~                            endif
2350+  8AB5~                            endif
2350+  8AB5~                            endif
2350+  8AB5             
2350+  8AB8             
2350+  8AB8~                            endif
2350+  8AB8~                            endif
2350+  8AB8             
2351+  8AB8                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2351+  8AB8             
2351+  8AB8             
2351+  8AB8             
2351+  8AB8             
2351+  8AB8             
2351+  8AB8             
2351+  8AB8~                        endif
2351+  8AB8~                        endif
2351+  8AB8             
2351+  8AB8~                        endif
2351+  8AB8~                        endif
2351+  8AB8             
2351+  8AA9             
2351+  8AA9 0E          
2351+  8AAA             
2351+  8AAA             
2351+  8AAA~                        endif
2351+  8AAA~                        endif
2351+  8AAA~                        endif
2351+  8AAA             
2351+  8AAA~                        endif
2351+  8AAA~                        endif
2351+  8AAA~                        endif
2351+  8AAA             
2351+  8AB8             
2351+  8AB8~                        endif
2351+  8AB8~                        endif
2351+  8AB8             
2352+  8AB8                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2352+  8AB8             
2352+  8AB8             
2352+  8AB8             
2352+  8AB8             
2352+  8AB8             
2352+  8AB8             
2352+  8AB8~                    endif
2352+  8AB8~                    endif
2352+  8AB8             
2352+  8AB8~                    endif
2352+  8AB8~                    endif
2352+  8AB8             
2352+  8AA4             
2352+  8AA4 13          
2352+  8AA5             
2352+  8AA5             
2352+  8AA5~                    endif
2352+  8AA5~                    endif
2352+  8AA5~                    endif
2352+  8AA5             
2352+  8AA5~                    endif
2352+  8AA5~                    endif
2352+  8AA5~                    endif
2352+  8AA5             
2352+  8AB8             
2352+  8AB8~                    endif
2352+  8AB8~                    endif
2352+  8AB8             
2353+  8AB8 38                  sec 
2354+  8AB9 60                  rts
2355+  8ABA                         
2356+  8ABA BC 10 02    sfunc18 ldy ch_eflg,X           ;See if this channel controls an event flag
2357+  8ABD                     \ .push  *, 0 \ BMI  * 
2357+  8ABD             
2357+  8ABD 30 FE       
2358+  8ABF B9 02 00                lda eflg0,Y
2359+  8AC2                         \ .push  *, 0 \ BEQ  * 
2359+  8AC2             
2359+  8AC2 F0 FE       
2360+  8AC4 A9 FF                       lda #-1
2361+  8AC6 9D 00 02                    sta ch_sid,X        ;Blank the channel sound ID
2362+  8AC9 18                          clc
2363+  8ACA                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2363+  8ACA             
2363+  8ACA             
2363+  8ACA             
2363+  8ACA             
2363+  8ACA             
2363+  8ACA             
2363+  8ACA~                        endif
2363+  8ACA~                        endif
2363+  8ACA             
2363+  8ACA~                        endif
2363+  8ACA~                        endif
2363+  8ACA             
2363+  8AC3             
2363+  8AC3 06          
2363+  8AC4             
2363+  8AC4             
2363+  8AC4~                        endif
2363+  8AC4~                        endif
2363+  8AC4~                        endif
2363+  8AC4             
2363+  8AC4~                        endif
2363+  8AC4~                        endif
2363+  8AC4~                        endif
2363+  8AC4             
2363+  8ACA             
2363+  8ACA~                        endif
2363+  8ACA~                        endif
2363+  8ACA             
2364+  8ACA                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2364+  8ACA             
2364+  8ACA             
2364+  8ACA             
2364+  8ACA             
2364+  8ACA             
2364+  8ACA             
2364+  8ACA~                    endif
2364+  8ACA~                    endif
2364+  8ACA             
2364+  8ACA~                    endif
2364+  8ACA~                    endif
2364+  8ACA             
2364+  8ABE             
2364+  8ABE 0B          
2364+  8ABF             
2364+  8ABF             
2364+  8ABF~                    endif
2364+  8ABF~                    endif
2364+  8ABF~                    endif
2364+  8ABF             
2364+  8ABF~                    endif
2364+  8ABF~                    endif
2364+  8ABF~                    endif
2364+  8ABF             
2364+  8ACA             
2364+  8ACA~                    endif
2364+  8ACA~                    endif
2364+  8ACA             
2365+  8ACA 60                  rts
2366+  8ACB                     
2367+  8ACB             ;*************************************************
2368+  8ACB             ;* Jump Back - Go back (A) number of bytes.      *
2369+  8ACB             ;*************************************************  
2370+  8ACB             sjmpback    
2371+  8ACB 85 11               sta fasave
2372+  8ACD BD D0 02            lda ch_localpc,X
2373+  8AD0 E5 11               sbc fasave
2374+  8AD2 9D D0 02            sta ch_localpc,X
2375+  8AD5                     \ .push  *, 0 \ BCS  * 
2375+  8AD5             
2375+  8AD5 B0 FE       
2376+  8AD7 DE 30 02                dec ch_tuneptr+___CHNS,X
2377+  8ADA                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2377+  8ADA             
2377+  8ADA             
2377+  8ADA             
2377+  8ADA             
2377+  8ADA             
2377+  8ADA             
2377+  8ADA~                    endif
2377+  8ADA~                    endif
2377+  8ADA             
2377+  8ADA~                    endif
2377+  8ADA~                    endif
2377+  8ADA             
2377+  8AD6             
2377+  8AD6 03          
2377+  8AD7             
2377+  8AD7             
2377+  8AD7~                    endif
2377+  8AD7~                    endif
2377+  8AD7~                    endif
2377+  8AD7             
2377+  8AD7~                    endif
2377+  8AD7~                    endif
2377+  8AD7~                    endif
2377+  8AD7             
2377+  8ADA             
2377+  8ADA~                    endif
2377+  8ADA~                    endif
2377+  8ADA             
2378+  8ADA 38                  sec 
2379+  8ADB 60                  rts
2380+  8ADC                     
2381+  8ADC                         
2382+  8ADC 00 08 10 18 devadl .byte (POKEY_0&$ff),(POKEY_1&$ff),(POKEY_2&$ff),(POKEY_3&$ff)
2383+  8AE0 20 20 20 20 devadh .byte ((POKEY_0&$ff00)/$100),((POKEY_1&$ff00)/$100),((POKEY_2&$ff00)/$100),((POKEY_3&$ff00)/$100)
2384+  8AE4             
2385+  8AE4 00 00 00 00 choffh  .byte ((POKEY_CH0&$ff00)/$100),((POKEY_CH1&$ff00)/$100),((POKEY_CH2&$ff00)/$100),((POKEY_CH3&$ff00)/$100)
2386+  8AE8 10 14 18 1C choffl  .byte POKEY_CH0+$10,POKEY_CH1+$10,POKEY_CH2+$10,POKEY_CH3+$10
2387+  8AEC             
2388+  8AEC             ;*********************************************************
2389+  8AEC                 .sbttl "Non-Maskable Interrupt"
2390+  8AEC             ;*********************************************************
2391+  8AEC             ;* The NMI input is triggered any time the Alpha         *
2392+  8AEC             ;* processor sends data to the gamma.                    *
2393+  8AEC             ;*********************************************************
2394+  8AEC 48          g_nmi   pha 
2395+  8AED A9 02               lda #alpharcvd
2396+  8AEF                     \ .push  *, 2
2396+  8AEF             
2397+  8AEF 2C 00 28                bit portst
2398+  8AF2                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BNE	*+5\ jmp	var2_\#else\ BEQ	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
2398+  8AF2             
2398+  8AF2             
2398+  8AF2~                    neend
2398+  8AF2~                    neend
2398+  8AF2~                    neend
2398+  8AF2             
2398+  8AF2 F0 FB       
2398+  8AF4             
2398+  8AF4~                    neend
2398+  8AF4~                    neend
2398+  8AF4             
2399+  8AF4 98                  tya 
2400+  8AF5 48                  pha 
2401+  8AF6 AC DD 05            ldy datnum      ;Check Command Mode
2402+  8AF9                     \ .push  *, 0 \ BNE  * 		                ;Data Mode
2402+  8AF9             
2402+  8AF9 D0 FE       
2403+  8AFB 18                      clc 
2404+  8AFC AC DC 05                ldy r_nptr      ;Get the number of bytes written
2405+  8AFF 98                      tya
2406+  8B00                         \ .push  *, 0 \ BPL  *     
2406+  8B00             
2406+  8B00 10 FE       
2407+  8B02 49 80                       eor #$80
2408+  8B04 A8                          tay 
2409+  8B05 A5 0B                       lda xferbuf
2410+  8B07 49 80                       eor #$80
2411+  8B09 85 0B                       sta xferbuf
2412+  8B0B                             \ .push  *, 0 \ BMI  * 
2412+  8B0B             
2412+  8B0B 30 FE       
2413+  8B0D E6 0C                           inc xferbuf+1
2414+  8B0F                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2414+  8B0F             
2414+  8B0F             
2414+  8B0F             
2414+  8B0F             
2414+  8B0F             
2414+  8B0F             
2414+  8B0F~                            endif
2414+  8B0F~                            endif
2414+  8B0F             
2414+  8B0F~                            endif
2414+  8B0F~                            endif
2414+  8B0F             
2414+  8B0C             
2414+  8B0C 02          
2414+  8B0D             
2414+  8B0D             
2414+  8B0D~                            endif
2414+  8B0D~                            endif
2414+  8B0D~                            endif
2414+  8B0D             
2414+  8B0D~                            endif
2414+  8B0D~                            endif
2414+  8B0D~                            endif
2414+  8B0D             
2414+  8B0F             
2414+  8B0F~                            endif
2414+  8B0F~                            endif
2414+  8B0F             
2415+  8B0F 98                          tya
2416+  8B10                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif   
2416+  8B10             
2416+  8B10             
2416+  8B10             
2416+  8B10             
2416+  8B10             
2416+  8B10             
2416+  8B10~                        endif   
2416+  8B10~                        endif   
2416+  8B10             
2416+  8B10~                        endif   
2416+  8B10~                        endif   
2416+  8B10             
2416+  8B01             
2416+  8B01 0E          
2416+  8B02             
2416+  8B02             
2416+  8B02~                        endif   
2416+  8B02~                        endif   
2416+  8B02~                        endif   
2416+  8B02             
2416+  8B02~                        endif   
2416+  8B02~                        endif   
2416+  8B02~                        endif   
2416+  8B02             
2416+  8B10             
2416+  8B10~                        endif   
2416+  8B10~                        endif   
2416+  8B10             
2417+  8B10 69 01                   adc #01
2418+  8B12 8D DC 05                sta r_nptr
2419+  8B15 AD 00 30                lda indata      ;Get the alpha data
2420+  8B18 91 0B                   sta (xferbuf,Y)      ;Put it in the buffer
2421+  8B1A 4C 42 8B                jmp discard2        ;outta here!
2422+  8B1D                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2422+  8B1D             
2422+  8B1D             
2422+  8B1D             
2422+  8B1D             
2422+  8B1D             
2422+  8B1D             
2422+  8B1D~                    endif
2422+  8B1D~                    endif
2422+  8B1D             
2422+  8B1D~                    endif
2422+  8B1D~                    endif
2422+  8B1D             
2422+  8AFA             
2422+  8AFA 22          
2422+  8AFB             
2422+  8AFB             
2422+  8AFB~                    endif
2422+  8AFB~                    endif
2422+  8AFB~                    endif
2422+  8AFB             
2422+  8AFB~                    endif
2422+  8AFB~                    endif
2422+  8AFB~                    endif
2422+  8AFB             
2422+  8B1D             
2422+  8B1D~                    endif
2422+  8B1D~                    endif
2422+  8B1D             
2423+  8B1D C8                  iny             ;If in Command mode Y will now = 0
2424+  8B1E                     \ .push  *, 0 \ BEQ  *                 
2424+  8B1E             
2424+  8B1E F0 FE       
2425+  8B20             			;**********************************************************
2426+  8B20             			; This is an improper state, something is wrong with gamma
2427+  8B20             			;**********************************************************
2428+  8B20 AD 00 30                lda indata      	;Read garbage data from alpha
2429+  8B23 4C 42 8B                jmp discard2        ;Get out of here!
2430+  8B26             			;**********************************************************
2431+  8B26             			;**********************************************************
2432+  8B26                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2432+  8B26             
2432+  8B26             
2432+  8B26             
2432+  8B26             
2432+  8B26             
2432+  8B26             
2432+  8B26~                    endif
2432+  8B26~                    endif
2432+  8B26             
2432+  8B26~                    endif
2432+  8B26~                    endif
2432+  8B26             
2432+  8B1F             
2432+  8B1F 06          
2432+  8B20             
2432+  8B20             
2432+  8B20~                    endif
2432+  8B20~                    endif
2432+  8B20~                    endif
2432+  8B20             
2432+  8B20~                    endif
2432+  8B20~                    endif
2432+  8B20~                    endif
2432+  8B20             
2432+  8B26             
2432+  8B26~                    endif
2432+  8B26~                    endif
2432+  8B26             
2433+  8B26 8A                  txa             	;Here if in command mode....
2434+  8B27 48                  pha 
2435+  8B28 20 46 8B    ?extend jsr advqueue
2436+  8B2B A9 9F               lda #o_commandnum
2437+  8B2D 99 5A 05            sta gr_queue,Y				;Store current command in queue
2438+  8B30 AE 00 30            ldx indata
2439+  8B33 E0 9F               cpx #o_commandnum			;Under the max command limit? (valid)
2440+  8B35                     \ .push  *, 0 \ BCS  * 
2440+  8B35             
2440+  8B35 B0 FE       
2441+  8B37 BD E3 8F                lda t_exceptidx,X       ;See if this command is an EXCEPTION 
2442+  8B3A 10 2A                   bpl nmiex               ;yes!
2443+  8B3C 8A                      txa 
2444+  8B3D 99 5A 05                sta gr_queue,Y          ;Put the command in the queue
2445+  8B40             			; lda t_extendidx,X		;See if this has an EXTENSION command
2446+  8B40             			; ifpl
2447+  8B40             				; ; If we are here, then there is an EXTENSION... reset stack
2448+  8B40             				; jsr advqueue
2449+  8B40             				; sta gr_queue,Y			;Book it
2450+  8B40             			; endif
2451+  8B40                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2451+  8B40             
2451+  8B40             
2451+  8B40             
2451+  8B40             
2451+  8B40             
2451+  8B40             
2451+  8B40~                    endif
2451+  8B40~                    endif
2451+  8B40             
2451+  8B40~                    endif
2451+  8B40~                    endif
2451+  8B40             
2451+  8B36             
2451+  8B36 09          
2451+  8B37             
2451+  8B37             
2451+  8B37~                    endif
2451+  8B37~                    endif
2451+  8B37~                    endif
2451+  8B37             
2451+  8B37~                    endif
2451+  8B37~                    endif
2451+  8B37~                    endif
2451+  8B37             
2451+  8B40             
2451+  8B40~                    endif
2451+  8B40~                    endif
2451+  8B40             
2452+  8B40 68          discard pla                 ;General Cleaup before returning
2453+  8B41 AA                  tax 
2454+  8B42             discard2    
2455+  8B42 68                  pla 
2456+  8B43 A8                  tay 
2457+  8B44 68                  pla 
2458+  8B45 40                  rti 
2459+  8B46             
2460+  8B46             advqueue
2461+  8B46 AC DB 05    		ldy gr_ia           ;Increment the read queue actual 
2462+  8B49 C8                  iny 
2463+  8B4A C0 80               cpy #qsize
2464+  8B4C                     \ .push  *, 0 \ BCC  *                 ;Did it flip?
2464+  8B4C             
2464+  8B4C 90 FE       
2465+  8B4E A0 00                   ldy #00         ;yep, reset it.
2466+  8B50                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2466+  8B50             
2466+  8B50             
2466+  8B50             
2466+  8B50             
2466+  8B50             
2466+  8B50             
2466+  8B50~                    endif
2466+  8B50~                    endif
2466+  8B50             
2466+  8B50~                    endif
2466+  8B50~                    endif
2466+  8B50             
2466+  8B4D             
2466+  8B4D 02          
2466+  8B4E             
2466+  8B4E             
2466+  8B4E~                    endif
2466+  8B4E~                    endif
2466+  8B4E~                    endif
2466+  8B4E             
2466+  8B4E~                    endif
2466+  8B4E~                    endif
2466+  8B4E~                    endif
2466+  8B4E             
2466+  8B50             
2466+  8B50~                    endif
2466+  8B50~                    endif
2466+  8B50             
2467+  8B50 8C DB 05            sty gr_ia           ;Store it
2468+  8B53 CC DA 05            cpy gr_i            ;Which queue are we at
2469+  8B56                     \ .push  *, 0 \ BNE  * 		                ;Are the the same...
2469+  8B56             
2469+  8B56 D0 FE       
2470+  8B58 AE DA 05                ldx gr_i            ;Yes, make them different
2471+  8B5B E8                      inx 
2472+  8B5C E0 80                   cpx #qsize
2473+  8B5E                         \ .push  *, 0 \ BCC  * 
2473+  8B5E             
2473+  8B5E 90 FE       
2474+  8B60 A2 00                       ldx #00
2475+  8B62                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2475+  8B62             
2475+  8B62             
2475+  8B62             
2475+  8B62             
2475+  8B62             
2475+  8B62             
2475+  8B62~                        endif
2475+  8B62~                        endif
2475+  8B62             
2475+  8B62~                        endif
2475+  8B62~                        endif
2475+  8B62             
2475+  8B5F             
2475+  8B5F 02          
2475+  8B60             
2475+  8B60             
2475+  8B60~                        endif
2475+  8B60~                        endif
2475+  8B60~                        endif
2475+  8B60             
2475+  8B60~                        endif
2475+  8B60~                        endif
2475+  8B60~                        endif
2475+  8B60             
2475+  8B62             
2475+  8B62~                        endif
2475+  8B62~                        endif
2475+  8B62             
2476+  8B62 8E DA 05                stx gr_i            ;Make it so.
2477+  8B65                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
2477+  8B65             
2477+  8B65             
2477+  8B65             
2477+  8B65             
2477+  8B65             
2477+  8B65             
2477+  8B65~                    endif
2477+  8B65~                    endif
2477+  8B65             
2477+  8B65~                    endif
2477+  8B65~                    endif
2477+  8B65             
2477+  8B57             
2477+  8B57 0D          
2477+  8B58             
2477+  8B58             
2477+  8B58~                    endif
2477+  8B58~                    endif
2477+  8B58~                    endif
2477+  8B58             
2477+  8B58~                    endif
2477+  8B58~                    endif
2477+  8B58~                    endif
2477+  8B58             
2477+  8B65             
2477+  8B65~                    endif
2477+  8B65~                    endif
2477+  8B65             
2478+  8B65 60          		rts
2479+  8B66             
2480+  8B66             ;EXCEPTION - Do something special and do it now        
2481+  8B66 C9 24       nmiex   cmp #numexc         ;Is it a valid exception number         
2482+  8B68 B0 D6               bcs discard         ;no, branch to discard command
2483+  8B6A 0A                  asl A               ;times 2 for word index
2484+  8B6B A8                  tay 
2485+  8B6C B9 F1 93            lda t_exceptptr+1,Y     ;Get the routine
2486+  8B6F 48                  pha 
2487+  8B70 B9 F0 93            lda t_exceptptr,Y
2488+  8B73 48                  pha 
2489+  8B74 60                  rts                 ;Do it now.
2490+  8B75                     
2491+  8B75             
2492+  8B75             ;******************************************************************************
2493+  8B75             ;* Build the Skeleton Table Structures 
2494+  8B75             
2495+  8B75             t_userfunction  .block  numfcns*2       ;Words  
2496+  8B79             t_commandtype   .block  numcom
2497+  8C26             t_commandparam  .block  numcom
2498+  8CD3             t_tunestarts    .block  numsnd
2499+  8D63             ;t_replacement   .block  numsnd
2500+  8D63             ;t_eflag         .block  numtun
2501+  8D63             t_priority      .block  numtun                                 
2502+  8DF3             t_schan         .block  numtun      
2503+  8E83             t_stune         .block  numtun      
2504+  8F13             t_tunecont      .block  numtun
2505+  8FA3             ;t_driver		.block  numtun
2506+  8FA3             t_immfunc       .block  numimm
2507+  8FB3             t_immarg        .block  numimm
2508+  8FC3             t_immsid        .block  numimm
2509+  8FD3             t_immchn        .block  numimm
2510+  8FE3             t_exceptidx     .block  numcom
2511+  9090             ;t_extendidx    	.block  numcom
2512+  9090             ;t_extendptr     .block  numextend   
2513+  9090             t_tune_l        .block  numtun  
2514+  9120             t_tune_h		.block  numtun
2515+  91B0             t_freqenv_l     .block  numenv   
2516+  9240             t_freqenv_h     .block  numenv       
2517+  92D0             t_ampenv_l      .block  numenv     
2518+  9360             t_ampenv_h      .block  numenv   
2519+  93F0             t_exceptptr     .block  numexc*2        ;Words    
2520+  9438             t_mystery       .block  numexc*2        ;Words
2521+  9480             
2522+  9480             
2523+  9480             ;Speech Tables
2524+  9480~            #IF ___tlk == 1
2525+  9480~            
2526+  9480~            t_spdptr        .block  numtlk*2        ;Words
2527+  9480~            t_spdlen        .block  numtlk*2        ;Words
2528+  9480~            o_spdptr        = 0
2529+  9480~            
2530+  9480             #ENDIF
2531+  9480             
2532+  9480             #IF ___oki == 1
2533+  9480             
2534+  9480             numoki 			= 127				;OKI can take up to 127 sounds (as long as the binary fits)
2535+  9480             o_okiptr		= 0
2536+  9480             t_okicmd		.block  numoki
2537+  94FF             t_okiattch      .block  numoki        
2538+  957E             
2539+  957E             #ENDIF
2540+  957E             
2541+  957E             
2542+  957E                
2543+  957E             ;*****************************************************************************
2544+  957E             ;* Declare internal table variables to initial offset.
2545+  957E             ;*****************************************************************************
2546+  957E             o_userfunction  = 0
2547+  957E             o_commandnum    = 0
2548+  957E             o_commandparam  = 0
2549+  957E             o_tunestarts    = 0
2550+  957E             ;o_replacement   = 0
2551+  957E             ;o_eflag         = 0
2552+  957E             o_priority      = 0                               
2553+  957E             o_schann         = 0     
2554+  957E             o_stune         = 0     
2555+  957E             o_driver	  	= 0
2556+  957E             o_tunecont      = 0
2557+  957E             o_immfunc       = 0
2558+  957E             o_immarg        = 0
2559+  957E             o_immsid        = 0
2560+  957E             o_immque        = 0
2561+  957E             o_exceptidx     = 0
2562+  957E             ;o_extendidx		= 0
2563+  957E             o_exceptptr     = 0
2564+  957E             
2565+  957E             i_freqenv       = 0
2566+  957E             i_ampenv        = 0
2567+  957E             i_tune          = 0
2568+  957E             tunenum         = 0
2569+  957E             tmpptr          = 0
2570+  957E             stsndcount      = 0
2571+  957E             
2572+  957E             rpm_pc          = 0 ;Holder for PC
2573+  957E             
2574+  957E             ;********************************************************************
2575+  957E             ;* Default Sound Data:
2576+  957E             ;********************************************************************
2577+  957E             ;* These first two datapoints are empty frequency and amplitude
2578+  957E             ;* envelope data sets. These need to exist as sounds that do 
2579+  957E             ;* not explicity define envelopes, will load this data by default 
2580+  957E             nullenvelope                     
2581+  957E             \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_none = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF                       
2581+  957E             
2581+  91B0             
2581+  91B0 7E          
2581+  9240             
2581+  9240 95          
2581+  9241             
2581+  9241             
2581+  957E             
2581+  957E~            NEWSNDFREQ(sfreq_none)                      
2581+  957E~            NEWSNDFREQ(sfreq_none)                      
2581+  957E             
2582+  957E             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_none = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  
2582+  957E             
2582+  92D0             
2582+  92D0 7E          
2582+  9360             
2582+  9360 95          
2582+  9361             
2582+  9361             
2582+  957E             
2582+  957E~            NEWSNDAMP(sctrl_none) 
2582+  957E~            NEWSNDAMP(sctrl_none) 
2582+  957E             
2583+  957E 00 00 00 00     .byte $00,$00,$00,$00   
2584+  9582                 
2585+  9582                 
2586+  9582             ;NEWSNDFREQ(sfreq_d01)        
2587+  9582             ;    .byte $02,$00,$05,$02,$00,$00,$02,$00,$FE,$02,$00,$00,$02,$00,$FD,$00,$00,$00
2588+  9582                 
2589+  9582             ;NEWSNDFREQ(sfreq_d02)    
2590+  9582             ;NEWSNDFREQ(sfreq_d03)    
2591+  9582             ;NEWSNDFREQ(sfreq_d04)    
2592+  9582             ;NEWSNDFREQ(sfreq_d05)  
2593+  9582               
2594+  9582             \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_d06 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     
2594+  9582             
2594+  91B1             
2594+  91B1 82          
2594+  9241             
2594+  9241 95          
2594+  9242             
2594+  9242             
2594+  9582             
2594+  9582~            NEWSNDFREQ(sfreq_d06)    
2594+  9582~            NEWSNDFREQ(sfreq_d06)    
2594+  9582             
2595+  9582             	\ .db 1 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (1 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:1    Net:16
2595+  9582 01          
2595+  9583~            	SFREQ(256,1)             ;Eff Slope:16     Dur:1    Net:16
2595+  9583~            	SFREQ(256,1)             ;Eff Slope:16     Dur:1    Net:16
2595+  9583             
2595+  9583~            	SFREQ(256,1)             ;Eff Slope:16     Dur:1    Net:16
2595+  9583~            	SFREQ(256,1)             ;Eff Slope:16     Dur:1    Net:16
2595+  9583             
2595+  9583 00 02       
2595+  9585             
2595+  9585             
2596+  9585             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2596+  9585 02          
2596+  9586~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2596+  9586~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2596+  9586             
2596+  9586~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2596+  9586~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2596+  9586             
2596+  9586 00 FE       
2596+  9588             
2596+  9588             
2597+  9588             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2597+  9588 02          
2597+  9589~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2597+  9589~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2597+  9589             
2597+  9589~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2597+  9589~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2597+  9589             
2597+  9589 00 02       
2597+  958B             
2597+  958B             
2598+  958B             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2598+  958B 02          
2598+  958C~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2598+  958C~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2598+  958C             
2598+  958C~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2598+  958C~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2598+  958C             
2598+  958C 00 FE       
2598+  958E             
2598+  958E             
2599+  958E             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2599+  958E 02          
2599+  958F~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2599+  958F~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2599+  958F             
2599+  958F~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2599+  958F~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2599+  958F             
2599+  958F 00 02       
2599+  9591             
2599+  9591             
2600+  9591             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2600+  9591 02          
2600+  9592~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2600+  9592~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2600+  9592             
2600+  9592~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2600+  9592~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2600+  9592             
2600+  9592 00 FE       
2600+  9594             
2600+  9594             
2601+  9594             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2601+  9594 02          
2601+  9595~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2601+  9595~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2601+  9595             
2601+  9595~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2601+  9595~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2601+  9595             
2601+  9595 00 02       
2601+  9597             
2601+  9597             
2602+  9597             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2602+  9597 02          
2602+  9598~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2602+  9598~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2602+  9598             
2602+  9598~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2602+  9598~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2602+  9598             
2602+  9598 00 FE       
2602+  959A             
2602+  959A             
2603+  959A             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2603+  959A 02          
2603+  959B~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2603+  959B~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2603+  959B             
2603+  959B~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2603+  959B~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2603+  959B             
2603+  959B 00 02       
2603+  959D             
2603+  959D             
2604+  959D             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2604+  959D 02          
2604+  959E~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2604+  959E~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2604+  959E             
2604+  959E~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2604+  959E~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2604+  959E             
2604+  959E 00 FE       
2604+  95A0             
2604+  95A0             
2605+  95A0             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2605+  95A0 02          
2605+  95A1~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2605+  95A1~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2605+  95A1             
2605+  95A1~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2605+  95A1~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2605+  95A1             
2605+  95A1 00 02       
2605+  95A3             
2605+  95A3             
2606+  95A3             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2606+  95A3 02          
2606+  95A4~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2606+  95A4~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2606+  95A4             
2606+  95A4~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2606+  95A4~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2606+  95A4             
2606+  95A4 00 FE       
2606+  95A6             
2606+  95A6             
2607+  95A6             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2607+  95A6 02          
2607+  95A7~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2607+  95A7~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2607+  95A7             
2607+  95A7~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2607+  95A7~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2607+  95A7             
2607+  95A7 00 02       
2607+  95A9             
2607+  95A9             
2608+  95A9             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2608+  95A9 02          
2608+  95AA~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2608+  95AA~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2608+  95AA             
2608+  95AA~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2608+  95AA~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2608+  95AA             
2608+  95AA 00 FE       
2608+  95AC             
2608+  95AC             
2609+  95AC             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2609+  95AC 02          
2609+  95AD~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2609+  95AD~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2609+  95AD             
2609+  95AD~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2609+  95AD~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2609+  95AD             
2609+  95AD 00 02       
2609+  95AF             
2609+  95AF             
2610+  95AF             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2610+  95AF 02          
2610+  95B0~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2610+  95B0~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2610+  95B0             
2610+  95B0~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2610+  95B0~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2610+  95B0             
2610+  95B0 00 FE       
2610+  95B2             
2610+  95B2             
2611+  95B2             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2611+  95B2 02          
2611+  95B3~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2611+  95B3~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2611+  95B3             
2611+  95B3~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2611+  95B3~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2611+  95B3             
2611+  95B3 00 02       
2611+  95B5             
2611+  95B5             
2612+  95B5             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2612+  95B5 02          
2612+  95B6~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2612+  95B6~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2612+  95B6             
2612+  95B6~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2612+  95B6~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2612+  95B6             
2612+  95B6 00 FE       
2612+  95B8             
2612+  95B8             
2613+  95B8             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2613+  95B8 02          
2613+  95B9~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2613+  95B9~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2613+  95B9             
2613+  95B9~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2613+  95B9~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2613+  95B9             
2613+  95B9 00 02       
2613+  95BB             
2613+  95BB             
2614+  95BB             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2614+  95BB 02          
2614+  95BC~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2614+  95BC~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2614+  95BC             
2614+  95BC~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2614+  95BC~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2614+  95BC             
2614+  95BC 00 FE       
2614+  95BE             
2614+  95BE             
2615+  95BE             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2615+  95BE 02          
2615+  95BF~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2615+  95BF~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2615+  95BF             
2615+  95BF~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2615+  95BF~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2615+  95BF             
2615+  95BF 00 02       
2615+  95C1             
2615+  95C1             
2616+  95C1             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2616+  95C1 02          
2616+  95C2~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2616+  95C2~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2616+  95C2             
2616+  95C2~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2616+  95C2~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2616+  95C2             
2616+  95C2 00 FE       
2616+  95C4             
2616+  95C4             
2617+  95C4             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2617+  95C4 02          
2617+  95C5~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2617+  95C5~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2617+  95C5             
2617+  95C5~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2617+  95C5~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2617+  95C5             
2617+  95C5 00 02       
2617+  95C7             
2617+  95C7             
2618+  95C7             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2618+  95C7 02          
2618+  95C8~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2618+  95C8~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2618+  95C8             
2618+  95C8~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2618+  95C8~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2618+  95C8             
2618+  95C8 00 FE       
2618+  95CA             
2618+  95CA             
2619+  95CA             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2619+  95CA 02          
2619+  95CB~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2619+  95CB~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2619+  95CB             
2619+  95CB~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2619+  95CB~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2619+  95CB             
2619+  95CB 00 02       
2619+  95CD             
2619+  95CD             
2620+  95CD             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2620+  95CD 02          
2620+  95CE~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2620+  95CE~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2620+  95CE             
2620+  95CE~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2620+  95CE~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2620+  95CE             
2620+  95CE 00 FE       
2620+  95D0             
2620+  95D0             
2621+  95D0             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2621+  95D0 02          
2621+  95D1~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2621+  95D1~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2621+  95D1             
2621+  95D1~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2621+  95D1~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2621+  95D1             
2621+  95D1 00 02       
2621+  95D3             
2621+  95D3             
2622+  95D3             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2622+  95D3 02          
2622+  95D4~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2622+  95D4~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2622+  95D4             
2622+  95D4~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2622+  95D4~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2622+  95D4             
2622+  95D4 00 FE       
2622+  95D6             
2622+  95D6             
2623+  95D6             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2623+  95D6 02          
2623+  95D7~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2623+  95D7~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2623+  95D7             
2623+  95D7~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2623+  95D7~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2623+  95D7             
2623+  95D7 00 02       
2623+  95D9             
2623+  95D9             
2624+  95D9             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2624+  95D9 02          
2624+  95DA~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2624+  95DA~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2624+  95DA             
2624+  95DA~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2624+  95DA~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2624+  95DA             
2624+  95DA 00 FE       
2624+  95DC             
2624+  95DC             
2625+  95DC             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2625+  95DC 02          
2625+  95DD~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2625+  95DD~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2625+  95DD             
2625+  95DD~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2625+  95DD~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2625+  95DD             
2625+  95DD 00 02       
2625+  95DF             
2625+  95DF             
2626+  95DF             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2626+  95DF 02          
2626+  95E0~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2626+  95E0~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2626+  95E0             
2626+  95E0~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2626+  95E0~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2626+  95E0             
2626+  95E0 00 FE       
2626+  95E2             
2626+  95E2             
2627+  95E2             	\ .db 2 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:2    Net:16
2627+  95E2 02          
2627+  95E3~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2627+  95E3~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2627+  95E3             
2627+  95E3~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2627+  95E3~            	SFREQ(256,2)             ;Eff Slope:16     Dur:2    Net:16
2627+  95E3             
2627+  95E3 00 02       
2627+  95E5             
2627+  95E5             
2628+  95E5             	\ .db 2 \ #if (-256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -256 << 1\	#endif\ #endif            ;Eff Slope:-16    Dur:2    Net:-16
2628+  95E5 02          
2628+  95E6~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2628+  95E6~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2628+  95E6             
2628+  95E6~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2628+  95E6~            	SFREQ(-256,2)            ;Eff Slope:-16    Dur:2    Net:-16
2628+  95E6             
2628+  95E6 00 FE       
2628+  95E8             
2628+  95E8             
2629+  95E8             	\ .db 1 \ #if (256>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (1 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 256 << 1\	#endif\ #endif             ;Eff Slope:16     Dur:1    Net:0
2629+  95E8 01          
2629+  95E9~            	SFREQ(256,1)             ;Eff Slope:16     Dur:1    Net:0
2629+  95E9~            	SFREQ(256,1)             ;Eff Slope:16     Dur:1    Net:0
2629+  95E9             
2629+  95E9~            	SFREQ(256,1)             ;Eff Slope:16     Dur:1    Net:0
2629+  95E9~            	SFREQ(256,1)             ;Eff Slope:16     Dur:1    Net:0
2629+  95E9             
2629+  95E9 00 02       
2629+  95EB             
2629+  95EB             
2630+  95EB             	\ .db 0 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (0 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:0    Net:0
2630+  95EB 00          
2630+  95EC~            	SFREQ(0,0)               ;Eff Slope:0      Dur:0    Net:0
2630+  95EC~            	SFREQ(0,0)               ;Eff Slope:0      Dur:0    Net:0
2630+  95EC             
2630+  95EC~            	SFREQ(0,0)               ;Eff Slope:0      Dur:0    Net:0
2630+  95EC~            	SFREQ(0,0)               ;Eff Slope:0      Dur:0    Net:0
2630+  95EC             
2630+  95EC 00 00       
2630+  95EE             
2630+  95EE             
2631+  95EE             ;********************************************************************                                                                
2632+  95EE             ;                                                                    
2633+  95EE             ;                                                                    
2634+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2635+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2636+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2637+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2638+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2639+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2640+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2641+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2642+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2643+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2644+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2645+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2646+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2647+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2648+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2649+  95EE             ;     *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *  
2650+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2651+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2652+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2653+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2654+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2655+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2656+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2657+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2658+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2659+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2660+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2661+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2662+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2663+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2664+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2665+  95EE             ; *  *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 
2666+  95EE             
2667+  95EE                 
2668+  95EE             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_d01 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$01
2668+  95EE             
2668+  92D1             
2668+  92D1 EE          
2668+  9361             
2668+  9361 95          
2668+  9362             
2668+  9362             
2668+  95EE             
2668+  95EE~            NEWSNDAMP(sctrl_d01) ;$01
2668+  95EE~            NEWSNDAMP(sctrl_d01) ;$01
2668+  95EE             
2669+  95EE 080408FC10FE   .byte $08,$04,$08,$FC,$10,$FE,$18,$FC,$FF,$00,$00,$00
2669+  95F4 18FCFF000000
2670+  95FA             ;*********************************************************************************************************************************************************************
2671+  95FA             ;                                                                                                                                                                     
2672+  95FA             ;                                                                                                                                                                     
2673+  95FA             ;                                                                                                                                                                     
2674+  95FA             ;                                                                                                                                                                     
2675+  95FA             ;                                                                                                                                                                     
2676+  95FA             ;                                                                                                                                                                     
2677+  95FA             ;                                                                                                                                                                     
2678+  95FA             ;                                                                                                                                                                     
2679+  95FA             ;                                                                                                                                                                     
2680+  95FA             ;                                                                                                                                                                     
2681+  95FA             ;                                                                                                                                                                     
2682+  95FA             ;                                                                                                                                                                     
2683+  95FA             ;                          *                                                                                                                                          
2684+  95FA             ;                    *  *  *  *  *                                                                                                                                    
2685+  95FA             ;              *  *  *  *  *  *  *  *  *                                                                                                                              
2686+  95FA             ;        *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                        
2687+  95FA             ; 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36
2688+  95FA             
2689+  95FA                
2690+  95FA             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_d02 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$02
2690+  95FA             
2690+  92D2             
2690+  92D2 FA          
2690+  9362             
2690+  9362 95          
2690+  9363             
2690+  9363             
2690+  95FA             
2690+  95FA~            NEWSNDAMP(sctrl_d02) ;$02
2690+  95FA~            NEWSNDAMP(sctrl_d02) ;$02
2690+  95FA             
2691+  95FA 080A50FFFF00   .byte $08,$0A,$50,$FF,$FF,$00,$00,$00
2691+  9600 0000
2692+  9602             ;*********************************************************************************************************************************************************************************************************************************************************************
2693+  9602             ;                                                                                                                                                                                                                                                                     
2694+  9602             ;                                                                                                                                                                                                                                                                     
2695+  9602             ;                                                                                                                                                                                                                                                                     
2696+  9602             ;                                                                                                                                                                                                                                                                     
2697+  9602             ;                                                                                                                                                                                                                                                                     
2698+  9602             ;                                                                                                                                                                                                                                                                     
2699+  9602             ;                          *                                                                                                                                                                                                                                          
2700+  9602             ;                          *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                  
2701+  9602             ;                       *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                          
2702+  9602             ;                    *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                  
2703+  9602             ;                 *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                          
2704+  9602             ;              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                  
2705+  9602             ;              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                          
2706+  9602             ;           *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                  
2707+  9602             ;        *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                          
2708+  9602             ;     *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                  
2709+  9602             ; 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55 56
2710+  9602             
2711+  9602                
2712+  9602             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_d03 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$03
2712+  9602             
2712+  92D3             
2712+  92D3 02          
2712+  9363             
2712+  9363 96          
2712+  9364             
2712+  9364             
2712+  9602             
2712+  9602~            NEWSNDAMP(sctrl_d03) ;$03
2712+  9602~            NEWSNDAMP(sctrl_d03) ;$03
2712+  9602             
2713+  9602 080008011802   .byte $08,$00,$08,$01,$18,$02,$08,$01,$FF,$00,$00,$00
2713+  9608 0801FF000000
2714+  960E             ;*********************************************************************************************************************************************
2715+  960E             ;                                                                                                                                             
2716+  960E             ;                                                                                                                                             
2717+  960E             ;                                                                                                                                             
2718+  960E             ;                                                                                                                                             
2719+  960E             ;                                                                                                                                             
2720+  960E             ;                                                                                                                                             
2721+  960E             ;                                                                                                                                             
2722+  960E             ;                                                                                                                                             
2723+  960E             ;                                                                                                                                             
2724+  960E             ;                                                                                                                          *  *  *  *  *  *  *
2725+  960E             ;                                                                                                              *  *  *  *  *  *  *  *  *  *  *
2726+  960E             ;                                                                                                  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
2727+  960E             ;                                                                                      *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
2728+  960E             ;                                                                          *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
2729+  960E             ;                                                              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
2730+  960E             ;                                                  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
2731+  960E             ; 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E
2732+  960E             
2733+  960E                
2734+  960E             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_d04 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$04
2734+  960E             
2734+  92D4             
2734+  92D4 0E          
2734+  9364             
2734+  9364 96          
2734+  9365             
2734+  9365             
2734+  960E             
2734+  960E~            NEWSNDAMP(sctrl_d04) ;$04
2734+  960E~            NEWSNDAMP(sctrl_d04) ;$04
2734+  960E             
2735+  960E 08 03          .byte 8,3
2736+  9610 08 F9          .byte 8,-7
2737+  9612 08 05          .byte 8,5
2738+  9614 08 FC          .byte 8,-4
2739+  9616 08 05          .byte 8,5
2740+  9618 08 F9          .byte 8,-7
2741+  961A 08 07          .byte 8,7
2742+  961C 08 FB          .byte 8,-5
2743+  961E 08 05          .byte 8,5
2744+  9620 08 FA          .byte 8,-6
2745+  9622 08 05          .byte 8,5
2746+  9624 08 FC          .byte 8,-4
2747+  9626 08 05          .byte 8,5
2748+  9628 08 FA          .byte 8,-6
2749+  962A 08 05          .byte 8,5
2750+  962C 08 FA          .byte 8,-6
2751+  962E 00 00          .byte 0,0
2752+  9630                
2753+  9630             ;************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
2754+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2755+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2756+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2757+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2758+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2759+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2760+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2761+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2762+  9630             ;                                                                                                                                                                                                                                                                                                                                                                                                
2763+  9630             ;                                                                                                                                                                          *                                               *                                                                                               *                                                                     
2764+  9630             ;                                                                                                                          *                                            *  *  *                                         *  *  *                                            *                                            *  *  *                                            *                     
2765+  9630             ;                                                                          *                                            *  *  *                                      *  *  *  *  *  *                             *  *  *  *  *  *                                      *  *  *  *                                *  *  *  *  *  *                                      *  *  *                  
2766+  9630             ;                                                                       *  *  *  *                                *  *  *  *  *  *                                *  *  *  *  *  *  *  *                       *  *  *  *  *  *  *  *  *                          *  *  *  *  *  *  *  *                       *  *  *  *  *  *  *  *  *                          *  *  *  *  *  *               
2767+  9630             ;                          *                                      *  *  *  *  *  *  *  *                       *  *  *  *  *  *  *  *                          *  *  *  *  *  *  *  *  *  *  *           *  *  *  *  *  *  *  *  *  *  *  *                    *  *  *  *  *  *  *  *  *  *  *           *  *  *  *  *  *  *  *  *  *  *  *                    *  *  *  *  *  *  *  *  *         
2768+  9630             ;                    *  *  *  *                                *  *  *  *  *  *  *  *  *  *  *           *  *  *  *  *  *  *  *  *  *  *                    *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *           *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *           *  *  *  *  *  *  *  *  *  *  *  *      
2769+  9630             ;           *  *  *  *  *  *  *  *                       *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   
2770+  9630             ; 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55 56 57 58 59 5A 5B 5C 5D 5E 5F 60 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A 7B 7C 7D 7E 7F
2771+  9630             
2772+  9630             
2773+  9630             ;Used in attract mode for the hard swell drop off notes  
2774+  9630             ;NOTES ON CTRL Data Stream here, Full Bit-Depth of CTRL is only 7-bits, divided by 8 to give 4-Bit final resolution
2775+  9630             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_hardswell = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    
2775+  9630             
2775+  92D5             
2775+  92D5 30          
2775+  9365             
2775+  9365 96          
2775+  9366             
2775+  9366             
2775+  9630             
2775+  9630~            NEWSNDAMP(sctrl_hardswell)   
2775+  9630~            NEWSNDAMP(sctrl_hardswell)   
2775+  9630             
2776+  9630 08 0A           .byte $08,$0A	;Attack  - Addend of 10 x 8
2777+  9632 D0 FF       	.byte $D0,$FF	;Decay	 - Addend of -1 x 208
2778+  9634 FF 00       	.byte $FF,$00	;Sustain - None
2779+  9636 00 00       	.byte $00,$00	;Release





2785+  9638             ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        


2788+  9638             ;                          *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
2789+  9638             ;                       *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
2790+  9638             ;                    *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
2791+  9638             ;                 *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
2792+  9638             ;              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
2793+  9638             ;              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
2794+  9638             ;           *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
2795+  9638             ;        *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                                             
2796+  9638             ;     *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                                                                                                                                                                                                                                                                     

2798+  9638             
2799+  9638             ;Used in attract mode for the hard swell drop off notes  
2800+  9638             ;NOTES ON CTRL Data Stream here, Full Bit-Depth of CTRL is only 7-bits, divided by 8 to give 4-Bit final resolution
2801+  9638             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_hardswell2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    
2801+  9638             
2801+  92D6             
2801+  92D6 38          
2801+  9366             
2801+  9366 96          
2801+  9367             
2801+  9367             
2801+  9638             
2801+  9638~            NEWSNDAMP(sctrl_hardswell2)   
2801+  9638~            NEWSNDAMP(sctrl_hardswell2)   
2801+  9638             
2802+  9638 20 05           .byte 32,5	;Attack  - Addend of 10 x 8
2803+  963A D0 FF       	.byte -48,-1	;Decay	 - Addend of -32 x 208
2804+  963C FF 00       	.byte -1,0	;Sustain - None
2805+  963E 00 00       	.byte 0,0	;Release
2806+  9640             	
2807+  9640             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_funk = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    
2807+  9640             
2807+  92D7             
2807+  92D7 40          
2807+  9367             
2807+  9367 96          
2807+  9368             
2807+  9368             
2807+  9640             
2807+  9640~            NEWSNDAMP(sctrl_funk)   
2807+  9640~            NEWSNDAMP(sctrl_funk)   
2807+  9640             
2808+  9640 14 04           .byte 20,4	;Attack  - Addend of 10 x 8
2809+  9642 C0 01       	.byte -64,1	;Decay	 - Addend of -32 x 208
2810+  9644 FE 08       	.byte -2,8	;Sustain - None
2811+  9646 00 00       	.byte 0,0	;Release
2812+  9648             	
2813+  9648             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_funk2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    
2813+  9648             
2813+  92D8             
2813+  92D8 48          
2813+  9368             
2813+  9368 96          
2813+  9369             
2813+  9369             
2813+  9648             
2813+  9648~            NEWSNDAMP(sctrl_funk2)   
2813+  9648~            NEWSNDAMP(sctrl_funk2)   
2813+  9648             
2814+  9648 50 01           .byte 80,1		;Attack
2815+  964A FF 0C       	.byte -1,12		;Decay
2816+  964C             	;.byte 0,12		;Sustain
2817+  964C B4 01       	.byte -76,1		;Release
2818+  964E 00 00       	.byte 0,0
2819+  9650             
2820+  9650             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_robot = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    
2820+  9650             
2820+  92D9             
2820+  92D9 50          
2820+  9369             
2820+  9369 96          
2820+  936A             
2820+  936A             
2820+  9650             
2820+  9650~            NEWSNDAMP(sctrl_robot)   
2820+  9650~            NEWSNDAMP(sctrl_robot)   
2820+  9650             
2821+  9650 10 05           .byte 16,5	;Attack  - Addend of 16 x 5
2822+  9652 F0 02       	.byte -16,2	;Decay	 - Addend of -32 x 208
2823+  9654 FC 0C       	.byte -4,12	;Sustain - None
2824+  9656 00 00       	.byte 0,0	;Release
2825+  9658 00 00       	.byte 0,0
2826+  965A             
2827+  965A             ;Used in attract mode for the horns
2828+  965A             ;NOTES ON CTRL Data Stream here, Full Bit-Depth of CTRL is only 7-bits, divided by 8 to give 4-Bit final resolution
2829+  965A             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_horn = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    
2829+  965A             
2829+  92DA             
2829+  92DA 5A          
2829+  936A             
2829+  936A 96          
2829+  936B             
2829+  936B             
2829+  965A             
2829+  965A~            NEWSNDAMP(sctrl_horn)   
2829+  965A~            NEWSNDAMP(sctrl_horn)   
2829+  965A             
2830+  965A 08 0A           .byte $08,$0A	;Attack  - Addend of 10 x 8
2831+  965C 02 FF       	.byte $02,$FF	;Decay	 - Addend of -1 x 208
2832+  965E FF 00       	.byte $FF,$00	;Sustain - None
2833+  9660 00 00       	.byte $00,$00	;Release
2834+  9662             
2835+  9662             ;Not Used - Short Envelope  
2836+  9662             \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_d05 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$05
2836+  9662             
2836+  92DB             
2836+  92DB 62          
2836+  936B             
2836+  936B 96          
2836+  936C             
2836+  936C             
2836+  9662             
2836+  9662~            NEWSNDAMP(sctrl_d05) ;$05
2836+  9662~            NEWSNDAMP(sctrl_d05) ;$05
2836+  9662             
2837+  9662 080820FE2000    .byte $08,$08,$20,$FE,$20,$00,$01,$80,$FF,$00,$00,$00,$00,$00
2837+  9668 0180FF0000000000
2838+  9670             ;************************************************************************************************************************************************************************************************************************
2839+  9670             ;                                                                                                                                                                                                                        
2840+  9670             ;                                                                                                                                                                                                                        
2841+  9670             ;                                                                                                                                                                                                                        
2842+  9670             ;                                                                                                                                                                                                                        
2843+  9670             ;                                                                                                                                                                                                                        
2844+  9670             ;                                                                                                                                                                                                                        
2845+  9670             ;                                                                                                                                                                                                                        
2846+  9670             ;                                                                                                                                                                                                                        
2847+  9670             ;                          *                                                                                                                                                                                             
2848+  9670             ;                       *  *  *  *  *  *                                                                                                                                                                                 
2849+  9670             ;                    *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                                     
2850+  9670             ;                 *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                                         
2851+  9670             ;              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                             
2852+  9670             ;           *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                                 
2853+  9670             ;        *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                                     
2854+  9670             ;     *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *                                                                                                         
2855+  9670             ; 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F 40 41 42 43 44 45 46 47
2856+  9670             
2857+  9670             
2858+  9670             ;********************************************************************
2859+  9670             ;* 16-Bit Note Table!! Yeah!
2860+  9670             ;* For sounds using straight tunes, this table is a data word
2861+  9670             ;* table by byte index. First data point is index $01
2862+  9670             ;*
2863+  9670             ;* Havoc uses a 1.50Mhz POKEY Clock
2864+  9670             ;*  - Notes will be 16.2% slower/lower
2865+  9670             ;*  - This is 3 half-steps lower, so C becomes A
2866+  9670             ;********************************************************************
2867+  9670             ___noteidx	= 1
2868+  9670             #DEFINE NOTEDEF(name,reg)		\_+name = ___noteidx
2869+  9670             #DEFCONT						\___noteidx .set ___noteidx+1
2870+  9670             #DEFCONT						\ .word reg
2871+  9670             
2872+  9670             
2873+  9670             _REST 		= $00
2874+  9670             ;********************************************************************
2875+  9670             ;       Register		Index		Octave	Note	Frequency
2876+  9670             notes   
2877+  9670             		;PRE OCTAVE 0 NOTES - Due to main clock shift
2878+  9670             		\_+A_ = ___noteidx\___noteidx .set ___noteidx+1\ .word  $B260	;0x01		-1		A  		13.75Hz
2878+  9670             
2878+  9670             
2878+  9670 60 B2       
2879+  9672                     \_+Bb_ = ___noteidx\___noteidx .set ___noteidx+1\ .word $A900	;0x02		-1		A#/Bb 
2879+  9672             
2879+  9672             
2879+  9672 00 A9       
2880+  9674                     \_+B_ = ___noteidx\___noteidx .set ___noteidx+1\ .word  $9E80	;0x03 		-1		B 
2880+  9674             
2880+  9674             
2880+  9674 80 9E       
2881+  9676             		;OCTAVE 0
2882+  9676                     \_+C0 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $9680	;0x04		0		C
2882+  9676             
2882+  9676             
2882+  9676 80 96       
2883+  9678                     \_+Db0 = ___noteidx\___noteidx .set ___noteidx+1\ .word $8F4D	;0x05		0		C#/Db
2883+  9678             
2883+  9678             
2883+  9678 4D 8F       
2884+  967A                     \_+D0 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $8680	;0x06		0		D  
2884+  967A             
2884+  967A             
2884+  967A 80 86       
2885+  967C                     \_+Eb0 = ___noteidx\___noteidx .set ___noteidx+1\ .word $7F80	;0x07		0		D#/Eb
2885+  967C             
2885+  967C             
2885+  967C 80 7F       
2886+  967E                     \_+E0 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $77C0	;0x08		0		E		20.60Hz
2886+  967E             
2886+  967E             
2886+  967E C0 77       
2887+  9680                     \_+F0 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $7180	;0x09		0		F
2887+  9680             
2887+  9680             
2887+  9680 80 71       
2888+  9682                     \_+Gb0 = ___noteidx\___noteidx .set ___noteidx+1\ .word $6B40	;0x0a		0		F#/Gb
2888+  9682             
2888+  9682             
2888+  9682 40 6B       
2889+  9684                     \_+G0 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $6580	;0x0b		0		G
2889+  9684             
2889+  9684             
2889+  9684 80 65       
2890+  9686                     \_+Ab0 = ___noteidx\___noteidx .set ___noteidx+1\ .word $5F90	;0x0c		0		G#/Ab
2890+  9686             
2890+  9686             
2890+  9686 90 5F       
2891+  9688                     \_+A0 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $5A20	;0x0d		0		A		27.50Hz 
2891+  9688             
2891+  9688             
2891+  9688 20 5A       
2892+  968A                     \_+Bb0 = ___noteidx\___noteidx .set ___noteidx+1\ .word $5580	;0x0e		0		A#/Bb
2892+  968A             
2892+  968A             
2892+  968A 80 55       
2893+  968C                     \_+B0 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $5080	;0x0f		0		B		30.87Hz
2893+  968C             
2893+  968C             
2893+  968C 80 50       
2894+  968E             		;OCTAVE 1
2895+  968E                     \_+C1 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $4C10	;0x10		1		C		32.70Hz
2895+  968E             
2895+  968E             
2895+  968E 10 4C       
2896+  9690                     \_+Db1 = ___noteidx\___noteidx .set ___noteidx+1\ .word $47A0	;0x11		1		C#/Db	34.652Hz
2896+  9690             
2896+  9690             
2896+  9690 A0 47       
2897+  9692                     \_+D1 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $43C0	;0x12		1		D
2897+  9692             
2897+  9692             
2897+  9692 C0 43       
2898+  9694                     \_+Eb1 = ___noteidx\___noteidx .set ___noteidx+1\ .word $3FF0	;0x13		1		D#/Eb
2898+  9694             
2898+  9694             
2898+  9694 F0 3F       
2899+  9696                     \_+E1 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $3C56	;0x14		1		E
2899+  9696             
2899+  9696             
2899+  9696 56 3C       
2900+  9698                     \_+F1 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $38F0	;0x15		1		F
2900+  9698             
2900+  9698             
2900+  9698 F0 38       
2901+  969A                     \_+Gb1 = ___noteidx\___noteidx .set ___noteidx+1\ .word $35C0	;0x16		1		F#/Gb
2901+  969A             
2901+  969A             
2901+  969A C0 35       
2902+  969C                     \_+G1 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $32C0	;0x17		1		G
2902+  969C             
2902+  969C             
2902+  969C C0 32       
2903+  969E                     \_+Ab1 = ___noteidx\___noteidx .set ___noteidx+1\ .word $2FC0	;0x18		1		G#/Ab
2903+  969E             
2903+  969E             
2903+  969E C0 2F       
2904+  96A0                     \_+A1 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $2D28	;0x19		1		A
2904+  96A0             
2904+  96A0             
2904+  96A0 28 2D       
2905+  96A2                     \_+Bb1 = ___noteidx\___noteidx .set ___noteidx+1\ .word $2AA0	;0x1a		1		A#/Bb
2905+  96A2             
2905+  96A2             
2905+  96A2 A0 2A       
2906+  96A4                     \_+B1 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $2844	;0x1b		1		B
2906+  96A4             
2906+  96A4             
2906+  96A4 44 28       
2907+  96A6             		;OCTAVE 2
2908+  96A6                     \_+C2 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $2600	;0x1c		2		C
2908+  96A6             
2908+  96A6             
2908+  96A6 00 26       
2909+  96A8                     \_+Db2 = ___noteidx\___noteidx .set ___noteidx+1\ .word $23D0	;0x1d		2		C#/Db
2909+  96A8             
2909+  96A8             
2909+  96A8 D0 23       
2910+  96AA                     \_+D2 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $21E0	;0x1e		2		D
2910+  96AA             
2910+  96AA             
2910+  96AA E0 21       
2911+  96AC                     \_+Eb2 = ___noteidx\___noteidx .set ___noteidx+1\ .word $1FF4	;0x1f		2		D#/Eb
2911+  96AC             
2911+  96AC             
2911+  96AC F4 1F       
2912+  96AE                     \_+E2 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $1E2C	;0x20		2		E  
2912+  96AE             
2912+  96AE             
2912+  96AE 2C 1E       
2913+  96B0                     \_+F2 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $1C74	;0x21		2		F
2913+  96B0             
2913+  96B0             
2913+  96B0 74 1C       
2914+  96B2                     \_+Gb2 = ___noteidx\___noteidx .set ___noteidx+1\ .word $1AD4	;0x22		2		F#/Gb
2914+  96B2             
2914+  96B2             
2914+  96B2 D4 1A       
2915+  96B4                     \_+G2 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $1958	;0x23		2		G
2915+  96B4             
2915+  96B4             
2915+  96B4 58 19       
2916+  96B6                     \_+Ab2 = ___noteidx\___noteidx .set ___noteidx+1\ .word $17EC	;0x24		2		G#/Ab
2916+  96B6             
2916+  96B6             
2916+  96B6 EC 17       
2917+  96B8                     \_+A2 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $168A	;0x25		2		A
2917+  96B8             
2917+  96B8             
2917+  96B8 8A 16       
2918+  96BA                     \_+Bb2 = ___noteidx\___noteidx .set ___noteidx+1\ .word $154E	;0x26		2		A#/Bb
2918+  96BA             
2918+  96BA             
2918+  96BA 4E 15       
2919+  96BC                     \_+B2 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $1419	;0x27		2		B		121.3
2919+  96BC             
2919+  96BC             
2919+  96BC 19 14       
2920+  96BE             		;OCTAVE 3
2921+  96BE                     \_+C3 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $12FE	;0x28		3		C
2921+  96BE             
2921+  96BE             
2921+  96BE FE 12       
2922+  96C0                     \_+Db3 = ___noteidx\___noteidx .set ___noteidx+1\ .word $11E4	;0x29		3		C#/Db
2922+  96C0             
2922+  96C0             
2922+  96C0 E4 11       
2923+  96C2             		\_+D3 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $10ED	;0x2a 		3		D
2923+  96C2             
2923+  96C2             
2923+  96C2 ED 10       
2924+  96C4             		\_+Eb3 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0FF3	;0x2b		3		D#/Eb
2924+  96C4             
2924+  96C4             
2924+  96C4 F3 0F       
2925+  96C6             		\_+E3 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0F0C	;0x2c		3		E
2925+  96C6             
2925+  96C6             
2925+  96C6 0C 0F       
2926+  96C8             		\_+F3 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0E3B	;0x2d		3		F
2926+  96C8             
2926+  96C8             
2926+  96C8 3B 0E       
2927+  96CA             		\_+Gb3 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0D6C	;0x2e		3		F#/Gb
2927+  96CA             
2927+  96CA             
2927+  96CA 6C 0D       
2928+  96CC             		\_+G3 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0CAA	;0x2f		3		G
2928+  96CC             
2928+  96CC             
2928+  96CC AA 0C       
2929+  96CE             		\_+Ab3 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0BF3	;0x30		3		G#/Ab
2929+  96CE             
2929+  96CE             
2929+  96CE F3 0B       
2930+  96D0                     \_+A3 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0B60	;0x31		3		A
2930+  96D0             
2930+  96D0             
2930+  96D0 60 0B       
2931+  96D2             		\_+Bb3 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0AC0	;0x32		3		A#/Bb
2931+  96D2             
2931+  96D2             
2931+  96D2 C0 0A       
2932+  96D4             		\_+B3 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0A18	;0x33		3		B
2932+  96D4             
2932+  96D4             
2932+  96D4 18 0A       
2933+  96D6             		;OCTAVE 4
2934+  96D6             		\_+C4 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0990	;0x34		4		C
2934+  96D6             
2934+  96D6             
2934+  96D6 90 09       
2935+  96D8             		\_+Db4 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0904	;0x35		4		C#/Db
2935+  96D8             
2935+  96D8             
2935+  96D8 04 09       
2936+  96DA             		\_+D4 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0880	;0x36		4		D
2936+  96DA             
2936+  96DA             
2936+  96DA 80 08       
2937+  96DC             		\_+Eb4 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0804	;0x37		4		D#/Eb
2937+  96DC             
2937+  96DC             
2937+  96DC 04 08       
2938+  96DE             		\_+E4 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0792	;0x38		4		E
2938+  96DE             
2938+  96DE             
2938+  96DE 92 07       
2939+  96E0                     \_+F4 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0720	;0x39		4		F
2939+  96E0             
2939+  96E0             
2939+  96E0 20 07       
2940+  96E2             		\_+Gb4 = ___noteidx\___noteidx .set ___noteidx+1\ .word $06C0	;0x3a		4		F#/Gb
2940+  96E2             
2940+  96E2             
2940+  96E2 C0 06       
2941+  96E4             		\_+G4 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0658	;0x3b		4		G
2941+  96E4             
2941+  96E4             
2941+  96E4 58 06       
2942+  96E6             		\_+Ab4 = ___noteidx\___noteidx .set ___noteidx+1\ .word $05F8	;0x3c		4		G#/Ab
2942+  96E6             
2942+  96E6             
2942+  96E6 F8 05       
2943+  96E8             		\_+A4 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $05A4	;0x3d		4		A
2943+  96E8             
2943+  96E8             
2943+  96E8 A4 05       
2944+  96EA             		\_+Bb4 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0554	;0x3e		4		A#/Bb
2944+  96EA             
2944+  96EA             
2944+  96EA 54 05       
2945+  96EC             		\_+B4 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0502	;0x3f		4		B
2945+  96EC             
2945+  96EC             
2945+  96EC 02 05       
2946+  96EE             		;OCTAVE 5
2947+  96EE             		\_+C5 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $04BC	;0x40		5		C
2947+  96EE             
2947+  96EE             
2947+  96EE BC 04       
2948+  96F0                     \_+Db5 = ___noteidx\___noteidx .set ___noteidx+1\ .word $047C	;0x41		5		C#/Db
2948+  96F0             
2948+  96F0             
2948+  96F0 7C 04       
2949+  96F2             		\_+D5 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $043C	;0x42		5		D
2949+  96F2             
2949+  96F2             
2949+  96F2 3C 04       
2950+  96F4             		\_+Eb5 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0400	;0x43		5		D#/Eb
2950+  96F4             
2950+  96F4             
2950+  96F4 00 04       
2951+  96F6             		\_+E5 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $03C4	;0x44		5		E
2951+  96F6             
2951+  96F6             
2951+  96F6 C4 03       
2952+  96F8             		\_+F5 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0390	;0x45		5		F
2952+  96F8             
2952+  96F8             
2952+  96F8 90 03       
2953+  96FA             		\_+Gb5 = ___noteidx\___noteidx .set ___noteidx+1\ .word $035E	;0x46		5		F#/Gb
2953+  96FA             
2953+  96FA             
2953+  96FA 5E 03       
2954+  96FC             		\_+G5 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $032C	;0x47		5		G
2954+  96FC             
2954+  96FC             
2954+  96FC 2C 03       
2955+  96FE             		\_+Ab5 = ___noteidx\___noteidx .set ___noteidx+1\ .word $02FE	;0x48		5		G#/Ab
2955+  96FE             
2955+  96FE             
2955+  96FE FE 02       
2956+  9700                     \_+A5 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $02D0	;0x49		5		A
2956+  9700             
2956+  9700             
2956+  9700 D0 02       
2957+  9702             		\_+Bb5 = ___noteidx\___noteidx .set ___noteidx+1\ .word $02A8	;0x4a		5		A#/Bb
2957+  9702             
2957+  9702             
2957+  9702 A8 02       
2958+  9704             		\_+B5 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $027E	;0x4b		5		B
2958+  9704             
2958+  9704             
2958+  9704 7E 02       
2959+  9706             		;OCTAVE 6
2960+  9706             		\_+C6 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $025A  ;0x4c		6		C
2960+  9706             
2960+  9706             
2960+  9706 5A 02       
2961+  9708             		\_+Db6 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0237	;0x4d		6		C#/Db
2961+  9708             
2961+  9708             
2961+  9708 37 02       
2962+  970A             		\_+D6 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0218	;0x4e		6		D
2962+  970A             
2962+  970A             
2962+  970A 18 02       
2963+  970C             		\_+Eb6 = ___noteidx\___noteidx .set ___noteidx+1\ .word $01F9	;0x4f		6		D#/Eb
2963+  970C             
2963+  970C             
2963+  970C F9 01       
2964+  970E             		\_+E6 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $01DC	;0x50		6		E
2964+  970E             
2964+  970E             
2964+  970E DC 01       
2965+  9710                     \_+F6 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $01C2	;0x51		6		F
2965+  9710             
2965+  9710             
2965+  9710 C2 01       
2966+  9712             		\_+Gb6 = ___noteidx\___noteidx .set ___noteidx+1\ .word $01A8	;0x52		6		F#/Gb
2966+  9712             
2966+  9712             
2966+  9712 A8 01       
2967+  9714             		\_+G6 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0190	;0x53		6		G
2967+  9714             
2967+  9714             
2967+  9714 90 01       
2968+  9716             		\_+Ab6 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0179	;0x54		6		G#/Ab
2968+  9716             
2968+  9716             
2968+  9716 79 01       
2969+  9718             		\_+A6 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0163	;0x55		6		A
2969+  9718             
2969+  9718             
2969+  9718 63 01       
2970+  971A             		\_+Bb6 = ___noteidx\___noteidx .set ___noteidx+1\ .word $014F	;0x56		6		A#/Bb
2970+  971A             
2970+  971A             
2970+  971A 4F 01       
2971+  971C             		\_+B6 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $013B	;0x57		6		B
2971+  971C             
2971+  971C             
2971+  971C 3B 01       
2972+  971E             		;OCTAVE 7
2973+  971E             		\_+C7 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0129	;0x58		7		C
2973+  971E             
2973+  971E             
2973+  971E 29 01       
2974+  9720                     \_+Db7 = ___noteidx\___noteidx .set ___noteidx+1\ .word $0118	;0x59		7		C#/Db
2974+  9720             
2974+  9720             
2974+  9720 18 01       
2975+  9722             		\_+D7 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $0107	;0x5a		7		D
2975+  9722             
2975+  9722             
2975+  9722 07 01       
2976+  9724             		\_+Eb7 = ___noteidx\___noteidx .set ___noteidx+1\ .word $00F7	;0x5b		7		D#/Eb
2976+  9724             
2976+  9724             
2976+  9724 F7 00       
2977+  9726             		\_+E7 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $00E8	;0x5c		7		E
2977+  9726             
2977+  9726             
2977+  9726 E8 00       
2978+  9728             		\_+F7 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $00DA	;0x5d		7		F
2978+  9728             
2978+  9728             
2978+  9728 DA 00       
2979+  972A             		\_+Gb7 = ___noteidx\___noteidx .set ___noteidx+1\ .word $00CC	;0x5e		7		F#/Gb
2979+  972A             
2979+  972A             
2979+  972A CC 00       
2980+  972C             		\_+G7 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $00C4	;0x5f		7		G
2980+  972C             
2980+  972C             
2980+  972C C4 00       
2981+  972E             		\_+Ab7 = ___noteidx\___noteidx .set ___noteidx+1\ .word $00BD	;0x60		7		G#/Ab
2981+  972E             
2981+  972E             
2981+  972E BD 00       
2982+  9730                     \_+A7 = ___noteidx\___noteidx .set ___noteidx+1\ .word  $00B7	;0x61		7		A
2982+  9730             
2982+  9730             
2982+  9730 B7 00       
2983+  9732             
2984+  9732                     
2985+  9732             rpm_end
2986+  9732                     
0354   9732             		
0355   9732             ;******************************************************
0356   9732                     .sbttl "EEROM Applications"
0357   9732             ;******************************************************
0358   9732             ;* If bit is set, that section is either read or      
0359   9732             ;* written depending of request byte in                   
0360   9732             ;*      Bit 0 = High Scores   
0361   9732             ;*      Bit 1 = Initials                         
0362   9732             ;*      Bit 2 = XLives+Warps Stats
0363   9732             ;*      Bit 3 = Game Stats 
0364   9732             ;*      Bit 4 = Maze Stats               
0365   9732             ;*      Bit 5 = Option Switches 
0366   9732             ;*      Bit 6 = Defined Warp Data  
0367   9732             ;*      Bit 7 = Tesseract Data 
0368   9732             ;******************************************************
0369   9732             eflg_scores     = $01 
0370   9732             eflg_initials   = $02  
0371   9732             eflg_xwarp      = $04
0372   9732             eflg_game       = $08  
0373   9732             eflg_maze       = $10   
0374   9732             eflg_option     = $20   
0375   9732             eflg_warpco     = $40     
0376   9732             eflg_tesser     = $80            
0377   9732             ;******************************************************
0378   9732             ; teax is the table for length of data chunk
0379   9732             ;******************************************************       
0380   9732 0C          teax    .db cksumhs-hscore  ;Scores
0381   9733 09                  .db cksumit-initl   ;Initials  
0382   9734 10                  .db cksumxw-extlie  ;XLives+Warps
0383   9735 10                  .db cksumgs-game1   ;Game Stats
0384   9736 C8                  .db cksummz-mzstats ;Maze Stats
0385   9737 02                  .db cksumop-options ;Options 
0386   9738 0E                  .db cksumwc-warpcodes;Warp Numbers 
0387   9739 03          		.db cksumts-tessers	;Tesseracts
0388   973A             
0389   973A             ;RAM Buffer Location for the EEROM data tranfer
0390   973A 07 07       teasrl  .dw hscore  ;Scores
0391   973C FD 06               .dw initl   ;Initials
0392   973E 03 06               .dw extlie  ;XLives+Warps
0393   9740 14 06               .dw game1   ;Game Stats
0394   9742 25 06               .dw mzstats ;Maze Stats
0395   9744 00 06               .dw options ;Options 
0396   9746 EE 06               .dw warpcodes;Warp Numbers 
0397   9748 14 07       		.dw tessers	;Tesseracts
0398   974A                     
0399   974A             ;EEROM Locations for the data transfer
0400   974A 27 61       teadel  .dw hscore-starts+eerom     ;Scores
0401   974C 1D 61               .dw initl-starts+eerom      ;Initials
0402   974E 23 60               .dw extlie-starts+eerom     ;XLives+Warps
0403   9750 34 60               .dw game1-starts+eerom      ;Game Stats
0404   9752 45 60               .dw mzstats-starts+eerom    ;Maze Stats
0405   9754 20 60               .dw options-starts+eerom    ;Option 
0406   9756 0E 61               .dw warpcodes-starts+eerom  ;Warp Numbers
0407   9758 34 61       		.dw tessers-starts+eerom	;Tesseracts
0408   975A             
0409   975A             ;teasrh  = teasrl+1
0410   975A             
0411   975A             ;Clear High Scores, Initials, Tessers        
0412   975A A9 83       eezhis  lda #(eflg_scores+eflg_initials+eflg_tesser)        
0413   975C D0 04               bne genzer
0414   975E             
0415   975E             ;Clear All Bookkeeping         
0416   975E A9 1C       eezbook lda #(eflg_xwarp+eflg_game+eflg_maze)       
0417   9760 D0 00               bne genzer
0418   9762             
0419   9762             ;Clear Options Only
0420   9762             ;eezopt  lda #eflg_option       
0421   9762             ;        bne genzer
0422   9762             
0423   9762             ;Clear all areas        
0424   9762             ;eezero  lda #(eflg_scores+eflg_initials+eflg_xwarp+eflg_game+eflg_maze+eflg_option+eflg_tesser)    
0425   9762 A0 80       genzer  ldy #EE_ERASE        ;Request Clear Function
0426   9764 D0 28               bne genreq
0427   9766             
0428   9766             ;Write Scores Only
0429   9766 A9 01       wrhs    lda #eflg_scores 
0430   9768 D0 22               bne nozero
0431   976A                     
0432   976A             ;Write Initials Only
0433   976A A9 02       wrini   lda #eflg_initials 
0434   976C D0 1E               bne nozero
0435   976E             
0436   976E             ;Write Tesseracts Only		
0437   976E A9 80       wrtes	lda #eflg_tesser
0438   9770 D0 1A       		bne nozero
0439   9772                     
0440   9772             ;Re-write Initials & Scores 
0441   9772 A9 83       wrhsini lda #eflg_initials+eflg_scores+eflg_tesser
0442   9774 D0 16               bne nozero
0443   9776                     
0444   9776             ;Re-write Game Stats        
0445   9776 A9 08       wrstg   lda #eflg_game       
0446   9778 D0 12               bne nozero
0447   977A             
0448   977A             ;Re-write Maze Stats           
0449   977A A9 10       wrmaze  lda #eflg_maze
0450   977C D0 0E               bne nozero
0451   977E             
0452   977E             ;Re-write Xlives+Warp Stats           
0453   977E A9 04       wrxwarp lda #eflg_xwarp
0454   9780 D0 0A               bne nozero
0455   9782             
0456   9782             ;Re-write All Stats 
0457   9782 A9 1C       wrbook  lda #(eflg_xwarp+eflg_game+eflg_maze)               
0458   9784 D0 06               bne nozero       
0459   9786             
0460   9786             ;Re-Write all Warp Codes        
0461   9786 A9 40       wrwarpc lda #eflg_warpco
0462   9788 D0 02               bne nozero
0463   978A             
0464   978A             ;Re-write Option switches        
0465   978A A9 20       wropt   lda #eflg_option       
0466   978C             		;fall through
0467   978C A0 00       nozero  ldy #00         
0468   978E 84 25       genreq  sty eeflg       ;Save request flag
0469   9790 48                  pha 
0470   9791 05 22               ora eerequ      ;Put in request section flags
0471   9793 85 22               sta eerequ
0472   9795 68                  pla 
0473   9796 05 23               ora eerwrq      ;Put in write bytes also
0474   9798 85 23               sta eerwrq
0475   979A 60                  rts 
0476   979B             
0477   979B             ;Read in everything        
0478   979B A9 FF       reinall lda #(eflg_scores+eflg_initials+eflg_xwarp+eflg_game+eflg_maze+eflg_option+eflg_warpco+eflg_tesser)        
0479   979D 85 22               sta eerequ      ;Save request flag
0480   979F A9 00               lda #00
0481   97A1 85 23               sta eerwrq      ;Clear write requests
0482   97A3             		;Fall through to handle requests 
0483   97A3             		;**********************************************************************
0484   97A3                     .sbttl "EEROM I/O Mainline"
0485   97A3             		;**********************************************************************
0486   97A3             		;* Input:  eeflg: 00=done, 80=erase, 40=write, 20=read         
0487   97A3             		;*         eeidx:   Index into EEROM to access this data                
0488   97A3             		;*         eebc:  Offset from eesrce of RAM data to access            
0489   97A3             		;*         eexend: Bytes to read for this chunk, done when eecnt >= cclen
0490   97A3             		;*                                                                    
0491   97A3             		;* Output:  EEROM erased, written or read                             
0492   97A3             		;**********************************************************************		
0493   97A3 A5 25       eeupd   lda eeflg
0494   97A5                     \ .push  *, 0 \ BNE  * 		                ;Not active
0494   97A5             
0494   97A5 D0 FE       
0495   97A7 20 10 98                jsr eesetup
0496   97AA                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0496   97AA             
0496   97AA             
0496   97AA             
0496   97AA             
0496   97AA             
0496   97AA             
0496   97AA~                    endif
0496   97AA~                    endif
0496   97AA             
0496   97AA~                    endif
0496   97AA~                    endif
0496   97AA             
0496   97A6             
0496   97A6 03          
0496   97A7             
0496   97A7             
0496   97A7~                    endif
0496   97A7~                    endif
0496   97A7~                    endif
0496   97A7             
0496   97A7~                    endif
0496   97A7~                    endif
0496   97A7~                    endif
0496   97A7             
0496   97AA             
0496   97AA~                    endif
0496   97AA~                    endif
0496   97AA             
0497   97AA                     ;Now do it...
0498   97AA A5 25       		lda eeflg           ;Anything to do??
0499   97AC                     \ .push  *, 0 \ BEQ  * 		
0499   97AC             
0499   97AC F0 FE       
0500   97AE A4 27       			ldy eeidx           ;Get starting index
0501   97B0 0A          			asl A				;Flags
0502   97B1             			\ .push  *, 0 \ BCC  *                 ;R, W or Erase?
0502   97B1             
0502   97B1 90 FE       
0503   97B3             				;Write/Erase Request
0504   97B3 A0 40       				ldy #EE_WRITE
0505   97B5 84 25       				sty eeflg           ;Signal busy with write, will clear on next pass
0506   97B7 84 21       				sty eezflg			;Zero it too!
0507   97B9             			\var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif                ;Read or Write
0507   97B9             
0507   97B9             
0507   97B9             
0507   97B9             
0507   97B2             
0507   97B2             
0507   97B2             
0507   97B2~            			else                ;Read or Write
0507   97B2~            			else                ;Read or Write
0507   97B2             
0507   97B2~            			else                ;Read or Write
0507   97B2~            			else                ;Read or Write
0507   97B2             
0507   97B2 09          
0507   97B9             
0507   97B9             
0507   97B9 4C B9 97    
0507   97BC             
0507   97BC             
0507   97BC~            			else                ;Read or Write
0507   97BC~            			else                ;Read or Write
0507   97BC~            			else                ;Read or Write
0507   97BC~            			else                ;Read or Write
0507   97BC~            			else                ;Read or Write
0507   97BC             
0507   97BC~            			else                ;Read or Write
0507   97BC~            			else                ;Read or Write
0507   97BC             
0507   97BC~            			else                ;Read or Write
0507   97BC~            			else                ;Read or Write
0507   97BC             
0508   97BC             				\ .push  *, 0 \ BPL  *                 ;Write a byte
0508   97BC             
0508   97BC 10 FE       
0509   97BE A5 21       					lda eezflg      ;Was this an erase request?
0510   97C0             					\ .push  *, 0 \ BEQ  *                 ;yep
0510   97C0             
0510   97C0 F0 FE       
0511   97C2 A9 00       						lda #00
0512   97C4 91 1D       						sta (eesrce,Y)      ;Clear source too
0513   97C6             					\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0513   97C6             
0513   97C6             
0513   97C6             
0513   97C6             
0513   97C6             
0513   97C6             
0513   97C6~            					endif
0513   97C6~            					endif
0513   97C6             
0513   97C6~            					endif
0513   97C6~            					endif
0513   97C6             
0513   97C1             
0513   97C1 04          
0513   97C2             
0513   97C2             
0513   97C2~            					endif
0513   97C2~            					endif
0513   97C2~            					endif
0513   97C2             
0513   97C2~            					endif
0513   97C2~            					endif
0513   97C2~            					endif
0513   97C2             
0513   97C6             
0513   97C6~            					endif
0513   97C6~            					endif
0513   97C6             
0514   97C6 B1 1D       					lda (eesrce,Y)      ;Get data to write
0515   97C8             					;compare eecnt agains eelen, but keep A,X and Y intact
0516   97C8 20 5C 98    					jsr compee
0517   97CB             					\ .push  *, 0 \ BCC  *                 ;yep
0517   97CB             
0517   97CB 90 FE       
0518   97CD A5 2A       						lda eecsum          ;Get checksum
0519   97CF 49 FF       						eor #$FF			;We are going to force an extra EOR inversion here so that all values of 00 will result in a CSUM of $FF
0520   97D1 91 1F       						sta (eedest,Y)     ;Write to chip
0521   97D3 A9 00       						lda #EE_DONE
0522   97D5 85 25       						sta eeflg           ;We are done
0523   97D7 85 21       						sta eezflg
0524   97D9 A0 FF       						ldy #-1
0525   97DB             					\var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif 
0525   97DB             
0525   97DB             
0525   97DB             
0525   97DB             
0525   97CC             
0525   97CC             
0525   97CC             
0525   97CC~            					else 
0525   97CC~            					else 
0525   97CC             
0525   97CC~            					else 
0525   97CC~            					else 
0525   97CC             
0525   97CC 11          
0525   97DB             
0525   97DB             
0525   97DB 4C DB 97    
0525   97DE             
0525   97DE             
0525   97DE~            					else 
0525   97DE~            					else 
0525   97DE~            					else 
0525   97DE~            					else 
0525   97DE~            					else 
0525   97DE             
0525   97DE~            					else 
0525   97DE~            					else 
0525   97DE             
0525   97DE~            					else 
0525   97DE~            					else 
0525   97DE             
0526   97DE             						;we need Indirect Indexed here put X index into Y
0527   97DE             						;ldy eeidx
0528   97DE 91 1F       						sta (eedest,Y)     ;Write to chip
0529   97E0 A0 FF       						ldy #-1
0530   97E2             					\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0530   97E2             
0530   97E2             
0530   97E2             
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2             
0530   97DC             
0530   97DC E2 97       
0530   97DE             
0530   97E2             
0530   97E2~            					endif
0530   97E2~            					endif
0530   97E2             
0531   97E2             				\var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif                ;Must be a read
0531   97E2             
0531   97E2             
0531   97E2             
0531   97E2             
0531   97BD             
0531   97BD             
0531   97BD             
0531   97BD~            				else                ;Must be a read
0531   97BD~            				else                ;Must be a read
0531   97BD             
0531   97BD~            				else                ;Must be a read
0531   97BD~            				else                ;Must be a read
0531   97BD             
0531   97BD 27          
0531   97E2             
0531   97E2             
0531   97E2 4C E2 97    
0531   97E5             
0531   97E5             
0531   97E5~            				else                ;Must be a read
0531   97E5~            				else                ;Must be a read
0531   97E5~            				else                ;Must be a read
0531   97E5~            				else                ;Must be a read
0531   97E5~            				else                ;Must be a read
0531   97E5             
0531   97E5~            				else                ;Must be a read
0531   97E5~            				else                ;Must be a read
0531   97E5             
0531   97E5~            				else                ;Must be a read
0531   97E5~            				else                ;Must be a read
0531   97E5             
0532   97E5             					;Note: Can read all at once, no need to wait
0533   97E5             					;ldy eeidx
0534   97E5 B1 1F       					lda (eedest,Y)     ;Get data
0535   97E7             					;cpx eexend           ;Got all?
0536   97E7             					;compare eecnt agains eelen, but keep A,X and Y intact
0537   97E7 20 5C 98    					jsr compee
0538   97EA             					\ .push  *, 0 \ BCC  *                 ;yes
0538   97EA             
0538   97EA 90 FE       
0539   97EC 49 FF       						eor #$FF			;We are going to force an extra EOR inversion here so that all values of 00 will result in a CSUM of $FF
0540   97EE 45 2A       						eor eecsum            ;Match checksum??
0541   97F0             						\ .push  *, 0 \ BEQ  * 
0541   97F0             
0541   97F0 F0 FE       
0542   97F2 A5 29       							lda eesel
0543   97F4 05 24       							ora eebad
0544   97F6 85 24       							sta eebad
0545   97F8             						\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0545   97F8             
0545   97F8             
0545   97F8             
0545   97F8             
0545   97F8             
0545   97F8             
0545   97F8~            						endif
0545   97F8~            						endif
0545   97F8             
0545   97F8~            						endif
0545   97F8~            						endif
0545   97F8             
0545   97F1             
0545   97F1 06          
0545   97F2             
0545   97F2             
0545   97F2~            						endif
0545   97F2~            						endif
0545   97F2~            						endif
0545   97F2             
0545   97F2~            						endif
0545   97F2~            						endif
0545   97F2~            						endif
0545   97F2             
0545   97F8             
0545   97F8~            						endif
0545   97F8~            						endif
0545   97F8             
0546   97F8 A9 00       						lda #EE_DONE 
0547   97FA 85 25       						sta eeflg           ;This task is done, A is zero for below too
0548   97FC A0 FF       						ldy #-1
0549   97FE             					\var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif
0549   97FE             
0549   97FE             
0549   97FE             
0549   97FE             
0549   97EB             
0549   97EB             
0549   97EB             
0549   97EB~            					else
0549   97EB~            					else
0549   97EB             
0549   97EB~            					else
0549   97EB~            					else
0549   97EB             
0549   97EB 15          
0549   97FE             
0549   97FE             
0549   97FE 4C FE 97    
0549   9801             
0549   9801             
0549   9801~            					else
0549   9801~            					else
0549   9801~            					else
0549   9801~            					else
0549   9801~            					else
0549   9801             
0549   9801~            					else
0549   9801~            					else
0549   9801             
0549   9801~            					else
0549   9801~            					else
0549   9801             
0550   9801 91 1D       						sta (eesrce,Y)      ;Copy to RAM
0551   9803             					\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0551   9803             
0551   9803             
0551   9803             
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803~            					endif
0551   9803             
0551   97FF             
0551   97FF 03 98       
0551   9801             
0551   9803             
0551   9803~            					endif
0551   9803~            					endif
0551   9803             
0552   9803 A0 00       					ldy #00         ;Flag to continue to next (loop on reads)
0553   9805             				\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0553   9805             
0553   9805             
0553   9805             
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805~            				endif
0553   9805             
0553   97E3             
0553   97E3 05 98       
0553   97E5             
0553   9805             
0553   9805~            				endif
0553   9805~            				endif
0553   9805             
0554   9805 18          				clc 
0555   9806 65 2A       				adc eecsum          ;Update Checksum
0556   9808 85 2A       				sta eecsum
0557   980A E6 27       				inc eeidx
0558   980C             			\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0558   980C             
0558   980C             
0558   980C             
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C~            			endif
0558   980C             
0558   97BA             
0558   97BA 0C 98       
0558   97BC             
0558   980C             
0558   980C~            			endif
0558   980C~            			endif
0558   980C             
0559   980C 98          			tya
0560   980D F0 94       			beq eeupd           ;Loop if more
0561   980F             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0561   980F             
0561   980F             
0561   980F             
0561   980F             
0561   980F             
0561   980F             
0561   980F~            		endif
0561   980F~            		endif
0561   980F             
0561   980F~            		endif
0561   980F~            		endif
0561   980F             
0561   97AD             
0561   97AD 61          
0561   97AE             
0561   97AE             
0561   97AE~            		endif
0561   97AE~            		endif
0561   97AE~            		endif
0561   97AE             
0561   97AE~            		endif
0561   97AE~            		endif
0561   97AE~            		endif
0561   97AE             
0561   980F             
0561   980F~            		endif
0561   980F~            		endif
0561   980F             
0562   980F 60          		rts 
0563   9810             
0564   9810 A5 22       eesetup	lda eerequ      ;Any requests??
0565   9812             		\ .push  *, 0 \ BEQ  *                 ;yep
0565   9812             
0565   9812 F0 FE       
0566   9814 A2 00       			ldx #00
0567   9816             			;stx eebc        ;Source index
0568   9816 86 27       			stx eeidx       ;Added from teax below
0569   9818 86 2A       			stx eecsum      ;Checksum initial value 
0570   981A 86 29       			stx eesel       ;Select code storage
0571   981C A2 08       			ldx #08
0572   981E 38          			sec 
0573   981F             			\ .push  *, 2           ;Loop untill first bit is found
0573   981F             
0574   981F 66 29       				ror eesel       ;Move bit about
0575   9821 0A          				asl A
0576   9822 CA          				dex 
0577   9823             			\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BCS	*+5\ jmp	var2_\#else\ BCC	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif           ;Exit when set bit is found
0577   9823             
0577   9823             
0577   9823~            			csend           ;Exit when set bit is found
0577   9823~            			csend           ;Exit when set bit is found
0577   9823~            			csend           ;Exit when set bit is found
0577   9823             
0577   9823 90 FA       
0577   9825             
0577   9825~            			csend           ;Exit when set bit is found
0577   9825~            			csend           ;Exit when set bit is found
0577   9825             
0578   9825 A0 40       			ldy #EE_WRITE   ;Guess Write
0579   9827 A5 29       			lda eesel       ;What selected, this is a single bit
0580   9829 25 23       			and eerwrq      ;Any writes requested??
0581   982B             			\ .push  *, 0 \ BNE  * 		                ;no, must be read
0581   982B             
0581   982B D0 FE       
0582   982D A0 20       				ldy #EE_READ
0583   982F             			\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0583   982F             
0583   982F             
0583   982F             
0583   982F             
0583   982F             
0583   982F             
0583   982F~            			endif
0583   982F~            			endif
0583   982F             
0583   982F~            			endif
0583   982F~            			endif
0583   982F             
0583   982C             
0583   982C 02          
0583   982D             
0583   982D             
0583   982D~            			endif
0583   982D~            			endif
0583   982D~            			endif
0583   982D             
0583   982D~            			endif
0583   982D~            			endif
0583   982D~            			endif
0583   982D             
0583   982F             
0583   982F~            			endif
0583   982F~            			endif
0583   982F             
0584   982F 84 25       			sty eeflg           ;Save request
0585   9831 A5 29       			lda eesel
0586   9833 45 22       			eor eerequ
0587   9835 85 22       			sta eerequ      ;Turn off read request bit (ack)
0588   9837 A5 29       			lda eesel       ;Also clear any write flags
0589   9839 49 FF       			eor #$FF        ;Inverse XOR and Mask
0590   983B 25 23       			and eerwrq
0591   983D 85 23       			sta eerwrq      ;Turn off write request bit (ack)
0592   983F BD 32 97    			lda teax,X
0593   9842 85 28       			sta eelen       ;Save Length of this chunk (X is times 1 for byte table)
0594   9844 8A          			txa 
0595   9845 0A          			asl A
0596   9846 AA          			tax             ;X is x2 now for word tables
0597   9847 BD 3A 97    			lda teasrl,X
0598   984A 85 1D       			sta eesrce      ;Source pointer
0599   984C BD 3B 97    			lda teasrl+1,X
0600   984F 85 1E       			sta eesrce+1
0601   9851             			;set up destination in EEROM now
0602   9851 BD 4A 97    			lda teadel,X
0603   9854 85 1F       			sta eedest
0604   9856 BD 4B 97    			lda teadel+1,X 
0605   9859 85 20       			sta eedest+1
0606   985B             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0606   985B             
0606   985B             
0606   985B             
0606   985B             
0606   985B             
0606   985B             
0606   985B~            		endif
0606   985B~            		endif
0606   985B             
0606   985B~            		endif
0606   985B~            		endif
0606   985B             
0606   9813             
0606   9813 47          
0606   9814             
0606   9814             
0606   9814~            		endif
0606   9814~            		endif
0606   9814~            		endif
0606   9814             
0606   9814~            		endif
0606   9814~            		endif
0606   9814~            		endif
0606   9814             
0606   985B             
0606   985B~            		endif
0606   985B~            		endif
0606   985B             
0607   985B 60          		rts
0608   985C             				
0609   985C             			; ; ldy eeidx           ;Get starting index
0610   985C             			; ; asl A				;Flags
0611   985C             			; ; ifcs                ;R, W or Erase?
0612   985C             				; ; ;Erase Request
0613   985C             				; ; ldy #EE_WRITE
0614   985C             				; ; sty eeflg           ;Signal busy with write, will clear on next pass
0615   985C             				; ; sty eezflg			;Zero it too!
0616   985C             			; ; else                ;Read or Write
0617   985C             				; ; ifmi                ;Write a byte
0618   985C             					; ; lda eezflg      ;Was this an erase request?
0619   985C             					; ; ifne                ;yep
0620   985C             						; ; lda #00
0621   985C             						; ; sta (eesrce,Y)      ;Clear source too
0622   985C             					; ; endif
0623   985C             					; ; lda (eesrce,Y)      ;Get data to write
0624   985C             					; ; ;compare eecnt agains eelen, but keep A,X and Y intact
0625   985C             					; ; jsr compee
0626   985C             					; ; ifcs                ;yep
0627   985C             						; ; lda #00
0628   985C             						; ; sta eeflg           ;We are done
0629   985C             						; ; sta eezflg
0630   985C             						; ; lda eecsum          ;Get checksum
0631   985C             						; ; eor #$FF			;We are going to force an extra EOR inversion here so that all values of 00 will result in a CSUM of $FF
0632   985C             					; ; endif 
0633   985C             					; ; ;we need Indirect Indexed here put X index into Y
0634   985C             					; ; ;ldy eeidx
0635   985C             					; ; sta (eedest,Y)     ;Write to chip
0636   985C             					; ; ldy #ee_read
0637   985C             				; ; else                ;Must be a read
0638   985C             					; ; ;Note: Can read all at once, no need to wait
0639   985C             					; ; ;ldy eeidx
0640   985C             					; ; lda (eedest,Y)     ;Get data
0641   985C             					; ; ;cpx eexend           ;Got all?
0642   985C             					; ; ;compare eecnt agains eelen, but keep A,X and Y intact
0643   985C             					; ; jsr compee
0644   985C             					; ; ifcs                ;yes
0645   985C             						; ; eor #$FF			;We are going to force an extra EOR inversion here so that all values of 00 will result in a CSUM of $FF
0646   985C             						; ; eor eecsum            ;Match checksum??
0647   985C             						; ; ifne
0648   985C             							; ; ldy #-1
0649   985C             							; ; lda eesel
0650   985C             							; ; ora eebad
0651   985C             							; ; sta eebad
0652   985C             						; ; endif
0653   985C             						; ; lda #00
0654   985C             						; ; sta eeflg           ;One bad... All Bad!!
0655   985C             					; ; else
0656   985C             						; ; sta (eesrce,Y)      ;Copy to RAM
0657   985C             					; ; endif
0658   985C             					; ; ldy #00         ;Flag to continue to next (loop)
0659   985C             				; ; endif
0660   985C             				; ; clc 
0661   985C             				; ; adc eecsum          ;Update Checksum
0662   985C             				; ; sta eecsum
0663   985C             				; ; inc eeidx
0664   985C             			; ; endif
0665   985C             			; ; tya
0666   985C             			; ; ifeq                ;Do we need to read them in now?
0667   985C             				; ; jmp eeupd           ;Do all reads at once
0668   985C             			; ; endif
0669   985C             		; ; endif
0670   985C             		; ; rts
0671   985C             
0672   985C 48          compee  pha
0673   985D A5 27               lda eeidx
0674   985F C5 28               cmp eelen    
0675   9861 68                  pla     ;PLA does not affect the C flag, so we are okay
0676   9862 60                  rts
0677   9863             		
0678   9863             ;*****************************************************
0679   9863                     .sbttl "Game IRQ"
0680   9863             ;*****************************************************
0681   9863             ;* This routine is called from the main IRQ for RPM, *
0682   9863             ;* it takes care of game specific tasks outside the  *
0683   9863             ;* functionality of RPM itself.                      *
0684   9863             ;*                                                   *
0685   9863             ;* Inputs: A = Frame Counter                         *
0686   9863             ;*****************************************************  
0687   9863             game_irq    
0688   9863 48                  pha             ;Save counter for later too 
0689   9864 29 03               and #3         
0690   9866                     \ .push  *, 0 \ BNE  * 		
0690   9866             
0690   9866 D0 FE       
0691   9868 20 A3 97                jsr eeupd           ;Update EEROM every 4 frames
0692   986B                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0692   986B             
0692   986B             
0692   986B             
0692   986B             
0692   986B             
0692   986B             
0692   986B~                    endif
0692   986B~                    endif
0692   986B             
0692   986B~                    endif
0692   986B~                    endif
0692   986B             
0692   9867             
0692   9867 03          
0692   9868             
0692   9868             
0692   9868~                    endif
0692   9868~                    endif
0692   9868~                    endif
0692   9868             
0692   9868~                    endif
0692   9868~                    endif
0692   9868~                    endif
0692   9868             
0692   986B             
0692   986B~                    endif
0692   986B~                    endif
0692   986B             
0693   986B 68                  pla             ;Get Original counter
0694   986C 4A                  lsr A
0695   986D                     \ .push  *, 0 \ BCS  *                 ;Every Other Time, do the coin counters
0695   986D             
0695   986D B0 FE       
0696   986F A0 00                   ldy #00         ;Say counters off
0697   9871 A2 01                   ldx #01         ;Do both counters
0698   9873                         \ .push  *, 2
0698   9873             
0699   9873 B5 2D                       lda cnt1,X      ;Counter On??
0700   9875                             \ .push  *, 0 \ BEQ  * 
0700   9875             
0700   9875 F0 FE       
0701   9877 C9 10                           cmp #$10
0702   9879                                 \ .push  *, 0 \ BCC  * 
0702   9879             
0702   9879 90 FE       
0703   987B 69 EF                               adc #$EF        ;Sub 4 (carry set)
0704   987D C8                                  iny         ;Got one on
0705   987E 95 2D                               sta cnt1,X
0706   9880                                 \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0706   9880             
0706   9880             
0706   9880             
0706   9880             
0706   9880             
0706   9880             
0706   9880~                                endif
0706   9880~                                endif
0706   9880             
0706   9880~                                endif
0706   9880~                                endif
0706   9880             
0706   987A             
0706   987A 05          
0706   987B             
0706   987B             
0706   987B~                                endif
0706   987B~                                endif
0706   987B~                                endif
0706   987B             
0706   987B~                                endif
0706   987B~                                endif
0706   987B~                                endif
0706   987B             
0706   9880             
0706   9880~                                endif
0706   9880~                                endif
0706   9880             
0707   9880                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0707   9880             
0707   9880             
0707   9880             
0707   9880             
0707   9880             
0707   9880             
0707   9880~                            endif
0707   9880~                            endif
0707   9880             
0707   9880~                            endif
0707   9880~                            endif
0707   9880             
0707   9876             
0707   9876 09          
0707   9877             
0707   9877             
0707   9877~                            endif
0707   9877~                            endif
0707   9877~                            endif
0707   9877             
0707   9877~                            endif
0707   9877~                            endif
0707   9877~                            endif
0707   9877             
0707   9880             
0707   9880~                            endif
0707   9880~                            endif
0707   9880             
0708   9880 CA                          dex
0709   9881                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0709   9881             
0709   9881             
0709   9881~                        miend
0709   9881~                        miend
0709   9881~                        miend
0709   9881             
0709   9881 10 F0       
0709   9883             
0709   9883~                        miend
0709   9883~                        miend
0709   9883             
0710   9883 98                      tya         ;Any on?
0711   9884                         \ .push  *, 0 \ BNE  * 		
0711   9884             
0711   9884 D0 FE       
0712   9886                             ;None on, see if we can start any
0713   9886 A2 01                       ldx #01
0714   9888                             \ .push  *, 2
0714   9888             
0715   9888 B5 2D                           lda cnt1,X
0716   988A                                 \ .push  *, 0 \ BEQ  * 
0716   988A             
0716   988A F0 FE       
0717   988C 18                                  clc 
0718   988D 69 EF                               adc #$EF            ;Set 4 MSB, dec 4 LSB
0719   988F 95 2D                               sta cnt1,X      
0720   9891 30 03                               bmi ?si10           ;Exit so only 1 start
0721   9893                                 \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif               
0721   9893             
0721   9893             
0721   9893             
0721   9893             
0721   9893             
0721   9893             
0721   9893~                                endif               
0721   9893~                                endif               
0721   9893             
0721   9893~                                endif               
0721   9893~                                endif               
0721   9893             
0721   988B             
0721   988B 07          
0721   988C             
0721   988C             
0721   988C~                                endif               
0721   988C~                                endif               
0721   988C~                                endif               
0721   988C             
0721   988C~                                endif               
0721   988C~                                endif               
0721   988C~                                endif               
0721   988C             
0721   9893             
0721   9893~                                endif               
0721   9893~                                endif               
0721   9893             
0722   9893 CA                              dex 
0723   9894                             \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
0723   9894             
0723   9894             
0723   9894~                            miend
0723   9894~                            miend
0723   9894~                            miend
0723   9894             
0723   9894 10 F2       
0723   9896             
0723   9896~                            miend
0723   9896~                            miend
0723   9896             
0724   9896                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0724   9896             
0724   9896             
0724   9896             
0724   9896             
0724   9896             
0724   9896             
0724   9896~                        endif
0724   9896~                        endif
0724   9896             
0724   9896~                        endif
0724   9896~                        endif
0724   9896             
0724   9885             
0724   9885 10          
0724   9886             
0724   9886             
0724   9886~                        endif
0724   9886~                        endif
0724   9886~                        endif
0724   9886             
0724   9886~                        endif
0724   9886~                        endif
0724   9886~                        endif
0724   9886             
0724   9896             
0724   9896~                        endif
0724   9896~                        endif
0724   9896             
0725   9896                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0725   9896             
0725   9896             
0725   9896             
0725   9896             
0725   9896             
0725   9896             
0725   9896~                    endif
0725   9896~                    endif
0725   9896             
0725   9896~                    endif
0725   9896~                    endif
0725   9896             
0725   986E             
0725   986E 27          
0725   986F             
0725   986F             
0725   986F~                    endif
0725   986F~                    endif
0725   986F~                    endif
0725   986F             
0725   986F~                    endif
0725   986F~                    endif
0725   986F~                    endif
0725   986F             
0725   9896             
0725   9896~                    endif
0725   9896~                    endif
0725   9896             
0726   9896 60          ?si10   rts
0727   9897             		
0728   9897             ;*********************************************
0729   9897                     .sbttl "Utility Routines"
0730   9897             ;*********************************************
0731   9897 49 FF       neg     eor #$FF
0732   9899 18                  clc
0733   989A 69 01               adc #01
0734   989C 60                  rts            
0735   989D             
0736   989D             ;*********************************************
0737   989D             ;* Coin Counter Routines 
0738   989D             ;*********************************************        
0739   989D E6 2D       coin1   inc cnt1
0740   989F 4C 98 99            jmp exitnr
0741   98A2             		
0742   98A2 E6 2E       coin2   inc cnt2
0743   98A4 4C 98 99            jmp exitnr
0744   98A7                     
0745   98A7             ;********************************************
0746   98A7             ;* Reset High Scores - Old routine used to just
0747   98A7             ;* corrupt the csum on the score data and about
0748   98A7             ;* restart would then cause a re-init. Now 
0749   98A7             ;* we will do this right away instead of waiting
0750   98A7             ;* for a restart.
0751   98A7             ;********************************************
0752   98A7 20 44 9B    reseths jsr ldhsin
0753   98AA 4C 98 99            jmp exitnr
0754   98AD                     
0755   98AD 20 5E 97    resetst jsr eezbook      ;Clear Bookkeeping
0756   98B0 4C 98 99            jmp exitnr
0757   98B3             		
0758   98B3 20 68 9B    resetop jsr loadop
0759   98B6 4C 98 99    		jmp exitnr
0760   98B9             
0761   98B9             ;Reset warp codes to classics
0762   98B9             reswarps
0763   98B9 20 BF 98    		jsr warpclass
0764   98BC 4C 98 99    		jmp exitnr
0765   98BF             		
0766   98BF             warpclass
0767   98BF A2 0D       		ldx #(numwarps*2)-1
0768   98C1             		\ .push  *, 2
0768   98C1             
0769   98C1 BD B8 99    			lda classwarp,X
0770   98C4 9D EE 06    			sta warpcodes,X
0771   98C7 CA          			dex
0772   98C8 E0 FF       			cpx #-1
0773   98CA             		\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
0773   98CA             
0773   98CA             
0773   98CA~            		eqend
0773   98CA~            		eqend
0773   98CA~            		eqend
0773   98CA             
0773   98CA D0 F5       
0773   98CC             
0773   98CC~            		eqend
0773   98CC~            		eqend
0773   98CC             
0774   98CC 20 86 97            jsr wrwarpc     ;Write reset warp codes to EEROM 
0775   98CF 60          		rts
0776   98D0             
0777   98D0             ;Generate random warp codes		
0778   98D0             genwarps
0779   98D0 A2 01       		ldx #1
0780   98D2 20 D8 98    		jsr genwarpsx
0781   98D5 4C 98 99    		jmp exitnr
0782   98D8             
0783   98D8             ;---------------------------------------
0784   98D8             ;Generate new warp numbers here... 
0785   98D8             ; there is a var passed in X
0786   98D8             ;  X=0 - Only reset warps current at -1
0787   98D8             ;  X=1 - reset ALL warps 
0788   98D8             ;---------------------------------------
0789   98D8             genwarpsx
0790   98D8 8A          		txa
0791   98D9             		\ .push  *, 0 \ BNE  * 		
0791   98D9             
0791   98D9 D0 FE       
0792   98DB A2 0C       			ldx #(numwarps*2)-2
0793   98DD             			\ .push  *, 2
0793   98DD             
0794   98DD BD EE 06    				lda warpcodes,X
0795   98E0 C9 FF       				cmp #-1
0796   98E2             				\ .push  *, 0 \ BNE  * 		
0796   98E2             
0796   98E2 D0 FE       
0797   98E4 BD EF 06    					lda warpcodes+1,X
0798   98E7 C9 FF       					cmp #-1
0799   98E9             					\ .push  *, 0 \ BNE  * 		
0799   98E9             
0799   98E9 D0 FE       
0800   98EB             						;not defined... assign it
0801   98EB 20 3A 9D    						jsr genwarp
0802   98EE             					\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0802   98EE             
0802   98EE             
0802   98EE             
0802   98EE             
0802   98EE             
0802   98EE             
0802   98EE~            					endif
0802   98EE~            					endif
0802   98EE             
0802   98EE~            					endif
0802   98EE~            					endif
0802   98EE             
0802   98EA             
0802   98EA 03          
0802   98EB             
0802   98EB             
0802   98EB~            					endif
0802   98EB~            					endif
0802   98EB~            					endif
0802   98EB             
0802   98EB~            					endif
0802   98EB~            					endif
0802   98EB~            					endif
0802   98EB             
0802   98EE             
0802   98EE~            					endif
0802   98EE~            					endif
0802   98EE             
0803   98EE             				\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0803   98EE             
0803   98EE             
0803   98EE             
0803   98EE             
0803   98EE             
0803   98EE             
0803   98EE~            				endif
0803   98EE~            				endif
0803   98EE             
0803   98EE~            				endif
0803   98EE~            				endif
0803   98EE             
0803   98E3             
0803   98E3 0A          
0803   98E4             
0803   98E4             
0803   98E4~            				endif
0803   98E4~            				endif
0803   98E4~            				endif
0803   98E4             
0803   98E4~            				endif
0803   98E4~            				endif
0803   98E4~            				endif
0803   98E4             
0803   98EE             
0803   98EE~            				endif
0803   98EE~            				endif
0803   98EE             
0804   98EE CA          				dex			;by twos
0805   98EF CA          				dex
0806   98F0 E0 FE       				cpx #-2
0807   98F2             			\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
0807   98F2             
0807   98F2             
0807   98F2~            			eqend
0807   98F2~            			eqend
0807   98F2~            			eqend
0807   98F2             
0807   98F2 D0 E9       
0807   98F4             
0807   98F4~            			eqend
0807   98F4~            			eqend
0807   98F4             
0808   98F4             		\var1_ .set $\ .pop var3_, var4_\#if (var3_ & 2)==0\#if (var3_ & 1)==0\ .org var4_+1\#if 0==0\var2_ .set var1_-var4_-2+3\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .byte var1_-var4_-2+3\ .org var1_\.push $+3, 1\ jmp $\#endif\#endif\#else\ .byte var1_-var4_-2+2\ .org var1_\.push $, 0\ 0 $		\#endif\#else\.error "Duplicate ELSE Statement"\#endif\#else\ .error "Misplaced Else"\#endif
0808   98F4             
0808   98F4             
0808   98F4             
0808   98F4             
0808   98DA             
0808   98DA             
0808   98DA             
0808   98DA~            		else
0808   98DA~            		else
0808   98DA             
0808   98DA~            		else
0808   98DA~            		else
0808   98DA             
0808   98DA 1C          
0808   98F4             
0808   98F4             
0808   98F4 4C F4 98    
0808   98F7             
0808   98F7             
0808   98F7~            		else
0808   98F7~            		else
0808   98F7~            		else
0808   98F7~            		else
0808   98F7~            		else
0808   98F7             
0808   98F7~            		else
0808   98F7~            		else
0808   98F7             
0808   98F7~            		else
0808   98F7~            		else
0808   98F7             
0809   98F7 A2 0C       			ldx #(numwarps*2)-2
0810   98F9             			\ .push  *, 2
0810   98F9             
0811   98F9 20 3A 9D    				jsr genwarp
0812   98FC CA          				dex			;by twos
0813   98FD CA          				dex
0814   98FE E0 FE       				cpx #-2
0815   9900             			\ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
0815   9900             
0815   9900             
0815   9900~            			eqend
0815   9900~            			eqend
0815   9900~            			eqend
0815   9900             
0815   9900 D0 F7       
0815   9902             
0815   9902~            			eqend
0815   9902~            			eqend
0815   9902             
0816   9902             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0816   9902             
0816   9902             
0816   9902             
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902~            		endif
0816   9902             
0816   98F5             
0816   98F5 02 99       
0816   98F7             
0816   9902             
0816   9902~            		endif
0816   9902~            		endif
0816   9902             
0817   9902 4C 86 97    		jmp wrwarpc     ;Write reset warp codes to EEROM - none defined
0818   9905             		
0819   9905             ; clrwarps 
0820   9905             		; lda #-1
0821   9905             		; ldx #(numwarps*2)-1
0822   9905             		; begin
0823   9905             			; sta warpcodes,X
0824   9905             			; dex
0825   9905             			; cpx #-1
0826   9905             		; eqend
0827   9905                     ; jsr wrwarpc     ;Write reset warp codes to EEROM - none defined
0828   9905             		; jmp exitnr
0829   9905             
0830   9905             ;******************************************************
0831   9905             ; Sound/Speech Helpers
0832   9905             ;******************************************************
0833   9905             ; random_ugh
0834   9905             		; lda random
0835   9905             		; and #03
0836   9905             		; tax
0837   9905             		; lda randughs,X
0838   9905             		; tay					;Command goes in Y
0839   9905             		; jmp scomm
0840   9905             
0841   9905             ; randughs
0842   9905             		; .db sp_rexooof,sp_rexooom,sp_rexouch,sp_rexuggh
0843   9905                 
0844   9905             ;**************************************************************	
0845   9905             ;Alpha will send a byte here, it can range from $00 to $FF
0846   9905             ;and will set the value for the continuous Max sound.
0847   9905             ;A routine in the main loop will actually queue the sound up
0848   9905             ;as needed.
0849   9905             ;**************************************************************
0850   9905             sendmaxsnd
0851   9905 A2 00       		ldx #(maxsnd/256d) ;MSB of Buffer
0852   9907 A0 2F               ldy #(maxsnd&$ff)  ;LSB of Buffer
0853   9909 A9 01       		lda #1				;1 byte to receive
0854   990B 20 D3 9D    		jsr xfer
0855   990E A9 01       		lda #1				;Send back 1 for Success!
0856   9910 4C 95 99    		jmp exitr		
0857   9913             
0858   9913             ;****************************************************
0859   9913             ; Player Controls toggle - will set the current 
0860   9913             ; controls being read between inputs for Player 1 or
0861   9913             ; Player 2 which need to be switched if the game is
0862   9913             ; in cocktail mode.
0863   9913             ;****************************************************
0864   9913             setctrlp1
0865   9913 A9 00       		lda #0
0866   9915 8D DF 05    		sta curctrl
0867   9918 4C 98 99    		jmp exitnr
0868   991B             		
0869   991B             setctrlp2
0870   991B A9 01       		lda #1
0871   991D 8D DF 05    		sta curctrl
0872   9920 4C 98 99    		jmp exitnr
0873   9923             ;****************************************************
0874   9923             ; Option Switches are loaded from DIP and then stored
0875   9923             ; in EEROM, since they can be modified from Self Test
0876   9923             ; we will always return the RAM/Settings value.
0877   9923             ;
0878   9923             ; The only way to apply the settings on DIP is to 
0879   9923             ; do a reset in the Self Test.
0880   9923             ;****************************************************        
0881   9923             ;*
0882   9923             ;*    MAJOR HAVOC DIP SWITCH SETTINGS -  $=Default
0883   9923             ;*
0884   9923             ;*    DIP Switch at position 13/14S
0885   9923             ;*                                      1    2    3    4    5    6    7    8
0886   9923             ;*    STARTING LIVES                  _________________________________________
0887   9923             ;*     Free Play   1 Coin   2 Coin    |    |    |    |    |    |    |    |    |
0888   9923             ;*        2         3         5      $|Off |Off |    |    |    |    |    |    |
0889   9923             ;*        3         4         4       | On | On |    |    |    |    |    |    |
0890   9923             ;*        4         5         6       | On |Off |    |    |    |    |    |    |
0891   9923             ;*        5         6         7       |Off | On |    |    |    |    |    |    |
0892   9923             ;*    GAME DIFFICULTY                 |    |    |    |    |    |    |    |    |
0893   9923             ;*     Hard                           |    |    | On | On |    |    |    |    |
0894   9923             ;*     Medium                        $|    |    |Off |Off |    |    |    |    |
0895   9923             ;*     Easy                           |    |    |Off | On |    |    |    |    |
0896   9923             ;*     Demo                           |    |    | On |Off |    |    |    |    |
0897   9923             ;*    BONUS LIFE                      |    |    |    |    |    |    |    |    |
0898   9923             ;*     50,000                         |    |    |    |    | On | On |    |    |
0899   9923             ;*     100,000                       $|    |    |    |    |Off |Off |    |    |
0900   9923             ;*     200,000                        |    |    |    |    |Off | On |    |    |
0901   9923             ;*     No Bonus Life                  |    |    |    |    | On |Off |    |    |
0902   9923             ;*    ATTRACT MODE SOUND              |    |    |    |    |    |    |    |    |
0903   9923             ;*     Silence                        |    |    |    |    |    |    | On |    |
0904   9923             ;*     Sound                         $|    |    |    |    |    |    |Off |    |
0905   9923             ;*    ROLLER MULTIPLIER               |    |    |    |    |    |    |    |    |
0906   9923             ;*     2X                             |    |    |    |    |    |    |    | On |
0907   9923             ;*     1X                            $|    |    |    |    |    |    |    |Off |
0908   9923             ;*                                    -----------------------------------------
0909   9923             ;*
0910   9923             ;*    DIP Switch at position 8S
0911   9923             ;*                                      1    2    3    4    5    6    7    8
0912   9923             ;*                                    _________________________________________
0913   9923             ;*    Free Play                       |    |    |    |    |    |    | On |Off |
0914   9923             ;*     1 Coin for 1 Game             $|    |    |    |    |    |    |Off |Off |
0915   9923             ;*     1 Coin for 2 Games             |    |    |    |    |    |    | On | On |
0916   9923             ;*     2 Coins for 1 Game             |    |    |    |    |    |    |Off | On |
0917   9923             ;*    RIGHT COIN MECHANISM            |    |    |    |    |    |    |    |    |
0918   9923             ;*     x1                            $|    |    |    |    |Off |Off |    |    |
0919   9923             ;*     x4                             |    |    |    |    |Off | On |    |    |
0920   9923             ;*     x5                             |    |    |    |    | On |Off |    |    |
0921   9923             ;*     x6                             |    |    |    |    | On | On |    |    |
0922   9923             ;*    LEFT COIN MECHANISM             |    |    |    |    |    |    |    |    |
0923   9923             ;*     x1                            $|    |    |    |Off |    |    |    |    |
0924   9923             ;*     x2                             |    |    |    | On |    |    |    |    |
0925   9923             ;*    BONUS COIN ADDER                |    |    |    |    |    |    |    |    |
0926   9923             ;*     No Bonus Coins                $|Off |Off |Off |    |    |    |    |    |
0927   9923             ;*     Every 4, add 1                 |Off | On |Off |    |    |    |    |    |
0928   9923             ;*     Every 4, add 2                 |Off | On | On |    |    |    |    |    |
0929   9923             ;*     Every 5, add 1                 | On |Off |Off |    |    |    |    |    |
0930   9923             ;*     Every 3, add 1                 | On |Off | On |    |    |    |    |    |
0931   9923             ;*                                    -----------------------------------------
0932   9923             ;*
0933   9923             ;*****************************************************
0934   9923 8D 23 20    getdip0 sta	potgo			;Read DIPS @ 13/14S
0935   9926 EA          		nop	
0936   9927 AD 20 20    		lda	allpot			;Get input
0937   992A 49 FF       		eor #$FF			;Pokey sends back DIPS inverted... revert
0938   992C 4C 95 99    		jmp exitr
0939   992F                 
0940   992F AD 00 40    getdip1 lda	intack			;Get DIPS @ 8S
0941   9932 4C 95 99    		jmp exitr
0942   9935             
0943   9935 AD 00 06    getset0 lda options			;Play Settings (originally from 13/14S)
0944   9938 4C 95 99    		jmp exitr
0945   993B                 
0946   993B AD 01 06    getset1 lda options+1		;Price Settings (originally from 8S)
0947   993E 4C 95 99    		jmp exitr
0948   9941             		
0949   9941             ;Sets the Options0 value in EEROM		
0950   9941 A2 06       setopt0 ldx #(options/256d) ;MSB of Buffer
0951   9943 A0 00               ldy #(options&$ff)  ;LSB of Buffer
0952   9945 A9 01       		lda #1				;1 byte to receive
0953   9947 20 D3 9D    		jsr xfer
0954   994A 20 8A 97    		jsr wropt			;update csum
0955   994D A9 01       		lda #1				;Send back 1 for Success!
0956   994F 4C 95 99    		jmp exitr
0957   9952             		
0958   9952             ;Sets the Options1 value in EEROM		
0959   9952 A2 06       setopt1 ldx #((options+1)/256d) ;MSB of Buffer
0960   9954 A0 01               ldy #((options+1)&$ff)  ;LSB of Buffer
0961   9956 A9 01       		lda #1				;1 byte to receive
0962   9958 20 D3 9D    		jsr xfer
0963   995B 20 8A 97    		jsr wropt			;update csum 
0964   995E A9 01       		lda #1				;Send back 1 for Success!
0965   9960 4C 95 99    		jmp exitr
0966   9963                     
0967   9963             ;Returns the EEBAD Flags
0968   9963             geteeflgs
0969   9963 A5 24               lda eebad
0970   9965 4C 95 99            jmp exitr
0971   9968             
0972   9968             ;Return EEROM request flags		
0973   9968             geteedone
0974   9968 A5 25       		lda eeflg
0975   996A 4C 95 99    		jmp exitr
0976   996D             
0977   996D             ;****************************************************
0978   996D             ; Simple Data returns from direct addresses
0979   996D             ;****************************************************        
0980   996D AD 22 20    pokran  lda random
0981   9970 4C 95 99            jmp exitr        ;Leave with a random #
0982   9973                     
0983   9973 AD 00 28    switch  lda input       ;Where the switches are
0984   9976 AE DF 05    		ldx curctrl
0985   9979             		\ .push  *, 0 \ BEQ  * 
0985   9979             
0985   9979 F0 FE       
0986   997B 0A          			asl A 
0987   997C 0A          			asl A 			;Shift up two positions to get player 2 data into bits 6 and 7
0988   997D             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0988   997D             
0988   997D             
0988   997D             
0988   997D             
0988   997D             
0988   997D             
0988   997D~            		endif
0988   997D~            		endif
0988   997D             
0988   997D~            		endif
0988   997D~            		endif
0988   997D             
0988   997A             
0988   997A 02          
0988   997B             
0988   997B             
0988   997B~            		endif
0988   997B~            		endif
0988   997B~            		endif
0988   997B             
0988   997B~            		endif
0988   997B~            		endif
0988   997B~            		endif
0988   997B             
0988   997D             
0988   997D~            		endif
0988   997D~            		endif
0988   997D             
0989   997D 4C 95 99            jmp exitr
0990   9980                     
0991   9980 AE 00 38    rolgig  ldx leta
0992   9983 AC DF 05    		ldy curctrl
0993   9986             		\ .push  *, 0 \ BEQ  *  
0993   9986             
0993   9986 F0 FE       
0994   9988 AE 01 38    			ldx leta+1
0995   998B             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
0995   998B             
0995   998B             
0995   998B             
0995   998B             
0995   998B             
0995   998B             
0995   998B~            		endif
0995   998B~            		endif
0995   998B             
0995   998B~            		endif
0995   998B~            		endif
0995   998B             
0995   9987             
0995   9987 03          
0995   9988             
0995   9988             
0995   9988~            		endif
0995   9988~            		endif
0995   9988~            		endif
0995   9988             
0995   9988~            		endif
0995   9988~            		endif
0995   9988~            		endif
0995   9988             
0995   998B             
0995   998B~            		endif
0995   998B~            		endif
0995   998B             
0996   998B AD 00 06    		lda options
0997   998E 4A          		lsr A
0998   998F             		\ .push  *, 0 \ BCC  * 	
0998   998F             
0998   998F 90 FE       
0999   9991 8A          			txa				;Roller X 2
1000   9992 0A          			asl A 
1001   9993 AA          			tax
1002   9994             		\var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1002   9994             
1002   9994             
1002   9994             
1002   9994             
1002   9994             
1002   9994             
1002   9994~            		endif
1002   9994~            		endif
1002   9994             
1002   9994~            		endif
1002   9994~            		endif
1002   9994             
1002   9990             
1002   9990 03          
1002   9991             
1002   9991             
1002   9991~            		endif
1002   9991~            		endif
1002   9991~            		endif
1002   9991             
1002   9991~            		endif
1002   9991~            		endif
1002   9991~            		endif
1002   9991             
1002   9994             
1002   9994~            		endif
1002   9994~            		endif
1002   9994             
1003   9994 8A          		txa
1004   9995 8D 00 50    exitr   sta outdata
1005   9998 68          exitnr  pla             ;Exit for no data back
1006   9999 AA                  tax 
1007   999A 68                  pla 
1008   999B A8                  tay 
1009   999C A9 FF               lda #-1
1010   999E 8D DD 05            sta datnum
1011   99A1 68                  pla 
1012   99A2 40                  rti 
1013   99A3                 
1014   99A3             ;**********************************************
1015   99A3                .sbttl "Default EEROM Scores and Initials"
1016   99A3             ;**********************************************
1017   99A3 32 45 09 00 dscore      .db $32,$45,$09,$00       ;94,532
1018   99A7 24 05 08 00             .db $24,$05,$08,$00       ;80,524
1019   99AB 85 72 07 00             .db $85,$72,$07,$00       ;77,285
1020   99AF             
1021   99AF 1C 0F 22    dinit       .db $1C,$0F,$22           ;REX
1022   99B2 1C 0F 22                .db $1C,$0F,$22           ;REX
1023   99B5 1C 0F 22                .db $1C,$0F,$22           ;REX
1024   99B8             			
1025   99B8             ;Classic Warp Digits here   
1026   99B8 32 00       classwarp   .db $32,$00
1027   99BA 64 00       			.db $64,$00
1028   99BC 28 04       			.db $28,$04
1029   99BE 13 05       			.db $13,$05
1030   99C0 22 03       			.db $22,$03
1031   99C2 86 03       			.db $86,$03
1032   99C4 49 08       			.db $49,$08
1033   99C6             
1034   99C6             
1035   99C6             ;*******************************************
1036   99C6                     .sbttl "Poweron Self Test"
1037   99C6             ;*******************************************
1038   99C6 A9 00       g_stest lda #00
1039   99C8 8D F4 07            sta rambad
1040   99CB 8D F5 07            sta rombad
1041   99CE 8D F6 07            sta pokbad
1042   99D1 8D F7 07            sta eerbad        ;Clear any 'old' errors
1043   99D4 A9 FF               lda #$FF
1044   99D6 A2 00               ldx #00
1045   99D8                     \ .push  *, 2
1045   99D8             
1046   99D8 95 07                   sta $0007,X     ;Clear 0 page
1047   99DA CA                      dex
1048   99DB                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		               ;Clear a section
1048   99DB             
1048   99DB             
1048   99DB~                    eqend               ;Clear a section
1048   99DB~                    eqend               ;Clear a section
1048   99DB~                    eqend               ;Clear a section
1048   99DB             
1048   99DB D0 FB       
1048   99DD             
1048   99DD~                    eqend               ;Clear a section
1048   99DD~                    eqend               ;Clear a section
1048   99DD             
1049   99DD B5 07       ?st20   lda $0007,X
1050   99DF 49 FF               eor #$FF
1051   99E1 D0 17               bne ?st33
1052   99E3 95 07       ?st30   sta $0007,X
1053   99E5 A8                  tay 
1054   99E6 55 07               eor $0007,X
1055   99E8 D0 10               bne ?st33           ;Not the same, oh shit, an error
1056   99EA 98                  tya 
1057   99EB F0 12               beq ?st35           ;Stop when RAM is 0
1058   99ED 49 FF               eor #$FF
1059   99EF 95 07               sta $0007,X
1060   99F1 55 07               eor $0007,X
1061   99F3 D0 05               bne ?st33
1062   99F5 98                  tya 
1063   99F6 0A                  asl A
1064   99F7 4C E3 99            jmp ?st30
1065   99FA A0 01       ?st33   ldy #01
1066   99FC 8C F4 07            sty rambad      	;Indicate RAM is bad
1067   99FF E8          ?st35   inx 
1068   9A00 D0 DB               bne ?st20           ;Continue
1069   9A02             		;At this point we know 7 page is okay
1070   9A02 8E F0 07            stx tstart      	;Do the rest now
1071   9A05 A9 06               lda #06
1072   9A07 8D F2 07            sta tend
1073   9A0A 8E F1 07            stx tstart+1
1074   9A0D CA                  dex 
1075   9A0E 8E F3 07            stx tend+1      	;Test 0-6ff
1076   9A11 20 C0 9A            jsr tst2k           ;Test 2K
1077   9A14             zpgtst  \ .push  *, 0 \ BCC  * 
1077   9A14             
1077   9A14 90 FE       
1078   9A16 A0 01                   ldy #01
1079   9A18 8C F4 07                sty rambad      ;Have a RAM error
1080   9A1B                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1080   9A1B             
1080   9A1B             
1080   9A1B             
1080   9A1B             
1080   9A1B             
1080   9A1B             
1080   9A1B~                    endif
1080   9A1B~                    endif
1080   9A1B             
1080   9A1B~                    endif
1080   9A1B~                    endif
1080   9A1B             
1080   9A15             
1080   9A15 05          
1080   9A16             
1080   9A16             
1080   9A16~                    endif
1080   9A16~                    endif
1080   9A16~                    endif
1080   9A16             
1080   9A16~                    endif
1080   9A16~                    endif
1080   9A16~                    endif
1080   9A16             
1080   9A1B             
1080   9A1B~                    endif
1080   9A1B~                    endif
1080   9A1B             
1081   9A1B                     
1082   9A1B             ;********************************************
1083   9A1B             ;* RAM Done... Now checksum ROM and make sure
1084   9A1B             ;* it's okay(this is dumb as how would we be 
1085   9A1B             ;* running if it was nfg!!)
1086   9A1B             ;********************************************
1087   9A1B                     .sbttl "ROM Test"
1088   9A1B             ;********************************************   
1089   9A1B A9 00               lda #00
1090   9A1D A8                  tay 
1091   9A1E AA                  tax 
1092   9A1F 85 16               sta temp1
1093   9A21 A9 80               lda # (($8000&$ff00)/$100)
1094   9A23 85 17               sta temp1+1
1095   9A25 A9 80               lda #128d       ;128 pages of $100 is the range $8000-$FFFF
1096   9A27 85 18               sta temp2
1097   9A29 8A                  txa             ;Seed for checksum
1098   9A2A                     \ .push  *, 2
1098   9A2A             
1099   9A2A                         \ .push  *, 2
1099   9A2A             
1100   9A2A 51 16                       eor (temp1,Y)
1101   9A2C C8                          iny
1102   9A2D                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
1102   9A2D             
1102   9A2D             
1102   9A2D~                        eqend
1102   9A2D~                        eqend
1102   9A2D~                        eqend
1102   9A2D             
1102   9A2D D0 FB       
1102   9A2F             
1102   9A2F~                        eqend
1102   9A2F~                        eqend
1102   9A2F             
1103   9A2F E6 17                   inc temp1+1
1104   9A31 C6 18                   dec temp2
1105   9A33                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
1105   9A33             
1105   9A33             
1105   9A33~                    eqend
1105   9A33~                    eqend
1105   9A33~                    eqend
1105   9A33             
1105   9A33 D0 F5       
1105   9A35             
1105   9A35~                    eqend
1105   9A35~                    eqend
1105   9A35             
1106   9A35 8D F5 07            sta rombad        ;Save Checksum
1107   9A38             ;********************************************
1108   9A38                     .sbttl "Pokey Test"
1109   9A38             ;********************************************
1110   9A38 A0 1A               ldy #$1A            ;Start with top pokey
1111   9A3A                     \ .push  *, 2
1111   9A3A             
1112   9A3A A2 18                   ldx #24d			;this is high for MAME as the POKEY takes some time to return a difference random number
1113   9A3C B9 20 20                lda audctl,Y
1114   9A3F                         \ .push  *, 2
1114   9A3F             
1115   9A3F EA          				nop
1116   9A40 D9 20 20                    cmp audctl,Y
1117   9A43 D0 08                       bne ok1         ;Make sure random
1118   9A45 CA                          dex
1119   9A46                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1119   9A46             
1119   9A46             
1119   9A46~                        miend
1119   9A46~                        miend
1119   9A46~                        miend
1119   9A46             
1119   9A46 10 F7       
1119   9A48             
1119   9A48~                        miend
1119   9A48~                        miend
1119   9A48             
1120   9A48 A9 01                   lda #01
1121   9A4A 8D F6 07                sta pokbad        ;Bad Pokey
1122   9A4D 98          ok1         tya 
1123   9A4E 38                      sec 
1124   9A4F E9 08                   sbc #08         ;Next Pokey
1125   9A51 A8                      tay
1126   9A52                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1126   9A52             
1126   9A52             
1126   9A52~                    miend
1126   9A52~                    miend
1126   9A52~                    miend
1126   9A52             
1126   9A52 10 E6       
1126   9A54             
1126   9A54~                    miend
1126   9A54~                    miend
1126   9A54             
1127   9A54             ;********************************************
1128   9A54                     .sbttl "EEROM startup procedure"
1129   9A54             ;********************************************
1130   9A54 A9 00               lda #00
1131   9A56 8D F7 07            sta eerbad          ;Guess OK
1132   9A59 85 1C               sta eerdy
1133   9A5B 20 9B 97            jsr reinall         ;Read in everything (this goes fast) - will flag bad csums in eebad
1134   9A5E                     ;look for bad checksums (shown as set bits against mask)
1135   9A5E A5 24               lda eebad
1136   9A60                     \ .push  *, 0 \ BEQ  * 
1136   9A60             
1136   9A60 F0 FE       
1137   9A62 A9 20                   lda #eflg_option
1138   9A64 24 24                   bit eebad           ;Bad copy??
1139   9A66                         \ .push  *, 0 \ BEQ  *                 ;yep, copy over default
1139   9A66             
1139   9A66 F0 FE       
1140   9A68 20 68 9B                    jsr loadop
1141   9A6B                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif   
1141   9A6B             
1141   9A6B             
1141   9A6B             
1141   9A6B             
1141   9A6B             
1141   9A6B             
1141   9A6B~                        endif   
1141   9A6B~                        endif   
1141   9A6B             
1141   9A6B~                        endif   
1141   9A6B~                        endif   
1141   9A6B             
1141   9A67             
1141   9A67 03          
1141   9A68             
1141   9A68             
1141   9A68~                        endif   
1141   9A68~                        endif   
1141   9A68~                        endif   
1141   9A68             
1141   9A68~                        endif   
1141   9A68~                        endif   
1141   9A68~                        endif   
1141   9A68             
1141   9A6B             
1141   9A6B~                        endif   
1141   9A6B~                        endif   
1141   9A6B             
1142   9A6B A9 1C                   lda #(eflg_xwarp+eflg_game+eflg_maze)
1143   9A6D 24 24                   bit eebad
1144   9A6F                         \ .push  *, 0 \ BEQ  * 
1144   9A6F             
1144   9A6F F0 FE       
1145   9A71 A9 00                       lda #$00
1146   9A73                             ;XLives+Warps First
1147   9A73 A2 0F                       ldx #cksumxw-extlie-1
1148   9A75                             \ .push  *, 2
1148   9A75             
1149   9A75 9D 03 06                        sta extlie,X
1150   9A78 CA                              dex
1151   9A79                             \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1151   9A79             
1151   9A79             
1151   9A79~                            miend
1151   9A79~                            miend
1151   9A79~                            miend
1151   9A79             
1151   9A79 10 FA       
1151   9A7B             
1151   9A7B~                            miend
1151   9A7B~                            miend
1151   9A7B             
1152   9A7B A2 0F                       ldx #cksumgs-game1-1
1153   9A7D                             \ .push  *, 2
1153   9A7D             
1154   9A7D 9D 14 06                        sta game1,X
1155   9A80 CA                              dex
1156   9A81                             \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1156   9A81             
1156   9A81             
1156   9A81~                            miend
1156   9A81~                            miend
1156   9A81~                            miend
1156   9A81             
1156   9A81 10 FA       
1156   9A83             
1156   9A83~                            miend
1156   9A83~                            miend
1156   9A83             
1157   9A83 A2 C7                       ldx #cksummz-mzstats-1
1158   9A85                             \ .push  *, 2
1158   9A85             
1159   9A85 9D 25 06                        sta mzstats,X
1160   9A88 CA                              dex
1161   9A89 E0 FF                           cpx #-1
1162   9A8B                             \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
1162   9A8B             
1162   9A8B             
1162   9A8B~                            eqend
1162   9A8B~                            eqend
1162   9A8B~                            eqend
1162   9A8B             
1162   9A8B D0 F8       
1162   9A8D             
1162   9A8D~                            eqend
1162   9A8D~                            eqend
1162   9A8D             
1163   9A8D 20 82 97                    jsr wrbook
1164   9A90                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1164   9A90             
1164   9A90             
1164   9A90             
1164   9A90             
1164   9A90             
1164   9A90             
1164   9A90~                        endif
1164   9A90~                        endif
1164   9A90             
1164   9A90~                        endif
1164   9A90~                        endif
1164   9A90             
1164   9A70             
1164   9A70 1F          
1164   9A71             
1164   9A71             
1164   9A71~                        endif
1164   9A71~                        endif
1164   9A71~                        endif
1164   9A71             
1164   9A71~                        endif
1164   9A71~                        endif
1164   9A71~                        endif
1164   9A71             
1164   9A90             
1164   9A90~                        endif
1164   9A90~                        endif
1164   9A90             
1165   9A90                         ;High Scores + Initials
1166   9A90 A9 03                   lda #(eflg_scores+eflg_initials)
1167   9A92 24 24                   bit eebad
1168   9A94                         \ .push  *, 0 \ BEQ  * 
1168   9A94             
1168   9A94 F0 FE       
1169   9A96 20 44 9B                    jsr ldhsin      ;Reset High Scores and Initials to defaults, push to EEROM
1170   9A99                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1170   9A99             
1170   9A99             
1170   9A99             
1170   9A99             
1170   9A99             
1170   9A99             
1170   9A99~                        endif
1170   9A99~                        endif
1170   9A99             
1170   9A99~                        endif
1170   9A99~                        endif
1170   9A99             
1170   9A95             
1170   9A95 03          
1170   9A96             
1170   9A96             
1170   9A96~                        endif
1170   9A96~                        endif
1170   9A96~                        endif
1170   9A96             
1170   9A96~                        endif
1170   9A96~                        endif
1170   9A96~                        endif
1170   9A96             
1170   9A99             
1170   9A99~                        endif
1170   9A99~                        endif
1170   9A99             
1171   9A99                         ;Warp Codes
1172   9A99 A9 40                   lda #(eflg_warpco)
1173   9A9B 24 24                   bit eebad
1174   9A9D                         \ .push  *, 0 \ BEQ  * 
1174   9A9D             
1174   9A9D F0 FE       
1175   9A9F 20 BF 98                    jsr warpclass     ;Write reset warp codes to EEROM - none defined
1176   9AA2                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif  
1176   9AA2             
1176   9AA2             
1176   9AA2             
1176   9AA2             
1176   9AA2             
1176   9AA2             
1176   9AA2~                        endif  
1176   9AA2~                        endif  
1176   9AA2             
1176   9AA2~                        endif  
1176   9AA2~                        endif  
1176   9AA2             
1176   9A9E             
1176   9A9E 03          
1176   9A9F             
1176   9A9F             
1176   9A9F~                        endif  
1176   9A9F~                        endif  
1176   9A9F~                        endif  
1176   9A9F             
1176   9A9F~                        endif  
1176   9A9F~                        endif  
1176   9A9F~                        endif  
1176   9A9F             
1176   9AA2             
1176   9AA2~                        endif  
1176   9AA2~                        endif  
1176   9AA2             
1177   9AA2 EE F7 07                inc eerbad        ;Mark a failure in EEROM
1178   9AA5                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1178   9AA5             
1178   9AA5             
1178   9AA5             
1178   9AA5             
1178   9AA5             
1178   9AA5             
1178   9AA5~                    endif
1178   9AA5~                    endif
1178   9AA5             
1178   9AA5~                    endif
1178   9AA5~                    endif
1178   9AA5             
1178   9A61             
1178   9A61 43          
1178   9A62             
1178   9A62             
1178   9A62~                    endif
1178   9A62~                    endif
1178   9A62~                    endif
1178   9A62             
1178   9A62~                    endif
1178   9A62~                    endif
1178   9A62~                    endif
1178   9A62             
1178   9AA5             
1178   9AA5~                    endif
1178   9AA5~                    endif
1178   9AA5             
1179   9AA5 A9 80               lda #$80
1180   9AA7 85 1C               sta eerdy           ;EE stuff is ready
1181   9AA9             		;********************************************************
1182   9AA9             		; Emergency Check for 'All Zero Warps' - which can happen
1183   9AA9             		; if something goes wrong generally in MAME with the 
1184   9AA9             		; EEROM or first run with a game
1185   9AA9             		;********************************************************
1186   9AA9 20 8B 80    		jsr chkwrps
1187   9AAC             		;********************************************************
1188   9AAC             		; Finalize test results for return to mainline
1189   9AAC             		;********************************************************
1190   9AAC A9 00               lda #00
1191   9AAE A2 03               ldx #03
1192   9AB0                     \ .push  *, 2
1192   9AB0             
1193   9AB0 38                      sec
1194   9AB1 BC F4 07                ldy rambad,X
1195   9AB4                         \ .push  *, 0 \ BEQ  * 
1195   9AB4             
1195   9AB4 F0 FE       
1196   9AB6 18                          clc
1197   9AB7                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1197   9AB7             
1197   9AB7             
1197   9AB7             
1197   9AB7             
1197   9AB7             
1197   9AB7             
1197   9AB7~                        endif
1197   9AB7~                        endif
1197   9AB7             
1197   9AB7~                        endif
1197   9AB7~                        endif
1197   9AB7             
1197   9AB5             
1197   9AB5 01          
1197   9AB6             
1197   9AB6             
1197   9AB6~                        endif
1197   9AB6~                        endif
1197   9AB6~                        endif
1197   9AB6             
1197   9AB6~                        endif
1197   9AB6~                        endif
1197   9AB6~                        endif
1197   9AB6             
1197   9AB7             
1197   9AB7~                        endif
1197   9AB7~                        endif
1197   9AB7             
1198   9AB7 2A                      rol A       ;Set bit
1199   9AB8 CA                      dex
1200   9AB9                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1200   9AB9             
1200   9AB9             
1200   9AB9~                    miend
1200   9AB9~                    miend
1200   9AB9~                    miend
1200   9AB9             
1200   9AB9 10 F5       
1200   9ABB             
1200   9ABB~                    miend
1200   9ABB~                    miend
1200   9ABB             
1201   9ABB 09 F0               ora #$F0            ;Set Don't care bits
1202   9ABD             ;Return A = Status
1203   9ABD 4C 1A 80            jmp cindy		;This will leave the address of Cindy on the top of the 
1204   9AC0             						;stack at 0x01fe, and 0x01ff
1205   9AC0             						;If the current stack pointer ever points here, then that
1206   9AC0             						;means that it has overflowed Page 1 
1207   9AC0             
1208   9AC0             ;********************************************
1209   9AC0                     .sbttl "Ram Test Section"
1210   9AC0             ;********************************************
1211   9AC0             
1212   9AC0             ;soft    = 1
1213   9AC0             ;ramwid  = 8
1214   9AC0             ;speed   = 2
1215   9AC0                 
1216   9AC0             tstram
1217   9AC0             tst2k
1218   9AC0 A0 51       ramtest ldy #vtend-voltbl
1219   9AC2                     \ .push  *, 2
1219   9AC2             
1220   9AC2 B9 DD 9A                lda voltbl,Y        ;Move volatile code into VRAM
1221   9AC5 99 80 07                sta vram,Y
1222   9AC8 88                      dey 
1223   9AC9                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1223   9AC9             
1223   9AC9             
1223   9AC9~                    miend
1223   9AC9~                    miend
1223   9AC9~                    miend
1223   9AC9             
1223   9AC9 10 F7       
1223   9ACB             
1223   9ACB~                    miend
1223   9ACB~                    miend
1223   9ACB             
1224   9ACB AD F0 07            lda tstart
1225   9ACE 8D 87 07            sta vadh0
1226   9AD1 8D 9A 07            sta vadh1
1227   9AD4 8D A5 07            sta vadh2
1228   9AD7 8D A8 07            sta vadh3
1229   9ADA 4C 80 07            jmp vram
1230   9ADD                     
1231   9ADD A0 00       voltbl  ldy #00
1232   9ADF AD 3F 9B            lda patend
1233   9AE2                     \ .push  *, 2
1233   9AE2             
1234   9AE2 99 00 01                sta $0100,Y     ;Preset with first test pattern
1235   9AE5 C8                      iny 
1236   9AE6                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
1236   9AE6             
1236   9AE6             
1236   9AE6~                    eqend
1236   9AE6~                    eqend
1236   9AE6~                    eqend
1236   9AE6             
1236   9AE6 D0 FA       
1236   9AE8             
1236   9AE8~                    eqend
1236   9AE8~                    eqend
1236   9AE8             
1237   9AE8 AE 87 07            ldx vadh0
1238   9AEB EE 87 07            inc vadh0
1239   9AEE EC F2 07            cpx tend
1240   9AF1 D0 EA               bne voltbl          ;Restore regs and repeat for all pages
1241   9AF3 A2 11       nxtone  ldx #patend-pats
1242   9AF5 AD 00 01            lda $0100           ;Check the location for the first value 
1243   9AF8 5D 2E 9B            eor pats,X
1244   9AFB                     \ .push  *, 0 \ BNE  * 		                ;RAM failure
1244   9AFB             
1244   9AFB D0 FE       
1245   9AFD BD 2D 9B    nxtpat      lda pats-1,X        ;Now check this location with all test patterns
1246   9B00 8D 00 01                sta $0100
1247   9B03 4D 00 01                eor $0100
1248   9B06                         \ .push  *, 0 \ BNE  * 		            ;RAM failed to hold the new pattern
1248   9B06             
1248   9B06 D0 FE       
1249   9B08 CA                          dex 
1250   9B09 D0 F2                       bne nxtpat          ;Try next pattern
1251   9B0B EE 99 07                    inc vadl1
1252   9B0E EE A4 07                    inc vadl2
1253   9B11 EE A7 07                    inc vadl3
1254   9B14 D0 DD                       bne nxtone          ;do next
1255   9B16 AD 9A 07                    lda vadh1
1256   9B19 EE 9A 07                    inc vadh1
1257   9B1C EE A5 07                    inc vadh2
1258   9B1F EE A8 07                    inc vadh3
1259   9B22 4D F2 07                    eor tend
1260   9B25 D0 CC                       bne nxtone          ;Try next pattern
1261   9B27 4C 40 9B                    jmp endtst          ;and with zero flag and A=0
1262   9B2A                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1262   9B2A             
1262   9B2A             
1262   9B2A             
1262   9B2A             
1262   9B2A             
1262   9B2A             
1262   9B2A~                        endif
1262   9B2A~                        endif
1262   9B2A             
1262   9B2A~                        endif
1262   9B2A~                        endif
1262   9B2A             
1262   9B07             
1262   9B07 22          
1262   9B08             
1262   9B08             
1262   9B08~                        endif
1262   9B08~                        endif
1262   9B08~                        endif
1262   9B08             
1262   9B08~                        endif
1262   9B08~                        endif
1262   9B08~                        endif
1262   9B08             
1262   9B2A             
1262   9B2A~                        endif
1262   9B2A~                        endif
1262   9B2A             
1263   9B2A                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1263   9B2A             
1263   9B2A             
1263   9B2A             
1263   9B2A             
1263   9B2A             
1263   9B2A             
1263   9B2A~                    endif
1263   9B2A~                    endif
1263   9B2A             
1263   9B2A~                    endif
1263   9B2A~                    endif
1263   9B2A             
1263   9AFC             
1263   9AFC 2D          
1263   9AFD             
1263   9AFD             
1263   9AFD~                    endif
1263   9AFD~                    endif
1263   9AFD~                    endif
1263   9AFD             
1263   9AFD~                    endif
1263   9AFD~                    endif
1263   9AFD~                    endif
1263   9AFD             
1263   9B2A             
1263   9B2A~                    endif
1263   9B2A~                    endif
1263   9B2A             
1264   9B2A 38                  sec 
1265   9B2B 4C 41 9B            jmp ramerr
1266   9B2E             vtend
1267   9B2E             
1268   9B2E             ;Fancy test sequence
1269   9B2E 00          pats    .byte $00
1270   9B2F FE          		.byte $FE
1271   9B30 01          		.byte $01
1272   9B31 FD          		.byte $FD
1273   9B32 02          		.byte $02
1274   9B33 FB          		.byte $FB
1275   9B34 04          		.byte $04
1276   9B35 F7          		.byte $F7
1277   9B36 08                  .byte $08
1278   9B37 EF          		.byte $EF
1279   9B38 10          		.byte $10
1280   9B39 DF          		.byte $DF
1281   9B3A 20          		.byte $20
1282   9B3B BF          		.byte $BF
1283   9B3C 40          		.byte $40
1284   9B3D 7F          		.byte $7F
1285   9B3E 80          		.byte $80
1286   9B3F FF          patend  .byte $FF
1287   9B40             
1288   9B40 18          endtst  clc             ;Return with carry clear
1289   9B41 4C 14 9A    ramerr  jmp zpgtst      ;We know stack is no good now
1290   9B44             
1291   9B44             ;*********************************************************
1292   9B44                     .sbttl "EEROM Routines"
1293   9B44             ;*********************************************************
1294   9B44             ;* The following routines are exception modes which are  
1295   9B44             ;* used to get data in and out of the EEROM & back to    
1296   9B44             ;* Alpha. They run under NMI and assume that the calling 
1297   9B44             ;* routine in the Alpha system is smart enough not to    
1298   9B44             ;* send another command while any of these are running.  
1299   9B44             ;*********************************************************
1300   9B44             
1301   9B44                     
1302   9B44             ;***********************************************************
1303   9B44             ;* Load High Scores and Initials from ROM defaults
1304   9B44             ;***********************************************************
1305   9B44 A2 0B       ldhsin  ldx #numsths-1      ;Xfer scores
1306   9B46                     \ .push  *, 2
1306   9B46             
1307   9B46 BD A3 99                lda dscore,X
1308   9B49 9D 07 07                sta hscore,X
1309   9B4C CA                      dex
1310   9B4D                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif  
1310   9B4D             
1310   9B4D             
1310   9B4D~                    miend  
1310   9B4D~                    miend  
1310   9B4D~                    miend  
1310   9B4D             
1310   9B4D 10 F7       
1310   9B4F             
1310   9B4F~                    miend  
1310   9B4F~                    miend  
1310   9B4F             
1311   9B4F A2 08               ldx #numstit-1		;Replace with default initials
1312   9B51                     \ .push  *, 2
1312   9B51             
1313   9B51 BD AF 99                lda dinit,X     	;Get default for intials too
1314   9B54 9D FD 06                sta initl,X
1315   9B57 CA                      dex
1316   9B58                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1316   9B58             
1316   9B58             
1316   9B58~                    miend
1316   9B58~                    miend
1316   9B58~                    miend
1316   9B58             
1316   9B58 10 F7       
1316   9B5A             
1316   9B5A~                    miend
1316   9B5A~                    miend
1316   9B5A             
1317   9B5A A2 02       		ldx #numtessers-1
1318   9B5C A9 00       		lda #0				;Default zeros here
1319   9B5E             		\ .push  *, 2
1319   9B5E             
1320   9B5E 9D 14 07                sta tessers,X		;Reset any tesser bits
1321   9B61 CA                      dex
1322   9B62                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1322   9B62             
1322   9B62             
1322   9B62~                    miend
1322   9B62~                    miend
1322   9B62~                    miend
1322   9B62             
1322   9B62 10 FA       
1322   9B64             
1322   9B64~                    miend
1322   9B64~                    miend
1322   9B64             
1323   9B64 20 72 97            jsr wrhsini
1324   9B67 60                  rts
1325   9B68             
1326   9B68             ;***********************************************************
1327   9B68             ;* Load Option Switches from DIPS and flag write to EEROM
1328   9B68             ;***********************************************************  
1329   9B68             dip_emask0	= $E5 	;$E4
1330   9B68             dip_emask1	= $01
1331   9B68                   
1332   9B68             loadop  ;Option Defaults pull from DIP Switches
1333   9B68 8D 23 20            sta potgo       ;Read switches
1334   9B6B EA                  nop 
1335   9B6C AD 20 20            lda allpot      ;Get input, NOTE these are inverse from straight DIP switches
1336   9B6F 49 FF       		eor #$FF		;Invert back for sanity, we will keep these values in EEROM too
1337   9B71 49 E5       		eor #dip_emask0
1338   9B73 8D 00 06            sta options     ;Save Options0	@ 13/14S PLAY OPTIONS
1339   9B76 AD 00 40            lda intack
1340   9B79 49 01       		eor #dip_emask1
1341   9B7B 8D 01 06            sta options+1   ;Save Options1 @ 8S PRICE OPTIONS
1342   9B7E 20 8A 97            jsr wropt    
1343   9B81 60                  rts
1344   9B82                     
1345   9B82             ;*********************************************************	
1346   9B82             ;* Read in High Scores from Alpha, place in proper RAM   
1347   9B82             ;* and start EEROM write of the data                     
1348   9B82             ;*********************************************************
1349   9B82 A2 07       geths   ldx #(hscore/256d)      ;MSB of Buffer
1350   9B84 A0 07               ldy #(hscore&$ff)       ;LSB of Buffer
1351   9B86 A9 0C               lda #numsths            ;Number of High Scores
1352   9B88 20 D3 9D            jsr xfer                ;Get this data
1353   9B8B 8A                  txa                     ;Good Xfer??
1354   9B8C                     \ .push  *, 0 \ BNE  * 		                    ;yep
1354   9B8C             
1354   9B8C D0 FE       
1355   9B8E 20 66 97                jsr wrhs                ;Start Write of High Scores
1356   9B91 A9 03                   lda #g_done
1357   9B93 8D 00 50                sta outdata         ;Signal all done
1358   9B96                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1358   9B96             
1358   9B96             
1358   9B96             
1358   9B96             
1358   9B96             
1358   9B96             
1358   9B96~                    endif
1358   9B96~                    endif
1358   9B96             
1358   9B96~                    endif
1358   9B96~                    endif
1358   9B96             
1358   9B8D             
1358   9B8D 08          
1358   9B8E             
1358   9B8E             
1358   9B8E~                    endif
1358   9B8E~                    endif
1358   9B8E~                    endif
1358   9B8E             
1358   9B8E~                    endif
1358   9B8E~                    endif
1358   9B8E~                    endif
1358   9B8E             
1358   9B96             
1358   9B96~                    endif
1358   9B96~                    endif
1358   9B96             
1359   9B96 4C 98 99            jmp exitnr              ;And leave the exception
1360   9B99                 
1361   9B99             ;*********************************************************
1362   9B99             ;* Get Initials and Write to EEROM                       
1363   9B99             ;*********************************************************
1364   9B99 A2 06       getin   ldx #(initl/256d)
1365   9B9B A0 FD               ldy #(initl&$ff)
1366   9B9D A9 09               lda #numstit          ;Number of Initials
1367   9B9F 20 D3 9D            jsr xfer
1368   9BA2 8A                  txa 
1369   9BA3                     \ .push  *, 0 \ BNE  * 		
1369   9BA3             
1369   9BA3 D0 FE       
1370   9BA5 20 6A 97                jsr wrini           ;Start Write of initials
1371   9BA8 A9 03                   lda #g_done
1372   9BAA 8D 00 50                sta outdata         ;Tell Alpha we are good
1373   9BAD                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1373   9BAD             
1373   9BAD             
1373   9BAD             
1373   9BAD             
1373   9BAD             
1373   9BAD             
1373   9BAD~                    endif
1373   9BAD~                    endif
1373   9BAD             
1373   9BAD~                    endif
1373   9BAD~                    endif
1373   9BAD             
1373   9BA4             
1373   9BA4 08          
1373   9BA5             
1373   9BA5             
1373   9BA5~                    endif
1373   9BA5~                    endif
1373   9BA5~                    endif
1373   9BA5             
1373   9BA5~                    endif
1373   9BA5~                    endif
1373   9BA5~                    endif
1373   9BA5             
1373   9BAD             
1373   9BAD~                    endif
1373   9BAD~                    endif
1373   9BAD             
1374   9BAD 4C 98 99            jmp exitnr
1375   9BB0             		
1376   9BB0             ;*********************************************************
1377   9BB0             ;* Get Tesseracts and Write to EEROM                       
1378   9BB0             ;*********************************************************
1379   9BB0 A2 07       gettes  ldx #(tessers/256d)
1380   9BB2 A0 14               ldy #(tessers&$ff)
1381   9BB4 A9 03               lda #numtessers          ;Number of tessers
1382   9BB6 20 D3 9D            jsr xfer
1383   9BB9 8A                  txa 
1384   9BBA                     \ .push  *, 0 \ BNE  * 		
1384   9BBA             
1384   9BBA D0 FE       
1385   9BBC 20 6E 97                jsr wrtes           ;Start Write of tessers
1386   9BBF A9 03                   lda #g_done
1387   9BC1 8D 00 50                sta outdata         ;Tell Alpha we are good
1388   9BC4                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1388   9BC4             
1388   9BC4             
1388   9BC4             
1388   9BC4             
1388   9BC4             
1388   9BC4             
1388   9BC4~                    endif
1388   9BC4~                    endif
1388   9BC4             
1388   9BC4~                    endif
1388   9BC4~                    endif
1388   9BC4             
1388   9BBB             
1388   9BBB 08          
1388   9BBC             
1388   9BBC             
1388   9BBC~                    endif
1388   9BBC~                    endif
1388   9BBC~                    endif
1388   9BBC             
1388   9BBC~                    endif
1388   9BBC~                    endif
1388   9BBC~                    endif
1388   9BBC             
1388   9BC4             
1388   9BC4~                    endif
1388   9BC4~                    endif
1388   9BC4             
1389   9BC4 4C 98 99            jmp exitnr
1390   9BC7             
1391   9BC7             ;Get the Game Stats, notice we are writing into the stats_temp buffer
1392   9BC7             getstap 
1393   9BC7 A2 07               ldx #(stats_temp/256d)
1394   9BC9 A0 18               ldy #(stats_temp&$ff)
1395   9BCB A9 08               lda #8            ;8 Bytes
1396   9BCD 20 D3 9D            jsr xfer
1397   9BD0 8A                  txa 
1398   9BD1                     \ .push  *, 0 \ BNE  * 		
1398   9BD1             
1398   9BD1 D0 FE       
1399   9BD3                         ;Now we need to add the new stat deltas into the main EEROM data
1400   9BD3                         ;Game time (up to 9999 seconds per player), which is 160 minutes
1401   9BD3                         ;that should be long enough to cover most games.
1402   9BD3 A9 01                   lda #01             ;2 Players
1403   9BD5 85 1A                   sta temp3
1404   9BD7 F8                      sed                 ;DECIMAL MODE
1405   9BD8                         \ .push  *, 2
1405   9BD8             
1406   9BD8 0A                          asl A           ;Y = x2
1407   9BD9 A8                          tay
1408   9BDA 0A                          asl A           ;X = x4
1409   9BDB AA                          tax         
1410   9BDC B9 18 07                    lda stats_temp,Y        
1411   9BDF 18                          clc 
1412   9BE0 7D 1C 06                    adc atime1,X
1413   9BE3 9D 1C 06                    sta atime1,X
1414   9BE6 B9 19 07                    lda stats_temp+1,Y
1415   9BE9 7D 1D 06                    adc atime1+1,X
1416   9BEC 9D 1D 06                    sta atime1+1,X
1417   9BEF A9 00                       lda #00             ;Still have to roll up carry's tho
1418   9BF1 7D 1E 06                    adc atime1+2,X
1419   9BF4 9D 1E 06                    sta atime1+2,X
1420   9BF7 A9 00                       lda #00         
1421   9BF9 7D 1F 06                    adc atime1+3,X
1422   9BFC                             \ .push  *, 0 \ BCS  *                     ;This will prevent rollover
1422   9BFC             
1422   9BFC B0 FE       
1423   9BFE 9D 1F 06                        sta atime1+3,X
1424   9C01                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1424   9C01             
1424   9C01             
1424   9C01             
1424   9C01             
1424   9C01             
1424   9C01             
1424   9C01~                            endif
1424   9C01~                            endif
1424   9C01             
1424   9C01~                            endif
1424   9C01~                            endif
1424   9C01             
1424   9BFD             
1424   9BFD 03          
1424   9BFE             
1424   9BFE             
1424   9BFE~                            endif
1424   9BFE~                            endif
1424   9BFE~                            endif
1424   9BFE             
1424   9BFE~                            endif
1424   9BFE~                            endif
1424   9BFE~                            endif
1424   9BFE             
1424   9C01             
1424   9C01~                            endif
1424   9C01~                            endif
1424   9C01             
1425   9C01 C6 1A                       dec temp3
1426   9C03 A5 1A                       lda temp3
1427   9C05                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1427   9C05             
1427   9C05             
1427   9C05~                        miend
1427   9C05~                        miend
1427   9C05~                        miend
1427   9C05             
1427   9C05 10 D1       
1427   9C07             
1427   9C07~                        miend
1427   9C07~                        miend
1427   9C07             
1428   9C07                          
1429   9C07                         ;Increment game counts, if the game time values are not zero
1430   9C07                         ;Then we assume there was a player game DOH
1431   9C07 A9 01                   lda #01
1432   9C09 85 1A                   sta temp3
1433   9C0B                         \ .push  *, 2
1433   9C0B             
1434   9C0B 0A                          asl A
1435   9C0C A8                          tay
1436   9C0D 0A                          asl A               ;x4
1437   9C0E AA                          tax         
1438   9C0F B9 18 07                    lda stats_temp,Y    ;check the game timer LSB
1439   9C12 19 19 07                    ora stats_temp+1,Y  ;and MSB, if they are not zero, then increment the game counter
1440   9C15                             \ .push  *, 0 \ BEQ  * 
1440   9C15             
1440   9C15 F0 FE       
1441   9C17 BD 14 06                        lda	game1,X
1442   9C1A 18                              clc	
1443   9C1B 69 01                           adc	#01
1444   9C1D 9D 14 06                        sta	game1,X
1445   9C20 BD 15 06                        lda	game1+1,X
1446   9C23 69 00                           adc	#00
1447   9C25 9D 15 06                        sta	game1+1,X
1448   9C28 BD 16 06                        lda	game1+2,X
1449   9C2B 69 00                           adc	#00
1450   9C2D 9D 16 06                        sta	game1+2,X
1451   9C30 BD 17 06                        lda	game1+3,X
1452   9C33 69 00                           adc	#00
1453   9C35                                 \ .push  *, 0 \ BCS  *  
1453   9C35             
1453   9C35 B0 FE       
1454   9C37 9D 17 06                            sta	game1+3,X   ;Dont let it rollover
1455   9C3A                                 \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1455   9C3A             
1455   9C3A             
1455   9C3A             
1455   9C3A             
1455   9C3A             
1455   9C3A             
1455   9C3A~                                endif
1455   9C3A~                                endif
1455   9C3A             
1455   9C3A~                                endif
1455   9C3A~                                endif
1455   9C3A             
1455   9C36             
1455   9C36 03          
1455   9C37             
1455   9C37             
1455   9C37~                                endif
1455   9C37~                                endif
1455   9C37~                                endif
1455   9C37             
1455   9C37~                                endif
1455   9C37~                                endif
1455   9C37~                                endif
1455   9C37             
1455   9C3A             
1455   9C3A~                                endif
1455   9C3A~                                endif
1455   9C3A             
1456   9C3A                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1456   9C3A             
1456   9C3A             
1456   9C3A             
1456   9C3A             
1456   9C3A             
1456   9C3A             
1456   9C3A~                            endif
1456   9C3A~                            endif
1456   9C3A             
1456   9C3A~                            endif
1456   9C3A~                            endif
1456   9C3A             
1456   9C16             
1456   9C16 23          
1456   9C17             
1456   9C17             
1456   9C17~                            endif
1456   9C17~                            endif
1456   9C17~                            endif
1456   9C17             
1456   9C17~                            endif
1456   9C17~                            endif
1456   9C17~                            endif
1456   9C17             
1456   9C3A             
1456   9C3A~                            endif
1456   9C3A~                            endif
1456   9C3A             
1457   9C3A C6 1A                       dec temp3
1458   9C3C A5 1A                       lda temp3
1459   9C3E                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1459   9C3E             
1459   9C3E             
1459   9C3E~                        miend
1459   9C3E~                        miend
1459   9C3E~                        miend
1459   9C3E             
1459   9C3E 10 CB       
1459   9C40             
1459   9C40~                        miend
1459   9C40~                        miend
1459   9C40             
1460   9C40 D8                      cld                 ;END DECIMAL MODE  
1461   9C41 A9 03                   lda #g_done
1462   9C43 8D 00 50                sta outdata         ;Tell Alpha we are good
1463   9C46                         ;then book it to EEROM
1464   9C46 20 76 97                jsr wrstg           ;Start Write of Stats
1465   9C49                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1465   9C49             
1465   9C49             
1465   9C49             
1465   9C49             
1465   9C49             
1465   9C49             
1465   9C49~                    endif
1465   9C49~                    endif
1465   9C49             
1465   9C49~                    endif
1465   9C49~                    endif
1465   9C49             
1465   9BD2             
1465   9BD2 76          
1465   9BD3             
1465   9BD3             
1465   9BD3~                    endif
1465   9BD3~                    endif
1465   9BD3~                    endif
1465   9BD3             
1465   9BD3~                    endif
1465   9BD3~                    endif
1465   9BD3~                    endif
1465   9BD3             
1465   9C49             
1465   9C49~                    endif
1465   9C49~                    endif
1465   9C49             
1466   9C49 4C 98 99            jmp exitnr
1467   9C4C                     
1468   9C4C             getstawx
1469   9C4C A2 07               ldx #(stats_temp/256d)
1470   9C4E A0 18               ldy #(stats_temp&$ff)
1471   9C50 A9 10               lda #numstxw              ;Get back XLives total and individual numbers for each warp
1472   9C52 20 D3 9D            jsr xfer
1473   9C55 8A                  txa 
1474   9C56                     \ .push  *, 0 \ BNE  * 		
1474   9C56             
1474   9C56 D0 FE       
1475   9C58                         ;Now we need to add the new xlife delta into the main EEROM data
1476   9C58 AD 18 07                lda stats_temp       
1477   9C5B 18                      clc 
1478   9C5C 6D 03 06                adc extlie
1479   9C5F 8D 03 06                sta extlie
1480   9C62 A9 00                   lda #00
1481   9C64 6D 04 06                adc extlie+1
1482   9C67                         \ .push  *, 0 \ BCS  * 
1482   9C67             
1482   9C67 B0 FE       
1483   9C69 8D 04 06                    sta extlie+1
1484   9C6C                         \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1484   9C6C             
1484   9C6C             
1484   9C6C             
1484   9C6C             
1484   9C6C             
1484   9C6C             
1484   9C6C~                        endif
1484   9C6C~                        endif
1484   9C6C             
1484   9C6C~                        endif
1484   9C6C~                        endif
1484   9C6C             
1484   9C68             
1484   9C68 03          
1484   9C69             
1484   9C69             
1484   9C69~                        endif
1484   9C69~                        endif
1484   9C69~                        endif
1484   9C69             
1484   9C69~                        endif
1484   9C69~                        endif
1484   9C69~                        endif
1484   9C69             
1484   9C6C             
1484   9C6C~                        endif
1484   9C6C~                        endif
1484   9C6C             
1485   9C6C                         ;now do warps
1486   9C6C A9 07                   lda #numwarps
1487   9C6E 85 1A                   sta temp3
1488   9C70                         \ .push  *, 2
1488   9C70             
1489   9C70 0A                          asl A
1490   9C71 AA                          tax
1491   9C72                             ;+2 to skip over the xlives data
1492   9C72 BD 1A 07                    lda stats_temp+2,X       
1493   9C75 18                          clc
1494   9C76 7D 05 06                    adc warps,X
1495   9C79 9D 05 06                    sta warps,X
1496   9C7C BD 1B 07                    lda stats_temp+3,X       
1497   9C7F 7D 06 06                    adc warps+1,X
1498   9C82                             \ .push  *, 0 \ BCS  * 
1498   9C82             
1498   9C82 B0 FE       
1499   9C84 9D 06 06                        sta warps+1,X
1500   9C87                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1500   9C87             
1500   9C87             
1500   9C87             
1500   9C87             
1500   9C87             
1500   9C87             
1500   9C87~                            endif
1500   9C87~                            endif
1500   9C87             
1500   9C87~                            endif
1500   9C87~                            endif
1500   9C87             
1500   9C83             
1500   9C83 03          
1500   9C84             
1500   9C84             
1500   9C84~                            endif
1500   9C84~                            endif
1500   9C84~                            endif
1500   9C84             
1500   9C84~                            endif
1500   9C84~                            endif
1500   9C84~                            endif
1500   9C84             
1500   9C87             
1500   9C87~                            endif
1500   9C87~                            endif
1500   9C87             
1501   9C87 C6 1A                       dec temp3
1502   9C89 A5 1A                       lda temp3
1503   9C8B                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1503   9C8B             
1503   9C8B             
1503   9C8B~                        miend
1503   9C8B~                        miend
1503   9C8B~                        miend
1503   9C8B             
1503   9C8B 10 E3       
1503   9C8D             
1503   9C8D~                        miend
1503   9C8D~                        miend
1503   9C8D             
1504   9C8D A9 03                   lda #g_done
1505   9C8F 8D 00 50                sta outdata         ;Tell Alpha we are good
1506   9C92 20 7E 97                jsr wrxwarp
1507   9C95                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1507   9C95             
1507   9C95             
1507   9C95             
1507   9C95             
1507   9C95             
1507   9C95             
1507   9C95~                    endif
1507   9C95~                    endif
1507   9C95             
1507   9C95~                    endif
1507   9C95~                    endif
1507   9C95             
1507   9C57             
1507   9C57 3D          
1507   9C58             
1507   9C58             
1507   9C58~                    endif
1507   9C58~                    endif
1507   9C58~                    endif
1507   9C58             
1507   9C58~                    endif
1507   9C58~                    endif
1507   9C58~                    endif
1507   9C58             
1507   9C95             
1507   9C95~                    endif
1507   9C95~                    endif
1507   9C95             
1508   9C95 4C 98 99            jmp exitnr
1509   9C98                     
1510   9C98             getstamz
1511   9C98 A2 07               ldx #(stats_temp/256d)
1512   9C9A A0 18               ldy #(stats_temp&$ff)
1513   9C9C A9 05               lda # (1+4)              ;Get back Maze Level Data (NOTE: We receive single bytes, but over here in GAMMA we save 2 bytes per stat)
1514   9C9E 20 D3 9D            jsr xfer
1515   9CA1 8A                  txa 
1516   9CA2                     \ .push  *, 0 \ BNE  * 		
1516   9CA2             
1516   9CA2 D0 FE       
1517   9CA4 AD 18 07                lda stats_temp      ;First byte is the level
1518   9CA7 0A                      asl A 
1519   9CA8 0A                      asl A
1520   9CA9 0A                      asl A                   ;x8
1521   9CAA AA                      tax
1522   9CAB A0 00                   ldy #00
1523   9CAD A9 03                   lda #03
1524   9CAF 85 1A                   sta temp3
1525   9CB1                         \ .push  *, 2              
1525   9CB1             
1526   9CB1 B9 19 07                    lda stats_temp+1,Y      ;+1 is to skip the level number       
1527   9CB4 18                          clc
1528   9CB5 7D 25 06                    adc mzstats,X
1529   9CB8 9D 25 06                    sta mzstats,X
1530   9CBB A9 00                       lda #00    
1531   9CBD 7D 26 06                    adc mzstats+1,X
1532   9CC0                             \ .push  *, 0 \ BCS  * 
1532   9CC0             
1532   9CC0 B0 FE       
1533   9CC2 9D 26 06                        sta mzstats+1,X
1534   9CC5                             \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1534   9CC5             
1534   9CC5             
1534   9CC5             
1534   9CC5             
1534   9CC5             
1534   9CC5             
1534   9CC5~                            endif
1534   9CC5~                            endif
1534   9CC5             
1534   9CC5~                            endif
1534   9CC5~                            endif
1534   9CC5             
1534   9CC1             
1534   9CC1 03          
1534   9CC2             
1534   9CC2             
1534   9CC2~                            endif
1534   9CC2~                            endif
1534   9CC2~                            endif
1534   9CC2             
1534   9CC2~                            endif
1534   9CC2~                            endif
1534   9CC2~                            endif
1534   9CC2             
1534   9CC5             
1534   9CC5~                            endif
1534   9CC5~                            endif
1534   9CC5             
1535   9CC5 E8                          inx
1536   9CC6 E8                          inx
1537   9CC7 C8                          iny             ;Only 1 for source (4 bytes into 8)
1538   9CC8 C6 1A                       dec temp3
1539   9CCA A5 1A                       lda temp3
1540   9CCC                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BMI	*+5\ jmp	var2_\#else\ BPL	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif
1540   9CCC             
1540   9CCC             
1540   9CCC~                        miend
1540   9CCC~                        miend
1540   9CCC~                        miend
1540   9CCC             
1540   9CCC 10 E3       
1540   9CCE             
1540   9CCE~                        miend
1540   9CCE~                        miend
1540   9CCE             
1541   9CCE A9 03                   lda #g_done
1542   9CD0 8D 00 50                sta outdata         ;Tell Alpha we are good
1543   9CD3 20 7A 97                jsr wrmaze
1544   9CD6                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1544   9CD6             
1544   9CD6             
1544   9CD6             
1544   9CD6             
1544   9CD6             
1544   9CD6             
1544   9CD6~                    endif
1544   9CD6~                    endif
1544   9CD6             
1544   9CD6~                    endif
1544   9CD6~                    endif
1544   9CD6             
1544   9CA3             
1544   9CA3 32          
1544   9CA4             
1544   9CA4             
1544   9CA4~                    endif
1544   9CA4~                    endif
1544   9CA4~                    endif
1544   9CA4             
1544   9CA4~                    endif
1544   9CA4~                    endif
1544   9CA4~                    endif
1544   9CA4             
1544   9CD6             
1544   9CD6~                    endif
1544   9CD6~                    endif
1544   9CD6             
1545   9CD6 4C 98 99            jmp exitnr
1546   9CD9                     
1547   9CD9                     
1548   9CD9             ;*********************************************************
1549   9CD9             ;* Send the High Scores back to Alpha                    
1550   9CD9             ;*********************************************************
1551   9CD9 A2 07       sendhs  ldx #(hscore/256d)
1552   9CDB A0 07               ldy #(hscore&$ff)
1553   9CDD A9 0C               lda #numsths          ;Address and count
1554   9CDF 4C 05 9E            jmp xfer2
1555   9CE2                     
1556   9CE2             ;*********************************************************
1557   9CE2             ;* Send the initials                                     
1558   9CE2             ;*********************************************************
1559   9CE2             sendinit    
1560   9CE2 A2 06               ldx #(initl/256d)
1561   9CE4 A0 FD               ldy #(initl&$ff)
1562   9CE6 A9 09               lda #numstit
1563   9CE8 4C 05 9E            jmp xfer2
1564   9CEB             		
1565   9CEB             ;*********************************************************
1566   9CEB             ;* Send the tesseracts                                     
1567   9CEB             ;*********************************************************
1568   9CEB             sendtess   
1569   9CEB A2 07               ldx #(tessers/256d)
1570   9CED A0 14               ldy #(tessers&$ff)
1571   9CEF A9 03               lda #numtessers
1572   9CF1 4C 05 9E            jmp xfer2		
1573   9CF4             
1574   9CF4             ;*********************************************************
1575   9CF4             ;* Send the Game Stats
1576   9CF4             ;*********************************************************
1577   9CF4             sendstap  
1578   9CF4 A2 06               ldx #(game1/256d)
1579   9CF6 A0 14               ldy #(game1&$ff)
1580   9CF8 A9 10               lda #numstgs
1581   9CFA 4C 05 9E            jmp xfer2 
1582   9CFD                     
1583   9CFD             ;*********************************************************
1584   9CFD             ;* Send the ExtraLife + Warp Stats
1585   9CFD             ;*********************************************************        
1586   9CFD             sendstawx
1587   9CFD A2 06               ldx #(extlie/256d)
1588   9CFF A0 03               ldy #(extlie&$ff)
1589   9D01 A9 10               lda #numstxw
1590   9D03 4C 05 9E            jmp xfer2 
1591   9D06             
1592   9D06             ;*********************************************************
1593   9D06             ;* Send the Maze Stats
1594   9D06             ;*********************************************************  
1595   9D06             sendstamz
1596   9D06 A2 06               ldx #(mzstats/256d)
1597   9D08 A0 25               ldy #(mzstats&$ff)
1598   9D0A A9 C8               lda #numstmz
1599   9D0C 4C 05 9E            jmp xfer2 
1600   9D0F                     
1601   9D0F             ;*********************************************************
1602   9D0F             ;* Send All Warps
1603   9D0F             ;*********************************************************
1604   9D0F             sendwarps
1605   9D0F A2 06               ldx #(warpcodes/256d)
1606   9D11 A0 EE               ldy #(warpcodes&$ff)
1607   9D13 A9 0E               lda #numwarps*2
1608   9D15 4C 05 9E            jmp xfer2 
1609   9D18             
1610   9D18             ;************************************************
1611   9D18             ;* Get Warp Code Level Data
1612   9D18             ;* Will return a single warp code based upon 
1613   9D18             ;* the level parameter (zero based) given by
1614   9D18             ;* ALPHA.
1615   9D18             ;*
1616   9D18             ;* If data in RAM is negative, then new data will
1617   9D18             ;* be fetched from POKEY and then written to 
1618   9D18             ;* EEROM so it is saved through a power cycle.
1619   9D18             ;************************************************
1620   9D18 A2 07       getwarp ldx #(stats_temp/256d)
1621   9D1A A0 18               ldy #(stats_temp&$ff)
1622   9D1C A9 01               lda #01              ;ALPHA sends a single byte saying which level to generate
1623   9D1E 20 D3 9D            jsr xfer
1624   9D21 8A                  txa 
1625   9D22                     \ .push  *, 0 \ BNE  * 		
1625   9D22             
1625   9D22 D0 FE       
1626   9D24 AD 18 07                lda stats_temp
1627   9D27                         ; asl A                ;X2 for 2-bytes per warp
1628   9D27                         ; tax
1629   9D27                         ; lda warpcodes,X
1630   9D27                         ; cmp #-1
1631   9D27                         ; ifeq
1632   9D27                             ; ;these are -1, so they have not been generated.
1633   9D27             				; jsr genwarp
1634   9D27                             ; ;write to EEROM
1635   9D27                             ; jsr wrwarpc         ;Queue it up to Write back to EEROM
1636   9D27                         ; else
1637   9D27                             ; lda warpcodes+1,X 
1638   9D27                             ; cmp #-1
1639   9D27                             ; beq ?2genw
1640   9D27                         ; endif
1641   9D27                         ; ;send them back
1642   9D27                         ; lda #(warpcodes&$ff)
1643   9D27                         ; sta temp1
1644   9D27                         ; lda #(warpcodes/256d)
1645   9D27                         ; sta temp1+1
1646   9D27                         ; txa                 ;back to x1
1647   9D27                         ; lsr A
1648   9D27 18                      clc
1649   9D28 65 16                   adc temp1
1650   9D2A A9 00                   lda #00
1651   9D2C 65 17                   adc temp1+1         ;temp1 now contains the pointer to the warp code
1652   9D2E A4 16                   ldy temp1
1653   9D30 A6 17                   ldx temp1+1
1654   9D32 A9 02                   lda #02
1655   9D34 4C 05 9E                jmp xfer2 
1656   9D37                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1656   9D37             
1656   9D37             
1656   9D37             
1656   9D37             
1656   9D37             
1656   9D37             
1656   9D37~                    endif
1656   9D37~                    endif
1656   9D37             
1656   9D37~                    endif
1656   9D37~                    endif
1656   9D37             
1656   9D23             
1656   9D23 13          
1656   9D24             
1656   9D24             
1656   9D24~                    endif
1656   9D24~                    endif
1656   9D24~                    endif
1656   9D24             
1656   9D24~                    endif
1656   9D24~                    endif
1656   9D24~                    endif
1656   9D24             
1656   9D37             
1656   9D37~                    endif
1656   9D37~                    endif
1656   9D37             
1657   9D37 4C 98 99            jmp exitnr
1658   9D3A             
1659   9D3A             ;Will write two random bytes into the warpcodes
1660   9D3A             ;memory locations defined by X (warp number * 2)        
1661   9D3A AD 22 20    genwarp lda random
1662   9D3D 4A          		lsr A
1663   9D3E A8          		tay
1664   9D3F B9 53 9D    		lda ?goodcodes,Y
1665   9D42 9D EE 06    		sta warpcodes,X
1666   9D45 AD 22 20    		lda random
1667   9D48 45 01       		eor framecnt		;Another layer of randomization
1668   9D4A 4A          		lsr A
1669   9D4B A8          		tay
1670   9D4C B9 53 9D    		lda ?goodcodes,Y
1671   9D4F 9D EF 06    		sta warpcodes+1,X 
1672   9D52 60          		rts
1673   9D53             
1674   9D53             ?goodcodes		
1675   9D53 111213141516.db  	$11,$12,$13,$14,$15,$16,$17,$18,$19,$21,$22,$23,$24,$25,$26,$27
1675   9D59 17181921222324252627
1676   9D63 282931323334.db  	$28,$29,$31,$32,$33,$34,$35,$36,$37,$38,$39,$41,$42,$43,$44,$45
1676   9D69 35363738394142434445
1677   9D73 464748495152.db  	$46,$47,$48,$49,$51,$52,$53,$54,$55,$56,$57,$58,$59,$61,$62,$63
1677   9D79 53545556575859616263
1678   9D83 646566676869.db  	$64,$65,$66,$67,$68,$69,$71,$72,$73,$74,$75,$76,$77,$78,$79,$81
1678   9D89 71727374757677787981
1679   9D93 828384858687.db  	$82,$83,$84,$85,$86,$87,$88,$89,$91,$92,$93,$94,$95,$96,$97,$98
1679   9D99 88899192939495969798
1680   9DA3 111213141516.db  	$11,$12,$13,$14,$15,$16,$17,$18,$19,$21,$22,$23,$24,$25,$26,$27
1680   9DA9 17181921222324252627
1681   9DB3 464748495152.db  	$46,$47,$48,$49,$51,$52,$53,$54,$55,$56,$57,$58,$59,$61,$62,$63
1681   9DB9 53545556575859616263
1682   9DC3 828384858687.db  	$82,$83,$84,$85,$86,$87,$88,$89,$91,$92,$93,$94,$95,$96,$97,$98
1682   9DC9 88899192939495969798
1683   9DD3             		
1684   9DD3             ;***************************************************************
1685   9DD3                     .sbttl "EEROM Xfer Utilities"
1686   9DD3             ;***************************************************************
1687   9DD3             ;* Xfer - Transfers bytes from the input port to a RAM buffer 
1688   9DD3             ;*                                                        
1689   9DD3             ;* Entry:   A = Number of bytes to xfer                   
1690   9DD3             ;*      X = MSB of pointer to buffer                  
1691   9DD3             ;*      Y = LSB of pointer to buffer                  
1692   9DD3             ;*                                                        
1693   9DD3             ;* Exit:    On Exit, and 'ack' is send back down the com  
1694   9DD3             ;*      port and the status of the program is         
1695   9DD3             ;*          returned to normal.                           
1696   9DD3             ;*      X = 0 = Status Good                           
1697   9DD3             ;*      X = 2 = Timeout, All data not recieved        
1698   9DD3             ;***************************************************************
1699   9DD3 8D DE 05    xfer    sta datflg      ;Save count total
1700   9DD6 8E 0C 00            stx xferbuf+1,ABS    ;Set up pointer
1701   9DD9 8C 0B 00            sty xferbuf,ABS
1702   9DDC A9 00               lda #00
1703   9DDE 8D DD 05            sta datnum      ;Set to accept data, skip commands mode
1704   9DE1 8D DC 05            sta r_nptr      ;Set count to 0
1705   9DE4 A9 01               lda #01         ;ack ready to send
1706   9DE6 8D 00 50            sta outdata
1707   9DE9 58                  cli             ;Allow sounds to continue now
1708   9DEA                     ;Ready for Data in
1709   9DEA A2 04               ldx #04         ;MSB of timeout
1710   9DEC A0 00               ldy #00         ;Time out if this takes too long
1711   9DEE 88          ?xf1    dey
1712   9DEF                     \ .push  *, 0 \ BNE  * 		
1712   9DEF             
1712   9DEF D0 FE       
1713   9DF1 CA                      dex
1714   9DF2 F0 0B                   beq timot           ;Will send timout error
1715   9DF4                     \var1_ .set *\ .pop var3_, var4_\#if (var3_ & 2)==0 	\#if (var3_ & 1)==0	\#if (var3_ & 4)==0	 \var2_ .set var1_-var4_-2\#if var2_+127 < 0\ .error "Branch Range < -127, use far logic"\#else\#if var2_-128 > 0\ .error "Branch Range > 128, use far logic"\#else\ .org var4_+1\ .byte var2_\#endif\#endif\#else\ .org var4_+2\ jmp var1_\#endif\#else	\ .org  var4_-2	\ .word var1_\#endif\ .org	var1_\#else\ .error "Wrong Endtype for IF block"\#endif
1715   9DF4             
1715   9DF4             
1715   9DF4             
1715   9DF4             
1715   9DF4             
1715   9DF4             
1715   9DF4~                    endif
1715   9DF4~                    endif
1715   9DF4             
1715   9DF4~                    endif
1715   9DF4~                    endif
1715   9DF4             
1715   9DF0             
1715   9DF0 03          
1715   9DF1             
1715   9DF1             
1715   9DF1~                    endif
1715   9DF1~                    endif
1715   9DF1~                    endif
1715   9DF1             
1715   9DF1~                    endif
1715   9DF1~                    endif
1715   9DF1~                    endif
1715   9DF1             
1715   9DF4             
1715   9DF4~                    endif
1715   9DF4~                    endif
1715   9DF4             
1716   9DF4 AD DC 05            lda r_nptr      ;See if we are getting anything
1717   9DF7 CD DE 05            cmp datflg      ;Did we get all?
1718   9DFA 90 F2               bcc ?xf1            ;Wait and get some more
1719   9DFC A2 00               ldx #00         ;X = 0 is good exit
1720   9DFE 60                  rts 
1721   9DFF                     
1722   9DFF             ;********************************************************
1723   9DFF             ;* If here, we timed out... Send back timeout and reset *
1724   9DFF             ;********************************************************
1725   9DFF A2 02       timot   ldx #g_tout
1726   9E01 8E 00 50            stx outdata
1727   9E04 60                  rts 
1728   9E05                     
1729   9E05             ;********************************************************
1730   9E05             ;* Routine for sending Data to Alpha       
1731   9E05             ;********************************************************
1732   9E05             ;* X: High Address Byte of Data to Transfer
1733   9E05             ;* Y: Low Address Byte of Data to Transfer
1734   9E05             ;* A: Number of Bytes
1735   9E05             ;********************************************************
1736   9E05 8D DE 05    xfer2   sta datflg      ;Save count total
1737   9E08 8E 0C 00            stx xferbuf+1,ABS    ;Set up pointer
1738   9E0B 8C 0B 00            sty xferbuf,ABS
1739   9E0E A8                  tay             ;Indirect pointer address
1740   9E0F 88                  dey             ;One less (offset from 0)
1741   9E10                     \ .push  *, 2
1741   9E10             
1742   9E10                         \ .push  *, 2
1742   9E10             
1743   9E10 A9 02                       lda #alpharcvd      ;Test for output empty
1744   9E12 2C 00 28                    bit portst
1745   9E15                         \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BNE	*+5\ jmp	var2_\#else\ BEQ	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		               ;Alphy ready to recieve
1745   9E15             
1745   9E15             
1745   9E15~                        neend               ;Alphy ready to recieve
1745   9E15~                        neend               ;Alphy ready to recieve
1745   9E15~                        neend               ;Alphy ready to recieve
1745   9E15             
1745   9E15 F0 F9       
1745   9E17             
1745   9E17~                        neend               ;Alphy ready to recieve
1745   9E17~                        neend               ;Alphy ready to recieve
1745   9E17             
1746   9E17 B1 0B                   lda (xferbuf,Y)
1747   9E19 8D 00 50                sta outdata     ;Send data
1748   9E1C 88                      dey
1749   9E1D C0 FF                   cpy #-1
1750   9E1F                     \ .pop var1_, var2_\#if (var1_ & 2)\#if ((var2_-*-2+127) <= 0) \ BEQ	*+5\ jmp	var2_\#else\ BNE	var2_\#endif\#else\ .error "Inappropriate End for BEGIN Loop."\#endif		
1750   9E1F             
1750   9E1F             
1750   9E1F~                    eqend
1750   9E1F~                    eqend
1750   9E1F~                    eqend
1750   9E1F             
1750   9E1F D0 EF       
1750   9E21             
1750   9E21~                    eqend
1750   9E21~                    eqend
1750   9E21             
1751   9E21 4C 98 99            jmp exitnr           ;We are done!
1752   9E24             
1753   9E24             
1754   9E24             
1755   9E24             ;******************************************************
1756   9E24                 .sbttl "Build Sound Command Tables"
1757   9E24             ;******************************************************
1758   9E24             ;* The RPM macros etc will automatically build all    *
1759   9E24             ;* the necessary tables for each command.             *
1760   9E24             ;******************************************************
1761   9E24             ; Define the various tunetables
1762   9E24             
1763   9E24                 \ \tmpptr .set *\.export g_snd_fak\g_snd_fak = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+g_snd_fak = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 7\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 0\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_blank\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Blank Sound - This is required to be here
1763   9E24             
1763   9E24             
1763   9E24             
1763   9E24             
1763   8B79             
1763   8B79 06          
1763   8B7A             
1763   9E24             
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24             
1763   9E24             
1763   9E24             
1763   9E24             
1763   8C26             
1763   8C26 00          
1763   8C27             
1763   9E24             
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24             
1763   9E24             
1763   9E24             
1763   8CD3             
1763   8CD3 00          
1763   8CD4             
1763   9E24             
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24             
1763   9E24             
1763   9E24             
1763   8D63             
1763   8D63 07          
1763   8D64             
1763   9E24             
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24             
1763   9E24             
1763   9E24             
1763   8DF3             
1763   8DF3 00          
1763   8DF4             
1763   9E24             
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24             
1763   9E24             
1763   9E24             
1763   8E83             
1763   8E83 00          
1763   8E84             
1763   9E24             
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24             
1763   9E24             
1763   9E24             
1763   8F12             
1763   8F12~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   8F12~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   8F12             
1763   9E24             
1763   9E24             
1763   9E24             
1763   8FE3             
1763   8FE3 FF          
1763   8FE4             
1763   9E24             
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24~                STSND(g_snd_fak,REPL,7,-1,0,s_blank)    ;Blank Sound - This is required to be here
1763   9E24             
1763   9E24             
1763   9E24             
1764   9E24                 \ \tmpptr .set *\.export g_geth\g_geth = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word geths-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                     ;Receive High Scores from Alpha
1764   9E24             
1764   9E24             
1764   9E24             
1764   9E24             
1764   8B7A             
1764   8B7A FF          
1764   8B7B             
1764   9E24             
1764   9E24~                EXCEPT(g_geth,geths)                    ;Receive High Scores from Alpha
1764   9E24~                EXCEPT(g_geth,geths)                    ;Receive High Scores from Alpha
1764   9E24             
1764   9E24             
1764   9E24             
1764   8C27             
1764   8C27 FF          
1764   8C28             
1764   9E24             
1764   9E24~                EXCEPT(g_geth,geths)                    ;Receive High Scores from Alpha
1764   9E24~                EXCEPT(g_geth,geths)                    ;Receive High Scores from Alpha
1764   9E24             
1764   9E24             
1764   9E24             
1764   8FE4             
1764   8FE4 00          
1764   8FE5             
1764   9E24             
1764   9E24~                EXCEPT(g_geth,geths)                    ;Receive High Scores from Alpha
1764   9E24~                EXCEPT(g_geth,geths)                    ;Receive High Scores from Alpha
1764   9E24             
1764   9E24             
1764   9E24             
1764   93F0             
1764   93F0 81 9B       
1764   93F2             
1764   9E24             
1764   9E24~                EXCEPT(g_geth,geths)                    ;Receive High Scores from Alpha
1764   9E24~                EXCEPT(g_geth,geths)                    ;Receive High Scores from Alpha
1764   9E24             
1765   9E24                 \ \tmpptr .set *\.export g_geti\g_geti = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getin-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                     ;Receive Initials from Alpha  
1765   9E24             
1765   9E24             
1765   9E24             
1765   9E24             
1765   8B7B             
1765   8B7B FF          
1765   8B7C             
1765   9E24             
1765   9E24~                EXCEPT(g_geti,getin)                    ;Receive Initials from Alpha  
1765   9E24~                EXCEPT(g_geti,getin)                    ;Receive Initials from Alpha  
1765   9E24             
1765   9E24             
1765   9E24             
1765   8C28             
1765   8C28 FF          
1765   8C29             
1765   9E24             
1765   9E24~                EXCEPT(g_geti,getin)                    ;Receive Initials from Alpha  
1765   9E24~                EXCEPT(g_geti,getin)                    ;Receive Initials from Alpha  
1765   9E24             
1765   9E24             
1765   9E24             
1765   8FE5             
1765   8FE5 01          
1765   8FE6             
1765   9E24             
1765   9E24~                EXCEPT(g_geti,getin)                    ;Receive Initials from Alpha  
1765   9E24~                EXCEPT(g_geti,getin)                    ;Receive Initials from Alpha  
1765   9E24             
1765   9E24             
1765   9E24             
1765   93F2             
1765   93F2 98 9B       
1765   93F4             
1765   9E24             
1765   9E24~                EXCEPT(g_geti,getin)                    ;Receive Initials from Alpha  
1765   9E24~                EXCEPT(g_geti,getin)                    ;Receive Initials from Alpha  
1765   9E24             
1766   9E24                 \ \tmpptr .set *\.export g_sendh\g_sendh = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word sendhs-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                   ;Send High Scores to Alpha
1766   9E24             
1766   9E24             
1766   9E24             
1766   9E24             
1766   8B7C             
1766   8B7C FF          
1766   8B7D             
1766   9E24             
1766   9E24~                EXCEPT(g_sendh,sendhs)                  ;Send High Scores to Alpha
1766   9E24~                EXCEPT(g_sendh,sendhs)                  ;Send High Scores to Alpha
1766   9E24             
1766   9E24             
1766   9E24             
1766   8C29             
1766   8C29 FF          
1766   8C2A             
1766   9E24             
1766   9E24~                EXCEPT(g_sendh,sendhs)                  ;Send High Scores to Alpha
1766   9E24~                EXCEPT(g_sendh,sendhs)                  ;Send High Scores to Alpha
1766   9E24             
1766   9E24             
1766   9E24             
1766   8FE6             
1766   8FE6 02          
1766   8FE7             
1766   9E24             
1766   9E24~                EXCEPT(g_sendh,sendhs)                  ;Send High Scores to Alpha
1766   9E24~                EXCEPT(g_sendh,sendhs)                  ;Send High Scores to Alpha
1766   9E24             
1766   9E24             
1766   9E24             
1766   93F4             
1766   93F4 D8 9C       
1766   93F6             
1766   9E24             
1766   9E24~                EXCEPT(g_sendh,sendhs)                  ;Send High Scores to Alpha
1766   9E24~                EXCEPT(g_sendh,sendhs)                  ;Send High Scores to Alpha
1766   9E24             
1767   9E24                 \ \tmpptr .set *\.export g_sendi\g_sendi = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word sendinit-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                 ;Send Initials to Alpha    	
1767   9E24             
1767   9E24             
1767   9E24             
1767   9E24             
1767   8B7D             
1767   8B7D FF          
1767   8B7E             
1767   9E24             
1767   9E24~                EXCEPT(g_sendi,sendinit)                ;Send Initials to Alpha    	
1767   9E24~                EXCEPT(g_sendi,sendinit)                ;Send Initials to Alpha    	
1767   9E24             
1767   9E24             
1767   9E24             
1767   8C2A             
1767   8C2A FF          
1767   8C2B             
1767   9E24             
1767   9E24~                EXCEPT(g_sendi,sendinit)                ;Send Initials to Alpha    	
1767   9E24~                EXCEPT(g_sendi,sendinit)                ;Send Initials to Alpha    	
1767   9E24             
1767   9E24             
1767   9E24             
1767   8FE7             
1767   8FE7 03          
1767   8FE8             
1767   9E24             
1767   9E24~                EXCEPT(g_sendi,sendinit)                ;Send Initials to Alpha    	
1767   9E24~                EXCEPT(g_sendi,sendinit)                ;Send Initials to Alpha    	
1767   9E24             
1767   9E24             
1767   9E24             
1767   93F6             
1767   93F6 E1 9C       
1767   93F8             
1767   9E24             
1767   9E24~                EXCEPT(g_sendi,sendinit)                ;Send Initials to Alpha    	
1767   9E24~                EXCEPT(g_sendi,sendinit)                ;Send Initials to Alpha    	
1767   9E24             
1768   9E24             	\ \tmpptr .set *\.export g_gstamz\g_gstamz = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getstamz-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                ;Receive Maze Level Status Info   
1768   9E24             
1768   9E24             
1768   9E24             
1768   9E24             
1768   8B7E             
1768   8B7E FF          
1768   8B7F             
1768   9E24             
1768   9E24~            	EXCEPT(g_gstamz,getstamz)               ;Receive Maze Level Status Info   
1768   9E24~            	EXCEPT(g_gstamz,getstamz)               ;Receive Maze Level Status Info   
1768   9E24             
1768   9E24             
1768   9E24             
1768   8C2B             
1768   8C2B FF          
1768   8C2C             
1768   9E24             
1768   9E24~            	EXCEPT(g_gstamz,getstamz)               ;Receive Maze Level Status Info   
1768   9E24~            	EXCEPT(g_gstamz,getstamz)               ;Receive Maze Level Status Info   
1768   9E24             
1768   9E24             
1768   9E24             
1768   8FE8             
1768   8FE8 04          
1768   8FE9             
1768   9E24             
1768   9E24~            	EXCEPT(g_gstamz,getstamz)               ;Receive Maze Level Status Info   
1768   9E24~            	EXCEPT(g_gstamz,getstamz)               ;Receive Maze Level Status Info   
1768   9E24             
1768   9E24             
1768   9E24             
1768   93F8             
1768   93F8 97 9C       
1768   93FA             
1768   9E24             
1768   9E24~            	EXCEPT(g_gstamz,getstamz)               ;Receive Maze Level Status Info   
1768   9E24~            	EXCEPT(g_gstamz,getstamz)               ;Receive Maze Level Status Info   
1768   9E24             
1769   9E24             	\ \tmpptr .set *\.export g_sstap\g_sstap = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word sendstap-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                 ;Send Player Game Status Info  
1769   9E24             
1769   9E24             
1769   9E24             
1769   9E24             
1769   8B7F             
1769   8B7F FF          
1769   8B80             
1769   9E24             
1769   9E24~            	EXCEPT(g_sstap,sendstap)                ;Send Player Game Status Info  
1769   9E24~            	EXCEPT(g_sstap,sendstap)                ;Send Player Game Status Info  
1769   9E24             
1769   9E24             
1769   9E24             
1769   8C2C             
1769   8C2C FF          
1769   8C2D             
1769   9E24             
1769   9E24~            	EXCEPT(g_sstap,sendstap)                ;Send Player Game Status Info  
1769   9E24~            	EXCEPT(g_sstap,sendstap)                ;Send Player Game Status Info  
1769   9E24             
1769   9E24             
1769   9E24             
1769   8FE9             
1769   8FE9 05          
1769   8FEA             
1769   9E24             
1769   9E24~            	EXCEPT(g_sstap,sendstap)                ;Send Player Game Status Info  
1769   9E24~            	EXCEPT(g_sstap,sendstap)                ;Send Player Game Status Info  
1769   9E24             
1769   9E24             
1769   9E24             
1769   93FA             
1769   93FA F3 9C       
1769   93FC             
1769   9E24             
1769   9E24~            	EXCEPT(g_sstap,sendstap)                ;Send Player Game Status Info  
1769   9E24~            	EXCEPT(g_sstap,sendstap)                ;Send Player Game Status Info  
1769   9E24             
1770   9E24                 \ \tmpptr .set *\.export g_ctrl\g_ctrl = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word rolgig-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 					;Get current Roller position
1770   9E24             
1770   9E24             
1770   9E24             
1770   9E24             
1770   8B80             
1770   8B80 FF          
1770   8B81             
1770   9E24             
1770   9E24~                EXCEPT(g_ctrl,rolgig)					;Get current Roller position
1770   9E24~                EXCEPT(g_ctrl,rolgig)					;Get current Roller position
1770   9E24             
1770   9E24             
1770   9E24             
1770   8C2D             
1770   8C2D FF          
1770   8C2E             
1770   9E24             
1770   9E24~                EXCEPT(g_ctrl,rolgig)					;Get current Roller position
1770   9E24~                EXCEPT(g_ctrl,rolgig)					;Get current Roller position
1770   9E24             
1770   9E24             
1770   9E24             
1770   8FEA             
1770   8FEA 06          
1770   8FEB             
1770   9E24             
1770   9E24~                EXCEPT(g_ctrl,rolgig)					;Get current Roller position
1770   9E24~                EXCEPT(g_ctrl,rolgig)					;Get current Roller position
1770   9E24             
1770   9E24             
1770   9E24             
1770   93FC             
1770   93FC 7F 99       
1770   93FE             
1770   9E24             
1770   9E24~                EXCEPT(g_ctrl,rolgig)					;Get current Roller position
1770   9E24~                EXCEPT(g_ctrl,rolgig)					;Get current Roller position
1770   9E24             
1771   9E24                 \ \tmpptr .set *\.export g_rand\g_rand = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word pokran-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 					;Get a Random number from the Pokeys
1771   9E24             
1771   9E24             
1771   9E24             
1771   9E24             
1771   8B81             
1771   8B81 FF          
1771   8B82             
1771   9E24             
1771   9E24~                EXCEPT(g_rand,pokran)					;Get a Random number from the Pokeys
1771   9E24~                EXCEPT(g_rand,pokran)					;Get a Random number from the Pokeys
1771   9E24             
1771   9E24             
1771   9E24             
1771   8C2E             
1771   8C2E FF          
1771   8C2F             
1771   9E24             
1771   9E24~                EXCEPT(g_rand,pokran)					;Get a Random number from the Pokeys
1771   9E24~                EXCEPT(g_rand,pokran)					;Get a Random number from the Pokeys
1771   9E24             
1771   9E24             
1771   9E24             
1771   8FEB             
1771   8FEB 07          
1771   8FEC             
1771   9E24             
1771   9E24~                EXCEPT(g_rand,pokran)					;Get a Random number from the Pokeys
1771   9E24~                EXCEPT(g_rand,pokran)					;Get a Random number from the Pokeys
1771   9E24             
1771   9E24             
1771   9E24             
1771   93FE             
1771   93FE 6C 99       
1771   9400             
1771   9E24             
1771   9E24~                EXCEPT(g_rand,pokran)					;Get a Random number from the Pokeys
1771   9E24~                EXCEPT(g_rand,pokran)					;Get a Random number from the Pokeys
1771   9E24             
1772   9E24                 \ \tmpptr .set *\.export g_swtc\g_swtc = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word switch-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 					;Get the GAMMA input Switch values
1772   9E24             
1772   9E24             
1772   9E24             
1772   9E24             
1772   8B82             
1772   8B82 FF          
1772   8B83             
1772   9E24             
1772   9E24~                EXCEPT(g_swtc,switch)					;Get the GAMMA input Switch values
1772   9E24~                EXCEPT(g_swtc,switch)					;Get the GAMMA input Switch values
1772   9E24             
1772   9E24             
1772   9E24             
1772   8C2F             
1772   8C2F FF          
1772   8C30             
1772   9E24             
1772   9E24~                EXCEPT(g_swtc,switch)					;Get the GAMMA input Switch values
1772   9E24~                EXCEPT(g_swtc,switch)					;Get the GAMMA input Switch values
1772   9E24             
1772   9E24             
1772   9E24             
1772   8FEC             
1772   8FEC 08          
1772   8FED             
1772   9E24             
1772   9E24~                EXCEPT(g_swtc,switch)					;Get the GAMMA input Switch values
1772   9E24~                EXCEPT(g_swtc,switch)					;Get the GAMMA input Switch values
1772   9E24             
1772   9E24             
1772   9E24             
1772   9400             
1772   9400 72 99       
1772   9402             
1772   9E24             
1772   9E24~                EXCEPT(g_swtc,switch)					;Get the GAMMA input Switch values
1772   9E24~                EXCEPT(g_swtc,switch)					;Get the GAMMA input Switch values
1772   9E24             
1773   9E24             	\ \tmpptr .set *\.export g_getdip0\g_getdip0 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getdip0-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Get direct Option Switch 0 @ 13/14S
1773   9E24             
1773   9E24             
1773   9E24             
1773   9E24             
1773   8B83             
1773   8B83 FF          
1773   8B84             
1773   9E24             
1773   9E24~            	EXCEPT(g_getdip0,getdip0)				;Get direct Option Switch 0 @ 13/14S
1773   9E24~            	EXCEPT(g_getdip0,getdip0)				;Get direct Option Switch 0 @ 13/14S
1773   9E24             
1773   9E24             
1773   9E24             
1773   8C30             
1773   8C30 FF          
1773   8C31             
1773   9E24             
1773   9E24~            	EXCEPT(g_getdip0,getdip0)				;Get direct Option Switch 0 @ 13/14S
1773   9E24~            	EXCEPT(g_getdip0,getdip0)				;Get direct Option Switch 0 @ 13/14S
1773   9E24             
1773   9E24             
1773   9E24             
1773   8FED             
1773   8FED 09          
1773   8FEE             
1773   9E24             
1773   9E24~            	EXCEPT(g_getdip0,getdip0)				;Get direct Option Switch 0 @ 13/14S
1773   9E24~            	EXCEPT(g_getdip0,getdip0)				;Get direct Option Switch 0 @ 13/14S
1773   9E24             
1773   9E24             
1773   9E24             
1773   9402             
1773   9402 22 99       
1773   9404             
1773   9E24             
1773   9E24~            	EXCEPT(g_getdip0,getdip0)				;Get direct Option Switch 0 @ 13/14S
1773   9E24~            	EXCEPT(g_getdip0,getdip0)				;Get direct Option Switch 0 @ 13/14S
1773   9E24             
1774   9E24                 \ \tmpptr .set *\.export g_getdip1\g_getdip1 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getdip1-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Get direct Option Switch 1 @ 8S
1774   9E24             
1774   9E24             
1774   9E24             
1774   9E24             
1774   8B84             
1774   8B84 FF          
1774   8B85             
1774   9E24             
1774   9E24~                EXCEPT(g_getdip1,getdip1)				;Get direct Option Switch 1 @ 8S
1774   9E24~                EXCEPT(g_getdip1,getdip1)				;Get direct Option Switch 1 @ 8S
1774   9E24             
1774   9E24             
1774   9E24             
1774   8C31             
1774   8C31 FF          
1774   8C32             
1774   9E24             
1774   9E24~                EXCEPT(g_getdip1,getdip1)				;Get direct Option Switch 1 @ 8S
1774   9E24~                EXCEPT(g_getdip1,getdip1)				;Get direct Option Switch 1 @ 8S
1774   9E24             
1774   9E24             
1774   9E24             
1774   8FEE             
1774   8FEE 0A          
1774   8FEF             
1774   9E24             
1774   9E24~                EXCEPT(g_getdip1,getdip1)				;Get direct Option Switch 1 @ 8S
1774   9E24~                EXCEPT(g_getdip1,getdip1)				;Get direct Option Switch 1 @ 8S
1774   9E24             
1774   9E24             
1774   9E24             
1774   9404             
1774   9404 2E 99       
1774   9406             
1774   9E24             
1774   9E24~                EXCEPT(g_getdip1,getdip1)				;Get direct Option Switch 1 @ 8S
1774   9E24~                EXCEPT(g_getdip1,getdip1)				;Get direct Option Switch 1 @ 8S
1774   9E24             
1775   9E24                 \ \tmpptr .set *\.export g_getset0\g_getset0 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getset0-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24             
1775   9E24             
1775   9E24             
1775   9E24             
1775   8B85             
1775   8B85 FF          
1775   8B86             
1775   9E24             
1775   9E24~                EXCEPT(g_getset0,getset0)				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24~                EXCEPT(g_getset0,getset0)				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24             
1775   9E24             
1775   9E24             
1775   8C32             
1775   8C32 FF          
1775   8C33             
1775   9E24             
1775   9E24~                EXCEPT(g_getset0,getset0)				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24~                EXCEPT(g_getset0,getset0)				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24             
1775   9E24             
1775   9E24             
1775   8FEF             
1775   8FEF 0B          
1775   8FF0             
1775   9E24             
1775   9E24~                EXCEPT(g_getset0,getset0)				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24~                EXCEPT(g_getset0,getset0)				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24             
1775   9E24             
1775   9E24             
1775   9406             
1775   9406 34 99       
1775   9408             
1775   9E24             
1775   9E24~                EXCEPT(g_getset0,getset0)				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24~                EXCEPT(g_getset0,getset0)				;Get current settings originally stored in Option Switch 0 @ 13/14S
1775   9E24             
1776   9E24                 \ \tmpptr .set *\.export g_getset1\g_getset1 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getset1-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24             
1776   9E24             
1776   9E24             
1776   9E24             
1776   8B86             
1776   8B86 FF          
1776   8B87             
1776   9E24             
1776   9E24~                EXCEPT(g_getset1,getset1)				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24~                EXCEPT(g_getset1,getset1)				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24             
1776   9E24             
1776   9E24             
1776   8C33             
1776   8C33 FF          
1776   8C34             
1776   9E24             
1776   9E24~                EXCEPT(g_getset1,getset1)				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24~                EXCEPT(g_getset1,getset1)				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24             
1776   9E24             
1776   9E24             
1776   8FF0             
1776   8FF0 0C          
1776   8FF1             
1776   9E24             
1776   9E24~                EXCEPT(g_getset1,getset1)				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24~                EXCEPT(g_getset1,getset1)				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24             
1776   9E24             
1776   9E24             
1776   9408             
1776   9408 3A 99       
1776   940A             
1776   9E24             
1776   9E24~                EXCEPT(g_getset1,getset1)				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24~                EXCEPT(g_getset1,getset1)				;Get current settings originally stored in Option Switch 1 @ 8S
1776   9E24             
1777   9E24                 \ \tmpptr .set *\.export g_eeflgs\g_eeflgs = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word geteeflgs-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Get EEROM Bad Flags
1777   9E24             
1777   9E24             
1777   9E24             
1777   9E24             
1777   8B87             
1777   8B87 FF          
1777   8B88             
1777   9E24             
1777   9E24~                EXCEPT(g_eeflgs,geteeflgs)				;Get EEROM Bad Flags
1777   9E24~                EXCEPT(g_eeflgs,geteeflgs)				;Get EEROM Bad Flags
1777   9E24             
1777   9E24             
1777   9E24             
1777   8C34             
1777   8C34 FF          
1777   8C35             
1777   9E24             
1777   9E24~                EXCEPT(g_eeflgs,geteeflgs)				;Get EEROM Bad Flags
1777   9E24~                EXCEPT(g_eeflgs,geteeflgs)				;Get EEROM Bad Flags
1777   9E24             
1777   9E24             
1777   9E24             
1777   8FF1             
1777   8FF1 0D          
1777   8FF2             
1777   9E24             
1777   9E24~                EXCEPT(g_eeflgs,geteeflgs)				;Get EEROM Bad Flags
1777   9E24~                EXCEPT(g_eeflgs,geteeflgs)				;Get EEROM Bad Flags
1777   9E24             
1777   9E24             
1777   9E24             
1777   940A             
1777   940A 62 99       
1777   940C             
1777   9E24             
1777   9E24~                EXCEPT(g_eeflgs,geteeflgs)				;Get EEROM Bad Flags
1777   9E24~                EXCEPT(g_eeflgs,geteeflgs)				;Get EEROM Bad Flags
1777   9E24             
1778   9E24             	\ \tmpptr .set *\.export g_eedone\g_eedone = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word geteedone-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Get EEROM Requests 
1778   9E24             
1778   9E24             
1778   9E24             
1778   9E24             
1778   8B88             
1778   8B88 FF          
1778   8B89             
1778   9E24             
1778   9E24~            	EXCEPT(g_eedone,geteedone)				;Get EEROM Requests 
1778   9E24~            	EXCEPT(g_eedone,geteedone)				;Get EEROM Requests 
1778   9E24             
1778   9E24             
1778   9E24             
1778   8C35             
1778   8C35 FF          
1778   8C36             
1778   9E24             
1778   9E24~            	EXCEPT(g_eedone,geteedone)				;Get EEROM Requests 
1778   9E24~            	EXCEPT(g_eedone,geteedone)				;Get EEROM Requests 
1778   9E24             
1778   9E24             
1778   9E24             
1778   8FF2             
1778   8FF2 0E          
1778   8FF3             
1778   9E24             
1778   9E24~            	EXCEPT(g_eedone,geteedone)				;Get EEROM Requests 
1778   9E24~            	EXCEPT(g_eedone,geteedone)				;Get EEROM Requests 
1778   9E24             
1778   9E24             
1778   9E24             
1778   940C             
1778   940C 67 99       
1778   940E             
1778   9E24             
1778   9E24~            	EXCEPT(g_eedone,geteedone)				;Get EEROM Requests 
1778   9E24~            	EXCEPT(g_eedone,geteedone)				;Get EEROM Requests 
1778   9E24             
1779   9E24             	\ \tmpptr .set *\.export g_cn1\g_cn1 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word coin1-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                      ;Pulse Coin 1
1779   9E24             
1779   9E24             
1779   9E24             
1779   9E24             
1779   8B89             
1779   8B89 FF          
1779   8B8A             
1779   9E24             
1779   9E24~            	EXCEPT(g_cn1,coin1)                     ;Pulse Coin 1
1779   9E24~            	EXCEPT(g_cn1,coin1)                     ;Pulse Coin 1
1779   9E24             
1779   9E24             
1779   9E24             
1779   8C36             
1779   8C36 FF          
1779   8C37             
1779   9E24             
1779   9E24~            	EXCEPT(g_cn1,coin1)                     ;Pulse Coin 1
1779   9E24~            	EXCEPT(g_cn1,coin1)                     ;Pulse Coin 1
1779   9E24             
1779   9E24             
1779   9E24             
1779   8FF3             
1779   8FF3 0F          
1779   8FF4             
1779   9E24             
1779   9E24~            	EXCEPT(g_cn1,coin1)                     ;Pulse Coin 1
1779   9E24~            	EXCEPT(g_cn1,coin1)                     ;Pulse Coin 1
1779   9E24             
1779   9E24             
1779   9E24             
1779   940E             
1779   940E 9C 98       
1779   9410             
1779   9E24             
1779   9E24~            	EXCEPT(g_cn1,coin1)                     ;Pulse Coin 1
1779   9E24~            	EXCEPT(g_cn1,coin1)                     ;Pulse Coin 1
1779   9E24             
1780   9E24                 \ \tmpptr .set *\.export g_cn2\g_cn2 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word coin2-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                      ;Pulse Coin 2
1780   9E24             
1780   9E24             
1780   9E24             
1780   9E24             
1780   8B8A             
1780   8B8A FF          
1780   8B8B             
1780   9E24             
1780   9E24~                EXCEPT(g_cn2,coin2)                     ;Pulse Coin 2
1780   9E24~                EXCEPT(g_cn2,coin2)                     ;Pulse Coin 2
1780   9E24             
1780   9E24             
1780   9E24             
1780   8C37             
1780   8C37 FF          
1780   8C38             
1780   9E24             
1780   9E24~                EXCEPT(g_cn2,coin2)                     ;Pulse Coin 2
1780   9E24~                EXCEPT(g_cn2,coin2)                     ;Pulse Coin 2
1780   9E24             
1780   9E24             
1780   9E24             
1780   8FF4             
1780   8FF4 10          
1780   8FF5             
1780   9E24             
1780   9E24~                EXCEPT(g_cn2,coin2)                     ;Pulse Coin 2
1780   9E24~                EXCEPT(g_cn2,coin2)                     ;Pulse Coin 2
1780   9E24             
1780   9E24             
1780   9E24             
1780   9410             
1780   9410 A1 98       
1780   9412             
1780   9E24             
1780   9E24~                EXCEPT(g_cn2,coin2)                     ;Pulse Coin 2
1780   9E24~                EXCEPT(g_cn2,coin2)                     ;Pulse Coin 2
1780   9E24             
1781   9E24             	\ \tmpptr .set *\.export g_clro\g_clro = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word resetop-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                   ;Clear Options to DIP Settings
1781   9E24             
1781   9E24             
1781   9E24             
1781   9E24             
1781   8B8B             
1781   8B8B FF          
1781   8B8C             
1781   9E24             
1781   9E24~            	EXCEPT(g_clro,resetop)                  ;Clear Options to DIP Settings
1781   9E24~            	EXCEPT(g_clro,resetop)                  ;Clear Options to DIP Settings
1781   9E24             
1781   9E24             
1781   9E24             
1781   8C38             
1781   8C38 FF          
1781   8C39             
1781   9E24             
1781   9E24~            	EXCEPT(g_clro,resetop)                  ;Clear Options to DIP Settings
1781   9E24~            	EXCEPT(g_clro,resetop)                  ;Clear Options to DIP Settings
1781   9E24             
1781   9E24             
1781   9E24             
1781   8FF5             
1781   8FF5 11          
1781   8FF6             
1781   9E24             
1781   9E24~            	EXCEPT(g_clro,resetop)                  ;Clear Options to DIP Settings
1781   9E24~            	EXCEPT(g_clro,resetop)                  ;Clear Options to DIP Settings
1781   9E24             
1781   9E24             
1781   9E24             
1781   9412             
1781   9412 B2 98       
1781   9414             
1781   9E24             
1781   9E24~            	EXCEPT(g_clro,resetop)                  ;Clear Options to DIP Settings
1781   9E24~            	EXCEPT(g_clro,resetop)                  ;Clear Options to DIP Settings
1781   9E24             
1782   9E24                 \ \tmpptr .set *\.export g_sstawx\g_sstawx = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word sendstawx-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF               ;Send Extra Life and Warp Status Info         
1782   9E24             
1782   9E24             
1782   9E24             
1782   9E24             
1782   8B8C             
1782   8B8C FF          
1782   8B8D             
1782   9E24             
1782   9E24~                EXCEPT(g_sstawx,sendstawx)              ;Send Extra Life and Warp Status Info         
1782   9E24~                EXCEPT(g_sstawx,sendstawx)              ;Send Extra Life and Warp Status Info         
1782   9E24             
1782   9E24             
1782   9E24             
1782   8C39             
1782   8C39 FF          
1782   8C3A             
1782   9E24             
1782   9E24~                EXCEPT(g_sstawx,sendstawx)              ;Send Extra Life and Warp Status Info         
1782   9E24~                EXCEPT(g_sstawx,sendstawx)              ;Send Extra Life and Warp Status Info         
1782   9E24             
1782   9E24             
1782   9E24             
1782   8FF6             
1782   8FF6 12          
1782   8FF7             
1782   9E24             
1782   9E24~                EXCEPT(g_sstawx,sendstawx)              ;Send Extra Life and Warp Status Info         
1782   9E24~                EXCEPT(g_sstawx,sendstawx)              ;Send Extra Life and Warp Status Info         
1782   9E24             
1782   9E24             
1782   9E24             
1782   9414             
1782   9414 FC 9C       
1782   9416             
1782   9E24             
1782   9E24~                EXCEPT(g_sstawx,sendstawx)              ;Send Extra Life and Warp Status Info         
1782   9E24~                EXCEPT(g_sstawx,sendstawx)              ;Send Extra Life and Warp Status Info         
1782   9E24             
1783   9E24                 \ \tmpptr .set *\.export g_sstamz\g_sstamz = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word sendstamz-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF               ;Send Maze Level Status Info 
1783   9E24             
1783   9E24             
1783   9E24             
1783   9E24             
1783   8B8D             
1783   8B8D FF          
1783   8B8E             
1783   9E24             
1783   9E24~                EXCEPT(g_sstamz,sendstamz)              ;Send Maze Level Status Info 
1783   9E24~                EXCEPT(g_sstamz,sendstamz)              ;Send Maze Level Status Info 
1783   9E24             
1783   9E24             
1783   9E24             
1783   8C3A             
1783   8C3A FF          
1783   8C3B             
1783   9E24             
1783   9E24~                EXCEPT(g_sstamz,sendstamz)              ;Send Maze Level Status Info 
1783   9E24~                EXCEPT(g_sstamz,sendstamz)              ;Send Maze Level Status Info 
1783   9E24             
1783   9E24             
1783   9E24             
1783   8FF7             
1783   8FF7 13          
1783   8FF8             
1783   9E24             
1783   9E24~                EXCEPT(g_sstamz,sendstamz)              ;Send Maze Level Status Info 
1783   9E24~                EXCEPT(g_sstamz,sendstamz)              ;Send Maze Level Status Info 
1783   9E24             
1783   9E24             
1783   9E24             
1783   9416             
1783   9416 05 9D       
1783   9418             
1783   9E24             
1783   9E24~                EXCEPT(g_sstamz,sendstamz)              ;Send Maze Level Status Info 
1783   9E24~                EXCEPT(g_sstamz,sendstamz)              ;Send Maze Level Status Info 
1783   9E24             
1784   9E24                 \ \tmpptr .set *\.export g_swarps\g_swarps = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word sendwarps-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF               ;Send All Warp Data Info
1784   9E24             
1784   9E24             
1784   9E24             
1784   9E24             
1784   8B8E             
1784   8B8E FF          
1784   8B8F             
1784   9E24             
1784   9E24~                EXCEPT(g_swarps,sendwarps)              ;Send All Warp Data Info
1784   9E24~                EXCEPT(g_swarps,sendwarps)              ;Send All Warp Data Info
1784   9E24             
1784   9E24             
1784   9E24             
1784   8C3B             
1784   8C3B FF          
1784   8C3C             
1784   9E24             
1784   9E24~                EXCEPT(g_swarps,sendwarps)              ;Send All Warp Data Info
1784   9E24~                EXCEPT(g_swarps,sendwarps)              ;Send All Warp Data Info
1784   9E24             
1784   9E24             
1784   9E24             
1784   8FF8             
1784   8FF8 14          
1784   8FF9             
1784   9E24             
1784   9E24~                EXCEPT(g_swarps,sendwarps)              ;Send All Warp Data Info
1784   9E24~                EXCEPT(g_swarps,sendwarps)              ;Send All Warp Data Info
1784   9E24             
1784   9E24             
1784   9E24             
1784   9418             
1784   9418 0E 9D       
1784   941A             
1784   9E24             
1784   9E24~                EXCEPT(g_swarps,sendwarps)              ;Send All Warp Data Info
1784   9E24~                EXCEPT(g_swarps,sendwarps)              ;Send All Warp Data Info
1784   9E24             
1785   9E24                 \ \tmpptr .set *\.export g_gwarp\g_gwarp = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getwarp-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                  ;Send specified warp level data back
1785   9E24             
1785   9E24             
1785   9E24             
1785   9E24             
1785   8B8F             
1785   8B8F FF          
1785   8B90             
1785   9E24             
1785   9E24~                EXCEPT(g_gwarp,getwarp)                 ;Send specified warp level data back
1785   9E24~                EXCEPT(g_gwarp,getwarp)                 ;Send specified warp level data back
1785   9E24             
1785   9E24             
1785   9E24             
1785   8C3C             
1785   8C3C FF          
1785   8C3D             
1785   9E24             
1785   9E24~                EXCEPT(g_gwarp,getwarp)                 ;Send specified warp level data back
1785   9E24~                EXCEPT(g_gwarp,getwarp)                 ;Send specified warp level data back
1785   9E24             
1785   9E24             
1785   9E24             
1785   8FF9             
1785   8FF9 15          
1785   8FFA             
1785   9E24             
1785   9E24~                EXCEPT(g_gwarp,getwarp)                 ;Send specified warp level data back
1785   9E24~                EXCEPT(g_gwarp,getwarp)                 ;Send specified warp level data back
1785   9E24             
1785   9E24             
1785   9E24             
1785   941A             
1785   941A 17 9D       
1785   941C             
1785   9E24             
1785   9E24~                EXCEPT(g_gwarp,getwarp)                 ;Send specified warp level data back
1785   9E24~                EXCEPT(g_gwarp,getwarp)                 ;Send specified warp level data back
1785   9E24             
1786   9E24             	\ \tmpptr .set *\.export g_gstap\g_gstap = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getstap-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                  ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24             
1786   9E24             
1786   9E24             
1786   9E24             
1786   8B90             
1786   8B90 FF          
1786   8B91             
1786   9E24             
1786   9E24~            	EXCEPT(g_gstap,getstap)                 ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24~            	EXCEPT(g_gstap,getstap)                 ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24             
1786   9E24             
1786   9E24             
1786   8C3D             
1786   8C3D FF          
1786   8C3E             
1786   9E24             
1786   9E24~            	EXCEPT(g_gstap,getstap)                 ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24~            	EXCEPT(g_gstap,getstap)                 ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24             
1786   9E24             
1786   9E24             
1786   8FFA             
1786   8FFA 16          
1786   8FFB             
1786   9E24             
1786   9E24~            	EXCEPT(g_gstap,getstap)                 ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24~            	EXCEPT(g_gstap,getstap)                 ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24             
1786   9E24             
1786   9E24             
1786   941C             
1786   941C C6 9B       
1786   941E             
1786   9E24             
1786   9E24~            	EXCEPT(g_gstap,getstap)                 ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24~            	EXCEPT(g_gstap,getstap)                 ;Receive Player Game Info (1P Game Count, 2P Game Count, 1P Game Time, 2P Game Time)  
1786   9E24             
1787   9E24                 \ \tmpptr .set *\.export g_gstawx\g_gstawx = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word getstawx-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                ;Receive Warp and Extra Life Status Info 
1787   9E24             
1787   9E24             
1787   9E24             
1787   9E24             
1787   8B91             
1787   8B91 FF          
1787   8B92             
1787   9E24             
1787   9E24~                EXCEPT(g_gstawx,getstawx)               ;Receive Warp and Extra Life Status Info 
1787   9E24~                EXCEPT(g_gstawx,getstawx)               ;Receive Warp and Extra Life Status Info 
1787   9E24             
1787   9E24             
1787   9E24             
1787   8C3E             
1787   8C3E FF          
1787   8C3F             
1787   9E24             
1787   9E24~                EXCEPT(g_gstawx,getstawx)               ;Receive Warp and Extra Life Status Info 
1787   9E24~                EXCEPT(g_gstawx,getstawx)               ;Receive Warp and Extra Life Status Info 
1787   9E24             
1787   9E24             
1787   9E24             
1787   8FFB             
1787   8FFB 17          
1787   8FFC             
1787   9E24             
1787   9E24~                EXCEPT(g_gstawx,getstawx)               ;Receive Warp and Extra Life Status Info 
1787   9E24~                EXCEPT(g_gstawx,getstawx)               ;Receive Warp and Extra Life Status Info 
1787   9E24             
1787   9E24             
1787   9E24             
1787   941E             
1787   941E 4B 9C       
1787   9420             
1787   9E24             
1787   9E24~                EXCEPT(g_gstawx,getstawx)               ;Receive Warp and Extra Life Status Info 
1787   9E24~                EXCEPT(g_gstawx,getstawx)               ;Receive Warp and Extra Life Status Info 
1787   9E24             
1788   9E24             	\ \tmpptr .set *\.export g_setopt0\g_setopt0 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word setopt0-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Set Settings Switch 0 Values
1788   9E24             
1788   9E24             
1788   9E24             
1788   9E24             
1788   8B92             
1788   8B92 FF          
1788   8B93             
1788   9E24             
1788   9E24~            	EXCEPT(g_setopt0,setopt0)				;Set Settings Switch 0 Values
1788   9E24~            	EXCEPT(g_setopt0,setopt0)				;Set Settings Switch 0 Values
1788   9E24             
1788   9E24             
1788   9E24             
1788   8C3F             
1788   8C3F FF          
1788   8C40             
1788   9E24             
1788   9E24~            	EXCEPT(g_setopt0,setopt0)				;Set Settings Switch 0 Values
1788   9E24~            	EXCEPT(g_setopt0,setopt0)				;Set Settings Switch 0 Values
1788   9E24             
1788   9E24             
1788   9E24             
1788   8FFC             
1788   8FFC 18          
1788   8FFD             
1788   9E24             
1788   9E24~            	EXCEPT(g_setopt0,setopt0)				;Set Settings Switch 0 Values
1788   9E24~            	EXCEPT(g_setopt0,setopt0)				;Set Settings Switch 0 Values
1788   9E24             
1788   9E24             
1788   9E24             
1788   9420             
1788   9420 40 99       
1788   9422             
1788   9E24             
1788   9E24~            	EXCEPT(g_setopt0,setopt0)				;Set Settings Switch 0 Values
1788   9E24~            	EXCEPT(g_setopt0,setopt0)				;Set Settings Switch 0 Values
1788   9E24             
1789   9E24                 \ \tmpptr .set *\.export g_setopt1\g_setopt1 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word setopt1-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Set Settings Switch 1 Values
1789   9E24             
1789   9E24             
1789   9E24             
1789   9E24             
1789   8B93             
1789   8B93 FF          
1789   8B94             
1789   9E24             
1789   9E24~                EXCEPT(g_setopt1,setopt1)				;Set Settings Switch 1 Values
1789   9E24~                EXCEPT(g_setopt1,setopt1)				;Set Settings Switch 1 Values
1789   9E24             
1789   9E24             
1789   9E24             
1789   8C40             
1789   8C40 FF          
1789   8C41             
1789   9E24             
1789   9E24~                EXCEPT(g_setopt1,setopt1)				;Set Settings Switch 1 Values
1789   9E24~                EXCEPT(g_setopt1,setopt1)				;Set Settings Switch 1 Values
1789   9E24             
1789   9E24             
1789   9E24             
1789   8FFD             
1789   8FFD 19          
1789   8FFE             
1789   9E24             
1789   9E24~                EXCEPT(g_setopt1,setopt1)				;Set Settings Switch 1 Values
1789   9E24~                EXCEPT(g_setopt1,setopt1)				;Set Settings Switch 1 Values
1789   9E24             
1789   9E24             
1789   9E24             
1789   9422             
1789   9422 51 99       
1789   9424             
1789   9E24             
1789   9E24~                EXCEPT(g_setopt1,setopt1)				;Set Settings Switch 1 Values
1789   9E24~                EXCEPT(g_setopt1,setopt1)				;Set Settings Switch 1 Values
1789   9E24             
1790   9E24                 \ \tmpptr .set *\.export g_classwarp\g_classwarp = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word reswarps-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 			;Set warp numbers to classics
1790   9E24             
1790   9E24             
1790   9E24             
1790   9E24             
1790   8B94             
1790   8B94 FF          
1790   8B95             
1790   9E24             
1790   9E24~                EXCEPT(g_classwarp,reswarps)			;Set warp numbers to classics
1790   9E24~                EXCEPT(g_classwarp,reswarps)			;Set warp numbers to classics
1790   9E24             
1790   9E24             
1790   9E24             
1790   8C41             
1790   8C41 FF          
1790   8C42             
1790   9E24             
1790   9E24~                EXCEPT(g_classwarp,reswarps)			;Set warp numbers to classics
1790   9E24~                EXCEPT(g_classwarp,reswarps)			;Set warp numbers to classics
1790   9E24             
1790   9E24             
1790   9E24             
1790   8FFE             
1790   8FFE 1A          
1790   8FFF             
1790   9E24             
1790   9E24~                EXCEPT(g_classwarp,reswarps)			;Set warp numbers to classics
1790   9E24~                EXCEPT(g_classwarp,reswarps)			;Set warp numbers to classics
1790   9E24             
1790   9E24             
1790   9E24             
1790   9424             
1790   9424 B8 98       
1790   9426             
1790   9E24             
1790   9E24~                EXCEPT(g_classwarp,reswarps)			;Set warp numbers to classics
1790   9E24~                EXCEPT(g_classwarp,reswarps)			;Set warp numbers to classics
1790   9E24             
1791   9E24             	\ \tmpptr .set *\.export g_genwarp\g_genwarp = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word genwarps-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF 				;Re-generate all warps
1791   9E24             
1791   9E24             
1791   9E24             
1791   9E24             
1791   8B95             
1791   8B95 FF          
1791   8B96             
1791   9E24             
1791   9E24~            	EXCEPT(g_genwarp,genwarps)				;Re-generate all warps
1791   9E24~            	EXCEPT(g_genwarp,genwarps)				;Re-generate all warps
1791   9E24             
1791   9E24             
1791   9E24             
1791   8C42             
1791   8C42 FF          
1791   8C43             
1791   9E24             
1791   9E24~            	EXCEPT(g_genwarp,genwarps)				;Re-generate all warps
1791   9E24~            	EXCEPT(g_genwarp,genwarps)				;Re-generate all warps
1791   9E24             
1791   9E24             
1791   9E24             
1791   8FFF             
1791   8FFF 1B          
1791   9000             
1791   9E24             
1791   9E24~            	EXCEPT(g_genwarp,genwarps)				;Re-generate all warps
1791   9E24~            	EXCEPT(g_genwarp,genwarps)				;Re-generate all warps
1791   9E24             
1791   9E24             
1791   9E24             
1791   9426             
1791   9426 CF 98       
1791   9428             
1791   9E24             
1791   9E24~            	EXCEPT(g_genwarp,genwarps)				;Re-generate all warps
1791   9E24~            	EXCEPT(g_genwarp,genwarps)				;Re-generate all warps
1791   9E24             
1792   9E24             	;EXCEPT(g_clrwarp,clrwarps)				;Clear all warps (all blank and invisible)
1793   9E24             	\ \tmpptr .set *\.export g_getts\g_getts = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word gettes-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                   ;Receive Tesseracts from Alpha  
1793   9E24             
1793   9E24             
1793   9E24             
1793   9E24             
1793   8B96             
1793   8B96 FF          
1793   8B97             
1793   9E24             
1793   9E24~            	EXCEPT(g_getts,gettes)                  ;Receive Tesseracts from Alpha  
1793   9E24~            	EXCEPT(g_getts,gettes)                  ;Receive Tesseracts from Alpha  
1793   9E24             
1793   9E24             
1793   9E24             
1793   8C43             
1793   8C43 FF          
1793   8C44             
1793   9E24             
1793   9E24~            	EXCEPT(g_getts,gettes)                  ;Receive Tesseracts from Alpha  
1793   9E24~            	EXCEPT(g_getts,gettes)                  ;Receive Tesseracts from Alpha  
1793   9E24             
1793   9E24             
1793   9E24             
1793   9000             
1793   9000 1C          
1793   9001             
1793   9E24             
1793   9E24~            	EXCEPT(g_getts,gettes)                  ;Receive Tesseracts from Alpha  
1793   9E24~            	EXCEPT(g_getts,gettes)                  ;Receive Tesseracts from Alpha  
1793   9E24             
1793   9E24             
1793   9E24             
1793   9428             
1793   9428 AF 9B       
1793   942A             
1793   9E24             
1793   9E24~            	EXCEPT(g_getts,gettes)                  ;Receive Tesseracts from Alpha  
1793   9E24~            	EXCEPT(g_getts,gettes)                  ;Receive Tesseracts from Alpha  
1793   9E24             
1794   9E24             	\ \tmpptr .set *\.export g_sendtes\g_sendtes = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word sendtess-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF               ;Send Tesseracts to Alpha  
1794   9E24             
1794   9E24             
1794   9E24             
1794   9E24             
1794   8B97             
1794   8B97 FF          
1794   8B98             
1794   9E24             
1794   9E24~            	EXCEPT(g_sendtes,sendtess)              ;Send Tesseracts to Alpha  
1794   9E24~            	EXCEPT(g_sendtes,sendtess)              ;Send Tesseracts to Alpha  
1794   9E24             
1794   9E24             
1794   9E24             
1794   8C44             
1794   8C44 FF          
1794   8C45             
1794   9E24             
1794   9E24~            	EXCEPT(g_sendtes,sendtess)              ;Send Tesseracts to Alpha  
1794   9E24~            	EXCEPT(g_sendtes,sendtess)              ;Send Tesseracts to Alpha  
1794   9E24             
1794   9E24             
1794   9E24             
1794   9001             
1794   9001 1D          
1794   9002             
1794   9E24             
1794   9E24~            	EXCEPT(g_sendtes,sendtess)              ;Send Tesseracts to Alpha  
1794   9E24~            	EXCEPT(g_sendtes,sendtess)              ;Send Tesseracts to Alpha  
1794   9E24             
1794   9E24             
1794   9E24             
1794   942A             
1794   942A EA 9C       
1794   942C             
1794   9E24             
1794   9E24~            	EXCEPT(g_sendtes,sendtess)              ;Send Tesseracts to Alpha  
1794   9E24~            	EXCEPT(g_sendtes,sendtess)              ;Send Tesseracts to Alpha  
1794   9E24             
1795   9E24             	\ \tmpptr .set *\.export g_sendmaxsnd\g_sendmaxsnd = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word sendmaxsnd-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF          ;Set the Max background sound   
1795   9E24             
1795   9E24             
1795   9E24             
1795   9E24             
1795   8B98             
1795   8B98 FF          
1795   8B99             
1795   9E24             
1795   9E24~            	EXCEPT(g_sendmaxsnd,sendmaxsnd)         ;Set the Max background sound   
1795   9E24~            	EXCEPT(g_sendmaxsnd,sendmaxsnd)         ;Set the Max background sound   
1795   9E24             
1795   9E24             
1795   9E24             
1795   8C45             
1795   8C45 FF          
1795   8C46             
1795   9E24             
1795   9E24~            	EXCEPT(g_sendmaxsnd,sendmaxsnd)         ;Set the Max background sound   
1795   9E24~            	EXCEPT(g_sendmaxsnd,sendmaxsnd)         ;Set the Max background sound   
1795   9E24             
1795   9E24             
1795   9E24             
1795   9002             
1795   9002 1E          
1795   9003             
1795   9E24             
1795   9E24~            	EXCEPT(g_sendmaxsnd,sendmaxsnd)         ;Set the Max background sound   
1795   9E24~            	EXCEPT(g_sendmaxsnd,sendmaxsnd)         ;Set the Max background sound   
1795   9E24             
1795   9E24             
1795   9E24             
1795   942C             
1795   942C 04 99       
1795   942E             
1795   9E24             
1795   9E24~            	EXCEPT(g_sendmaxsnd,sendmaxsnd)         ;Set the Max background sound   
1795   9E24~            	EXCEPT(g_sendmaxsnd,sendmaxsnd)         ;Set the Max background sound   
1795   9E24             
1796   9E24             	\ \tmpptr .set *\.export g_setctrlp1\g_setctrlp1 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word setctrlp1-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF          	;Set the controls to Player 1 
1796   9E24             
1796   9E24             
1796   9E24             
1796   9E24             
1796   8B99             
1796   8B99 FF          
1796   8B9A             
1796   9E24             
1796   9E24~            	EXCEPT(g_setctrlp1,setctrlp1)         	;Set the controls to Player 1 
1796   9E24~            	EXCEPT(g_setctrlp1,setctrlp1)         	;Set the controls to Player 1 
1796   9E24             
1796   9E24             
1796   9E24             
1796   8C46             
1796   8C46 FF          
1796   8C47             
1796   9E24             
1796   9E24~            	EXCEPT(g_setctrlp1,setctrlp1)         	;Set the controls to Player 1 
1796   9E24~            	EXCEPT(g_setctrlp1,setctrlp1)         	;Set the controls to Player 1 
1796   9E24             
1796   9E24             
1796   9E24             
1796   9003             
1796   9003 1F          
1796   9004             
1796   9E24             
1796   9E24~            	EXCEPT(g_setctrlp1,setctrlp1)         	;Set the controls to Player 1 
1796   9E24~            	EXCEPT(g_setctrlp1,setctrlp1)         	;Set the controls to Player 1 
1796   9E24             
1796   9E24             
1796   9E24             
1796   942E             
1796   942E 12 99       
1796   9430             
1796   9E24             
1796   9E24~            	EXCEPT(g_setctrlp1,setctrlp1)         	;Set the controls to Player 1 
1796   9E24~            	EXCEPT(g_setctrlp1,setctrlp1)         	;Set the controls to Player 1 
1796   9E24             
1797   9E24             	\ \tmpptr .set *\.export g_setctrlp2\g_setctrlp2 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word setctrlp2-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF          	;Set the controls to Player 2 (cocktail mode)  
1797   9E24             
1797   9E24             
1797   9E24             
1797   9E24             
1797   8B9A             
1797   8B9A FF          
1797   8B9B             
1797   9E24             
1797   9E24~            	EXCEPT(g_setctrlp2,setctrlp2)         	;Set the controls to Player 2 (cocktail mode)  
1797   9E24~            	EXCEPT(g_setctrlp2,setctrlp2)         	;Set the controls to Player 2 (cocktail mode)  
1797   9E24             
1797   9E24             
1797   9E24             
1797   8C47             
1797   8C47 FF          
1797   8C48             
1797   9E24             
1797   9E24~            	EXCEPT(g_setctrlp2,setctrlp2)         	;Set the controls to Player 2 (cocktail mode)  
1797   9E24~            	EXCEPT(g_setctrlp2,setctrlp2)         	;Set the controls to Player 2 (cocktail mode)  
1797   9E24             
1797   9E24             
1797   9E24             
1797   9004             
1797   9004 20          
1797   9005             
1797   9E24             
1797   9E24~            	EXCEPT(g_setctrlp2,setctrlp2)         	;Set the controls to Player 2 (cocktail mode)  
1797   9E24~            	EXCEPT(g_setctrlp2,setctrlp2)         	;Set the controls to Player 2 (cocktail mode)  
1797   9E24             
1797   9E24             
1797   9E24             
1797   9430             
1797   9430 1A 99       
1797   9432             
1797   9E24             
1797   9E24~            	EXCEPT(g_setctrlp2,setctrlp2)         	;Set the controls to Player 2 (cocktail mode)  
1797   9E24~            	EXCEPT(g_setctrlp2,setctrlp2)         	;Set the controls to Player 2 (cocktail mode)  
1797   9E24             
1798   9E24             	
1799   9E24             	;Everythign after this is accessible via GAMMA test in SELF TEST
1800   9E24             	\ \tmpptr .set *\.export g_clrh\g_clrh = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word reseths-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                   ;Clear High Scores
1800   9E24             
1800   9E24             
1800   9E24             
1800   9E24             
1800   8B9B             
1800   8B9B FF          
1800   8B9C             
1800   9E24             
1800   9E24~            	EXCEPT(g_clrh,reseths)                  ;Clear High Scores
1800   9E24~            	EXCEPT(g_clrh,reseths)                  ;Clear High Scores
1800   9E24             
1800   9E24             
1800   9E24             
1800   8C48             
1800   8C48 FF          
1800   8C49             
1800   9E24             
1800   9E24~            	EXCEPT(g_clrh,reseths)                  ;Clear High Scores
1800   9E24~            	EXCEPT(g_clrh,reseths)                  ;Clear High Scores
1800   9E24             
1800   9E24             
1800   9E24             
1800   9005             
1800   9005 21          
1800   9006             
1800   9E24             
1800   9E24~            	EXCEPT(g_clrh,reseths)                  ;Clear High Scores
1800   9E24~            	EXCEPT(g_clrh,reseths)                  ;Clear High Scores
1800   9E24             
1800   9E24             
1800   9E24             
1800   9432             
1800   9432 A6 98       
1800   9434             
1800   9E24             
1800   9E24~            	EXCEPT(g_clrh,reseths)                  ;Clear High Scores
1800   9E24~            	EXCEPT(g_clrh,reseths)                  ;Clear High Scores
1800   9E24             
1801   9E24                 \ \tmpptr .set *\.export g_clrs\g_clrs = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_except\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte rt_except\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte o_exceptptr\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \ \tmpptr .set *\ .org t_exceptptr+(o_exceptptr*2)\ .word resetst-1\o_exceptptr .set o_exceptptr+1\ .org tmpptr\#IF o_exceptptr > numexc\	.error "RPM: Too many command exceptions pointers defined. Increase 'numexc' to allow more WORD pointers."\#ENDIF                   ;Clear Game Stats
1801   9E24             
1801   9E24             
1801   9E24             
1801   9E24             
1801   8B9C             
1801   8B9C FF          
1801   8B9D             
1801   9E24             
1801   9E24~                EXCEPT(g_clrs,resetst)                  ;Clear Game Stats
1801   9E24~                EXCEPT(g_clrs,resetst)                  ;Clear Game Stats
1801   9E24             
1801   9E24             
1801   9E24             
1801   8C49             
1801   8C49 FF          
1801   8C4A             
1801   9E24             
1801   9E24~                EXCEPT(g_clrs,resetst)                  ;Clear Game Stats
1801   9E24~                EXCEPT(g_clrs,resetst)                  ;Clear Game Stats
1801   9E24             
1801   9E24             
1801   9E24             
1801   9006             
1801   9006 22          
1801   9007             
1801   9E24             
1801   9E24~                EXCEPT(g_clrs,resetst)                  ;Clear Game Stats
1801   9E24~                EXCEPT(g_clrs,resetst)                  ;Clear Game Stats
1801   9E24             
1801   9E24             
1801   9E24             
1801   9434             
1801   9434 AC 98       
1801   9436             
1801   9E24             
1801   9E24~                EXCEPT(g_clrs,resetst)                  ;Clear Game Stats
1801   9E24~                EXCEPT(g_clrs,resetst)                  ;Clear Game Stats
1801   9E24             
1802   9E24             	
1803   9E24             	\ \ \tmpptr .set *\.export g_sndstop\g_sndstop = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_gosub\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_userfunction\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_userfunction+(o_userfunction*2)\ .word initrpm-1\o_userfunction .set o_userfunction+1\ .org tmpptr\#IF o_userfunction > numfcns\	.error "RPM: Too many user functions defined. Increase limit."\#ENDIF\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF  						;Stop all sounds
1803   9E24             
1803   9E24             
1803   9E24             
1803   9E24             
1803   9E24             
1803   8B9D             
1803   8B9D 02          
1803   8B9E             
1803   9E24             
1803   9E24~            	KILALL(g_sndstop) 						;Stop all sounds
1803   9E24~            	KILALL(g_sndstop) 						;Stop all sounds
1803   9E24             
1803   9E24             
1803   9E24             
1803   8C4A             
1803   8C4A 00          
1803   8C4B             
1803   9E24             
1803   9E24~            	KILALL(g_sndstop) 						;Stop all sounds
1803   9E24~            	KILALL(g_sndstop) 						;Stop all sounds
1803   9E24             
1803   9E24             
1803   9E24             
1803   8B75             
1803   8B75 7B 81       
1803   8B77             
1803   9E24             
1803   9E24~            	KILALL(g_sndstop) 						;Stop all sounds
1803   9E24~            	KILALL(g_sndstop) 						;Stop all sounds
1803   9E24             
1803   9E24             
1803   9E24             
1803   9007             
1803   9007 FF          
1803   9008             
1803   9E24             
1803   9E24~            	KILALL(g_sndstop) 						;Stop all sounds
1803   9E24~            	KILALL(g_sndstop) 						;Stop all sounds
1803   9E24             
1804   9E24             ;* Sound Effects
1805   9E24             ;*
1806   9E24             ;* A) Game Start
1807   9E24                 \ \tmpptr .set *\.export snd_coin  \snd_coin   = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_coin   = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_coin\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1     ;Coin
1807   9E24             
1807   9E24             
1807   9E24             
1807   9E24             
1807   8B9E             
1807   8B9E 06          
1807   8B9F             
1807   9E24             
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24             
1807   9E24             
1807   9E24             
1807   9E24             
1807   8C4B             
1807   8C4B 01          
1807   8C4C             
1807   9E24             
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24             
1807   9E24             
1807   9E24             
1807   8CD4             
1807   8CD4 01          
1807   8CD5             
1807   9E24             
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24             
1807   9E24             
1807   9E24             
1807   8D64             
1807   8D64 08          
1807   8D65             
1807   9E24             
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24             
1807   9E24             
1807   9E24             
1807   8DF4             
1807   8DF4 08          
1807   8DF5             
1807   9E24             
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24             
1807   9E24             
1807   9E24             
1807   8E84             
1807   8E84 01          
1807   8E85             
1807   9E24             
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24             
1807   9E24             
1807   9E24             
1807   8F13             
1807   8F13             
1807   8F13 00 00       
1807   8F15             
1807   9E24             
1807   9E24             
1807   9E24             
1807   9008             
1807   9008 FF          
1807   9009             
1807   9E24             
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24~                STSND(snd_coin  ,REPL,8,-1,08,s_coin)     ;Coin
1807   9E24             
1807   9E24             
1807   9E24             
1808   9E24                 \ \tmpptr .set *\.export snd_launch\snd_launch = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_launch = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_launch\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Launch
1808   9E24             
1808   9E24             
1808   9E24             
1808   9E24             
1808   8B9F             
1808   8B9F 06          
1808   8BA0             
1808   9E24             
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24             
1808   9E24             
1808   9E24             
1808   9E24             
1808   8C4C             
1808   8C4C 02          
1808   8C4D             
1808   9E24             
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24             
1808   9E24             
1808   9E24             
1808   8CD5             
1808   8CD5 02          
1808   8CD6             
1808   9E24             
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24             
1808   9E24             
1808   9E24             
1808   8D65             
1808   8D65 08          
1808   8D66             
1808   9E24             
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24             
1808   9E24             
1808   9E24             
1808   8DF5             
1808   8DF5 08          
1808   8DF6             
1808   9E24             
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24             
1808   9E24             
1808   9E24             
1808   8E85             
1808   8E85 02          
1808   8E86             
1808   9E24             
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24             
1808   9E24             
1808   9E24             
1808   8F14             
1808   8F14             
1808   8F14 00 00       
1808   8F16             
1808   9E24             
1808   9E24             
1808   9E24             
1808   9009             
1808   9009 FF          
1808   900A             
1808   9E24             
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24~                STSND(snd_launch,REPL,8,-1,08,s_launch)   ;Launch
1808   9E24             
1808   9E24             
1808   9E24             
1809   9E24             	 \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 				  8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 15\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_launch2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1809   9E24             
1809   9E24             
1809   8D66             
1809   8D66 08          
1809   8D67             
1809   9E24             
1809   9E24~            	 CONT(				  8,-1,15,s_launch2)
1809   9E24~            	 CONT(				  8,-1,15,s_launch2)
1809   9E24             
1809   9E24             
1809   9E24             
1809   8DF6             
1809   8DF6 0F          
1809   8DF7             
1809   9E24             
1809   9E24~            	 CONT(				  8,-1,15,s_launch2)
1809   9E24~            	 CONT(				  8,-1,15,s_launch2)
1809   9E24             
1809   9E24             
1809   9E24             
1809   8E86             
1809   8E86 03          
1809   8E87             
1809   9E24             
1809   9E24~            	 CONT(				  8,-1,15,s_launch2)
1809   9E24~            	 CONT(				  8,-1,15,s_launch2)
1809   9E24             
1809   9E24             
1809   9E24             
1809   8F15             
1809   8F15             
1809   8F15 03 00       
1809   8F17             
1809   9E24             
1809   9E24             
1809   9E24             
1809   900A             
1809   900A FF          
1809   900B             
1809   9E24             
1809   9E24~            	 CONT(				  8,-1,15,s_launch2)
1809   9E24~            	 CONT(				  8,-1,15,s_launch2)
1809   9E24             
1809   9E24             
1810   9E24                 \ \tmpptr .set *\.export snd_passby\snd_passby = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_passby = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_passby\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Passby
1810   9E24             
1810   9E24             
1810   9E24             
1810   9E24             
1810   8BA0             
1810   8BA0 06          
1810   8BA1             
1810   9E24             
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24             
1810   9E24             
1810   9E24             
1810   9E24             
1810   8C4D             
1810   8C4D 03          
1810   8C4E             
1810   9E24             
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24             
1810   9E24             
1810   9E24             
1810   8CD6             
1810   8CD6 04          
1810   8CD7             
1810   9E24             
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24             
1810   9E24             
1810   9E24             
1810   8D67             
1810   8D67 08          
1810   8D68             
1810   9E24             
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24             
1810   9E24             
1810   9E24             
1810   8DF7             
1810   8DF7 08          
1810   8DF8             
1810   9E24             
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24             
1810   9E24             
1810   9E24             
1810   8E87             
1810   8E87 04          
1810   8E88             
1810   9E24             
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24             
1810   9E24             
1810   9E24             
1810   8F16             
1810   8F16             
1810   8F16 00 00       
1810   8F18             
1810   9E24             
1810   9E24             
1810   9E24             
1810   900B             
1810   900B FF          
1810   900C             
1810   9E24             
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24~                STSND(snd_passby,REPL,8,-1,08,s_passby)   ;Passby
1810   9E24             
1810   9E24             
1810   9E24             
1811   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 				  8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_passby2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1811   9E24             
1811   9E24             
1811   8D68             
1811   8D68 08          
1811   8D69             
1811   9E24             
1811   9E24~                 CONT(				  8,-1,09,s_passby2)
1811   9E24~                 CONT(				  8,-1,09,s_passby2)
1811   9E24             
1811   9E24             
1811   9E24             
1811   8DF8             
1811   8DF8 09          
1811   8DF9             
1811   9E24             
1811   9E24~                 CONT(				  8,-1,09,s_passby2)
1811   9E24~                 CONT(				  8,-1,09,s_passby2)
1811   9E24             
1811   9E24             
1811   9E24             
1811   8E88             
1811   8E88 05          
1811   8E89             
1811   9E24             
1811   9E24~                 CONT(				  8,-1,09,s_passby2)
1811   9E24~                 CONT(				  8,-1,09,s_passby2)
1811   9E24             
1811   9E24             
1811   9E24             
1811   8F17             
1811   8F17             
1811   8F17 05 00       
1811   8F19             
1811   9E24             
1811   9E24             
1811   9E24             
1811   900C             
1811   900C FF          
1811   900D             
1811   9E24             
1811   9E24~                 CONT(				  8,-1,09,s_passby2)
1811   9E24~                 CONT(				  8,-1,09,s_passby2)
1811   9E24             
1811   9E24             
1812   9E24                  
1813   9E24             ;* B) Tactical Scanner
1814   9E24                 \ \tmpptr .set *\.export snd_b1a\snd_b1a = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b1a = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_galert\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;General Alert - doodley sounds in background
1814   9E24             
1814   9E24             
1814   9E24             
1814   9E24             
1814   8BA1             
1814   8BA1 06          
1814   8BA2             
1814   9E24             
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24             
1814   9E24             
1814   9E24             
1814   9E24             
1814   8C4E             
1814   8C4E 04          
1814   8C4F             
1814   9E24             
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24             
1814   9E24             
1814   9E24             
1814   8CD7             
1814   8CD7 06          
1814   8CD8             
1814   9E24             
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24             
1814   9E24             
1814   9E24             
1814   8D69             
1814   8D69 08          
1814   8D6A             
1814   9E24             
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24             
1814   9E24             
1814   9E24             
1814   8DF9             
1814   8DF9 0B          
1814   8DFA             
1814   9E24             
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24             
1814   9E24             
1814   9E24             
1814   8E89             
1814   8E89 06          
1814   8E8A             
1814   9E24             
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24             
1814   9E24             
1814   9E24             
1814   8F18             
1814   8F18             
1814   8F18 00 00       
1814   8F1A             
1814   9E24             
1814   9E24             
1814   9E24             
1814   900D             
1814   900D FF          
1814   900E             
1814   9E24             
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24~                STSND(snd_b1a,REPL,8,-1,11,s_galert)    ;General Alert - doodley sounds in background
1814   9E24             
1814   9E24             
1814   9E24             
1815   9E24                 \ \tmpptr .set *\.export snd_b1e\snd_b1e = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b1e = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_redalert\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1  ;Red Alert - for Tesseract
1815   9E24             
1815   9E24             
1815   9E24             
1815   9E24             
1815   8BA2             
1815   8BA2 06          
1815   8BA3             
1815   9E24             
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24             
1815   9E24             
1815   9E24             
1815   9E24             
1815   8C4F             
1815   8C4F 05          
1815   8C50             
1815   9E24             
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24             
1815   9E24             
1815   9E24             
1815   8CD8             
1815   8CD8 07          
1815   8CD9             
1815   9E24             
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24             
1815   9E24             
1815   9E24             
1815   8D6A             
1815   8D6A 08          
1815   8D6B             
1815   9E24             
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24             
1815   9E24             
1815   9E24             
1815   8DFA             
1815   8DFA 0B          
1815   8DFB             
1815   9E24             
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24             
1815   9E24             
1815   9E24             
1815   8E8A             
1815   8E8A 6A          
1815   8E8B             
1815   9E24             
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24             
1815   9E24             
1815   9E24             
1815   8F19             
1815   8F19             
1815   8F19 00 00       
1815   8F1B             
1815   9E24             
1815   9E24             
1815   9E24             
1815   900E             
1815   900E FF          
1815   900F             
1815   9E24             
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24~                STSND(snd_b1e,REPL,8,-1,11,s_redalert)  ;Red Alert - for Tesseract
1815   9E24             
1815   9E24             
1815   9E24             
1816   9E24                 \ \tmpptr .set *\.export snd_b2a\snd_b2a = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b2a = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_blaunch\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Ball Launch
1816   9E24             
1816   9E24             
1816   9E24             
1816   9E24             
1816   8BA3             
1816   8BA3 06          
1816   8BA4             
1816   9E24             
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24             
1816   9E24             
1816   9E24             
1816   9E24             
1816   8C50             
1816   8C50 06          
1816   8C51             
1816   9E24             
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24             
1816   9E24             
1816   9E24             
1816   8CD9             
1816   8CD9 08          
1816   8CDA             
1816   9E24             
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24             
1816   9E24             
1816   9E24             
1816   8D6B             
1816   8D6B 08          
1816   8D6C             
1816   9E24             
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24             
1816   9E24             
1816   9E24             
1816   8DFB             
1816   8DFB 08          
1816   8DFC             
1816   9E24             
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24             
1816   9E24             
1816   9E24             
1816   8E8B             
1816   8E8B 07          
1816   8E8C             
1816   9E24             
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24             
1816   9E24             
1816   9E24             
1816   8F1A             
1816   8F1A             
1816   8F1A 00 00       
1816   8F1C             
1816   9E24             
1816   9E24             
1816   9E24             
1816   900F             
1816   900F FF          
1816   9010             
1816   9E24             
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24~                STSND(snd_b2a,REPL,8,-1,08,s_blaunch)   ;Ball Launch
1816   9E24             
1816   9E24             
1816   9E24             
1817   9E24                 \ \tmpptr .set *\.export snd_b2b\snd_b2b = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b2b = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bbrick\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Ball Hits Brick
1817   9E24             
1817   9E24             
1817   9E24             
1817   9E24             
1817   8BA4             
1817   8BA4 06          
1817   8BA5             
1817   9E24             
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24             
1817   9E24             
1817   9E24             
1817   9E24             
1817   8C51             
1817   8C51 07          
1817   8C52             
1817   9E24             
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24             
1817   9E24             
1817   9E24             
1817   8CDA             
1817   8CDA 09          
1817   8CDB             
1817   9E24             
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24             
1817   9E24             
1817   9E24             
1817   8D6C             
1817   8D6C 08          
1817   8D6D             
1817   9E24             
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24             
1817   9E24             
1817   9E24             
1817   8DFC             
1817   8DFC 08          
1817   8DFD             
1817   9E24             
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24             
1817   9E24             
1817   9E24             
1817   8E8C             
1817   8E8C 08          
1817   8E8D             
1817   9E24             
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24             
1817   9E24             
1817   9E24             
1817   8F1B             
1817   8F1B             
1817   8F1B 00 00       
1817   8F1D             
1817   9E24             
1817   9E24             
1817   9E24             
1817   9010             
1817   9010 FF          
1817   9011             
1817   9E24             
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24~                STSND(snd_b2b,REPL,8,-1,08,s_bbrick)    ;Ball Hits Brick
1817   9E24             
1817   9E24             
1817   9E24             
1818   9E24                 \ \tmpptr .set *\.export snd_b2c\snd_b2c = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b2c = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bpaddle\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Ball Hits Paddle
1818   9E24             
1818   9E24             
1818   9E24             
1818   9E24             
1818   8BA5             
1818   8BA5 06          
1818   8BA6             
1818   9E24             
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24             
1818   9E24             
1818   9E24             
1818   9E24             
1818   8C52             
1818   8C52 08          
1818   8C53             
1818   9E24             
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24             
1818   9E24             
1818   9E24             
1818   8CDB             
1818   8CDB 0A          
1818   8CDC             
1818   9E24             
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24             
1818   9E24             
1818   9E24             
1818   8D6D             
1818   8D6D 08          
1818   8D6E             
1818   9E24             
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24             
1818   9E24             
1818   9E24             
1818   8DFD             
1818   8DFD 08          
1818   8DFE             
1818   9E24             
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24             
1818   9E24             
1818   9E24             
1818   8E8D             
1818   8E8D 09          
1818   8E8E             
1818   9E24             
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24             
1818   9E24             
1818   9E24             
1818   8F1C             
1818   8F1C             
1818   8F1C 00 00       
1818   8F1E             
1818   9E24             
1818   9E24             
1818   9E24             
1818   9011             
1818   9011 FF          
1818   9012             
1818   9E24             
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24~                STSND(snd_b2c,REPL,8,-1,08,s_bpaddle)   ;Ball Hits Paddle
1818   9E24             
1818   9E24             
1818   9E24             
1819   9E24                 \ \tmpptr .set *\.export snd_b2d\snd_b2d = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b2d = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bmissp\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Ball Misses Paddle
1819   9E24             
1819   9E24             
1819   9E24             
1819   9E24             
1819   8BA6             
1819   8BA6 06          
1819   8BA7             
1819   9E24             
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24             
1819   9E24             
1819   9E24             
1819   9E24             
1819   8C53             
1819   8C53 09          
1819   8C54             
1819   9E24             
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24             
1819   9E24             
1819   9E24             
1819   8CDC             
1819   8CDC 0B          
1819   8CDD             
1819   9E24             
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24             
1819   9E24             
1819   9E24             
1819   8D6E             
1819   8D6E 08          
1819   8D6F             
1819   9E24             
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24             
1819   9E24             
1819   9E24             
1819   8DFE             
1819   8DFE 08          
1819   8DFF             
1819   9E24             
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24             
1819   9E24             
1819   9E24             
1819   8E8E             
1819   8E8E 0A          
1819   8E8F             
1819   9E24             
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24             
1819   9E24             
1819   9E24             
1819   8F1D             
1819   8F1D             
1819   8F1D 00 00       
1819   8F1F             
1819   9E24             
1819   9E24             
1819   9E24             
1819   9012             
1819   9012 FF          
1819   9013             
1819   9E24             
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24~                STSND(snd_b2d,REPL,8,-1,08,s_bmissp)    ;Ball Misses Paddle
1819   9E24             
1819   9E24             
1819   9E24             
1820   9E24                 \ \tmpptr .set *\.export snd_b3a\snd_b3a = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b3a = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_digit\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1     ;Digit Entered
1820   9E24             
1820   9E24             
1820   9E24             
1820   9E24             
1820   8BA7             
1820   8BA7 06          
1820   8BA8             
1820   9E24             
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24             
1820   9E24             
1820   9E24             
1820   9E24             
1820   8C54             
1820   8C54 0A          
1820   8C55             
1820   9E24             
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24             
1820   9E24             
1820   9E24             
1820   8CDD             
1820   8CDD 0C          
1820   8CDE             
1820   9E24             
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24             
1820   9E24             
1820   9E24             
1820   8D6F             
1820   8D6F 08          
1820   8D70             
1820   9E24             
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24             
1820   9E24             
1820   9E24             
1820   8DFF             
1820   8DFF 09          
1820   8E00             
1820   9E24             
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24             
1820   9E24             
1820   9E24             
1820   8E8F             
1820   8E8F 0B          
1820   8E90             
1820   9E24             
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24             
1820   9E24             
1820   9E24             
1820   8F1E             
1820   8F1E             
1820   8F1E 00 00       
1820   8F20             
1820   9E24             
1820   9E24             
1820   9E24             
1820   9013             
1820   9013 FF          
1820   9014             
1820   9E24             
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24~                STSND(snd_b3a,REPL,8,-1,09,s_digit)     ;Digit Entered
1820   9E24             
1820   9E24             
1820   9E24             
1821   9E24                 \ \tmpptr .set *\.export snd_b3b\snd_b3b = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b3b = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_ccorrect\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1  ;Combination Correct
1821   9E24             
1821   9E24             
1821   9E24             
1821   9E24             
1821   8BA8             
1821   8BA8 06          
1821   8BA9             
1821   9E24             
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24             
1821   9E24             
1821   9E24             
1821   9E24             
1821   8C55             
1821   8C55 0B          
1821   8C56             
1821   9E24             
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24             
1821   9E24             
1821   9E24             
1821   8CDE             
1821   8CDE 0D          
1821   8CDF             
1821   9E24             
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24             
1821   9E24             
1821   9E24             
1821   8D70             
1821   8D70 08          
1821   8D71             
1821   9E24             
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24             
1821   9E24             
1821   9E24             
1821   8E00             
1821   8E00 08          
1821   8E01             
1821   9E24             
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24             
1821   9E24             
1821   9E24             
1821   8E90             
1821   8E90 0F          
1821   8E91             
1821   9E24             
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24             
1821   9E24             
1821   9E24             
1821   8F1F             
1821   8F1F             
1821   8F1F 00 00       
1821   8F21             
1821   9E24             
1821   9E24             
1821   9E24             
1821   9014             
1821   9014 FF          
1821   9015             
1821   9E24             
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24~                STSND(snd_b3b,REPL,8,-1,08,s_ccorrect)  ;Combination Correct
1821   9E24             
1821   9E24             
1821   9E24             
1822   9E24                     
1823   9E24             ;* C) Shared Sounds for All Space and Maze Waves
1824   9E24                 \ \tmpptr .set *\.export snd_c1 \snd_c1  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_c1  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 15\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1        ;Player Ship Explosion
1824   9E24             
1824   9E24             
1824   9E24             
1824   9E24             
1824   8BA9             
1824   8BA9 06          
1824   8BAA             
1824   9E24             
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24             
1824   9E24             
1824   9E24             
1824   9E24             
1824   8C56             
1824   8C56 0C          
1824   8C57             
1824   9E24             
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24             
1824   9E24             
1824   9E24             
1824   8CDF             
1824   8CDF 0E          
1824   8CE0             
1824   9E24             
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24             
1824   9E24             
1824   9E24             
1824   8D71             
1824   8D71 08          
1824   8D72             
1824   9E24             
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24             
1824   9E24             
1824   9E24             
1824   8E01             
1824   8E01 0F          
1824   8E02             
1824   9E24             
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24             
1824   9E24             
1824   9E24             
1824   8E91             
1824   8E91 10          
1824   8E92             
1824   9E24             
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24             
1824   9E24             
1824   9E24             
1824   8F20             
1824   8F20             
1824   8F20 00 00       
1824   8F22             
1824   9E24             
1824   9E24             
1824   9E24             
1824   9015             
1824   9015 FF          
1824   9016             
1824   9E24             
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24~                STSND(snd_c1 ,REPL,8,-1,15,s_exp)        ;Player Ship Explosion
1824   9E24             
1824   9E24             
1824   9E24             
1825   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1   
1825   9E24             
1825   9E24             
1825   8D72             
1825   8D72 08          
1825   8D73             
1825   9E24             
1825   9E24~                 CONT(             8,-1,00,s_exp2)   
1825   9E24~                 CONT(             8,-1,00,s_exp2)   
1825   9E24             
1825   9E24             
1825   9E24             
1825   8E02             
1825   8E02 00          
1825   8E03             
1825   9E24             
1825   9E24~                 CONT(             8,-1,00,s_exp2)   
1825   9E24~                 CONT(             8,-1,00,s_exp2)   
1825   9E24             
1825   9E24             
1825   9E24             
1825   8E92             
1825   8E92 11          
1825   8E93             
1825   9E24             
1825   9E24~                 CONT(             8,-1,00,s_exp2)   
1825   9E24~                 CONT(             8,-1,00,s_exp2)   
1825   9E24             
1825   9E24             
1825   9E24             
1825   8F21             
1825   8F21             
1825   8F21 0F 00       
1825   8F23             
1825   9E24             
1825   9E24             
1825   9E24             
1825   9016             
1825   9016 FF          
1825   9017             
1825   9E24             
1825   9E24~                 CONT(             8,-1,00,s_exp2)   
1825   9E24~                 CONT(             8,-1,00,s_exp2)   
1825   9E24             
1825   9E24             
1826   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 01\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1826   9E24             
1826   9E24             
1826   8D73             
1826   8D73 08          
1826   8D74             
1826   9E24             
1826   9E24~                 CONT(             8,-1,01,s_exp3)
1826   9E24~                 CONT(             8,-1,01,s_exp3)
1826   9E24             
1826   9E24             
1826   9E24             
1826   8E03             
1826   8E03 01          
1826   8E04             
1826   9E24             
1826   9E24~                 CONT(             8,-1,01,s_exp3)
1826   9E24~                 CONT(             8,-1,01,s_exp3)
1826   9E24             
1826   9E24             
1826   9E24             
1826   8E93             
1826   8E93 12          
1826   8E94             
1826   9E24             
1826   9E24~                 CONT(             8,-1,01,s_exp3)
1826   9E24~                 CONT(             8,-1,01,s_exp3)
1826   9E24             
1826   9E24             
1826   9E24             
1826   8F22             
1826   8F22             
1826   8F22 10 00       
1826   8F24             
1826   9E24             
1826   9E24             
1826   9E24             
1826   9017             
1826   9017 FF          
1826   9018             
1826   9E24             
1826   9E24~                 CONT(             8,-1,01,s_exp3)
1826   9E24~                 CONT(             8,-1,01,s_exp3)
1826   9E24             
1826   9E24             
1827   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 14\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1827   9E24             
1827   9E24             
1827   8D74             
1827   8D74 08          
1827   8D75             
1827   9E24             
1827   9E24~                 CONT(             8,-1,14,s_exp3)
1827   9E24~                 CONT(             8,-1,14,s_exp3)
1827   9E24             
1827   9E24             
1827   9E24             
1827   8E04             
1827   8E04 0E          
1827   8E05             
1827   9E24             
1827   9E24~                 CONT(             8,-1,14,s_exp3)
1827   9E24~                 CONT(             8,-1,14,s_exp3)
1827   9E24             
1827   9E24             
1827   9E24             
1827   8E94             
1827   8E94 12          
1827   8E95             
1827   9E24             
1827   9E24~                 CONT(             8,-1,14,s_exp3)
1827   9E24~                 CONT(             8,-1,14,s_exp3)
1827   9E24             
1827   9E24             
1827   9E24             
1827   8F23             
1827   8F23             
1827   8F23 11 00       
1827   8F25             
1827   9E24             
1827   9E24             
1827   9E24             
1827   9018             
1827   9018 FF          
1827   9019             
1827   9E24             
1827   9E24~                 CONT(             8,-1,14,s_exp3)
1827   9E24~                 CONT(             8,-1,14,s_exp3)
1827   9E24             
1827   9E24             
1828   9E24                 \ \tmpptr .set *\.export snd_c2 \snd_c2  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_c2  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_pfire\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;Player Ship Firing
1828   9E24             
1828   9E24             
1828   9E24             
1828   9E24             
1828   8BAA             
1828   8BAA 06          
1828   8BAB             
1828   9E24             
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24             
1828   9E24             
1828   9E24             
1828   9E24             
1828   8C57             
1828   8C57 0D          
1828   8C58             
1828   9E24             
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24             
1828   9E24             
1828   9E24             
1828   8CE0             
1828   8CE0 12          
1828   8CE1             
1828   9E24             
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24             
1828   9E24             
1828   9E24             
1828   8D75             
1828   8D75 08          
1828   8D76             
1828   9E24             
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24             
1828   9E24             
1828   9E24             
1828   8E05             
1828   8E05 02          
1828   8E06             
1828   9E24             
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24             
1828   9E24             
1828   9E24             
1828   8E95             
1828   8E95 16          
1828   8E96             
1828   9E24             
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24             
1828   9E24             
1828   9E24             
1828   8F24             
1828   8F24             
1828   8F24 00 00       
1828   8F26             
1828   9E24             
1828   9E24             
1828   9E24             
1828   9019             
1828   9019 FF          
1828   901A             
1828   9E24             
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24~                STSND(snd_c2 ,REPL,8,-1,02,s_pfire)      ;Player Ship Firing
1828   9E24             
1828   9E24             
1828   9E24             
1829   9E24                 \ \tmpptr .set *\.export snd_c3 \snd_c3  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_c3  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 03\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_shotstat\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Shot Hits Station
1829   9E24             
1829   9E24             
1829   9E24             
1829   9E24             
1829   8BAB             
1829   8BAB 06          
1829   8BAC             
1829   9E24             
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24             
1829   9E24             
1829   9E24             
1829   9E24             
1829   8C58             
1829   8C58 0E          
1829   8C59             
1829   9E24             
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24             
1829   9E24             
1829   9E24             
1829   8CE1             
1829   8CE1 13          
1829   8CE2             
1829   9E24             
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24             
1829   9E24             
1829   9E24             
1829   8D76             
1829   8D76 08          
1829   8D77             
1829   9E24             
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24             
1829   9E24             
1829   9E24             
1829   8E06             
1829   8E06 03          
1829   8E07             
1829   9E24             
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24             
1829   9E24             
1829   9E24             
1829   8E96             
1829   8E96 17          
1829   8E97             
1829   9E24             
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24             
1829   9E24             
1829   9E24             
1829   8F25             
1829   8F25             
1829   8F25 00 00       
1829   8F27             
1829   9E24             
1829   9E24             
1829   9E24             
1829   901A             
1829   901A FF          
1829   901B             
1829   9E24             
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24~                STSND(snd_c3 ,REPL,8,-1,03,s_shotstat)   ;Shot Hits Station
1829   9E24             
1829   9E24             
1829   9E24             
1830   9E24                 \ \tmpptr .set *\.export snd_c4 \snd_c4  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_c4  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 04\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_xlife\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;Bonus Life
1830   9E24             
1830   9E24             
1830   9E24             
1830   9E24             
1830   8BAC             
1830   8BAC 06          
1830   8BAD             
1830   9E24             
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24             
1830   9E24             
1830   9E24             
1830   9E24             
1830   8C59             
1830   8C59 0F          
1830   8C5A             
1830   9E24             
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24             
1830   9E24             
1830   9E24             
1830   8CE2             
1830   8CE2 14          
1830   8CE3             
1830   9E24             
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24             
1830   9E24             
1830   9E24             
1830   8D77             
1830   8D77 08          
1830   8D78             
1830   9E24             
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24             
1830   9E24             
1830   9E24             
1830   8E07             
1830   8E07 04          
1830   8E08             
1830   9E24             
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24             
1830   9E24             
1830   9E24             
1830   8E97             
1830   8E97 61          
1830   8E98             
1830   9E24             
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24             
1830   9E24             
1830   9E24             
1830   8F26             
1830   8F26             
1830   8F26 00 00       
1830   8F28             
1830   9E24             
1830   9E24             
1830   9E24             
1830   901B             
1830   901B FF          
1830   901C             
1830   9E24             
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24~                STSND(snd_c4 ,REPL,8,-1,04,s_xlife)      ;Bonus Life
1830   9E24             
1830   9E24             
1830   9E24             
1831   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 03\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_xlife\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1831   9E24             
1831   9E24             
1831   8D78             
1831   8D78 08          
1831   8D79             
1831   9E24             
1831   9E24~                 CONT(             8,-1,03,s_xlife)
1831   9E24~                 CONT(             8,-1,03,s_xlife)
1831   9E24             
1831   9E24             
1831   9E24             
1831   8E08             
1831   8E08 03          
1831   8E09             
1831   9E24             
1831   9E24~                 CONT(             8,-1,03,s_xlife)
1831   9E24~                 CONT(             8,-1,03,s_xlife)
1831   9E24             
1831   9E24             
1831   9E24             
1831   8E98             
1831   8E98 61          
1831   8E99             
1831   9E24             
1831   9E24~                 CONT(             8,-1,03,s_xlife)
1831   9E24~                 CONT(             8,-1,03,s_xlife)
1831   9E24             
1831   9E24             
1831   9E24             
1831   8F27             
1831   8F27             
1831   8F27 15 00       
1831   8F29             
1831   9E24             
1831   9E24             
1831   9E24             
1831   901C             
1831   901C FF          
1831   901D             
1831   9E24             
1831   9E24~                 CONT(             8,-1,03,s_xlife)
1831   9E24~                 CONT(             8,-1,03,s_xlife)
1831   9E24             
1831   9E24             
1832   9E24                 \ \tmpptr .set *\.export snd_c5 \snd_c5  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_c5  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 03\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bonus\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;Bonus Tick
1832   9E24             
1832   9E24             
1832   9E24             
1832   9E24             
1832   8BAD             
1832   8BAD 06          
1832   8BAE             
1832   9E24             
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24             
1832   9E24             
1832   9E24             
1832   9E24             
1832   8C5A             
1832   8C5A 10          
1832   8C5B             
1832   9E24             
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24             
1832   9E24             
1832   9E24             
1832   8CE3             
1832   8CE3 16          
1832   8CE4             
1832   9E24             
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24             
1832   9E24             
1832   9E24             
1832   8D79             
1832   8D79 08          
1832   8D7A             
1832   9E24             
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24             
1832   9E24             
1832   9E24             
1832   8E09             
1832   8E09 03          
1832   8E0A             
1832   9E24             
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24             
1832   9E24             
1832   9E24             
1832   8E99             
1832   8E99 62          
1832   8E9A             
1832   9E24             
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24             
1832   9E24             
1832   9E24             
1832   8F28             
1832   8F28             
1832   8F28 00 00       
1832   8F2A             
1832   9E24             
1832   9E24             
1832   9E24             
1832   901D             
1832   901D FF          
1832   901E             
1832   9E24             
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24~                STSND(snd_c5 ,REPL,8,-1,03,s_bonus)      ;Bonus Tick
1832   9E24             
1832   9E24             
1832   9E24             
1833   9E24                 \ \tmpptr .set *\.export snd_c7 \snd_c7  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_c7  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_beeps\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;75 Bonus Ticks
1833   9E24             
1833   9E24             
1833   9E24             
1833   9E24             
1833   8BAE             
1833   8BAE 06          
1833   8BAF             
1833   9E24             
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24             
1833   9E24             
1833   9E24             
1833   9E24             
1833   8C5B             
1833   8C5B 11          
1833   8C5C             
1833   9E24             
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24             
1833   9E24             
1833   9E24             
1833   8CE4             
1833   8CE4 17          
1833   8CE5             
1833   9E24             
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24             
1833   9E24             
1833   9E24             
1833   8D7A             
1833   8D7A 08          
1833   8D7B             
1833   9E24             
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24             
1833   9E24             
1833   9E24             
1833   8E0A             
1833   8E0A 08          
1833   8E0B             
1833   9E24             
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24             
1833   9E24             
1833   9E24             
1833   8E9A             
1833   8E9A 6B          
1833   8E9B             
1833   9E24             
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24             
1833   9E24             
1833   9E24             
1833   8F29             
1833   8F29             
1833   8F29 00 00       
1833   8F2B             
1833   9E24             
1833   9E24             
1833   9E24             
1833   901E             
1833   901E FF          
1833   901F             
1833   9E24             
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24~                STSND(snd_c7 ,REPL,8,-1,08,s_beeps)      ;75 Bonus Ticks
1833   9E24             
1833   9E24             
1833   9E24             
1834   9E24                 \ \tmpptr .set *\.export snd_c6\snd_c6 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_killid\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte snd_c7\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF                      		;Kill Bonus Ticks
1834   9E24             
1834   9E24             
1834   9E24             
1834   9E24             
1834   8BAF             
1834   8BAF 04          
1834   8BB0             
1834   9E24             
1834   9E24~                KILID(snd_c6,snd_c7)                     		;Kill Bonus Ticks
1834   9E24~                KILID(snd_c6,snd_c7)                     		;Kill Bonus Ticks
1834   9E24             
1834   9E24             
1834   9E24             
1834   8C5C             
1834   8C5C 35          
1834   8C5D             
1834   9E24             
1834   9E24~                KILID(snd_c6,snd_c7)                     		;Kill Bonus Ticks
1834   9E24~                KILID(snd_c6,snd_c7)                     		;Kill Bonus Ticks
1834   9E24             
1834   9E24             
1834   9E24             
1834   901F             
1834   901F FF          
1834   9020             
1834   9E24             
1834   9E24~                KILID(snd_c6,snd_c7)                     		;Kill Bonus Ticks
1834   9E24~                KILID(snd_c6,snd_c7)                     		;Kill Bonus Ticks
1834   9E24             
1835   9E24             
1836   9E24             ;   
1837   9E24             ;* D) Robot Fish Space Wave
1838   9E24                 \ \tmpptr .set *\.export snd_d1 \snd_d1  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_d1  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_fishhatch\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1  ;Fish Hatch
1838   9E24             
1838   9E24             
1838   9E24             
1838   9E24             
1838   8BB0             
1838   8BB0 06          
1838   8BB1             
1838   9E24             
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24             
1838   9E24             
1838   9E24             
1838   9E24             
1838   8C5D             
1838   8C5D 12          
1838   8C5E             
1838   9E24             
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24             
1838   9E24             
1838   9E24             
1838   8CE5             
1838   8CE5 18          
1838   8CE6             
1838   9E24             
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24             
1838   9E24             
1838   9E24             
1838   8D7B             
1838   8D7B 08          
1838   8D7C             
1838   9E24             
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24             
1838   9E24             
1838   9E24             
1838   8E0B             
1838   8E0B 08          
1838   8E0C             
1838   9E24             
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24             
1838   9E24             
1838   9E24             
1838   8E9B             
1838   8E9B 18          
1838   8E9C             
1838   9E24             
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24             
1838   9E24             
1838   9E24             
1838   8F2A             
1838   8F2A             
1838   8F2A 00 00       
1838   8F2C             
1838   9E24             
1838   9E24             
1838   9E24             
1838   9020             
1838   9020 FF          
1838   9021             
1838   9E24             
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24~                STSND(snd_d1 ,REPL,8,-1,08,s_fishhatch)  ;Fish Hatch
1838   9E24             
1838   9E24             
1838   9E24             
1839   9E24                 \ \tmpptr .set *\.export snd_d3 \snd_d3  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_d3  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_goosefish\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1  ;Go.
1839   9E24             
1839   9E24             
1839   9E24             
1839   9E24             
1839   8BB1             
1839   8BB1 06          
1839   8BB2             
1839   9E24             
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24             
1839   9E24             
1839   9E24             
1839   9E24             
1839   8C5E             
1839   8C5E 13          
1839   8C5F             
1839   9E24             
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24             
1839   9E24             
1839   9E24             
1839   8CE6             
1839   8CE6 19          
1839   8CE7             
1839   9E24             
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24             
1839   9E24             
1839   9E24             
1839   8D7C             
1839   8D7C 08          
1839   8D7D             
1839   9E24             
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24             
1839   9E24             
1839   9E24             
1839   8E0C             
1839   8E0C 08          
1839   8E0D             
1839   9E24             
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24             
1839   9E24             
1839   9E24             
1839   8E9C             
1839   8E9C 1B          
1839   8E9D             
1839   9E24             
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24             
1839   9E24             
1839   9E24             
1839   8F2B             
1839   8F2B             
1839   8F2B 00 00       
1839   8F2D             
1839   9E24             
1839   9E24             
1839   9E24             
1839   9021             
1839   9021 FF          
1839   9022             
1839   9E24             
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24~                STSND(snd_d3 ,REPL,8,-1,08,s_goosefish)  ;Go.
1839   9E24             
1839   9E24             
1839   9E24             
1840   9E24                 \ \tmpptr .set *\.export snd_d4 \snd_d4  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_d4  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_blowfish\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Blow Up Fish
1840   9E24             
1840   9E24             
1840   9E24             
1840   9E24             
1840   8BB2             
1840   8BB2 06          
1840   8BB3             
1840   9E24             
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24             
1840   9E24             
1840   9E24             
1840   9E24             
1840   8C5F             
1840   8C5F 14          
1840   8C60             
1840   9E24             
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24             
1840   9E24             
1840   9E24             
1840   8CE7             
1840   8CE7 1A          
1840   8CE8             
1840   9E24             
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24             
1840   9E24             
1840   9E24             
1840   8D7D             
1840   8D7D 08          
1840   8D7E             
1840   9E24             
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24             
1840   9E24             
1840   9E24             
1840   8E0D             
1840   8E0D 09          
1840   8E0E             
1840   9E24             
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24             
1840   9E24             
1840   9E24             
1840   8E9D             
1840   8E9D 1C          
1840   8E9E             
1840   9E24             
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24             
1840   9E24             
1840   9E24             
1840   8F2C             
1840   8F2C             
1840   8F2C 00 00       
1840   8F2E             
1840   9E24             
1840   9E24             
1840   9E24             
1840   9022             
1840   9022 FF          
1840   9023             
1840   9E24             
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24~                STSND(snd_d4 ,REPL,8,-1,09,s_blowfish)   ;Blow Up Fish
1840   9E24             
1840   9E24             
1840   9E24             
1841   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_blowfish2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1841   9E24             
1841   9E24             
1841   8D7E             
1841   8D7E 08          
1841   8D7F             
1841   9E24             
1841   9E24~                 CONT(             8,-1,10,s_blowfish2)
1841   9E24~                 CONT(             8,-1,10,s_blowfish2)
1841   9E24             
1841   9E24             
1841   9E24             
1841   8E0E             
1841   8E0E 0A          
1841   8E0F             
1841   9E24             
1841   9E24~                 CONT(             8,-1,10,s_blowfish2)
1841   9E24~                 CONT(             8,-1,10,s_blowfish2)
1841   9E24             
1841   9E24             
1841   9E24             
1841   8E9E             
1841   8E9E 1D          
1841   8E9F             
1841   9E24             
1841   9E24~                 CONT(             8,-1,10,s_blowfish2)
1841   9E24~                 CONT(             8,-1,10,s_blowfish2)
1841   9E24             
1841   9E24             
1841   9E24             
1841   8F2D             
1841   8F2D             
1841   8F2D 1B 00       
1841   8F2F             
1841   9E24             
1841   9E24             
1841   9E24             
1841   9023             
1841   9023 FF          
1841   9024             
1841   9E24             
1841   9E24~                 CONT(             8,-1,10,s_blowfish2)
1841   9E24~                 CONT(             8,-1,10,s_blowfish2)
1841   9E24             
1841   9E24             
1842   9E24                 \ \tmpptr .set *\.export snd_d5 \snd_d5  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_d5  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_circfish\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Circling Fish
1842   9E24             
1842   9E24             
1842   9E24             
1842   9E24             
1842   8BB3             
1842   8BB3 06          
1842   8BB4             
1842   9E24             
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24             
1842   9E24             
1842   9E24             
1842   9E24             
1842   8C60             
1842   8C60 15          
1842   8C61             
1842   9E24             
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24             
1842   9E24             
1842   9E24             
1842   8CE8             
1842   8CE8 1C          
1842   8CE9             
1842   9E24             
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24             
1842   9E24             
1842   9E24             
1842   8D7F             
1842   8D7F 08          
1842   8D80             
1842   9E24             
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24             
1842   9E24             
1842   9E24             
1842   8E0F             
1842   8E0F 0B          
1842   8E10             
1842   9E24             
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24             
1842   9E24             
1842   9E24             
1842   8E9F             
1842   8E9F 1E          
1842   8EA0             
1842   9E24             
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24             
1842   9E24             
1842   9E24             
1842   8F2E             
1842   8F2E             
1842   8F2E 00 00       
1842   8F30             
1842   9E24             
1842   9E24             
1842   9E24             
1842   9024             
1842   9024 FF          
1842   9025             
1842   9E24             
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24~                STSND(snd_d5 ,REPL,8,-1,11,s_circfish)   ;Circling Fish
1842   9E24             
1842   9E24             
1842   9E24             
1843   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 05\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_circfish2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1843   9E24             
1843   9E24             
1843   8D80             
1843   8D80 08          
1843   8D81             
1843   9E24             
1843   9E24~                 CONT(             8,-1,05,s_circfish2)
1843   9E24~                 CONT(             8,-1,05,s_circfish2)
1843   9E24             
1843   9E24             
1843   9E24             
1843   8E10             
1843   8E10 05          
1843   8E11             
1843   9E24             
1843   9E24~                 CONT(             8,-1,05,s_circfish2)
1843   9E24~                 CONT(             8,-1,05,s_circfish2)
1843   9E24             
1843   9E24             
1843   9E24             
1843   8EA0             
1843   8EA0 1F          
1843   8EA1             
1843   9E24             
1843   9E24~                 CONT(             8,-1,05,s_circfish2)
1843   9E24~                 CONT(             8,-1,05,s_circfish2)
1843   9E24             
1843   9E24             
1843   9E24             
1843   8F2F             
1843   8F2F             
1843   8F2F 1D 00       
1843   8F31             
1843   9E24             
1843   9E24             
1843   9E24             
1843   9025             
1843   9025 FF          
1843   9026             
1843   9E24             
1843   9E24~                 CONT(             8,-1,05,s_circfish2)
1843   9E24~                 CONT(             8,-1,05,s_circfish2)
1843   9E24             
1843   9E24             
1844   9E24                  
1845   9E24             ;* E) Galaxians Space Wave
1846   9E24                 \ \tmpptr .set *\.export snd_e1 \snd_e1  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_e1  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_feject\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1 	;Fighters Leave Station
1846   9E24             
1846   9E24             
1846   9E24             
1846   9E24             
1846   8BB4             
1846   8BB4 06          
1846   8BB5             
1846   9E24             
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24             
1846   9E24             
1846   9E24             
1846   9E24             
1846   8C61             
1846   8C61 16          
1846   8C62             
1846   9E24             
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24             
1846   9E24             
1846   9E24             
1846   8CE9             
1846   8CE9 1E          
1846   8CEA             
1846   9E24             
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24             
1846   9E24             
1846   9E24             
1846   8D81             
1846   8D81 08          
1846   8D82             
1846   9E24             
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24             
1846   9E24             
1846   9E24             
1846   8E11             
1846   8E11 08          
1846   8E12             
1846   9E24             
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24             
1846   9E24             
1846   9E24             
1846   8EA1             
1846   8EA1 20          
1846   8EA2             
1846   9E24             
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24             
1846   9E24             
1846   9E24             
1846   8F30             
1846   8F30             
1846   8F30 00 00       
1846   8F32             
1846   9E24             
1846   9E24             
1846   9E24             
1846   9026             
1846   9026 FF          
1846   9027             
1846   9E24             
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24~                STSND(snd_e1 ,REPL,8,-1,08,s_feject) 	;Fighters Leave Station
1846   9E24             
1846   9E24             
1846   9E24             
1847   9E24                 \ \tmpptr .set *\.export snd_e2 \snd_e2  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_e2  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_fshot\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;Fighter Shoots
1847   9E24             
1847   9E24             
1847   9E24             
1847   9E24             
1847   8BB5             
1847   8BB5 06          
1847   8BB6             
1847   9E24             
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24             
1847   9E24             
1847   9E24             
1847   9E24             
1847   8C62             
1847   8C62 17          
1847   8C63             
1847   9E24             
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24             
1847   9E24             
1847   9E24             
1847   8CEA             
1847   8CEA 1F          
1847   8CEB             
1847   9E24             
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24             
1847   9E24             
1847   9E24             
1847   8D82             
1847   8D82 08          
1847   8D83             
1847   9E24             
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24             
1847   9E24             
1847   9E24             
1847   8E12             
1847   8E12 09          
1847   8E13             
1847   9E24             
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24             
1847   9E24             
1847   9E24             
1847   8EA2             
1847   8EA2 21          
1847   8EA3             
1847   9E24             
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24             
1847   9E24             
1847   9E24             
1847   8F31             
1847   8F31             
1847   8F31 00 00       
1847   8F33             
1847   9E24             
1847   9E24             
1847   9E24             
1847   9027             
1847   9027 FF          
1847   9028             
1847   9E24             
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24~                STSND(snd_e2 ,REPL,8,-1,09,s_fshot)      ;Fighter Shoots
1847   9E24             
1847   9E24             
1847   9E24             
1848   9E24                 \ \tmpptr .set *\.export snd_e3 \snd_e3  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_e3  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       ;Blow Up Fighter
1848   9E24             
1848   9E24             
1848   9E24             
1848   9E24             
1848   8BB6             
1848   8BB6 06          
1848   8BB7             
1848   9E24             
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24             
1848   9E24             
1848   9E24             
1848   9E24             
1848   8C63             
1848   8C63 18          
1848   8C64             
1848   9E24             
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24             
1848   9E24             
1848   9E24             
1848   8CEB             
1848   8CEB 20          
1848   8CEC             
1848   9E24             
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24             
1848   9E24             
1848   9E24             
1848   8D83             
1848   8D83 08          
1848   8D84             
1848   9E24             
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24             
1848   9E24             
1848   9E24             
1848   8E13             
1848   8E13 0A          
1848   8E14             
1848   9E24             
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24             
1848   9E24             
1848   9E24             
1848   8EA3             
1848   8EA3 12          
1848   8EA4             
1848   9E24             
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24             
1848   9E24             
1848   9E24             
1848   8F32             
1848   8F32             
1848   8F32 00 00       
1848   8F34             
1848   9E24             
1848   9E24             
1848   9E24             
1848   9028             
1848   9028 FF          
1848   9029             
1848   9E24             
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24~                STSND(snd_e3 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter
1848   9E24             
1848   9E24             
1848   9E24             
1849   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 14\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp5\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1       
1849   9E24             
1849   9E24             
1849   8D84             
1849   8D84 08          
1849   8D85             
1849   9E24             
1849   9E24~                 CONT(             8,-1,14,s_exp5)       
1849   9E24~                 CONT(             8,-1,14,s_exp5)       
1849   9E24             
1849   9E24             
1849   9E24             
1849   8E14             
1849   8E14 0E          
1849   8E15             
1849   9E24             
1849   9E24~                 CONT(             8,-1,14,s_exp5)       
1849   9E24~                 CONT(             8,-1,14,s_exp5)       
1849   9E24             
1849   9E24             
1849   9E24             
1849   8EA4             
1849   8EA4 14          
1849   8EA5             
1849   9E24             
1849   9E24~                 CONT(             8,-1,14,s_exp5)       
1849   9E24~                 CONT(             8,-1,14,s_exp5)       
1849   9E24             
1849   9E24             
1849   9E24             
1849   8F33             
1849   8F33             
1849   8F33 21 00       
1849   8F35             
1849   9E24             
1849   9E24             
1849   9E24             
1849   9029             
1849   9029 FF          
1849   902A             
1849   9E24             
1849   9E24~                 CONT(             8,-1,14,s_exp5)       
1849   9E24~                 CONT(             8,-1,14,s_exp5)       
1849   9E24             
1849   9E24             
1850   9E24                 \ \tmpptr .set *\.export snd_e4 \snd_e4  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_e4  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       ;Blow Up Fighter 2
1850   9E24             
1850   9E24             
1850   9E24             
1850   9E24             
1850   8BB7             
1850   8BB7 06          
1850   8BB8             
1850   9E24             
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24             
1850   9E24             
1850   9E24             
1850   9E24             
1850   8C64             
1850   8C64 19          
1850   8C65             
1850   9E24             
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24             
1850   9E24             
1850   9E24             
1850   8CEC             
1850   8CEC 22          
1850   8CED             
1850   9E24             
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24             
1850   9E24             
1850   9E24             
1850   8D85             
1850   8D85 08          
1850   8D86             
1850   9E24             
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24             
1850   9E24             
1850   9E24             
1850   8E15             
1850   8E15 0A          
1850   8E16             
1850   9E24             
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24             
1850   9E24             
1850   9E24             
1850   8EA5             
1850   8EA5 12          
1850   8EA6             
1850   9E24             
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24             
1850   9E24             
1850   9E24             
1850   8F34             
1850   8F34             
1850   8F34 00 00       
1850   8F36             
1850   9E24             
1850   9E24             
1850   9E24             
1850   902A             
1850   902A FF          
1850   902B             
1850   9E24             
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24~                STSND(snd_e4 ,REPL,8,-1,10,s_exp3)       ;Blow Up Fighter 2
1850   9E24             
1850   9E24             
1850   9E24             
1851   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1851   9E24             
1851   9E24             
1851   8D86             
1851   8D86 08          
1851   8D87             
1851   9E24             
1851   9E24~                 CONT(             8,-1,09,s_exp4)
1851   9E24~                 CONT(             8,-1,09,s_exp4)
1851   9E24             
1851   9E24             
1851   9E24             
1851   8E16             
1851   8E16 09          
1851   8E17             
1851   9E24             
1851   9E24~                 CONT(             8,-1,09,s_exp4)
1851   9E24~                 CONT(             8,-1,09,s_exp4)
1851   9E24             
1851   9E24             
1851   9E24             
1851   8EA6             
1851   8EA6 13          
1851   8EA7             
1851   9E24             
1851   9E24~                 CONT(             8,-1,09,s_exp4)
1851   9E24~                 CONT(             8,-1,09,s_exp4)
1851   9E24             
1851   9E24             
1851   9E24             
1851   8F35             
1851   8F35             
1851   8F35 23 00       
1851   8F37             
1851   9E24             
1851   9E24             
1851   9E24             
1851   902B             
1851   902B FF          
1851   902C             
1851   9E24             
1851   9E24~                 CONT(             8,-1,09,s_exp4)
1851   9E24~                 CONT(             8,-1,09,s_exp4)
1851   9E24             
1851   9E24             
1852   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 14\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp6\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1852   9E24             
1852   9E24             
1852   8D87             
1852   8D87 08          
1852   8D88             
1852   9E24             
1852   9E24~                 CONT(             8,-1,14,s_exp6)
1852   9E24~                 CONT(             8,-1,14,s_exp6)
1852   9E24             
1852   9E24             
1852   9E24             
1852   8E17             
1852   8E17 0E          
1852   8E18             
1852   9E24             
1852   9E24~                 CONT(             8,-1,14,s_exp6)
1852   9E24~                 CONT(             8,-1,14,s_exp6)
1852   9E24             
1852   9E24             
1852   9E24             
1852   8EA7             
1852   8EA7 15          
1852   8EA8             
1852   9E24             
1852   9E24~                 CONT(             8,-1,14,s_exp6)
1852   9E24~                 CONT(             8,-1,14,s_exp6)
1852   9E24             
1852   9E24             
1852   9E24             
1852   8F36             
1852   8F36             
1852   8F36 24 00       
1852   8F38             
1852   9E24             
1852   9E24             
1852   9E24             
1852   902C             
1852   902C FF          
1852   902D             
1852   9E24             
1852   9E24~                 CONT(             8,-1,14,s_exp6)
1852   9E24~                 CONT(             8,-1,14,s_exp6)
1852   9E24             
1852   9E24             
1853   9E24                  
1854   9E24             ;* F) Web Spinners Space Wave
1855   9E24                 \ \tmpptr .set *\.export snd_f2 \snd_f2  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_f2  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_blowspin\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Blow Up Spinner
1855   9E24             
1855   9E24             
1855   9E24             
1855   9E24             
1855   8BB8             
1855   8BB8 06          
1855   8BB9             
1855   9E24             
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24             
1855   9E24             
1855   9E24             
1855   9E24             
1855   8C65             
1855   8C65 1A          
1855   8C66             
1855   9E24             
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24             
1855   9E24             
1855   9E24             
1855   8CED             
1855   8CED 25          
1855   8CEE             
1855   9E24             
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24             
1855   9E24             
1855   9E24             
1855   8D88             
1855   8D88 08          
1855   8D89             
1855   9E24             
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24             
1855   9E24             
1855   9E24             
1855   8E18             
1855   8E18 08          
1855   8E19             
1855   9E24             
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24             
1855   9E24             
1855   9E24             
1855   8EA8             
1855   8EA8 22          
1855   8EA9             
1855   9E24             
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24             
1855   9E24             
1855   9E24             
1855   8F37             
1855   8F37             
1855   8F37 00 00       
1855   8F39             
1855   9E24             
1855   9E24             
1855   9E24             
1855   902D             
1855   902D FF          
1855   902E             
1855   9E24             
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24~                STSND(snd_f2 ,REPL,8,-1,08,s_blowspin)   ;Blow Up Spinner
1855   9E24             
1855   9E24             
1855   9E24             
1856   9E24                 \ \tmpptr .set *\.export snd_f3 \snd_f3  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_f3  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mazehit\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Hit Maze Segment
1856   9E24             
1856   9E24             
1856   9E24             
1856   9E24             
1856   8BB9             
1856   8BB9 06          
1856   8BBA             
1856   9E24             
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24             
1856   9E24             
1856   9E24             
1856   9E24             
1856   8C66             
1856   8C66 1B          
1856   8C67             
1856   9E24             
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24             
1856   9E24             
1856   9E24             
1856   8CEE             
1856   8CEE 26          
1856   8CEF             
1856   9E24             
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24             
1856   9E24             
1856   9E24             
1856   8D89             
1856   8D89 08          
1856   8D8A             
1856   9E24             
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24             
1856   9E24             
1856   9E24             
1856   8E19             
1856   8E19 09          
1856   8E1A             
1856   9E24             
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24             
1856   9E24             
1856   9E24             
1856   8EA9             
1856   8EA9 23          
1856   8EAA             
1856   9E24             
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24             
1856   9E24             
1856   9E24             
1856   8F38             
1856   8F38             
1856   8F38 00 00       
1856   8F3A             
1856   9E24             
1856   9E24             
1856   9E24             
1856   902E             
1856   902E FF          
1856   902F             
1856   9E24             
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24~                STSND(snd_f3 ,REPL,8,-1,09,s_mazehit)    ;Hit Maze Segment
1856   9E24             
1856   9E24             
1856   9E24             
1857   9E24                 \ \tmpptr .set *\.export snd_f4 \snd_f4  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_f4  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mazekill\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Blow Up Maze Segment
1857   9E24             
1857   9E24             
1857   9E24             
1857   9E24             
1857   8BBA             
1857   8BBA 06          
1857   8BBB             
1857   9E24             
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24             
1857   9E24             
1857   9E24             
1857   9E24             
1857   8C67             
1857   8C67 1C          
1857   8C68             
1857   9E24             
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24             
1857   9E24             
1857   9E24             
1857   8CEF             
1857   8CEF 27          
1857   8CF0             
1857   9E24             
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24             
1857   9E24             
1857   9E24             
1857   8D8A             
1857   8D8A 08          
1857   8D8B             
1857   9E24             
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24             
1857   9E24             
1857   9E24             
1857   8E1A             
1857   8E1A 09          
1857   8E1B             
1857   9E24             
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24             
1857   9E24             
1857   9E24             
1857   8EAA             
1857   8EAA 3C          
1857   8EAB             
1857   9E24             
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24             
1857   9E24             
1857   9E24             
1857   8F39             
1857   8F39             
1857   8F39 00 00       
1857   8F3B             
1857   9E24             
1857   9E24             
1857   9E24             
1857   902F             
1857   902F FF          
1857   9030             
1857   9E24             
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24~                STSND(snd_f4 ,REPL,8,-1,09,s_mazekill)   ;Blow Up Maze Segment
1857   9E24             
1857   9E24             
1857   9E24             
1858   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mazekill2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1858   9E24             
1858   9E24             
1858   8D8B             
1858   8D8B 08          
1858   8D8C             
1858   9E24             
1858   9E24~                 CONT(             8,-1,10,s_mazekill2)
1858   9E24~                 CONT(             8,-1,10,s_mazekill2)
1858   9E24             
1858   9E24             
1858   9E24             
1858   8E1B             
1858   8E1B 0A          
1858   8E1C             
1858   9E24             
1858   9E24~                 CONT(             8,-1,10,s_mazekill2)
1858   9E24~                 CONT(             8,-1,10,s_mazekill2)
1858   9E24             
1858   9E24             
1858   9E24             
1858   8EAB             
1858   8EAB 3D          
1858   8EAC             
1858   9E24             
1858   9E24~                 CONT(             8,-1,10,s_mazekill2)
1858   9E24~                 CONT(             8,-1,10,s_mazekill2)
1858   9E24             
1858   9E24             
1858   9E24             
1858   8F3A             
1858   8F3A             
1858   8F3A 28 00       
1858   8F3C             
1858   9E24             
1858   9E24             
1858   9E24             
1858   9030             
1858   9030 FF          
1858   9031             
1858   9E24             
1858   9E24~                 CONT(             8,-1,10,s_mazekill2)
1858   9E24~                 CONT(             8,-1,10,s_mazekill2)
1858   9E24             
1858   9E24             
1859   9E24                  
1860   9E24             ;* G) Star Castle Space Wave
1861   9E24             
1862   9E24                  
1863   9E24             ;* H)   Landing on the Space Station
1864   9E24                 \ \tmpptr .set *\.export snd_h1 \snd_h1  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_h1  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 15\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp5\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       ;Successful Landing
1864   9E24             
1864   9E24             
1864   9E24             
1864   9E24             
1864   8BBB             
1864   8BBB 06          
1864   8BBC             
1864   9E24             
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24             
1864   9E24             
1864   9E24             
1864   9E24             
1864   8C68             
1864   8C68 1D          
1864   8C69             
1864   9E24             
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24             
1864   9E24             
1864   9E24             
1864   8CF0             
1864   8CF0 29          
1864   8CF1             
1864   9E24             
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24             
1864   9E24             
1864   9E24             
1864   8D8C             
1864   8D8C 08          
1864   8D8D             
1864   9E24             
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24             
1864   9E24             
1864   9E24             
1864   8E1C             
1864   8E1C 0F          
1864   8E1D             
1864   9E24             
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24             
1864   9E24             
1864   9E24             
1864   8EAC             
1864   8EAC 14          
1864   8EAD             
1864   9E24             
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24             
1864   9E24             
1864   9E24             
1864   8F3B             
1864   8F3B             
1864   8F3B 00 00       
1864   8F3D             
1864   9E24             
1864   9E24             
1864   9E24             
1864   9031             
1864   9031 FF          
1864   9032             
1864   9E24             
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24~                STSND(snd_h1 ,REPL,8,-1,15,s_exp5)       ;Successful Landing
1864   9E24             
1864   9E24             
1864   9E24             
1865   9E24                 \ \tmpptr .set *\.export snd_h2 \snd_h2  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_h2  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 15\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp6\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       ;Crash Ship on Station
1865   9E24             
1865   9E24             
1865   9E24             
1865   9E24             
1865   8BBC             
1865   8BBC 06          
1865   8BBD             
1865   9E24             
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24             
1865   9E24             
1865   9E24             
1865   9E24             
1865   8C69             
1865   8C69 1E          
1865   8C6A             
1865   9E24             
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24             
1865   9E24             
1865   9E24             
1865   8CF1             
1865   8CF1 2A          
1865   8CF2             
1865   9E24             
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24             
1865   9E24             
1865   9E24             
1865   8D8D             
1865   8D8D 08          
1865   8D8E             
1865   9E24             
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24             
1865   9E24             
1865   9E24             
1865   8E1D             
1865   8E1D 0F          
1865   8E1E             
1865   9E24             
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24             
1865   9E24             
1865   9E24             
1865   8EAD             
1865   8EAD 15          
1865   8EAE             
1865   9E24             
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24             
1865   9E24             
1865   9E24             
1865   8F3C             
1865   8F3C             
1865   8F3C 00 00       
1865   8F3E             
1865   9E24             
1865   9E24             
1865   9E24             
1865   9032             
1865   9032 FF          
1865   9033             
1865   9E24             
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24~                STSND(snd_h2 ,REPL,8,-1,15,s_exp6)       ;Crash Ship on Station
1865   9E24             
1865   9E24             
1865   9E24             
1866   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1866   9E24             
1866   9E24             
1866   8D8E             
1866   8D8E 08          
1866   8D8F             
1866   9E24             
1866   9E24~                 CONT(             8,-1,08,s_exp3)
1866   9E24~                 CONT(             8,-1,08,s_exp3)
1866   9E24             
1866   9E24             
1866   9E24             
1866   8E1E             
1866   8E1E 08          
1866   8E1F             
1866   9E24             
1866   9E24~                 CONT(             8,-1,08,s_exp3)
1866   9E24~                 CONT(             8,-1,08,s_exp3)
1866   9E24             
1866   9E24             
1866   9E24             
1866   8EAE             
1866   8EAE 12          
1866   8EAF             
1866   9E24             
1866   9E24~                 CONT(             8,-1,08,s_exp3)
1866   9E24~                 CONT(             8,-1,08,s_exp3)
1866   9E24             
1866   9E24             
1866   9E24             
1866   8F3D             
1866   8F3D             
1866   8F3D 2B 00       
1866   8F3F             
1866   9E24             
1866   9E24             
1866   9E24             
1866   9033             
1866   9033 FF          
1866   9034             
1866   9E24             
1866   9E24~                 CONT(             8,-1,08,s_exp3)
1866   9E24~                 CONT(             8,-1,08,s_exp3)
1866   9E24             
1866   9E24             
1867   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_exp7\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1867   9E24             
1867   9E24             
1867   8D8F             
1867   8D8F 08          
1867   8D90             
1867   9E24             
1867   9E24~                 CONT(             8,-1,09,s_exp7)
1867   9E24~                 CONT(             8,-1,09,s_exp7)
1867   9E24             
1867   9E24             
1867   9E24             
1867   8E1F             
1867   8E1F 09          
1867   8E20             
1867   9E24             
1867   9E24~                 CONT(             8,-1,09,s_exp7)
1867   9E24~                 CONT(             8,-1,09,s_exp7)
1867   9E24             
1867   9E24             
1867   9E24             
1867   8EAF             
1867   8EAF 24          
1867   8EB0             
1867   9E24             
1867   9E24~                 CONT(             8,-1,09,s_exp7)
1867   9E24~                 CONT(             8,-1,09,s_exp7)
1867   9E24             
1867   9E24             
1867   9E24             
1867   8F3E             
1867   8F3E             
1867   8F3E 2C 00       
1867   8F40             
1867   9E24             
1867   9E24             
1867   9E24             
1867   9034             
1867   9034 FF          
1867   9035             
1867   9E24             
1867   9E24~                 CONT(             8,-1,09,s_exp7)
1867   9E24~                 CONT(             8,-1,09,s_exp7)
1867   9E24             
1867   9E24             
1868   9E24                 \ \tmpptr .set *\.export snd_h3 \snd_h3  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_h3  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_lshot\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;Laser Shot
1868   9E24             
1868   9E24             
1868   9E24             
1868   9E24             
1868   8BBD             
1868   8BBD 06          
1868   8BBE             
1868   9E24             
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24             
1868   9E24             
1868   9E24             
1868   9E24             
1868   8C6A             
1868   8C6A 1F          
1868   8C6B             
1868   9E24             
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24             
1868   9E24             
1868   9E24             
1868   8CF2             
1868   8CF2 2D          
1868   8CF3             
1868   9E24             
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24             
1868   9E24             
1868   9E24             
1868   8D90             
1868   8D90 08          
1868   8D91             
1868   9E24             
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24             
1868   9E24             
1868   9E24             
1868   8E20             
1868   8E20 09          
1868   8E21             
1868   9E24             
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24             
1868   9E24             
1868   9E24             
1868   8EB0             
1868   8EB0 25          
1868   8EB1             
1868   9E24             
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24             
1868   9E24             
1868   9E24             
1868   8F3F             
1868   8F3F             
1868   8F3F 00 00       
1868   8F41             
1868   9E24             
1868   9E24             
1868   9E24             
1868   9035             
1868   9035 FF          
1868   9036             
1868   9E24             
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24~                STSND(snd_h3 ,REPL,8,-1,09,s_lshot)      ;Laser Shot
1868   9E24             
1868   9E24             
1868   9E24             
1869   9E24                 
1870   9E24             ;* I) Maze Wave
1871   9E24                 \ \tmpptr .set *\.export snd_i1a\snd_i1a = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i1a = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 04\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_shield\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1     ;Shields in Use
1871   9E24             
1871   9E24             
1871   9E24             
1871   9E24             
1871   8BBE             
1871   8BBE 06          
1871   8BBF             
1871   9E24             
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24             
1871   9E24             
1871   9E24             
1871   9E24             
1871   8C6B             
1871   8C6B 20          
1871   8C6C             
1871   9E24             
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24             
1871   9E24             
1871   9E24             
1871   8CF3             
1871   8CF3 2E          
1871   8CF4             
1871   9E24             
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24             
1871   9E24             
1871   9E24             
1871   8D91             
1871   8D91 08          
1871   8D92             
1871   9E24             
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24             
1871   9E24             
1871   9E24             
1871   8E21             
1871   8E21 04          
1871   8E22             
1871   9E24             
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24             
1871   9E24             
1871   9E24             
1871   8EB1             
1871   8EB1 63          
1871   8EB2             
1871   9E24             
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24             
1871   9E24             
1871   9E24             
1871   8F40             
1871   8F40             
1871   8F40 00 00       
1871   8F42             
1871   9E24             
1871   9E24             
1871   9E24             
1871   9036             
1871   9036 FF          
1871   9037             
1871   9E24             
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24~                STSND(snd_i1a,REPL,8,-1,04,s_shield)     ;Shields in Use
1871   9E24             
1871   9E24             
1871   9E24             
1872   9E24                 \ \tmpptr .set *\.export snd_i1b\snd_i1b = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i1b = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 04\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_hitshield\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1  ;Item Hits Shield
1872   9E24             
1872   9E24             
1872   9E24             
1872   9E24             
1872   8BBF             
1872   8BBF 06          
1872   8BC0             
1872   9E24             
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24             
1872   9E24             
1872   9E24             
1872   9E24             
1872   8C6C             
1872   8C6C 21          
1872   8C6D             
1872   9E24             
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24             
1872   9E24             
1872   9E24             
1872   8CF4             
1872   8CF4 2F          
1872   8CF5             
1872   9E24             
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24             
1872   9E24             
1872   9E24             
1872   8D92             
1872   8D92 08          
1872   8D93             
1872   9E24             
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24             
1872   9E24             
1872   9E24             
1872   8E22             
1872   8E22 04          
1872   8E23             
1872   9E24             
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24             
1872   9E24             
1872   9E24             
1872   8EB2             
1872   8EB2 26          
1872   8EB3             
1872   9E24             
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24             
1872   9E24             
1872   9E24             
1872   8F41             
1872   8F41             
1872   8F41 00 00       
1872   8F43             
1872   9E24             
1872   9E24             
1872   9E24             
1872   9037             
1872   9037 FF          
1872   9038             
1872   9E24             
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24~                STSND(snd_i1b,REPL,8,-1,04,s_hitshield)  ;Item Hits Shield
1872   9E24             
1872   9E24             
1872   9E24             
1873   9E24                 \ \tmpptr .set *\.export snd_i1c\snd_i1c = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i1c = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 04\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_noshield\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Shields Used Up
1873   9E24             
1873   9E24             
1873   9E24             
1873   9E24             
1873   8BC0             
1873   8BC0 06          
1873   8BC1             
1873   9E24             
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24             
1873   9E24             
1873   9E24             
1873   9E24             
1873   8C6D             
1873   8C6D 22          
1873   8C6E             
1873   9E24             
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24             
1873   9E24             
1873   9E24             
1873   8CF5             
1873   8CF5 30          
1873   8CF6             
1873   9E24             
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24             
1873   9E24             
1873   9E24             
1873   8D93             
1873   8D93 08          
1873   8D94             
1873   9E24             
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24             
1873   9E24             
1873   9E24             
1873   8E23             
1873   8E23 04          
1873   8E24             
1873   9E24             
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24             
1873   9E24             
1873   9E24             
1873   8EB3             
1873   8EB3 27          
1873   8EB4             
1873   9E24             
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24             
1873   9E24             
1873   9E24             
1873   8F42             
1873   8F42             
1873   8F42 00 00       
1873   8F44             
1873   9E24             
1873   9E24             
1873   9E24             
1873   9038             
1873   9038 FF          
1873   9039             
1873   9E24             
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24~                STSND(snd_i1c,REPL,8,-1,04,s_noshield)   ;Shields Used Up
1873   9E24             
1873   9E24             
1873   9E24             
1874   9E24                 \ \tmpptr .set *\.export snd_i2a\snd_i2a = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i2a = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_manhit\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1     ;Man Hits Object
1874   9E24             
1874   9E24             
1874   9E24             
1874   9E24             
1874   8BC1             
1874   8BC1 06          
1874   8BC2             
1874   9E24             
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24             
1874   9E24             
1874   9E24             
1874   9E24             
1874   8C6E             
1874   8C6E 23          
1874   8C6F             
1874   9E24             
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24             
1874   9E24             
1874   9E24             
1874   8CF6             
1874   8CF6 31          
1874   8CF7             
1874   9E24             
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24             
1874   9E24             
1874   9E24             
1874   8D94             
1874   8D94 08          
1874   8D95             
1874   9E24             
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24             
1874   9E24             
1874   9E24             
1874   8E24             
1874   8E24 09          
1874   8E25             
1874   9E24             
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24             
1874   9E24             
1874   9E24             
1874   8EB4             
1874   8EB4 28          
1874   8EB5             
1874   9E24             
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24             
1874   9E24             
1874   9E24             
1874   8F43             
1874   8F43             
1874   8F43 00 00       
1874   8F45             
1874   9E24             
1874   9E24             
1874   9E24             
1874   9039             
1874   9039 FF          
1874   903A             
1874   9E24             
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24~                STSND(snd_i2a,REPL,8,-1,09,s_manhit)     ;Man Hits Object
1874   9E24             
1874   9E24             
1874   9E24             
1875   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_shotstat\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1    
1875   9E24             
1875   9E24             
1875   8D95             
1875   8D95 08          
1875   8D96             
1875   9E24             
1875   9E24~                 CONT(             8,-1,10,s_shotstat)    
1875   9E24~                 CONT(             8,-1,10,s_shotstat)    
1875   9E24             
1875   9E24             
1875   9E24             
1875   8E25             
1875   8E25 0A          
1875   8E26             
1875   9E24             
1875   9E24~                 CONT(             8,-1,10,s_shotstat)    
1875   9E24~                 CONT(             8,-1,10,s_shotstat)    
1875   9E24             
1875   9E24             
1875   9E24             
1875   8EB5             
1875   8EB5 17          
1875   8EB6             
1875   9E24             
1875   9E24~                 CONT(             8,-1,10,s_shotstat)    
1875   9E24~                 CONT(             8,-1,10,s_shotstat)    
1875   9E24             
1875   9E24             
1875   9E24             
1875   8F44             
1875   8F44             
1875   8F44 32 00       
1875   8F46             
1875   9E24             
1875   9E24             
1875   9E24             
1875   903A             
1875   903A FF          
1875   903B             
1875   9E24             
1875   9E24~                 CONT(             8,-1,10,s_shotstat)    
1875   9E24~                 CONT(             8,-1,10,s_shotstat)    
1875   9E24             
1875   9E24             
1876   9E24                 \ \tmpptr .set *\.export snd_i2c\snd_i2c = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i2c = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_manwall\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1 ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24             
1876   9E24             
1876   9E24             
1876   9E24             
1876   8BC2             
1876   8BC2 06          
1876   8BC3             
1876   9E24             
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24             
1876   9E24             
1876   9E24             
1876   9E24             
1876   8C6F             
1876   8C6F 24          
1876   8C70             
1876   9E24             
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24             
1876   9E24             
1876   9E24             
1876   8CF7             
1876   8CF7 33          
1876   8CF8             
1876   9E24             
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24             
1876   9E24             
1876   9E24             
1876   8D96             
1876   8D96 08          
1876   8D97             
1876   9E24             
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24             
1876   9E24             
1876   9E24             
1876   8E26             
1876   8E26 0B          
1876   8E27             
1876   9E24             
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24             
1876   9E24             
1876   9E24             
1876   8EB6             
1876   8EB6 64          
1876   8EB7             
1876   9E24             
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24             
1876   9E24             
1876   9E24             
1876   8F45             
1876   8F45             
1876   8F45 00 00       
1876   8F47             
1876   9E24             
1876   9E24             
1876   9E24             
1876   903B             
1876   903B FF          
1876   903C             
1876   9E24             
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24~                STSND(snd_i2c,REPL,8,-1,11,s_manwall) ;sp_rand_ugh) 	;Man Hits Wall/Ceiling - Triggers additional speech command
1876   9E24             
1876   9E24             
1876   9E24             
1877   9E24                 \ \tmpptr .set *\.export snd_i2d\snd_i2d = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i2d = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mantrip\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Man Hits Trip Pad
1877   9E24             
1877   9E24             
1877   9E24             
1877   9E24             
1877   8BC3             
1877   8BC3 06          
1877   8BC4             
1877   9E24             
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24             
1877   9E24             
1877   9E24             
1877   9E24             
1877   8C70             
1877   8C70 25          
1877   8C71             
1877   9E24             
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24             
1877   9E24             
1877   9E24             
1877   8CF8             
1877   8CF8 34          
1877   8CF9             
1877   9E24             
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24             
1877   9E24             
1877   9E24             
1877   8D97             
1877   8D97 08          
1877   8D98             
1877   9E24             
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24             
1877   9E24             
1877   9E24             
1877   8E27             
1877   8E27 0B          
1877   8E28             
1877   9E24             
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24             
1877   9E24             
1877   9E24             
1877   8EB7             
1877   8EB7 29          
1877   8EB8             
1877   9E24             
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24             
1877   9E24             
1877   9E24             
1877   8F46             
1877   8F46             
1877   8F46 00 00       
1877   8F48             
1877   9E24             
1877   9E24             
1877   9E24             
1877   903C             
1877   903C FF          
1877   903D             
1877   9E24             
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24~                STSND(snd_i2d,REPL,8,-1,11,s_mantrip)    ;Man Hits Trip Pad
1877   9E24             
1877   9E24             
1877   9E24             
1878   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 04\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mantrip\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1878   9E24             
1878   9E24             
1878   8D98             
1878   8D98 08          
1878   8D99             
1878   9E24             
1878   9E24~                 CONT(             8,-1,04,s_mantrip)
1878   9E24~                 CONT(             8,-1,04,s_mantrip)
1878   9E24             
1878   9E24             
1878   9E24             
1878   8E28             
1878   8E28 04          
1878   8E29             
1878   9E24             
1878   9E24~                 CONT(             8,-1,04,s_mantrip)
1878   9E24~                 CONT(             8,-1,04,s_mantrip)
1878   9E24             
1878   9E24             
1878   9E24             
1878   8EB8             
1878   8EB8 29          
1878   8EB9             
1878   9E24             
1878   9E24~                 CONT(             8,-1,04,s_mantrip)
1878   9E24~                 CONT(             8,-1,04,s_mantrip)
1878   9E24             
1878   9E24             
1878   9E24             
1878   8F47             
1878   8F47             
1878   8F47 35 00       
1878   8F49             
1878   9E24             
1878   9E24             
1878   9E24             
1878   903D             
1878   903D FF          
1878   903E             
1878   9E24             
1878   9E24~                 CONT(             8,-1,04,s_mantrip)
1878   9E24~                 CONT(             8,-1,04,s_mantrip)
1878   9E24             
1878   9E24             
1879   9E24                 \ \tmpptr .set *\.export snd_i2f\snd_i2f = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i2f = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_spikes\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1     ;Man Hits Stalactite
1879   9E24             
1879   9E24             
1879   9E24             
1879   9E24             
1879   8BC4             
1879   8BC4 06          
1879   8BC5             
1879   9E24             
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24             
1879   9E24             
1879   9E24             
1879   9E24             
1879   8C71             
1879   8C71 26          
1879   8C72             
1879   9E24             
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24             
1879   9E24             
1879   9E24             
1879   8CF9             
1879   8CF9 36          
1879   8CFA             
1879   9E24             
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24             
1879   9E24             
1879   9E24             
1879   8D99             
1879   8D99 08          
1879   8D9A             
1879   9E24             
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24             
1879   9E24             
1879   9E24             
1879   8E29             
1879   8E29 00          
1879   8E2A             
1879   9E24             
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24             
1879   9E24             
1879   9E24             
1879   8EB9             
1879   8EB9 2A          
1879   8EBA             
1879   9E24             
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24             
1879   9E24             
1879   9E24             
1879   8F48             
1879   8F48             
1879   8F48 00 00       
1879   8F4A             
1879   9E24             
1879   9E24             
1879   9E24             
1879   903E             
1879   903E FF          
1879   903F             
1879   9E24             
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24~                STSND(snd_i2f,REPL,8,-1,00,s_spikes)     ;Man Hits Stalactite
1879   9E24             
1879   9E24             
1879   9E24             
1880   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 01\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_spikes2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1880   9E24             
1880   9E24             
1880   8D9A             
1880   8D9A 08          
1880   8D9B             
1880   9E24             
1880   9E24~                 CONT(             8,-1,01,s_spikes2)
1880   9E24~                 CONT(             8,-1,01,s_spikes2)
1880   9E24             
1880   9E24             
1880   9E24             
1880   8E2A             
1880   8E2A 01          
1880   8E2B             
1880   9E24             
1880   9E24~                 CONT(             8,-1,01,s_spikes2)
1880   9E24~                 CONT(             8,-1,01,s_spikes2)
1880   9E24             
1880   9E24             
1880   9E24             
1880   8EBA             
1880   8EBA 2B          
1880   8EBB             
1880   9E24             
1880   9E24~                 CONT(             8,-1,01,s_spikes2)
1880   9E24~                 CONT(             8,-1,01,s_spikes2)
1880   9E24             
1880   9E24             
1880   9E24             
1880   8F49             
1880   8F49             
1880   8F49 37 00       
1880   8F4B             
1880   9E24             
1880   9E24             
1880   9E24             
1880   903F             
1880   903F FF          
1880   9040             
1880   9E24             
1880   9E24~                 CONT(             8,-1,01,s_spikes2)
1880   9E24~                 CONT(             8,-1,01,s_spikes2)
1880   9E24             
1880   9E24             
1881   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_spikes3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1      
1881   9E24             
1881   9E24             
1881   8D9B             
1881   8D9B 08          
1881   8D9C             
1881   9E24             
1881   9E24~                 CONT(             8,-1,02,s_spikes3)      
1881   9E24~                 CONT(             8,-1,02,s_spikes3)      
1881   9E24             
1881   9E24             
1881   9E24             
1881   8E2B             
1881   8E2B 02          
1881   8E2C             
1881   9E24             
1881   9E24~                 CONT(             8,-1,02,s_spikes3)      
1881   9E24~                 CONT(             8,-1,02,s_spikes3)      
1881   9E24             
1881   9E24             
1881   9E24             
1881   8EBB             
1881   8EBB 2C          
1881   8EBC             
1881   9E24             
1881   9E24~                 CONT(             8,-1,02,s_spikes3)      
1881   9E24~                 CONT(             8,-1,02,s_spikes3)      
1881   9E24             
1881   9E24             
1881   9E24             
1881   8F4A             
1881   8F4A             
1881   8F4A 38 00       
1881   8F4C             
1881   9E24             
1881   9E24             
1881   9E24             
1881   9040             
1881   9040 FF          
1881   9041             
1881   9E24             
1881   9E24~                 CONT(             8,-1,02,s_spikes3)      
1881   9E24~                 CONT(             8,-1,02,s_spikes3)      
1881   9E24             
1881   9E24             
1882   9E24                 \ \tmpptr .set *\.export snd_i2g\snd_i2g = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i2g = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_oxygen\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1     ;Man Picks Up Oxygen
1882   9E24             
1882   9E24             
1882   9E24             
1882   9E24             
1882   8BC5             
1882   8BC5 06          
1882   8BC6             
1882   9E24             
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24             
1882   9E24             
1882   9E24             
1882   9E24             
1882   8C72             
1882   8C72 27          
1882   8C73             
1882   9E24             
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24             
1882   9E24             
1882   9E24             
1882   8CFA             
1882   8CFA 39          
1882   8CFB             
1882   9E24             
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24             
1882   9E24             
1882   9E24             
1882   8D9C             
1882   8D9C 08          
1882   8D9D             
1882   9E24             
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24             
1882   9E24             
1882   9E24             
1882   8E2C             
1882   8E2C 08          
1882   8E2D             
1882   9E24             
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24             
1882   9E24             
1882   9E24             
1882   8EBC             
1882   8EBC 65          
1882   8EBD             
1882   9E24             
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24             
1882   9E24             
1882   9E24             
1882   8F4B             
1882   8F4B             
1882   8F4B 00 00       
1882   8F4D             
1882   9E24             
1882   9E24             
1882   9E24             
1882   9041             
1882   9041 FF          
1882   9042             
1882   9E24             
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24~                STSND(snd_i2g,REPL,8,-1,08,s_oxygen)     ;Man Picks Up Oxygen
1882   9E24             
1882   9E24             
1882   9E24             
1883   9E24                 \ \tmpptr .set *\.export snd_i2h\snd_i2h = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i2h = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_key\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1        ;Man Picks Up Key
1883   9E24             
1883   9E24             
1883   9E24             
1883   9E24             
1883   8BC6             
1883   8BC6 06          
1883   8BC7             
1883   9E24             
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24             
1883   9E24             
1883   9E24             
1883   9E24             
1883   8C73             
1883   8C73 28          
1883   8C74             
1883   9E24             
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24             
1883   9E24             
1883   9E24             
1883   8CFB             
1883   8CFB 3A          
1883   8CFC             
1883   9E24             
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24             
1883   9E24             
1883   9E24             
1883   8D9D             
1883   8D9D 08          
1883   8D9E             
1883   9E24             
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24             
1883   9E24             
1883   9E24             
1883   8E2D             
1883   8E2D 00          
1883   8E2E             
1883   9E24             
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24             
1883   9E24             
1883   9E24             
1883   8EBD             
1883   8EBD 2D          
1883   8EBE             
1883   9E24             
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24             
1883   9E24             
1883   9E24             
1883   8F4C             
1883   8F4C             
1883   8F4C 00 00       
1883   8F4E             
1883   9E24             
1883   9E24             
1883   9E24             
1883   9042             
1883   9042 FF          
1883   9043             
1883   9E24             
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24~                STSND(snd_i2h,REPL,8,-1,00,s_key)        ;Man Picks Up Key
1883   9E24             
1883   9E24             
1883   9E24             
1884   9E24                 \ \tmpptr .set *\.export snd_i2i\snd_i2i = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i2i = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_door\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       ;Man Opens Door
1884   9E24             
1884   9E24             
1884   9E24             
1884   9E24             
1884   8BC7             
1884   8BC7 06          
1884   8BC8             
1884   9E24             
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24             
1884   9E24             
1884   9E24             
1884   9E24             
1884   8C74             
1884   8C74 29          
1884   8C75             
1884   9E24             
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24             
1884   9E24             
1884   9E24             
1884   8CFC             
1884   8CFC 3B          
1884   8CFD             
1884   9E24             
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24             
1884   9E24             
1884   9E24             
1884   8D9E             
1884   8D9E 08          
1884   8D9F             
1884   9E24             
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24             
1884   9E24             
1884   9E24             
1884   8E2E             
1884   8E2E 00          
1884   8E2F             
1884   9E24             
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24             
1884   9E24             
1884   9E24             
1884   8EBE             
1884   8EBE 2E          
1884   8EBF             
1884   9E24             
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24             
1884   9E24             
1884   9E24             
1884   8F4D             
1884   8F4D             
1884   8F4D 00 00       
1884   8F4F             
1884   9E24             
1884   9E24             
1884   9E24             
1884   9043             
1884   9043 FF          
1884   9044             
1884   9E24             
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24~                STSND(snd_i2i,REPL,8,-1,00,s_door)       ;Man Opens Door
1884   9E24             
1884   9E24             
1884   9E24             
1885   9E24                 \ \tmpptr .set *\.export snd_b1d\snd_b1d = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_b1d = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_rhum\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       ;Reactor Hum
1885   9E24             
1885   9E24             
1885   9E24             
1885   9E24             
1885   8BC8             
1885   8BC8 06          
1885   8BC9             
1885   9E24             
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24             
1885   9E24             
1885   9E24             
1885   9E24             
1885   8C75             
1885   8C75 2A          
1885   8C76             
1885   9E24             
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24             
1885   9E24             
1885   9E24             
1885   8CFD             
1885   8CFD 3C          
1885   8CFE             
1885   9E24             
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24             
1885   9E24             
1885   9E24             
1885   8D9F             
1885   8D9F 08          
1885   8DA0             
1885   9E24             
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24             
1885   9E24             
1885   9E24             
1885   8E2F             
1885   8E2F 0B          
1885   8E30             
1885   9E24             
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24             
1885   9E24             
1885   9E24             
1885   8EBF             
1885   8EBF 69          
1885   8EC0             
1885   9E24             
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24             
1885   9E24             
1885   9E24             
1885   8F4E             
1885   8F4E             
1885   8F4E 00 00       
1885   8F50             
1885   9E24             
1885   9E24             
1885   9E24             
1885   9044             
1885   9044 FF          
1885   9045             
1885   9E24             
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24~                STSND(snd_b1d,REPL,8,-1,11,s_rhum)       ;Reactor Hum
1885   9E24             
1885   9E24             
1885   9E24             
1886   9E24                 \ \tmpptr .set *\.export snd_d2 \snd_d2  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_d2  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 06\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_reactor\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Reactor Supercritical
1886   9E24             
1886   9E24             
1886   9E24             
1886   9E24             
1886   8BC9             
1886   8BC9 06          
1886   8BCA             
1886   9E24             
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24             
1886   9E24             
1886   9E24             
1886   9E24             
1886   8C76             
1886   8C76 2B          
1886   8C77             
1886   9E24             
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24             
1886   9E24             
1886   9E24             
1886   8CFE             
1886   8CFE 3D          
1886   8CFF             
1886   9E24             
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24             
1886   9E24             
1886   9E24             
1886   8DA0             
1886   8DA0 08          
1886   8DA1             
1886   9E24             
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24             
1886   9E24             
1886   9E24             
1886   8E30             
1886   8E30 06          
1886   8E31             
1886   9E24             
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24             
1886   9E24             
1886   9E24             
1886   8EC0             
1886   8EC0 19          
1886   8EC1             
1886   9E24             
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24             
1886   9E24             
1886   9E24             
1886   8F4F             
1886   8F4F             
1886   8F4F 00 00       
1886   8F51             
1886   9E24             
1886   9E24             
1886   9E24             
1886   9045             
1886   9045 FF          
1886   9046             
1886   9E24             
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24~                STSND(snd_d2 ,REPL,8,-1,06,s_reactor)    ;Reactor Supercritical
1886   9E24             
1886   9E24             
1886   9E24             
1887   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 07\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_reactor2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1887   9E24             
1887   9E24             
1887   8DA1             
1887   8DA1 08          
1887   8DA2             
1887   9E24             
1887   9E24~                 CONT(             8,-1,07,s_reactor2)
1887   9E24~                 CONT(             8,-1,07,s_reactor2)
1887   9E24             
1887   9E24             
1887   9E24             
1887   8E31             
1887   8E31 07          
1887   8E32             
1887   9E24             
1887   9E24~                 CONT(             8,-1,07,s_reactor2)
1887   9E24~                 CONT(             8,-1,07,s_reactor2)
1887   9E24             
1887   9E24             
1887   9E24             
1887   8EC1             
1887   8EC1 1A          
1887   8EC2             
1887   9E24             
1887   9E24~                 CONT(             8,-1,07,s_reactor2)
1887   9E24~                 CONT(             8,-1,07,s_reactor2)
1887   9E24             
1887   9E24             
1887   9E24             
1887   8F50             
1887   8F50             
1887   8F50 3E 00       
1887   8F52             
1887   9E24             
1887   9E24             
1887   9E24             
1887   9046             
1887   9046 FF          
1887   9047             
1887   9E24             
1887   9E24~                 CONT(             8,-1,07,s_reactor2)
1887   9E24~                 CONT(             8,-1,07,s_reactor2)
1887   9E24             
1887   9E24             
1888   9E24                 \ \tmpptr .set *\.export snd_i4b\snd_i4b = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i4b = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_handoff\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Hand Turned Off
1888   9E24             
1888   9E24             
1888   9E24             
1888   9E24             
1888   8BCA             
1888   8BCA 06          
1888   8BCB             
1888   9E24             
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24             
1888   9E24             
1888   9E24             
1888   9E24             
1888   8C77             
1888   8C77 2C          
1888   8C78             
1888   9E24             
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24             
1888   9E24             
1888   9E24             
1888   8CFF             
1888   8CFF 3F          
1888   8D00             
1888   9E24             
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24             
1888   9E24             
1888   9E24             
1888   8DA2             
1888   8DA2 08          
1888   8DA3             
1888   9E24             
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24             
1888   9E24             
1888   9E24             
1888   8E32             
1888   8E32 02          
1888   8E33             
1888   9E24             
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24             
1888   9E24             
1888   9E24             
1888   8EC2             
1888   8EC2 2F          
1888   8EC3             
1888   9E24             
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24             
1888   9E24             
1888   9E24             
1888   8F51             
1888   8F51             
1888   8F51 00 00       
1888   8F53             
1888   9E24             
1888   9E24             
1888   9E24             
1888   9047             
1888   9047 FF          
1888   9048             
1888   9E24             
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24~                STSND(snd_i4b,REPL,8,-1,02,s_handoff)    ;Hand Turned Off
1888   9E24             
1888   9E24             
1888   9E24             
1889   9E24                 \ \tmpptr .set *\.export snd_i4c\snd_i4c = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i4c = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_handon\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1     ;Hand Turned On
1889   9E24             
1889   9E24             
1889   9E24             
1889   9E24             
1889   8BCB             
1889   8BCB 06          
1889   8BCC             
1889   9E24             
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24             
1889   9E24             
1889   9E24             
1889   9E24             
1889   8C78             
1889   8C78 2D          
1889   8C79             
1889   9E24             
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24             
1889   9E24             
1889   9E24             
1889   8D00             
1889   8D00 40          
1889   8D01             
1889   9E24             
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24             
1889   9E24             
1889   9E24             
1889   8DA3             
1889   8DA3 08          
1889   8DA4             
1889   9E24             
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24             
1889   9E24             
1889   9E24             
1889   8E33             
1889   8E33 02          
1889   8E34             
1889   9E24             
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24             
1889   9E24             
1889   9E24             
1889   8EC3             
1889   8EC3 30          
1889   8EC4             
1889   9E24             
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24             
1889   9E24             
1889   9E24             
1889   8F52             
1889   8F52             
1889   8F52 00 00       
1889   8F54             
1889   9E24             
1889   9E24             
1889   9E24             
1889   9048             
1889   9048 FF          
1889   9049             
1889   9E24             
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24~                STSND(snd_i4c,REPL,8,-1,02,s_handon)     ;Hand Turned On
1889   9E24             
1889   9E24             
1889   9E24             
1890   9E24                 \ \tmpptr .set *\.export snd_i6 \snd_i6  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i6  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_trans\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;Transporter Booth
1890   9E24             
1890   9E24             
1890   9E24             
1890   9E24             
1890   8BCC             
1890   8BCC 06          
1890   8BCD             
1890   9E24             
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24             
1890   9E24             
1890   9E24             
1890   9E24             
1890   8C79             
1890   8C79 2E          
1890   8C7A             
1890   9E24             
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24             
1890   9E24             
1890   9E24             
1890   8D01             
1890   8D01 41          
1890   8D02             
1890   9E24             
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24             
1890   9E24             
1890   9E24             
1890   8DA4             
1890   8DA4 08          
1890   8DA5             
1890   9E24             
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24             
1890   9E24             
1890   9E24             
1890   8E34             
1890   8E34 00          
1890   8E35             
1890   9E24             
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24             
1890   9E24             
1890   9E24             
1890   8EC4             
1890   8EC4 31          
1890   8EC5             
1890   9E24             
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24             
1890   9E24             
1890   9E24             
1890   8F53             
1890   8F53             
1890   8F53 00 00       
1890   8F55             
1890   9E24             
1890   9E24             
1890   9E24             
1890   9049             
1890   9049 FF          
1890   904A             
1890   9E24             
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24~                STSND(snd_i6 ,REPL,8,-1,00,s_trans)      ;Transporter Booth
1890   9E24             
1890   9E24             
1890   9E24             
1891   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_trans2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1891   9E24             
1891   9E24             
1891   8DA5             
1891   8DA5 08          
1891   8DA6             
1891   9E24             
1891   9E24~                 CONT(             8,-1,02,s_trans2)
1891   9E24~                 CONT(             8,-1,02,s_trans2)
1891   9E24             
1891   9E24             
1891   9E24             
1891   8E35             
1891   8E35 02          
1891   8E36             
1891   9E24             
1891   9E24~                 CONT(             8,-1,02,s_trans2)
1891   9E24~                 CONT(             8,-1,02,s_trans2)
1891   9E24             
1891   9E24             
1891   9E24             
1891   8EC5             
1891   8EC5 32          
1891   8EC6             
1891   9E24             
1891   9E24~                 CONT(             8,-1,02,s_trans2)
1891   9E24~                 CONT(             8,-1,02,s_trans2)
1891   9E24             
1891   9E24             
1891   9E24             
1891   8F54             
1891   8F54             
1891   8F54 42 00       
1891   8F56             
1891   9E24             
1891   9E24             
1891   9E24             
1891   904A             
1891   904A FF          
1891   904B             
1891   9E24             
1891   9E24~                 CONT(             8,-1,02,s_trans2)
1891   9E24~                 CONT(             8,-1,02,s_trans2)
1891   9E24             
1891   9E24             
1892   9E24             
1893   9E24                 \ \tmpptr .set *\.export snd_i7a\snd_i7a = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i7a = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 01\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_robshot\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Robot Fires a Shot
1893   9E24             
1893   9E24             
1893   9E24             
1893   9E24             
1893   8BCD             
1893   8BCD 06          
1893   8BCE             
1893   9E24             
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24             
1893   9E24             
1893   9E24             
1893   9E24             
1893   8C7A             
1893   8C7A 2F          
1893   8C7B             
1893   9E24             
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24             
1893   9E24             
1893   9E24             
1893   8D02             
1893   8D02 43          
1893   8D03             
1893   9E24             
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24             
1893   9E24             
1893   9E24             
1893   8DA6             
1893   8DA6 08          
1893   8DA7             
1893   9E24             
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24             
1893   9E24             
1893   9E24             
1893   8E36             
1893   8E36 01          
1893   8E37             
1893   9E24             
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24             
1893   9E24             
1893   9E24             
1893   8EC6             
1893   8EC6 66          
1893   8EC7             
1893   9E24             
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24             
1893   9E24             
1893   9E24             
1893   8F55             
1893   8F55             
1893   8F55 00 00       
1893   8F57             
1893   9E24             
1893   9E24             
1893   9E24             
1893   904B             
1893   904B FF          
1893   904C             
1893   9E24             
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24~                STSND(snd_i7a,REPL,8,-1,01,s_robshot)    ;Robot Fires a Shot
1893   9E24             
1893   9E24             
1893   9E24             
1894   9E24             	
1895   9E24                 \ \tmpptr .set *\.export snd_i7b\snd_i7b = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i7b = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_cann\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       ;Laser Cannon Fires
1895   9E24             
1895   9E24             
1895   9E24             
1895   9E24             
1895   8BCE             
1895   8BCE 06          
1895   8BCF             
1895   9E24             
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24             
1895   9E24             
1895   9E24             
1895   9E24             
1895   8C7B             
1895   8C7B 30          
1895   8C7C             
1895   9E24             
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24             
1895   9E24             
1895   9E24             
1895   8D03             
1895   8D03 44          
1895   8D04             
1895   9E24             
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24             
1895   9E24             
1895   9E24             
1895   8DA7             
1895   8DA7 08          
1895   8DA8             
1895   9E24             
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24             
1895   9E24             
1895   9E24             
1895   8E37             
1895   8E37 08          
1895   8E38             
1895   9E24             
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24             
1895   9E24             
1895   9E24             
1895   8EC7             
1895   8EC7 33          
1895   8EC8             
1895   9E24             
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24             
1895   9E24             
1895   9E24             
1895   8F56             
1895   8F56             
1895   8F56 00 00       
1895   8F58             
1895   9E24             
1895   9E24             
1895   9E24             
1895   904C             
1895   904C FF          
1895   904D             
1895   9E24             
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24~                STSND(snd_i7b,REPL,8,-1,08,s_cann)       ;Laser Cannon Fires
1895   9E24             
1895   9E24             
1895   9E24             
1896   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_cann2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1896   9E24             
1896   9E24             
1896   8DA8             
1896   8DA8 08          
1896   8DA9             
1896   9E24             
1896   9E24~                 CONT(             8,-1,09,s_cann2)
1896   9E24~                 CONT(             8,-1,09,s_cann2)
1896   9E24             
1896   9E24             
1896   9E24             
1896   8E38             
1896   8E38 09          
1896   8E39             
1896   9E24             
1896   9E24~                 CONT(             8,-1,09,s_cann2)
1896   9E24~                 CONT(             8,-1,09,s_cann2)
1896   9E24             
1896   9E24             
1896   9E24             
1896   8EC8             
1896   8EC8 34          
1896   8EC9             
1896   9E24             
1896   9E24~                 CONT(             8,-1,09,s_cann2)
1896   9E24~                 CONT(             8,-1,09,s_cann2)
1896   9E24             
1896   9E24             
1896   9E24             
1896   8F57             
1896   8F57             
1896   8F57 45 00       
1896   8F59             
1896   9E24             
1896   9E24             
1896   9E24             
1896   904D             
1896   904D FF          
1896   904E             
1896   9E24             
1896   9E24~                 CONT(             8,-1,09,s_cann2)
1896   9E24~                 CONT(             8,-1,09,s_cann2)
1896   9E24             
1896   9E24             
1897   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_cann3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1897   9E24             
1897   9E24             
1897   8DA9             
1897   8DA9 08          
1897   8DAA             
1897   9E24             
1897   9E24~                 CONT(             8,-1,10,s_cann3)
1897   9E24~                 CONT(             8,-1,10,s_cann3)
1897   9E24             
1897   9E24             
1897   9E24             
1897   8E39             
1897   8E39 0A          
1897   8E3A             
1897   9E24             
1897   9E24~                 CONT(             8,-1,10,s_cann3)
1897   9E24~                 CONT(             8,-1,10,s_cann3)
1897   9E24             
1897   9E24             
1897   9E24             
1897   8EC9             
1897   8EC9 35          
1897   8ECA             
1897   9E24             
1897   9E24~                 CONT(             8,-1,10,s_cann3)
1897   9E24~                 CONT(             8,-1,10,s_cann3)
1897   9E24             
1897   9E24             
1897   9E24             
1897   8F58             
1897   8F58             
1897   8F58 46 00       
1897   8F5A             
1897   9E24             
1897   9E24             
1897   9E24             
1897   904E             
1897   904E FF          
1897   904F             
1897   9E24             
1897   9E24~                 CONT(             8,-1,10,s_cann3)
1897   9E24~                 CONT(             8,-1,10,s_cann3)
1897   9E24             
1897   9E24             
1898   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_cann4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1898   9E24             
1898   9E24             
1898   8DAA             
1898   8DAA 08          
1898   8DAB             
1898   9E24             
1898   9E24~                 CONT(             8,-1,11,s_cann4)
1898   9E24~                 CONT(             8,-1,11,s_cann4)
1898   9E24             
1898   9E24             
1898   9E24             
1898   8E3A             
1898   8E3A 0B          
1898   8E3B             
1898   9E24             
1898   9E24~                 CONT(             8,-1,11,s_cann4)
1898   9E24~                 CONT(             8,-1,11,s_cann4)
1898   9E24             
1898   9E24             
1898   9E24             
1898   8ECA             
1898   8ECA 36          
1898   8ECB             
1898   9E24             
1898   9E24~                 CONT(             8,-1,11,s_cann4)
1898   9E24~                 CONT(             8,-1,11,s_cann4)
1898   9E24             
1898   9E24             
1898   9E24             
1898   8F59             
1898   8F59             
1898   8F59 47 00       
1898   8F5B             
1898   9E24             
1898   9E24             
1898   9E24             
1898   904F             
1898   904F FF          
1898   9050             
1898   9E24             
1898   9E24~                 CONT(             8,-1,11,s_cann4)
1898   9E24~                 CONT(             8,-1,11,s_cann4)
1898   9E24             
1898   9E24             
1899   9E24             	 
1900   9E24                 \ \tmpptr .set *\.export snd_i7c\snd_i7c = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i7c = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 01\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_ssplash\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Shot Splashes On Wall
1900   9E24             
1900   9E24             
1900   9E24             
1900   9E24             
1900   8BCF             
1900   8BCF 06          
1900   8BD0             
1900   9E24             
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24             
1900   9E24             
1900   9E24             
1900   9E24             
1900   8C7C             
1900   8C7C 31          
1900   8C7D             
1900   9E24             
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24             
1900   9E24             
1900   9E24             
1900   8D04             
1900   8D04 48          
1900   8D05             
1900   9E24             
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24             
1900   9E24             
1900   9E24             
1900   8DAB             
1900   8DAB 08          
1900   8DAC             
1900   9E24             
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24             
1900   9E24             
1900   9E24             
1900   8E3B             
1900   8E3B 01          
1900   8E3C             
1900   9E24             
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24             
1900   9E24             
1900   9E24             
1900   8ECB             
1900   8ECB 37          
1900   8ECC             
1900   9E24             
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24             
1900   9E24             
1900   9E24             
1900   8F5A             
1900   8F5A             
1900   8F5A 00 00       
1900   8F5C             
1900   9E24             
1900   9E24             
1900   9E24             
1900   9050             
1900   9050 FF          
1900   9051             
1900   9E24             
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24~                STSND(snd_i7c,REPL,8,-1,01,s_ssplash)    ;Shot Splashes On Wall
1900   9E24             
1900   9E24             
1900   9E24             
1901   9E24                 \ \tmpptr .set *\.export snd_i8 \snd_i8  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i8  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_footstep\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Footsteps
1901   9E24             
1901   9E24             
1901   9E24             
1901   9E24             
1901   8BD0             
1901   8BD0 06          
1901   8BD1             
1901   9E24             
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24             
1901   9E24             
1901   9E24             
1901   9E24             
1901   8C7D             
1901   8C7D 32          
1901   8C7E             
1901   9E24             
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24             
1901   9E24             
1901   9E24             
1901   8D05             
1901   8D05 49          
1901   8D06             
1901   9E24             
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24             
1901   9E24             
1901   9E24             
1901   8DAC             
1901   8DAC 08          
1901   8DAD             
1901   9E24             
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24             
1901   9E24             
1901   9E24             
1901   8E3C             
1901   8E3C 00          
1901   8E3D             
1901   9E24             
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24             
1901   9E24             
1901   9E24             
1901   8ECC             
1901   8ECC 67          
1901   8ECD             
1901   9E24             
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24             
1901   9E24             
1901   9E24             
1901   8F5B             
1901   8F5B             
1901   8F5B 00 00       
1901   8F5D             
1901   9E24             
1901   9E24             
1901   9E24             
1901   9051             
1901   9051 FF          
1901   9052             
1901   9E24             
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24~                STSND(snd_i8 ,REPL,8,-1,00,s_footstep)   ;Footsteps
1901   9E24             
1901   9E24             
1901   9E24             
1902   9E24                 \ \tmpptr .set *\.export snd_i9 \snd_i9  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_i9  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 07\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_nooxy\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;Oxygen Out
1902   9E24             
1902   9E24             
1902   9E24             
1902   9E24             
1902   8BD1             
1902   8BD1 06          
1902   8BD2             
1902   9E24             
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24             
1902   9E24             
1902   9E24             
1902   9E24             
1902   8C7E             
1902   8C7E 33          
1902   8C7F             
1902   9E24             
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24             
1902   9E24             
1902   9E24             
1902   8D06             
1902   8D06 4A          
1902   8D07             
1902   9E24             
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24             
1902   9E24             
1902   9E24             
1902   8DAD             
1902   8DAD 08          
1902   8DAE             
1902   9E24             
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24             
1902   9E24             
1902   9E24             
1902   8E3D             
1902   8E3D 07          
1902   8E3E             
1902   9E24             
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24             
1902   9E24             
1902   9E24             
1902   8ECD             
1902   8ECD 68          
1902   8ECE             
1902   9E24             
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24             
1902   9E24             
1902   9E24             
1902   8F5C             
1902   8F5C             
1902   8F5C 00 00       
1902   8F5E             
1902   9E24             
1902   9E24             
1902   9E24             
1902   9052             
1902   9052 FF          
1902   9053             
1902   9E24             
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24~                STSND(snd_i9 ,REPL,8,-1,07,s_nooxy)      ;Oxygen Out
1902   9E24             
1902   9E24             
1902   9E24             
1903   9E24                 
1904   9E24             ;* J) Leaving the Maze
1905   9E24                 \ \tmpptr .set *\.export snd_j3 \snd_j3  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_j3  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_rblow\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      ;Reactor Blows Up
1905   9E24             
1905   9E24             
1905   9E24             
1905   9E24             
1905   8BD2             
1905   8BD2 06          
1905   8BD3             
1905   9E24             
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24             
1905   9E24             
1905   9E24             
1905   9E24             
1905   8C7F             
1905   8C7F 34          
1905   8C80             
1905   9E24             
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24             
1905   9E24             
1905   9E24             
1905   8D07             
1905   8D07 4B          
1905   8D08             
1905   9E24             
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24             
1905   9E24             
1905   9E24             
1905   8DAE             
1905   8DAE 08          
1905   8DAF             
1905   9E24             
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24             
1905   9E24             
1905   9E24             
1905   8E3E             
1905   8E3E 09          
1905   8E3F             
1905   9E24             
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24             
1905   9E24             
1905   9E24             
1905   8ECE             
1905   8ECE 38          
1905   8ECF             
1905   9E24             
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24             
1905   9E24             
1905   9E24             
1905   8F5D             
1905   8F5D             
1905   8F5D 00 00       
1905   8F5F             
1905   9E24             
1905   9E24             
1905   9E24             
1905   9053             
1905   9053 FF          
1905   9054             
1905   9E24             
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24~                STSND(snd_j3 ,REPL,8,-1,09,s_rblow)      ;Reactor Blows Up
1905   9E24             
1905   9E24             
1905   9E24             
1906   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_rblow2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1906   9E24             
1906   9E24             
1906   8DAF             
1906   8DAF 08          
1906   8DB0             
1906   9E24             
1906   9E24~                 CONT(             8,-1,10,s_rblow2)
1906   9E24~                 CONT(             8,-1,10,s_rblow2)
1906   9E24             
1906   9E24             
1906   9E24             
1906   8E3F             
1906   8E3F 0A          
1906   8E40             
1906   9E24             
1906   9E24~                 CONT(             8,-1,10,s_rblow2)
1906   9E24~                 CONT(             8,-1,10,s_rblow2)
1906   9E24             
1906   9E24             
1906   9E24             
1906   8ECF             
1906   8ECF 39          
1906   8ED0             
1906   9E24             
1906   9E24~                 CONT(             8,-1,10,s_rblow2)
1906   9E24~                 CONT(             8,-1,10,s_rblow2)
1906   9E24             
1906   9E24             
1906   9E24             
1906   8F5E             
1906   8F5E             
1906   8F5E 4C 00       
1906   8F60             
1906   9E24             
1906   9E24             
1906   9E24             
1906   9054             
1906   9054 FF          
1906   9055             
1906   9E24             
1906   9E24~                 CONT(             8,-1,10,s_rblow2)
1906   9E24~                 CONT(             8,-1,10,s_rblow2)
1906   9E24             
1906   9E24             
1907   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 12\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_rblow2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1907   9E24             
1907   9E24             
1907   8DB0             
1907   8DB0 08          
1907   8DB1             
1907   9E24             
1907   9E24~                 CONT(             8,-1,12,s_rblow2)
1907   9E24~                 CONT(             8,-1,12,s_rblow2)
1907   9E24             
1907   9E24             
1907   9E24             
1907   8E40             
1907   8E40 0C          
1907   8E41             
1907   9E24             
1907   9E24~                 CONT(             8,-1,12,s_rblow2)
1907   9E24~                 CONT(             8,-1,12,s_rblow2)
1907   9E24             
1907   9E24             
1907   9E24             
1907   8ED0             
1907   8ED0 39          
1907   8ED1             
1907   9E24             
1907   9E24~                 CONT(             8,-1,12,s_rblow2)
1907   9E24~                 CONT(             8,-1,12,s_rblow2)
1907   9E24             
1907   9E24             
1907   9E24             
1907   8F5F             
1907   8F5F             
1907   8F5F 4D 00       
1907   8F61             
1907   9E24             
1907   9E24             
1907   9E24             
1907   9055             
1907   9055 FF          
1907   9056             
1907   9E24             
1907   9E24~                 CONT(             8,-1,12,s_rblow2)
1907   9E24~                 CONT(             8,-1,12,s_rblow2)
1907   9E24             
1907   9E24             
1908   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 13\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_rblow2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1908   9E24             
1908   9E24             
1908   8DB1             
1908   8DB1 08          
1908   8DB2             
1908   9E24             
1908   9E24~                 CONT(             8,-1,13,s_rblow2)
1908   9E24~                 CONT(             8,-1,13,s_rblow2)
1908   9E24             
1908   9E24             
1908   9E24             
1908   8E41             
1908   8E41 0D          
1908   8E42             
1908   9E24             
1908   9E24~                 CONT(             8,-1,13,s_rblow2)
1908   9E24~                 CONT(             8,-1,13,s_rblow2)
1908   9E24             
1908   9E24             
1908   9E24             
1908   8ED1             
1908   8ED1 39          
1908   8ED2             
1908   9E24             
1908   9E24~                 CONT(             8,-1,13,s_rblow2)
1908   9E24~                 CONT(             8,-1,13,s_rblow2)
1908   9E24             
1908   9E24             
1908   9E24             
1908   8F60             
1908   8F60             
1908   8F60 4E 00       
1908   8F62             
1908   9E24             
1908   9E24             
1908   9E24             
1908   9056             
1908   9056 FF          
1908   9057             
1908   9E24             
1908   9E24~                 CONT(             8,-1,13,s_rblow2)
1908   9E24~                 CONT(             8,-1,13,s_rblow2)
1908   9E24             
1908   9E24             
1909   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_rblow3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1909   9E24             
1909   9E24             
1909   8DB2             
1909   8DB2 08          
1909   8DB3             
1909   9E24             
1909   9E24~                 CONT(             8,-1,11,s_rblow3)
1909   9E24~                 CONT(             8,-1,11,s_rblow3)
1909   9E24             
1909   9E24             
1909   9E24             
1909   8E42             
1909   8E42 0B          
1909   8E43             
1909   9E24             
1909   9E24~                 CONT(             8,-1,11,s_rblow3)
1909   9E24~                 CONT(             8,-1,11,s_rblow3)
1909   9E24             
1909   9E24             
1909   9E24             
1909   8ED2             
1909   8ED2 3A          
1909   8ED3             
1909   9E24             
1909   9E24~                 CONT(             8,-1,11,s_rblow3)
1909   9E24~                 CONT(             8,-1,11,s_rblow3)
1909   9E24             
1909   9E24             
1909   9E24             
1909   8F61             
1909   8F61             
1909   8F61 4F 00       
1909   8F63             
1909   9E24             
1909   9E24             
1909   9E24             
1909   9057             
1909   9057 FF          
1909   9058             
1909   9E24             
1909   9E24~                 CONT(             8,-1,11,s_rblow3)
1909   9E24~                 CONT(             8,-1,11,s_rblow3)
1909   9E24             
1909   9E24             
1910   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 14\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_rblow3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1910   9E24             
1910   9E24             
1910   8DB3             
1910   8DB3 08          
1910   8DB4             
1910   9E24             
1910   9E24~                 CONT(             8,-1,14,s_rblow3)
1910   9E24~                 CONT(             8,-1,14,s_rblow3)
1910   9E24             
1910   9E24             
1910   9E24             
1910   8E43             
1910   8E43 0E          
1910   8E44             
1910   9E24             
1910   9E24~                 CONT(             8,-1,14,s_rblow3)
1910   9E24~                 CONT(             8,-1,14,s_rblow3)
1910   9E24             
1910   9E24             
1910   9E24             
1910   8ED3             
1910   8ED3 3A          
1910   8ED4             
1910   9E24             
1910   9E24~                 CONT(             8,-1,14,s_rblow3)
1910   9E24~                 CONT(             8,-1,14,s_rblow3)
1910   9E24             
1910   9E24             
1910   9E24             
1910   8F62             
1910   8F62             
1910   8F62 50 00       
1910   8F64             
1910   9E24             
1910   9E24             
1910   9E24             
1910   9058             
1910   9058 FF          
1910   9059             
1910   9E24             
1910   9E24~                 CONT(             8,-1,14,s_rblow3)
1910   9E24~                 CONT(             8,-1,14,s_rblow3)
1910   9E24             
1910   9E24             
1911   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 15\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_rblow3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1911   9E24             
1911   9E24             
1911   8DB4             
1911   8DB4 08          
1911   8DB5             
1911   9E24             
1911   9E24~                 CONT(             8,-1,15,s_rblow3)
1911   9E24~                 CONT(             8,-1,15,s_rblow3)
1911   9E24             
1911   9E24             
1911   9E24             
1911   8E44             
1911   8E44 0F          
1911   8E45             
1911   9E24             
1911   9E24~                 CONT(             8,-1,15,s_rblow3)
1911   9E24~                 CONT(             8,-1,15,s_rblow3)
1911   9E24             
1911   9E24             
1911   9E24             
1911   8ED4             
1911   8ED4 3A          
1911   8ED5             
1911   9E24             
1911   9E24~                 CONT(             8,-1,15,s_rblow3)
1911   9E24~                 CONT(             8,-1,15,s_rblow3)
1911   9E24             
1911   9E24             
1911   9E24             
1911   8F63             
1911   8F63             
1911   8F63 51 00       
1911   8F65             
1911   9E24             
1911   9E24             
1911   9E24             
1911   9059             
1911   9059 FF          
1911   905A             
1911   9E24             
1911   9E24~                 CONT(             8,-1,15,s_rblow3)
1911   9E24~                 CONT(             8,-1,15,s_rblow3)
1911   9E24             
1911   9E24             
1912   9E24             	 
1913   9E24                 \ \tmpptr .set *\.export snd_j6 \snd_j6  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_j6  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_escfall\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1    ;Escape Pod Fall
1913   9E24             
1913   9E24             
1913   9E24             
1913   9E24             
1913   8BD3             
1913   8BD3 06          
1913   8BD4             
1913   9E24             
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24             
1913   9E24             
1913   9E24             
1913   9E24             
1913   8C80             
1913   8C80 35          
1913   8C81             
1913   9E24             
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24             
1913   9E24             
1913   9E24             
1913   8D08             
1913   8D08 52          
1913   8D09             
1913   9E24             
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24             
1913   9E24             
1913   9E24             
1913   8DB5             
1913   8DB5 08          
1913   8DB6             
1913   9E24             
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24             
1913   9E24             
1913   9E24             
1913   8E45             
1913   8E45 08          
1913   8E46             
1913   9E24             
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24             
1913   9E24             
1913   9E24             
1913   8ED5             
1913   8ED5 3B          
1913   8ED6             
1913   9E24             
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24             
1913   9E24             
1913   9E24             
1913   8F64             
1913   8F64             
1913   8F64 00 00       
1913   8F66             
1913   9E24             
1913   9E24             
1913   9E24             
1913   905A             
1913   905A FF          
1913   905B             
1913   9E24             
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24~                STSND(snd_j6 ,REPL,8,-1,08,s_escfall)    ;Escape Pod Fall
1913   9E24             
1913   9E24             
1913   9E24             
1914   9E24                 
1915   9E24             ;***************************************************   
1916   9E24             ;*    Music
1917   9E24             ;***************************************************
1918   9E24             ;*  Mystery - Enter Maze
1919   9E24                 \ \tmpptr .set *\.export snd_mys\snd_mys = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_mys = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mystery\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       
1919   9E24             
1919   9E24             
1919   9E24             
1919   9E24             
1919   8BD4             
1919   8BD4 06          
1919   8BD5             
1919   9E24             
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24             
1919   9E24             
1919   9E24             
1919   9E24             
1919   8C81             
1919   8C81 36          
1919   8C82             
1919   9E24             
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24             
1919   9E24             
1919   9E24             
1919   8D09             
1919   8D09 53          
1919   8D0A             
1919   9E24             
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24             
1919   9E24             
1919   9E24             
1919   8DB6             
1919   8DB6 06          
1919   8DB7             
1919   9E24             
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24             
1919   9E24             
1919   9E24             
1919   8E46             
1919   8E46 00          
1919   8E47             
1919   9E24             
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24             
1919   9E24             
1919   9E24             
1919   8ED6             
1919   8ED6 43          
1919   8ED7             
1919   9E24             
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24             
1919   9E24             
1919   9E24             
1919   8F65             
1919   8F65             
1919   8F65 00 00       
1919   8F67             
1919   9E24             
1919   9E24             
1919   9E24             
1919   905B             
1919   905B FF          
1919   905C             
1919   9E24             
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24~                STSND(snd_mys,REPL,6,-1,00,s_mystery)       
1919   9E24             
1919   9E24             
1919   9E24             
1920   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mystery2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1920   9E24             
1920   9E24             
1920   8DB7             
1920   8DB7 06          
1920   8DB8             
1920   9E24             
1920   9E24~                 CONT(             6,-1,02,s_mystery2)
1920   9E24~                 CONT(             6,-1,02,s_mystery2)
1920   9E24             
1920   9E24             
1920   9E24             
1920   8E47             
1920   8E47 02          
1920   8E48             
1920   9E24             
1920   9E24~                 CONT(             6,-1,02,s_mystery2)
1920   9E24~                 CONT(             6,-1,02,s_mystery2)
1920   9E24             
1920   9E24             
1920   9E24             
1920   8ED7             
1920   8ED7 44          
1920   8ED8             
1920   9E24             
1920   9E24~                 CONT(             6,-1,02,s_mystery2)
1920   9E24~                 CONT(             6,-1,02,s_mystery2)
1920   9E24             
1920   9E24             
1920   9E24             
1920   8F66             
1920   8F66             
1920   8F66 54 00       
1920   8F68             
1920   9E24             
1920   9E24             
1920   9E24             
1920   905C             
1920   905C FF          
1920   905D             
1920   9E24             
1920   9E24~                 CONT(             6,-1,02,s_mystery2)
1920   9E24~                 CONT(             6,-1,02,s_mystery2)
1920   9E24             
1920   9E24             
1921   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 04\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mystery3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1921   9E24             
1921   9E24             
1921   8DB8             
1921   8DB8 06          
1921   8DB9             
1921   9E24             
1921   9E24~                 CONT(             6,-1,04,s_mystery3)
1921   9E24~                 CONT(             6,-1,04,s_mystery3)
1921   9E24             
1921   9E24             
1921   9E24             
1921   8E48             
1921   8E48 04          
1921   8E49             
1921   9E24             
1921   9E24~                 CONT(             6,-1,04,s_mystery3)
1921   9E24~                 CONT(             6,-1,04,s_mystery3)
1921   9E24             
1921   9E24             
1921   9E24             
1921   8ED8             
1921   8ED8 45          
1921   8ED9             
1921   9E24             
1921   9E24~                 CONT(             6,-1,04,s_mystery3)
1921   9E24~                 CONT(             6,-1,04,s_mystery3)
1921   9E24             
1921   9E24             
1921   9E24             
1921   8F67             
1921   8F67             
1921   8F67 55 00       
1921   8F69             
1921   9E24             
1921   9E24             
1921   9E24             
1921   905D             
1921   905D FF          
1921   905E             
1921   9E24             
1921   9E24~                 CONT(             6,-1,04,s_mystery3)
1921   9E24~                 CONT(             6,-1,04,s_mystery3)
1921   9E24             
1921   9E24             
1922   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 12\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_mystery4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1922   9E24             
1922   9E24             
1922   8DB9             
1922   8DB9 06          
1922   8DBA             
1922   9E24             
1922   9E24~                 CONT(             6,-1,12,s_mystery4)
1922   9E24~                 CONT(             6,-1,12,s_mystery4)
1922   9E24             
1922   9E24             
1922   9E24             
1922   8E49             
1922   8E49 0C          
1922   8E4A             
1922   9E24             
1922   9E24~                 CONT(             6,-1,12,s_mystery4)
1922   9E24~                 CONT(             6,-1,12,s_mystery4)
1922   9E24             
1922   9E24             
1922   9E24             
1922   8ED9             
1922   8ED9 46          
1922   8EDA             
1922   9E24             
1922   9E24~                 CONT(             6,-1,12,s_mystery4)
1922   9E24~                 CONT(             6,-1,12,s_mystery4)
1922   9E24             
1922   9E24             
1922   9E24             
1922   8F68             
1922   8F68             
1922   8F68 56 00       
1922   8F6A             
1922   9E24             
1922   9E24             
1922   9E24             
1922   905E             
1922   905E FF          
1922   905F             
1922   9E24             
1922   9E24~                 CONT(             6,-1,12,s_mystery4)
1922   9E24~                 CONT(             6,-1,12,s_mystery4)
1922   9E24             
1922   9E24             
1923   9E24                  
1924   9E24             ;*  Breakout
1925   9E24                 \ \tmpptr .set *\.export snd_brk\snd_brk = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_brk = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_breakout\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1      
1925   9E24             
1925   9E24             
1925   9E24             
1925   9E24             
1925   8BD5             
1925   8BD5 06          
1925   8BD6             
1925   9E24             
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24             
1925   9E24             
1925   9E24             
1925   9E24             
1925   8C82             
1925   8C82 37          
1925   8C83             
1925   9E24             
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24             
1925   9E24             
1925   9E24             
1925   8D0A             
1925   8D0A 57          
1925   8D0B             
1925   9E24             
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24             
1925   9E24             
1925   9E24             
1925   8DBA             
1925   8DBA 06          
1925   8DBB             
1925   9E24             
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24             
1925   9E24             
1925   9E24             
1925   8E4A             
1925   8E4A 00          
1925   8E4B             
1925   9E24             
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24             
1925   9E24             
1925   9E24             
1925   8EDA             
1925   8EDA 47          
1925   8EDB             
1925   9E24             
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24             
1925   9E24             
1925   9E24             
1925   8F69             
1925   8F69             
1925   8F69 00 00       
1925   8F6B             
1925   9E24             
1925   9E24             
1925   9E24             
1925   905F             
1925   905F FF          
1925   9060             
1925   9E24             
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24~                STSND(snd_brk,REPL,6,-1,00,s_breakout)      
1925   9E24             
1925   9E24             
1925   9E24             
1926   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_breakout2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1926   9E24             
1926   9E24             
1926   8DBB             
1926   8DBB 06          
1926   8DBC             
1926   9E24             
1926   9E24~                 CONT(             6,-1,02,s_breakout2)
1926   9E24~                 CONT(             6,-1,02,s_breakout2)
1926   9E24             
1926   9E24             
1926   9E24             
1926   8E4B             
1926   8E4B 02          
1926   8E4C             
1926   9E24             
1926   9E24~                 CONT(             6,-1,02,s_breakout2)
1926   9E24~                 CONT(             6,-1,02,s_breakout2)
1926   9E24             
1926   9E24             
1926   9E24             
1926   8EDB             
1926   8EDB 48          
1926   8EDC             
1926   9E24             
1926   9E24~                 CONT(             6,-1,02,s_breakout2)
1926   9E24~                 CONT(             6,-1,02,s_breakout2)
1926   9E24             
1926   9E24             
1926   9E24             
1926   8F6A             
1926   8F6A             
1926   8F6A 58 00       
1926   8F6C             
1926   9E24             
1926   9E24             
1926   9E24             
1926   9060             
1926   9060 FF          
1926   9061             
1926   9E24             
1926   9E24~                 CONT(             6,-1,02,s_breakout2)
1926   9E24~                 CONT(             6,-1,02,s_breakout2)
1926   9E24             
1926   9E24             
1927   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 14\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_breakout3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1927   9E24             
1927   9E24             
1927   8DBC             
1927   8DBC 06          
1927   8DBD             
1927   9E24             
1927   9E24~                 CONT(             6,-1,14,s_breakout3)
1927   9E24~                 CONT(             6,-1,14,s_breakout3)
1927   9E24             
1927   9E24             
1927   9E24             
1927   8E4C             
1927   8E4C 0E          
1927   8E4D             
1927   9E24             
1927   9E24~                 CONT(             6,-1,14,s_breakout3)
1927   9E24~                 CONT(             6,-1,14,s_breakout3)
1927   9E24             
1927   9E24             
1927   9E24             
1927   8EDC             
1927   8EDC 49          
1927   8EDD             
1927   9E24             
1927   9E24~                 CONT(             6,-1,14,s_breakout3)
1927   9E24~                 CONT(             6,-1,14,s_breakout3)
1927   9E24             
1927   9E24             
1927   9E24             
1927   8F6B             
1927   8F6B             
1927   8F6B 59 00       
1927   8F6D             
1927   9E24             
1927   9E24             
1927   9E24             
1927   9061             
1927   9061 FF          
1927   9062             
1927   9E24             
1927   9E24~                 CONT(             6,-1,14,s_breakout3)
1927   9E24~                 CONT(             6,-1,14,s_breakout3)
1927   9E24             
1927   9E24             
1928   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 12\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_breakout4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1928   9E24             
1928   9E24             
1928   8DBD             
1928   8DBD 06          
1928   8DBE             
1928   9E24             
1928   9E24~                 CONT(             6,-1,12,s_breakout4)
1928   9E24~                 CONT(             6,-1,12,s_breakout4)
1928   9E24             
1928   9E24             
1928   9E24             
1928   8E4D             
1928   8E4D 0C          
1928   8E4E             
1928   9E24             
1928   9E24~                 CONT(             6,-1,12,s_breakout4)
1928   9E24~                 CONT(             6,-1,12,s_breakout4)
1928   9E24             
1928   9E24             
1928   9E24             
1928   8EDD             
1928   8EDD 4A          
1928   8EDE             
1928   9E24             
1928   9E24~                 CONT(             6,-1,12,s_breakout4)
1928   9E24~                 CONT(             6,-1,12,s_breakout4)
1928   9E24             
1928   9E24             
1928   9E24             
1928   8F6C             
1928   8F6C             
1928   8F6C 5A 00       
1928   8F6E             
1928   9E24             
1928   9E24             
1928   9E24             
1928   9062             
1928   9062 FF          
1928   9063             
1928   9E24             
1928   9E24~                 CONT(             6,-1,12,s_breakout4)
1928   9E24~                 CONT(             6,-1,12,s_breakout4)
1928   9E24             
1928   9E24             
1929   9E24             
1930   9E24             ;*  Start
1931   9E24                 \ \tmpptr .set *\.export snd_str\snd_str = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_str = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_start\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1
1931   9E24             
1931   9E24             
1931   9E24             
1931   9E24             
1931   8BD6             
1931   8BD6 06          
1931   8BD7             
1931   9E24             
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24             
1931   9E24             
1931   9E24             
1931   9E24             
1931   8C83             
1931   8C83 38          
1931   8C84             
1931   9E24             
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24             
1931   9E24             
1931   9E24             
1931   8D0B             
1931   8D0B 5B          
1931   8D0C             
1931   9E24             
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24             
1931   9E24             
1931   9E24             
1931   8DBE             
1931   8DBE 06          
1931   8DBF             
1931   9E24             
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24             
1931   9E24             
1931   9E24             
1931   8E4E             
1931   8E4E 00          
1931   8E4F             
1931   9E24             
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24             
1931   9E24             
1931   9E24             
1931   8EDE             
1931   8EDE 3E          
1931   8EDF             
1931   9E24             
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24             
1931   9E24             
1931   9E24             
1931   8F6D             
1931   8F6D             
1931   8F6D 00 00       
1931   8F6F             
1931   9E24             
1931   9E24             
1931   9E24             
1931   9063             
1931   9063 FF          
1931   9064             
1931   9E24             
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24~                STSND(snd_str,REPL,6,-1,00,s_start)
1931   9E24             
1931   9E24             
1931   9E24             
1932   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_start2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1932   9E24             
1932   9E24             
1932   8DBF             
1932   8DBF 06          
1932   8DC0             
1932   9E24             
1932   9E24~                 CONT(             6,-1,02,s_start2)
1932   9E24~                 CONT(             6,-1,02,s_start2)
1932   9E24             
1932   9E24             
1932   9E24             
1932   8E4F             
1932   8E4F 02          
1932   8E50             
1932   9E24             
1932   9E24~                 CONT(             6,-1,02,s_start2)
1932   9E24~                 CONT(             6,-1,02,s_start2)
1932   9E24             
1932   9E24             
1932   9E24             
1932   8EDF             
1932   8EDF 3F          
1932   8EE0             
1932   9E24             
1932   9E24~                 CONT(             6,-1,02,s_start2)
1932   9E24~                 CONT(             6,-1,02,s_start2)
1932   9E24             
1932   9E24             
1932   9E24             
1932   8F6E             
1932   8F6E             
1932   8F6E 5C 00       
1932   8F70             
1932   9E24             
1932   9E24             
1932   9E24             
1932   9064             
1932   9064 FF          
1932   9065             
1932   9E24             
1932   9E24~                 CONT(             6,-1,02,s_start2)
1932   9E24~                 CONT(             6,-1,02,s_start2)
1932   9E24             
1932   9E24             
1933   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 14\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_start3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1933   9E24             
1933   9E24             
1933   8DC0             
1933   8DC0 06          
1933   8DC1             
1933   9E24             
1933   9E24~                 CONT(             6,-1,14,s_start3)
1933   9E24~                 CONT(             6,-1,14,s_start3)
1933   9E24             
1933   9E24             
1933   9E24             
1933   8E50             
1933   8E50 0E          
1933   8E51             
1933   9E24             
1933   9E24~                 CONT(             6,-1,14,s_start3)
1933   9E24~                 CONT(             6,-1,14,s_start3)
1933   9E24             
1933   9E24             
1933   9E24             
1933   8EE0             
1933   8EE0 40          
1933   8EE1             
1933   9E24             
1933   9E24~                 CONT(             6,-1,14,s_start3)
1933   9E24~                 CONT(             6,-1,14,s_start3)
1933   9E24             
1933   9E24             
1933   9E24             
1933   8F6F             
1933   8F6F             
1933   8F6F 5D 00       
1933   8F71             
1933   9E24             
1933   9E24             
1933   9E24             
1933   9065             
1933   9065 FF          
1933   9066             
1933   9E24             
1933   9E24~                 CONT(             6,-1,14,s_start3)
1933   9E24~                 CONT(             6,-1,14,s_start3)
1933   9E24             
1933   9E24             
1934   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 12\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_start4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1934   9E24             
1934   9E24             
1934   8DC1             
1934   8DC1 06          
1934   8DC2             
1934   9E24             
1934   9E24~                 CONT(             6,-1,12,s_start4)
1934   9E24~                 CONT(             6,-1,12,s_start4)
1934   9E24             
1934   9E24             
1934   9E24             
1934   8E51             
1934   8E51 0C          
1934   8E52             
1934   9E24             
1934   9E24~                 CONT(             6,-1,12,s_start4)
1934   9E24~                 CONT(             6,-1,12,s_start4)
1934   9E24             
1934   9E24             
1934   9E24             
1934   8EE1             
1934   8EE1 41          
1934   8EE2             
1934   9E24             
1934   9E24~                 CONT(             6,-1,12,s_start4)
1934   9E24~                 CONT(             6,-1,12,s_start4)
1934   9E24             
1934   9E24             
1934   9E24             
1934   8F70             
1934   8F70             
1934   8F70 5E 00       
1934   8F72             
1934   9E24             
1934   9E24             
1934   9E24             
1934   9066             
1934   9066 FF          
1934   9067             
1934   9E24             
1934   9E24~                 CONT(             6,-1,12,s_start4)
1934   9E24~                 CONT(             6,-1,12,s_start4)
1934   9E24             
1934   9E24             
1935   9E24                    
1936   9E24             ;*  High Score
1937   9E24                 \ \tmpptr .set *\.export snd_hsc\snd_hsc = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_hsc = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_highscore5\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1
1937   9E24             
1937   9E24             
1937   9E24             
1937   9E24             
1937   8BD7             
1937   8BD7 06          
1937   8BD8             
1937   9E24             
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24             
1937   9E24             
1937   9E24             
1937   9E24             
1937   8C84             
1937   8C84 39          
1937   8C85             
1937   9E24             
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24             
1937   9E24             
1937   9E24             
1937   8D0C             
1937   8D0C 5F          
1937   8D0D             
1937   9E24             
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24             
1937   9E24             
1937   9E24             
1937   8DC2             
1937   8DC2 06          
1937   8DC3             
1937   9E24             
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24             
1937   9E24             
1937   9E24             
1937   8E52             
1937   8E52 00          
1937   8E53             
1937   9E24             
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24             
1937   9E24             
1937   9E24             
1937   8EE2             
1937   8EE2 57          
1937   8EE3             
1937   9E24             
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24             
1937   9E24             
1937   9E24             
1937   8F71             
1937   8F71             
1937   8F71 00 00       
1937   8F73             
1937   9E24             
1937   9E24             
1937   9E24             
1937   9067             
1937   9067 FF          
1937   9068             
1937   9E24             
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24~                STSND(snd_hsc,REPL,6,-1,00,s_highscore5)
1937   9E24             
1937   9E24             
1937   9E24             
1938   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_highscore6\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1938   9E24             
1938   9E24             
1938   8DC3             
1938   8DC3 06          
1938   8DC4             
1938   9E24             
1938   9E24~                 CONT(             6,-1,02,s_highscore6)
1938   9E24~                 CONT(             6,-1,02,s_highscore6)
1938   9E24             
1938   9E24             
1938   9E24             
1938   8E53             
1938   8E53 02          
1938   8E54             
1938   9E24             
1938   9E24~                 CONT(             6,-1,02,s_highscore6)
1938   9E24~                 CONT(             6,-1,02,s_highscore6)
1938   9E24             
1938   9E24             
1938   9E24             
1938   8EE3             
1938   8EE3 58          
1938   8EE4             
1938   9E24             
1938   9E24~                 CONT(             6,-1,02,s_highscore6)
1938   9E24~                 CONT(             6,-1,02,s_highscore6)
1938   9E24             
1938   9E24             
1938   9E24             
1938   8F72             
1938   8F72             
1938   8F72 60 00       
1938   8F74             
1938   9E24             
1938   9E24             
1938   9E24             
1938   9068             
1938   9068 FF          
1938   9069             
1938   9E24             
1938   9E24~                 CONT(             6,-1,02,s_highscore6)
1938   9E24~                 CONT(             6,-1,02,s_highscore6)
1938   9E24             
1938   9E24             
1939   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 14\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_highscore7\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1939   9E24             
1939   9E24             
1939   8DC4             
1939   8DC4 06          
1939   8DC5             
1939   9E24             
1939   9E24~                 CONT(             6,-1,14,s_highscore7)
1939   9E24~                 CONT(             6,-1,14,s_highscore7)
1939   9E24             
1939   9E24             
1939   9E24             
1939   8E54             
1939   8E54 0E          
1939   8E55             
1939   9E24             
1939   9E24~                 CONT(             6,-1,14,s_highscore7)
1939   9E24~                 CONT(             6,-1,14,s_highscore7)
1939   9E24             
1939   9E24             
1939   9E24             
1939   8EE4             
1939   8EE4 59          
1939   8EE5             
1939   9E24             
1939   9E24~                 CONT(             6,-1,14,s_highscore7)
1939   9E24~                 CONT(             6,-1,14,s_highscore7)
1939   9E24             
1939   9E24             
1939   9E24             
1939   8F73             
1939   8F73             
1939   8F73 61 00       
1939   8F75             
1939   9E24             
1939   9E24             
1939   9E24             
1939   9069             
1939   9069 FF          
1939   906A             
1939   9E24             
1939   9E24~                 CONT(             6,-1,14,s_highscore7)
1939   9E24~                 CONT(             6,-1,14,s_highscore7)
1939   9E24             
1939   9E24             
1940   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 12\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_highscore8\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1940   9E24             
1940   9E24             
1940   8DC5             
1940   8DC5 06          
1940   8DC6             
1940   9E24             
1940   9E24~                 CONT(             6,-1,12,s_highscore8)
1940   9E24~                 CONT(             6,-1,12,s_highscore8)
1940   9E24             
1940   9E24             
1940   9E24             
1940   8E55             
1940   8E55 0C          
1940   8E56             
1940   9E24             
1940   9E24~                 CONT(             6,-1,12,s_highscore8)
1940   9E24~                 CONT(             6,-1,12,s_highscore8)
1940   9E24             
1940   9E24             
1940   9E24             
1940   8EE5             
1940   8EE5 5A          
1940   8EE6             
1940   9E24             
1940   9E24~                 CONT(             6,-1,12,s_highscore8)
1940   9E24~                 CONT(             6,-1,12,s_highscore8)
1940   9E24             
1940   9E24             
1940   9E24             
1940   8F74             
1940   8F74             
1940   8F74 62 00       
1940   8F76             
1940   9E24             
1940   9E24             
1940   9E24             
1940   906A             
1940   906A FF          
1940   906B             
1940   9E24             
1940   9E24~                 CONT(             6,-1,12,s_highscore8)
1940   9E24~                 CONT(             6,-1,12,s_highscore8)
1940   9E24             
1940   9E24             
1941   9E24                  
1942   9E24             ;*  Hero Theme - Exit Maze
1943   9E24                 \ \tmpptr .set *\.export snd_hro\snd_hro = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_hro = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_escape\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1
1943   9E24             
1943   9E24             
1943   9E24             
1943   9E24             
1943   8BD8             
1943   8BD8 06          
1943   8BD9             
1943   9E24             
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24             
1943   9E24             
1943   9E24             
1943   9E24             
1943   8C85             
1943   8C85 3A          
1943   8C86             
1943   9E24             
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24             
1943   9E24             
1943   9E24             
1943   8D0D             
1943   8D0D 63          
1943   8D0E             
1943   9E24             
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24             
1943   9E24             
1943   9E24             
1943   8DC6             
1943   8DC6 06          
1943   8DC7             
1943   9E24             
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24             
1943   9E24             
1943   9E24             
1943   8E56             
1943   8E56 00          
1943   8E57             
1943   9E24             
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24             
1943   9E24             
1943   9E24             
1943   8EE6             
1943   8EE6 4B          
1943   8EE7             
1943   9E24             
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24             
1943   9E24             
1943   9E24             
1943   8F75             
1943   8F75             
1943   8F75 00 00       
1943   8F77             
1943   9E24             
1943   9E24             
1943   9E24             
1943   906B             
1943   906B FF          
1943   906C             
1943   9E24             
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24~                STSND(snd_hro,REPL,6,-1,00,s_escape)
1943   9E24             
1943   9E24             
1943   9E24             
1944   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_escape2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1944   9E24             
1944   9E24             
1944   8DC7             
1944   8DC7 06          
1944   8DC8             
1944   9E24             
1944   9E24~                 CONT(             6,-1,02,s_escape2)
1944   9E24~                 CONT(             6,-1,02,s_escape2)
1944   9E24             
1944   9E24             
1944   9E24             
1944   8E57             
1944   8E57 02          
1944   8E58             
1944   9E24             
1944   9E24~                 CONT(             6,-1,02,s_escape2)
1944   9E24~                 CONT(             6,-1,02,s_escape2)
1944   9E24             
1944   9E24             
1944   9E24             
1944   8EE7             
1944   8EE7 4C          
1944   8EE8             
1944   9E24             
1944   9E24~                 CONT(             6,-1,02,s_escape2)
1944   9E24~                 CONT(             6,-1,02,s_escape2)
1944   9E24             
1944   9E24             
1944   9E24             
1944   8F76             
1944   8F76             
1944   8F76 64 00       
1944   8F78             
1944   9E24             
1944   9E24             
1944   9E24             
1944   906C             
1944   906C FF          
1944   906D             
1944   9E24             
1944   9E24~                 CONT(             6,-1,02,s_escape2)
1944   9E24~                 CONT(             6,-1,02,s_escape2)
1944   9E24             
1944   9E24             
1945   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 04\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_escape3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1945   9E24             
1945   9E24             
1945   8DC8             
1945   8DC8 06          
1945   8DC9             
1945   9E24             
1945   9E24~                 CONT(             6,-1,04,s_escape3)
1945   9E24~                 CONT(             6,-1,04,s_escape3)
1945   9E24             
1945   9E24             
1945   9E24             
1945   8E58             
1945   8E58 04          
1945   8E59             
1945   9E24             
1945   9E24~                 CONT(             6,-1,04,s_escape3)
1945   9E24~                 CONT(             6,-1,04,s_escape3)
1945   9E24             
1945   9E24             
1945   9E24             
1945   8EE8             
1945   8EE8 4D          
1945   8EE9             
1945   9E24             
1945   9E24~                 CONT(             6,-1,04,s_escape3)
1945   9E24~                 CONT(             6,-1,04,s_escape3)
1945   9E24             
1945   9E24             
1945   9E24             
1945   8F77             
1945   8F77             
1945   8F77 65 00       
1945   8F79             
1945   9E24             
1945   9E24             
1945   9E24             
1945   906D             
1945   906D FF          
1945   906E             
1945   9E24             
1945   9E24~                 CONT(             6,-1,04,s_escape3)
1945   9E24~                 CONT(             6,-1,04,s_escape3)
1945   9E24             
1945   9E24             
1946   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte              6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 12\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_escape4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1946   9E24             
1946   9E24             
1946   8DC9             
1946   8DC9 06          
1946   8DCA             
1946   9E24             
1946   9E24~                 CONT(             6,-1,12,s_escape4)
1946   9E24~                 CONT(             6,-1,12,s_escape4)
1946   9E24             
1946   9E24             
1946   9E24             
1946   8E59             
1946   8E59 0C          
1946   8E5A             
1946   9E24             
1946   9E24~                 CONT(             6,-1,12,s_escape4)
1946   9E24~                 CONT(             6,-1,12,s_escape4)
1946   9E24             
1946   9E24             
1946   9E24             
1946   8EE9             
1946   8EE9 4E          
1946   8EEA             
1946   9E24             
1946   9E24~                 CONT(             6,-1,12,s_escape4)
1946   9E24~                 CONT(             6,-1,12,s_escape4)
1946   9E24             
1946   9E24             
1946   9E24             
1946   8F78             
1946   8F78             
1946   8F78 66 00       
1946   8F7A             
1946   9E24             
1946   9E24             
1946   9E24             
1946   906E             
1946   906E FF          
1946   906F             
1946   9E24             
1946   9E24~                 CONT(             6,-1,12,s_escape4)
1946   9E24~                 CONT(             6,-1,12,s_escape4)
1946   9E24             
1946   9E24             
1947   9E24                 
1948   9E24             ;* Triumph - End Story
1949   9E24                 \ \tmpptr .set *\.export snd_triumph \snd_triumph  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_triumph  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_triumph\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1     
1949   9E24             
1949   9E24             
1949   9E24             
1949   9E24             
1949   8BD9             
1949   8BD9 06          
1949   8BDA             
1949   9E24             
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24             
1949   9E24             
1949   9E24             
1949   9E24             
1949   8C86             
1949   8C86 3B          
1949   8C87             
1949   9E24             
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24             
1949   9E24             
1949   9E24             
1949   8D0E             
1949   8D0E 67          
1949   8D0F             
1949   9E24             
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24             
1949   9E24             
1949   9E24             
1949   8DCA             
1949   8DCA 06          
1949   8DCB             
1949   9E24             
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24             
1949   9E24             
1949   9E24             
1949   8E5A             
1949   8E5A 00          
1949   8E5B             
1949   9E24             
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24             
1949   9E24             
1949   9E24             
1949   8EEA             
1949   8EEA 4F          
1949   8EEB             
1949   9E24             
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24             
1949   9E24             
1949   9E24             
1949   8F79             
1949   8F79             
1949   8F79 00 00       
1949   8F7B             
1949   9E24             
1949   9E24             
1949   9E24             
1949   906F             
1949   906F FF          
1949   9070             
1949   9E24             
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24~                STSND(snd_triumph ,REPL,6,-1,00,s_triumph)     
1949   9E24             
1949   9E24             
1949   9E24             
1950   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte               6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_triumph2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1950   9E24             
1950   9E24             
1950   8DCB             
1950   8DCB 06          
1950   8DCC             
1950   9E24             
1950   9E24~                 CONT(              6,-1,02,s_triumph2)
1950   9E24~                 CONT(              6,-1,02,s_triumph2)
1950   9E24             
1950   9E24             
1950   9E24             
1950   8E5B             
1950   8E5B 02          
1950   8E5C             
1950   9E24             
1950   9E24~                 CONT(              6,-1,02,s_triumph2)
1950   9E24~                 CONT(              6,-1,02,s_triumph2)
1950   9E24             
1950   9E24             
1950   9E24             
1950   8EEB             
1950   8EEB 50          
1950   8EEC             
1950   9E24             
1950   9E24~                 CONT(              6,-1,02,s_triumph2)
1950   9E24~                 CONT(              6,-1,02,s_triumph2)
1950   9E24             
1950   9E24             
1950   9E24             
1950   8F7A             
1950   8F7A             
1950   8F7A 68 00       
1950   8F7C             
1950   9E24             
1950   9E24             
1950   9E24             
1950   9070             
1950   9070 FF          
1950   9071             
1950   9E24             
1950   9E24~                 CONT(              6,-1,02,s_triumph2)
1950   9E24~                 CONT(              6,-1,02,s_triumph2)
1950   9E24             
1950   9E24             
1951   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte               6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 14\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_triumph3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1951   9E24             
1951   9E24             
1951   8DCC             
1951   8DCC 06          
1951   8DCD             
1951   9E24             
1951   9E24~                 CONT(              6,-1,14,s_triumph3)
1951   9E24~                 CONT(              6,-1,14,s_triumph3)
1951   9E24             
1951   9E24             
1951   9E24             
1951   8E5C             
1951   8E5C 0E          
1951   8E5D             
1951   9E24             
1951   9E24~                 CONT(              6,-1,14,s_triumph3)
1951   9E24~                 CONT(              6,-1,14,s_triumph3)
1951   9E24             
1951   9E24             
1951   9E24             
1951   8EEC             
1951   8EEC 51          
1951   8EED             
1951   9E24             
1951   9E24~                 CONT(              6,-1,14,s_triumph3)
1951   9E24~                 CONT(              6,-1,14,s_triumph3)
1951   9E24             
1951   9E24             
1951   9E24             
1951   8F7B             
1951   8F7B             
1951   8F7B 69 00       
1951   8F7D             
1951   9E24             
1951   9E24             
1951   9E24             
1951   9071             
1951   9071 FF          
1951   9072             
1951   9E24             
1951   9E24~                 CONT(              6,-1,14,s_triumph3)
1951   9E24~                 CONT(              6,-1,14,s_triumph3)
1951   9E24             
1951   9E24             
1952   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte               6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 12\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_triumph4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1952   9E24             
1952   9E24             
1952   8DCD             
1952   8DCD 06          
1952   8DCE             
1952   9E24             
1952   9E24~                 CONT(              6,-1,12,s_triumph4)
1952   9E24~                 CONT(              6,-1,12,s_triumph4)
1952   9E24             
1952   9E24             
1952   9E24             
1952   8E5D             
1952   8E5D 0C          
1952   8E5E             
1952   9E24             
1952   9E24~                 CONT(              6,-1,12,s_triumph4)
1952   9E24~                 CONT(              6,-1,12,s_triumph4)
1952   9E24             
1952   9E24             
1952   9E24             
1952   8EED             
1952   8EED 52          
1952   8EEE             
1952   9E24             
1952   9E24~                 CONT(              6,-1,12,s_triumph4)
1952   9E24~                 CONT(              6,-1,12,s_triumph4)
1952   9E24             
1952   9E24             
1952   9E24             
1952   8F7C             
1952   8F7C             
1952   8F7C 6A 00       
1952   8F7E             
1952   9E24             
1952   9E24             
1952   9E24             
1952   9072             
1952   9072 FF          
1952   9073             
1952   9E24             
1952   9E24~                 CONT(              6,-1,12,s_triumph4)
1952   9E24~                 CONT(              6,-1,12,s_triumph4)
1952   9E24             
1952   9E24             
1953   9E24             
1954   9E24             ; ;* Maze Entry - Tense for final Maze
1955   9E24                 ; STSND(snd_newmus,REPL,6,-1,00,s_tense_1)       
1956   9E24                  ; CONT(             6,-1,02,s_tense_2)
1957   9E24                  ; CONT(             6,-1,04,s_tense_3)
1958   9E24                  ; CONT(             6,-1,12,s_tense_4)	 
1959   9E24             	 ; CONT(             6,-1,14,s_newmusic_5)	
1960   9E24             	 
1961   9E24             ; ;* Victory
1962   9E24             	; STSND(snd_victory,REPL,6,-1,00,s_vic_b1)
1963   9E24             	 ; ;CONT(             6,-1,01,s_vic_b2)
1964   9E24             	 ; CONT(             6,-1,02,s_vic_b3)
1965   9E24             	 ; CONT(             6,-1,00,s_vic_mid)
1966   9E24             	 ; CONT(             6,-1,04,s_vic_mid1)
1967   9E24             	 ; CONT(			   6,-1,06,s_vic_mid2)
1968   9E24             	 ; ;CONT(			   6,-1,08,s_vic_lead)
1969   9E24             	 ; ;CONT(			   6,-1,10,s_vic_perc)
1970   9E24             
1971   9E24             	
1972   9E24             ;* Space Bonus 
1973   9E24                 \ \tmpptr .set *\.export snd_spbonus\snd_spbonus = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_spbonus = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_spbonus_1\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1       
1973   9E24             
1973   9E24             
1973   9E24             
1973   9E24             
1973   8BDA             
1973   8BDA 06          
1973   8BDB             
1973   9E24             
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24             
1973   9E24             
1973   9E24             
1973   9E24             
1973   8C87             
1973   8C87 3C          
1973   8C88             
1973   9E24             
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24             
1973   9E24             
1973   9E24             
1973   8D0F             
1973   8D0F 6B          
1973   8D10             
1973   9E24             
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24             
1973   9E24             
1973   9E24             
1973   8DCE             
1973   8DCE 06          
1973   8DCF             
1973   9E24             
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24             
1973   9E24             
1973   9E24             
1973   8E5E             
1973   8E5E 00          
1973   8E5F             
1973   9E24             
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24             
1973   9E24             
1973   9E24             
1973   8EEE             
1973   8EEE 60          
1973   8EEF             
1973   9E24             
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24             
1973   9E24             
1973   9E24             
1973   8F7D             
1973   8F7D             
1973   8F7D 00 00       
1973   8F7F             
1973   9E24             
1973   9E24             
1973   9E24             
1973   9073             
1973   9073 FF          
1973   9074             
1973   9E24             
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24~                STSND(snd_spbonus,REPL,6,-1,00,s_spbonus_1)       
1973   9E24             
1973   9E24             
1973   9E24             
1974   9E24             	 
1975   9E24             ;* Stop Exit Maze Music
1976   9E24                 \ \tmpptr .set *\.export snd_kilhro\snd_kilhro = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_killid\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte snd_hro\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
1976   9E24             
1976   9E24             
1976   9E24             
1976   9E24             
1976   8BDB             
1976   8BDB 04          
1976   8BDC             
1976   9E24             
1976   9E24~                KILID(snd_kilhro,snd_hro)
1976   9E24~                KILID(snd_kilhro,snd_hro)
1976   9E24             
1976   9E24             
1976   9E24             
1976   8C88             
1976   8C88 5F          
1976   8C89             
1976   9E24             
1976   9E24~                KILID(snd_kilhro,snd_hro)
1976   9E24~                KILID(snd_kilhro,snd_hro)
1976   9E24             
1976   9E24             
1976   9E24             
1976   9074             
1976   9074 FF          
1976   9075             
1976   9E24             
1976   9E24~                KILID(snd_kilhro,snd_hro)
1976   9E24~                KILID(snd_kilhro,snd_hro)
1976   9E24             
1977   9E24             
1978   9E24             ;* Star Castle Engergize	
1979   9E24             	\ \tmpptr .set *\.export snd_scenergize \snd_scenergize  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_scenergize  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_scenergize\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1 
1979   9E24             
1979   9E24             
1979   9E24             
1979   9E24             
1979   8BDC             
1979   8BDC 06          
1979   8BDD             
1979   9E24             
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24             
1979   9E24             
1979   9E24             
1979   9E24             
1979   8C89             
1979   8C89 3D          
1979   8C8A             
1979   9E24             
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24             
1979   9E24             
1979   9E24             
1979   8D10             
1979   8D10 6C          
1979   8D11             
1979   9E24             
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24             
1979   9E24             
1979   9E24             
1979   8DCF             
1979   8DCF 08          
1979   8DD0             
1979   9E24             
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24             
1979   9E24             
1979   9E24             
1979   8E5F             
1979   8E5F 08          
1979   8E60             
1979   9E24             
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24             
1979   9E24             
1979   9E24             
1979   8EEF             
1979   8EEF 6C          
1979   8EF0             
1979   9E24             
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24             
1979   9E24             
1979   9E24             
1979   8F7E             
1979   8F7E             
1979   8F7E 00 00       
1979   8F80             
1979   9E24             
1979   9E24             
1979   9E24             
1979   9075             
1979   9075 FF          
1979   9076             
1979   9E24             
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24~            	STSND(snd_scenergize ,REPL,8,-1,08,s_scenergize) 
1979   9E24             
1979   9E24             
1979   9E24             
1980   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_scenergize2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1980   9E24             
1980   9E24             
1980   8DD0             
1980   8DD0 08          
1980   8DD1             
1980   9E24             
1980   9E24~                 CONT(8,-1,09,s_scenergize2)
1980   9E24~                 CONT(8,-1,09,s_scenergize2)
1980   9E24             
1980   9E24             
1980   9E24             
1980   8E60             
1980   8E60 09          
1980   8E61             
1980   9E24             
1980   9E24~                 CONT(8,-1,09,s_scenergize2)
1980   9E24~                 CONT(8,-1,09,s_scenergize2)
1980   9E24             
1980   9E24             
1980   9E24             
1980   8EF0             
1980   8EF0 6D          
1980   8EF1             
1980   9E24             
1980   9E24~                 CONT(8,-1,09,s_scenergize2)
1980   9E24~                 CONT(8,-1,09,s_scenergize2)
1980   9E24             
1980   9E24             
1980   9E24             
1980   8F7F             
1980   8F7F             
1980   8F7F 6D 00       
1980   8F81             
1980   9E24             
1980   9E24             
1980   9E24             
1980   9076             
1980   9076 FF          
1980   9077             
1980   9E24             
1980   9E24~                 CONT(8,-1,09,s_scenergize2)
1980   9E24~                 CONT(8,-1,09,s_scenergize2)
1980   9E24             
1980   9E24             
1981   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_scenergize3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1981   9E24             
1981   9E24             
1981   8DD1             
1981   8DD1 08          
1981   8DD2             
1981   9E24             
1981   9E24~                 CONT(8,-1,10,s_scenergize3)
1981   9E24~                 CONT(8,-1,10,s_scenergize3)
1981   9E24             
1981   9E24             
1981   9E24             
1981   8E61             
1981   8E61 0A          
1981   8E62             
1981   9E24             
1981   9E24~                 CONT(8,-1,10,s_scenergize3)
1981   9E24~                 CONT(8,-1,10,s_scenergize3)
1981   9E24             
1981   9E24             
1981   9E24             
1981   8EF1             
1981   8EF1 6E          
1981   8EF2             
1981   9E24             
1981   9E24~                 CONT(8,-1,10,s_scenergize3)
1981   9E24~                 CONT(8,-1,10,s_scenergize3)
1981   9E24             
1981   9E24             
1981   9E24             
1981   8F80             
1981   8F80             
1981   8F80 6E 00       
1981   8F82             
1981   9E24             
1981   9E24             
1981   9E24             
1981   9077             
1981   9077 FF          
1981   9078             
1981   9E24             
1981   9E24~                 CONT(8,-1,10,s_scenergize3)
1981   9E24~                 CONT(8,-1,10,s_scenergize3)
1981   9E24             
1981   9E24             
1982   9E24                  \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 11\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_scenergize4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1982   9E24             
1982   9E24             
1982   8DD2             
1982   8DD2 08          
1982   8DD3             
1982   9E24             
1982   9E24~                 CONT(8,-1,11,s_scenergize4)
1982   9E24~                 CONT(8,-1,11,s_scenergize4)
1982   9E24             
1982   9E24             
1982   9E24             
1982   8E62             
1982   8E62 0B          
1982   8E63             
1982   9E24             
1982   9E24~                 CONT(8,-1,11,s_scenergize4)
1982   9E24~                 CONT(8,-1,11,s_scenergize4)
1982   9E24             
1982   9E24             
1982   9E24             
1982   8EF2             
1982   8EF2 6F          
1982   8EF3             
1982   9E24             
1982   9E24~                 CONT(8,-1,11,s_scenergize4)
1982   9E24~                 CONT(8,-1,11,s_scenergize4)
1982   9E24             
1982   9E24             
1982   9E24             
1982   8F81             
1982   8F81             
1982   8F81 6F 00       
1982   8F83             
1982   9E24             
1982   9E24             
1982   9E24             
1982   9078             
1982   9078 FF          
1982   9079             
1982   9E24             
1982   9E24~                 CONT(8,-1,11,s_scenergize4)
1982   9E24~                 CONT(8,-1,11,s_scenergize4)
1982   9E24             
1982   9E24             
1983   9E24             
1984   9E24             ;* Star Castle Rotation 	
1985   9E24             	;STSND(snd_scspin ,REPL,8,-1,05,s_scspin) 
1986   9E24             	
1987   9E24             ;* Star Shield Hit 	
1988   9E24             	\ \tmpptr .set *\.export snd_schit \snd_schit  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_schit  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 06\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_schit\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1 
1988   9E24             
1988   9E24             
1988   9E24             
1988   9E24             
1988   8BDD             
1988   8BDD 06          
1988   8BDE             
1988   9E24             
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24             
1988   9E24             
1988   9E24             
1988   9E24             
1988   8C8A             
1988   8C8A 3E          
1988   8C8B             
1988   9E24             
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24             
1988   9E24             
1988   9E24             
1988   8D11             
1988   8D11 70          
1988   8D12             
1988   9E24             
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24             
1988   9E24             
1988   9E24             
1988   8DD3             
1988   8DD3 08          
1988   8DD4             
1988   9E24             
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24             
1988   9E24             
1988   9E24             
1988   8E63             
1988   8E63 06          
1988   8E64             
1988   9E24             
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24             
1988   9E24             
1988   9E24             
1988   8EF3             
1988   8EF3 70          
1988   8EF4             
1988   9E24             
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24             
1988   9E24             
1988   9E24             
1988   8F82             
1988   8F82             
1988   8F82 00 00       
1988   8F84             
1988   9E24             
1988   9E24             
1988   9E24             
1988   9079             
1988   9079 FF          
1988   907A             
1988   9E24             
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24~            	STSND(snd_schit ,REPL,8,-1,06,s_schit) 
1988   9E24             
1988   9E24             
1988   9E24             
1989   9E24             	
1990   9E24             ;* Star Castle Panel Drop
1991   9E24                 \ \tmpptr .set *\.export snd_scdrop \snd_scdrop  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_scdrop  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 07\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_scdrop\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1 
1991   9E24             
1991   9E24             
1991   9E24             
1991   9E24             
1991   8BDE             
1991   8BDE 06          
1991   8BDF             
1991   9E24             
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24             
1991   9E24             
1991   9E24             
1991   9E24             
1991   8C8B             
1991   8C8B 3F          
1991   8C8C             
1991   9E24             
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24             
1991   9E24             
1991   9E24             
1991   8D12             
1991   8D12 71          
1991   8D13             
1991   9E24             
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24             
1991   9E24             
1991   9E24             
1991   8DD4             
1991   8DD4 08          
1991   8DD5             
1991   9E24             
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24             
1991   9E24             
1991   9E24             
1991   8E64             
1991   8E64 07          
1991   8E65             
1991   9E24             
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24             
1991   9E24             
1991   9E24             
1991   8EF4             
1991   8EF4 71          
1991   8EF5             
1991   9E24             
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24             
1991   9E24             
1991   9E24             
1991   8F83             
1991   8F83             
1991   8F83 00 00       
1991   8F85             
1991   9E24             
1991   9E24             
1991   9E24             
1991   907A             
1991   907A FF          
1991   907B             
1991   9E24             
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24~                STSND(snd_scdrop ,REPL,8,-1,07,s_scdrop) 
1991   9E24             
1991   9E24             
1991   9E24             
1992   9E24             	
1993   9E24             ;* Maze Sounds - Broken Transporter Booth	
1994   9E24                 ;STSND(snd_notrans ,REPL, 8,-1,00,s_notrans) 
1995   9E24             
1996   9E24             ;* Tact Scan Fail
1997   9E24             	\ \tmpptr .set *\.export snd_fail \snd_fail  = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_fail  = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte  8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_fail\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1 
1997   9E24             
1997   9E24             
1997   9E24             
1997   9E24             
1997   8BDF             
1997   8BDF 06          
1997   8BE0             
1997   9E24             
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24             
1997   9E24             
1997   9E24             
1997   9E24             
1997   8C8C             
1997   8C8C 40          
1997   8C8D             
1997   9E24             
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24             
1997   9E24             
1997   9E24             
1997   8D13             
1997   8D13 72          
1997   8D14             
1997   9E24             
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24             
1997   9E24             
1997   9E24             
1997   8DD5             
1997   8DD5 08          
1997   8DD6             
1997   9E24             
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24             
1997   9E24             
1997   9E24             
1997   8E65             
1997   8E65 00          
1997   8E66             
1997   9E24             
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24             
1997   9E24             
1997   9E24             
1997   8EF5             
1997   8EF5 72          
1997   8EF6             
1997   9E24             
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24             
1997   9E24             
1997   9E24             
1997   8F84             
1997   8F84             
1997   8F84 00 00       
1997   8F86             
1997   9E24             
1997   9E24             
1997   9E24             
1997   907B             
1997   907B FF          
1997   907C             
1997   9E24             
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24~            	STSND(snd_fail ,REPL, 8,-1,00,s_fail) 
1997   9E24             
1997   9E24             
1997   9E24             
1998   9E24             	 \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_fail2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
1998   9E24             
1998   9E24             
1998   8DD6             
1998   8DD6 08          
1998   8DD7             
1998   9E24             
1998   9E24~            	 CONT(8,-1,08,s_fail2)
1998   9E24~            	 CONT(8,-1,08,s_fail2)
1998   9E24             
1998   9E24             
1998   9E24             
1998   8E66             
1998   8E66 08          
1998   8E67             
1998   9E24             
1998   9E24~            	 CONT(8,-1,08,s_fail2)
1998   9E24~            	 CONT(8,-1,08,s_fail2)
1998   9E24             
1998   9E24             
1998   9E24             
1998   8EF6             
1998   8EF6 73          
1998   8EF7             
1998   9E24             
1998   9E24~            	 CONT(8,-1,08,s_fail2)
1998   9E24~            	 CONT(8,-1,08,s_fail2)
1998   9E24             
1998   9E24             
1998   9E24             
1998   8F85             
1998   8F85             
1998   8F85 73 00       
1998   8F87             
1998   9E24             
1998   9E24             
1998   9E24             
1998   907C             
1998   907C FF          
1998   907D             
1998   9E24             
1998   9E24~            	 CONT(8,-1,08,s_fail2)
1998   9E24~            	 CONT(8,-1,08,s_fail2)
1998   9E24             
1998   9E24             
1999   9E24             	 
2000   9E24             ;* Maynard fly in
2001   9E24             	\ \tmpptr .set *\.export snd_maynard\snd_maynard = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_maynard = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_maynard\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   ;Maynard fly in
2001   9E24             
2001   9E24             
2001   9E24             
2001   9E24             
2001   8BE0             
2001   8BE0 06          
2001   8BE1             
2001   9E24             
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24             
2001   9E24             
2001   9E24             
2001   9E24             
2001   8C8D             
2001   8C8D 41          
2001   8C8E             
2001   9E24             
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24             
2001   9E24             
2001   9E24             
2001   8D14             
2001   8D14 74          
2001   8D15             
2001   9E24             
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24             
2001   9E24             
2001   9E24             
2001   8DD7             
2001   8DD7 08          
2001   8DD8             
2001   9E24             
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24             
2001   9E24             
2001   9E24             
2001   8E67             
2001   8E67 08          
2001   8E68             
2001   9E24             
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24             
2001   9E24             
2001   9E24             
2001   8EF7             
2001   8EF7 74          
2001   8EF8             
2001   9E24             
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24             
2001   9E24             
2001   9E24             
2001   8F86             
2001   8F86             
2001   8F86 00 00       
2001   8F88             
2001   9E24             
2001   9E24             
2001   9E24             
2001   907D             
2001   907D FF          
2001   907E             
2001   9E24             
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24~            	STSND(snd_maynard,REPL,8,-1,08,s_maynard)   ;Maynard fly in
2001   9E24             
2001   9E24             
2001   9E24             
2002   9E24             	 \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 				  8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 15\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_maynard2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
2002   9E24             
2002   9E24             
2002   8DD8             
2002   8DD8 08          
2002   8DD9             
2002   9E24             
2002   9E24~            	 CONT(				  8,-1,15,s_maynard2)
2002   9E24~            	 CONT(				  8,-1,15,s_maynard2)
2002   9E24             
2002   9E24             
2002   9E24             
2002   8E68             
2002   8E68 0F          
2002   8E69             
2002   9E24             
2002   9E24~            	 CONT(				  8,-1,15,s_maynard2)
2002   9E24~            	 CONT(				  8,-1,15,s_maynard2)
2002   9E24             
2002   9E24             
2002   9E24             
2002   8EF8             
2002   8EF8 75          
2002   8EF9             
2002   9E24             
2002   9E24~            	 CONT(				  8,-1,15,s_maynard2)
2002   9E24~            	 CONT(				  8,-1,15,s_maynard2)
2002   9E24             
2002   9E24             
2002   9E24             
2002   8F87             
2002   8F87             
2002   8F87 75 00       
2002   8F89             
2002   9E24             
2002   9E24             
2002   9E24             
2002   907E             
2002   907E FF          
2002   907F             
2002   9E24             
2002   9E24~            	 CONT(				  8,-1,15,s_maynard2)
2002   9E24~            	 CONT(				  8,-1,15,s_maynard2)
2002   9E24             
2002   9E24             
2003   9E24             ;* Kill Maynard fly in
2004   9E24             	\ \tmpptr .set *\.export snd_kilmaynard\snd_kilmaynard = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_killid\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte snd_bhend\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
2004   9E24             
2004   9E24             
2004   9E24             
2004   9E24             
2004   8BE1             
2004   8BE1 04          
2004   8BE2             
2004   9E24             
2004   9E24~            	KILID(snd_kilmaynard,snd_bhend)
2004   9E24~            	KILID(snd_kilmaynard,snd_bhend)
2004   9E24             
2004   9E24             
2004   9E24             
2004   8C8E             
2004   8C8E 69          
2004   8C8F             
2004   9E24             
2004   9E24~            	KILID(snd_kilmaynard,snd_bhend)
2004   9E24~            	KILID(snd_kilmaynard,snd_bhend)
2004   9E24             
2004   9E24             
2004   9E24             
2004   907F             
2004   907F FF          
2004   9080             
2004   9E24             
2004   9E24~            	KILID(snd_kilmaynard,snd_bhend)
2004   9E24~            	KILID(snd_kilmaynard,snd_bhend)
2004   9E24             
2005   9E24             	
2006   9E24             ;* End of wormhole	 
2007   9E24             	\ \tmpptr .set *\.export snd_bhend\snd_bhend = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_bhend = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 08\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bhend\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1   
2007   9E24             
2007   9E24             
2007   9E24             
2007   9E24             
2007   8BE2             
2007   8BE2 06          
2007   8BE3             
2007   9E24             
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24             
2007   9E24             
2007   9E24             
2007   9E24             
2007   8C8F             
2007   8C8F 42          
2007   8C90             
2007   9E24             
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24             
2007   9E24             
2007   9E24             
2007   8D15             
2007   8D15 76          
2007   8D16             
2007   9E24             
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24             
2007   9E24             
2007   9E24             
2007   8DD9             
2007   8DD9 08          
2007   8DDA             
2007   9E24             
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24             
2007   9E24             
2007   9E24             
2007   8E69             
2007   8E69 08          
2007   8E6A             
2007   9E24             
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24             
2007   9E24             
2007   9E24             
2007   8EF9             
2007   8EF9 76          
2007   8EFA             
2007   9E24             
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24             
2007   9E24             
2007   9E24             
2007   8F88             
2007   8F88             
2007   8F88 00 00       
2007   8F8A             
2007   9E24             
2007   9E24             
2007   9E24             
2007   9080             
2007   9080 FF          
2007   9081             
2007   9E24             
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24~            	STSND(snd_bhend,REPL,8,-1,08,s_bhend)   
2007   9E24             
2007   9E24             
2007   9E24             
2008   9E24             	
2009   9E24             ;* Bonus Build Up
2010   9E24             	\ \tmpptr .set *\.export snd_bonusr\snd_bonusr = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_bonusr = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 01\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bonusr\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1 
2010   9E24             
2010   9E24             
2010   9E24             
2010   9E24             
2010   8BE3             
2010   8BE3 06          
2010   8BE4             
2010   9E24             
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24             
2010   9E24             
2010   9E24             
2010   9E24             
2010   8C90             
2010   8C90 43          
2010   8C91             
2010   9E24             
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24             
2010   9E24             
2010   9E24             
2010   8D16             
2010   8D16 77          
2010   8D17             
2010   9E24             
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24             
2010   9E24             
2010   9E24             
2010   8DDA             
2010   8DDA 08          
2010   8DDB             
2010   9E24             
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24             
2010   9E24             
2010   9E24             
2010   8E6A             
2010   8E6A 01          
2010   8E6B             
2010   9E24             
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24             
2010   9E24             
2010   9E24             
2010   8EFA             
2010   8EFA 77          
2010   8EFB             
2010   9E24             
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24             
2010   9E24             
2010   9E24             
2010   8F89             
2010   8F89             
2010   8F89 00 00       
2010   8F8B             
2010   9E24             
2010   9E24             
2010   9E24             
2010   9081             
2010   9081 FF          
2010   9082             
2010   9E24             
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24~            	STSND(snd_bonusr,REPL,8,-1,01,s_bonusr) 
2010   9E24             
2010   9E24             
2010   9E24             
2011   9E24             	 \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 09\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bonusr2\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
2011   9E24             
2011   9E24             
2011   8DDB             
2011   8DDB 08          
2011   8DDC             
2011   9E24             
2011   9E24~            	 CONT(8,-1,09,s_bonusr2)
2011   9E24~            	 CONT(8,-1,09,s_bonusr2)
2011   9E24             
2011   9E24             
2011   9E24             
2011   8E6B             
2011   8E6B 09          
2011   8E6C             
2011   9E24             
2011   9E24~            	 CONT(8,-1,09,s_bonusr2)
2011   9E24~            	 CONT(8,-1,09,s_bonusr2)
2011   9E24             
2011   9E24             
2011   9E24             
2011   8EFB             
2011   8EFB 78          
2011   8EFC             
2011   9E24             
2011   9E24~            	 CONT(8,-1,09,s_bonusr2)
2011   9E24~            	 CONT(8,-1,09,s_bonusr2)
2011   9E24             
2011   9E24             
2011   9E24             
2011   8F8A             
2011   8F8A             
2011   8F8A 78 00       
2011   8F8C             
2011   9E24             
2011   9E24             
2011   9E24             
2011   9082             
2011   9082 FF          
2011   9083             
2011   9E24             
2011   9E24~            	 CONT(8,-1,09,s_bonusr2)
2011   9E24~            	 CONT(8,-1,09,s_bonusr2)
2011   9E24             
2011   9E24             
2012   9E24             	 \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 02\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bonusr3\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
2012   9E24             
2012   9E24             
2012   8DDC             
2012   8DDC 08          
2012   8DDD             
2012   9E24             
2012   9E24~            	 CONT(8,-1,02,s_bonusr3)
2012   9E24~            	 CONT(8,-1,02,s_bonusr3)
2012   9E24             
2012   9E24             
2012   9E24             
2012   8E6C             
2012   8E6C 02          
2012   8E6D             
2012   9E24             
2012   9E24~            	 CONT(8,-1,02,s_bonusr3)
2012   9E24~            	 CONT(8,-1,02,s_bonusr3)
2012   9E24             
2012   9E24             
2012   9E24             
2012   8EFC             
2012   8EFC 79          
2012   8EFD             
2012   9E24             
2012   9E24~            	 CONT(8,-1,02,s_bonusr3)
2012   9E24~            	 CONT(8,-1,02,s_bonusr3)
2012   9E24             
2012   9E24             
2012   9E24             
2012   8F8B             
2012   8F8B             
2012   8F8B 79 00       
2012   8F8D             
2012   9E24             
2012   9E24             
2012   9E24             
2012   9083             
2012   9083 FF          
2012   9084             
2012   9E24             
2012   9E24~            	 CONT(8,-1,02,s_bonusr3)
2012   9E24~            	 CONT(8,-1,02,s_bonusr3)
2012   9E24             
2012   9E24             
2013   9E24             	 \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 10\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_bonusr4\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte tunenum, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1
2013   9E24             
2013   9E24             
2013   8DDD             
2013   8DDD 08          
2013   8DDE             
2013   9E24             
2013   9E24~            	 CONT(8,-1,10,s_bonusr4)
2013   9E24~            	 CONT(8,-1,10,s_bonusr4)
2013   9E24             
2013   9E24             
2013   9E24             
2013   8E6D             
2013   8E6D 0A          
2013   8E6E             
2013   9E24             
2013   9E24~            	 CONT(8,-1,10,s_bonusr4)
2013   9E24~            	 CONT(8,-1,10,s_bonusr4)
2013   9E24             
2013   9E24             
2013   9E24             
2013   8EFD             
2013   8EFD 7A          
2013   8EFE             
2013   9E24             
2013   9E24~            	 CONT(8,-1,10,s_bonusr4)
2013   9E24~            	 CONT(8,-1,10,s_bonusr4)
2013   9E24             
2013   9E24             
2013   9E24             
2013   8F8C             
2013   8F8C             
2013   8F8C 7A 00       
2013   8F8E             
2013   9E24             
2013   9E24             
2013   9E24             
2013   9084             
2013   9084 FF          
2013   9085             
2013   9E24             
2013   9E24~            	 CONT(8,-1,10,s_bonusr4)
2013   9E24~            	 CONT(8,-1,10,s_bonusr4)
2013   9E24             
2013   9E24             
2014   9E24             	 
2015   9E24             ;* Max Moving Sound
2016   9E24             	\ \tmpptr .set *\.export snd_maxmv\snd_maxmv = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_maxmv = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 8\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 15\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_maxmv\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1
2016   9E24             
2016   9E24             
2016   9E24             
2016   9E24             
2016   8BE4             
2016   8BE4 06          
2016   8BE5             
2016   9E24             
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24             
2016   9E24             
2016   9E24             
2016   9E24             
2016   8C91             
2016   8C91 44          
2016   8C92             
2016   9E24             
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24             
2016   9E24             
2016   9E24             
2016   8D17             
2016   8D17 7B          
2016   8D18             
2016   9E24             
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24             
2016   9E24             
2016   9E24             
2016   8DDE             
2016   8DDE 08          
2016   8DDF             
2016   9E24             
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24             
2016   9E24             
2016   9E24             
2016   8E6E             
2016   8E6E 0F          
2016   8E6F             
2016   9E24             
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24             
2016   9E24             
2016   9E24             
2016   8EFE             
2016   8EFE 7B          
2016   8EFF             
2016   9E24             
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24             
2016   9E24             
2016   9E24             
2016   8F8D             
2016   8F8D             
2016   8F8D 00 00       
2016   8F8F             
2016   9E24             
2016   9E24             
2016   9E24             
2016   9085             
2016   9085 FF          
2016   9086             
2016   9E24             
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24~            	STSND(snd_maxmv,REPL,8,-1,15,s_maxmv)
2016   9E24             
2016   9E24             
2016   9E24             
2017   9E24             ;* Stop Max Sound
2018   9E24                 \ \tmpptr .set *\.export snd_kilmax\snd_kilmax = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_killid\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte snd_maxmv\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
2018   9E24             
2018   9E24             
2018   9E24             
2018   9E24             
2018   8BE5             
2018   8BE5 04          
2018   8BE6             
2018   9E24             
2018   9E24~                KILID(snd_kilmax,snd_maxmv)
2018   9E24~                KILID(snd_kilmax,snd_maxmv)
2018   9E24             
2018   9E24             
2018   9E24             
2018   8C92             
2018   8C92 6B          
2018   8C93             
2018   9E24             
2018   9E24~                KILID(snd_kilmax,snd_maxmv)
2018   9E24~                KILID(snd_kilmax,snd_maxmv)
2018   9E24             
2018   9E24             
2018   9E24             
2018   9086             
2018   9086 FF          
2018   9087             
2018   9E24             
2018   9E24~                KILID(snd_kilmax,snd_maxmv)
2018   9E24~                KILID(snd_kilmax,snd_maxmv)
2018   9E24             
2019   9E24             
2020   9E24             ;* Star Castle Background sound
2021   9E24             	\ \tmpptr .set *\.export snd_hiddenbk1\snd_hiddenbk1 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_sound\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \cmdp_+snd_hiddenbk1 = stsndcount\ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte stsndcount\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_tunestarts+o_tunestarts\ .byte tunenum\o_tunestarts .set o_tunestarts+1\ .org tmpptr\#IF o_tunestarts > numsnd\	.error "RPM: Too many tune starts defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_priority+o_priority\ .byte 6\o_priority .set o_priority+1\ .org tmpptr\#IF o_priority > (numtun)\	.error "RPM: Too many priorities defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_schan+o_schann\ .byte 00\o_schann .set o_schann+1\ .org tmpptr\#IF o_schann > (numtun)\	.error "RPM: Too many queues defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_stune+o_stune\ .byte s_hiddenbk1\o_stune .set o_stune+1\ .org tmpptr\#IF o_stune > (numtun)\	.error "RPM: Too many Tune IDs defined. Increase limit."\#ENDIF \ \tmpptr .set *\ .org t_tunecont+tunenum-1\#IF tunenum!=0\ .byte 0, $0\#ENDIF\ .org tmpptr\ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF \tunenum .set tunenum+1\stsndcount .set stsndcount+1
2021   9E24             
2021   9E24             
2021   9E24             
2021   9E24             
2021   8BE6             
2021   8BE6 06          
2021   8BE7             
2021   9E24             
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24             
2021   9E24             
2021   9E24             
2021   9E24             
2021   8C93             
2021   8C93 45          
2021   8C94             
2021   9E24             
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24             
2021   9E24             
2021   9E24             
2021   8D18             
2021   8D18 7C          
2021   8D19             
2021   9E24             
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24             
2021   9E24             
2021   9E24             
2021   8DDF             
2021   8DDF 06          
2021   8DE0             
2021   9E24             
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24             
2021   9E24             
2021   9E24             
2021   8E6F             
2021   8E6F 00          
2021   8E70             
2021   9E24             
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24             
2021   9E24             
2021   9E24             
2021   8EFF             
2021   8EFF 7C          
2021   8F00             
2021   9E24             
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24             
2021   9E24             
2021   9E24             
2021   8F8E             
2021   8F8E             
2021   8F8E 00 00       
2021   8F90             
2021   9E24             
2021   9E24             
2021   9E24             
2021   9087             
2021   9087 FF          
2021   9088             
2021   9E24             
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24~            	STSND(snd_hiddenbk1,REPL,6,-1,00,s_hiddenbk1)
2021   9E24             
2021   9E24             
2021   9E24             
2022   9E24             	
2023   9E24             ;* Star Castle Background kills
2024   9E24             	\ \tmpptr .set *\.export snd_kilbak\snd_kilbak = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_killid\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte snd_hiddenbk1\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
2024   9E24             
2024   9E24             
2024   9E24             
2024   9E24             
2024   8BE7             
2024   8BE7 04          
2024   8BE8             
2024   9E24             
2024   9E24~            	KILID(snd_kilbak,snd_hiddenbk1)
2024   9E24~            	KILID(snd_kilbak,snd_hiddenbk1)
2024   9E24             
2024   9E24             
2024   9E24             
2024   8C94             
2024   8C94 6D          
2024   8C95             
2024   9E24             
2024   9E24~            	KILID(snd_kilbak,snd_hiddenbk1)
2024   9E24~            	KILID(snd_kilbak,snd_hiddenbk1)
2024   9E24             
2024   9E24             
2024   9E24             
2024   9088             
2024   9088 FF          
2024   9089             
2024   9E24             
2024   9E24~            	KILID(snd_kilbak,snd_hiddenbk1)
2024   9E24~            	KILID(snd_kilbak,snd_hiddenbk1)
2024   9E24             
2025   9E24             
2026   9E24             ;STSND(snd_hiddenbk2,REPL,6,-1,00,s_hiddenbk2)
2027   9E24             ;STSND(snd_hiddenbk3,REPL,6,-1,00,s_hiddenbk3)
2028   9E24             ;STSND(snd_hiddenbk4,REPL,6,-1,00,s_hiddenbk4)
2029   9E24             ;***************************************************
2030   9E24             ;*  Speech Commands here (if enabled)
2031   9E24             ;***************************************************
2032   9E24             #IF ___oki == 1
2033   9E24             
2034   9E24             	;Speech Chip Test
2035   9E24             	\ \tmpptr .set *\.export sp_test\sp_test = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;Done
2035   9E24             
2035   9E24             
2035   9E24             
2035   9E24             
2035   8BE8             
2035   8BE8 08          
2035   8BE9             
2035   9E24             
2035   9E24~            	ADPCM(sp_test,chan1,dbm0)			;Done
2035   9E24~            	ADPCM(sp_test,chan1,dbm0)			;Done
2035   9E24             
2035   9E24             
2035   9E24             
2035   8C95             
2035   8C95 00          
2035   8C96             
2035   9E24             
2035   9E24~            	ADPCM(sp_test,chan1,dbm0)			;Done
2035   9E24~            	ADPCM(sp_test,chan1,dbm0)			;Done
2035   9E24             
2035   9E24             
2035   9E24             
2035   9480             
2035   9480 81          
2035   94FF             
2035   94FF 10          
2035   9500             
2035   9E24             
2035   9E24~            	ADPCM(sp_test,chan1,dbm0)			;Done
2035   9E24~            	ADPCM(sp_test,chan1,dbm0)			;Done
2035   9E24             
2036   9E24             	
2037   9E24             	;Mother voice
2038   9E24                 \ \tmpptr .set *\.export sp_one\sp_one = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2038   9E24             
2038   9E24             
2038   9E24             
2038   9E24             
2038   8BE9             
2038   8BE9 08          
2038   8BEA             
2038   9E24             
2038   9E24~                ADPCM(sp_one,chan1,dbm0)
2038   9E24~                ADPCM(sp_one,chan1,dbm0)
2038   9E24             
2038   9E24             
2038   9E24             
2038   8C96             
2038   8C96 01          
2038   8C97             
2038   9E24             
2038   9E24~                ADPCM(sp_one,chan1,dbm0)
2038   9E24~                ADPCM(sp_one,chan1,dbm0)
2038   9E24             
2038   9E24             
2038   9E24             
2038   9481             
2038   9481 82          
2038   9500             
2038   9500 10          
2038   9501             
2038   9E24             
2038   9E24~                ADPCM(sp_one,chan1,dbm0)
2038   9E24~                ADPCM(sp_one,chan1,dbm0)
2038   9E24             
2039   9E24                 \ \tmpptr .set *\.export sp_two\sp_two = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2039   9E24             
2039   9E24             
2039   9E24             
2039   9E24             
2039   8BEA             
2039   8BEA 08          
2039   8BEB             
2039   9E24             
2039   9E24~                ADPCM(sp_two,chan1,dbm0)
2039   9E24~                ADPCM(sp_two,chan1,dbm0)
2039   9E24             
2039   9E24             
2039   9E24             
2039   8C97             
2039   8C97 02          
2039   8C98             
2039   9E24             
2039   9E24~                ADPCM(sp_two,chan1,dbm0)
2039   9E24~                ADPCM(sp_two,chan1,dbm0)
2039   9E24             
2039   9E24             
2039   9E24             
2039   9482             
2039   9482 83          
2039   9501             
2039   9501 10          
2039   9502             
2039   9E24             
2039   9E24~                ADPCM(sp_two,chan1,dbm0)
2039   9E24~                ADPCM(sp_two,chan1,dbm0)
2039   9E24             
2040   9E24                 \ \tmpptr .set *\.export sp_three\sp_three = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2040   9E24             
2040   9E24             
2040   9E24             
2040   9E24             
2040   8BEB             
2040   8BEB 08          
2040   8BEC             
2040   9E24             
2040   9E24~                ADPCM(sp_three,chan1,dbm0)
2040   9E24~                ADPCM(sp_three,chan1,dbm0)
2040   9E24             
2040   9E24             
2040   9E24             
2040   8C98             
2040   8C98 03          
2040   8C99             
2040   9E24             
2040   9E24~                ADPCM(sp_three,chan1,dbm0)
2040   9E24~                ADPCM(sp_three,chan1,dbm0)
2040   9E24             
2040   9E24             
2040   9E24             
2040   9483             
2040   9483 84          
2040   9502             
2040   9502 10          
2040   9503             
2040   9E24             
2040   9E24~                ADPCM(sp_three,chan1,dbm0)
2040   9E24~                ADPCM(sp_three,chan1,dbm0)
2040   9E24             
2041   9E24                 \ \tmpptr .set *\.export sp_four\sp_four = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2041   9E24             
2041   9E24             
2041   9E24             
2041   9E24             
2041   8BEC             
2041   8BEC 08          
2041   8BED             
2041   9E24             
2041   9E24~                ADPCM(sp_four,chan1,dbm0)
2041   9E24~                ADPCM(sp_four,chan1,dbm0)
2041   9E24             
2041   9E24             
2041   9E24             
2041   8C99             
2041   8C99 04          
2041   8C9A             
2041   9E24             
2041   9E24~                ADPCM(sp_four,chan1,dbm0)
2041   9E24~                ADPCM(sp_four,chan1,dbm0)
2041   9E24             
2041   9E24             
2041   9E24             
2041   9484             
2041   9484 85          
2041   9503             
2041   9503 10          
2041   9504             
2041   9E24             
2041   9E24~                ADPCM(sp_four,chan1,dbm0)
2041   9E24~                ADPCM(sp_four,chan1,dbm0)
2041   9E24             
2042   9E24                 \ \tmpptr .set *\.export sp_five\sp_five = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2042   9E24             
2042   9E24             
2042   9E24             
2042   9E24             
2042   8BED             
2042   8BED 08          
2042   8BEE             
2042   9E24             
2042   9E24~                ADPCM(sp_five,chan1,dbm0)
2042   9E24~                ADPCM(sp_five,chan1,dbm0)
2042   9E24             
2042   9E24             
2042   9E24             
2042   8C9A             
2042   8C9A 05          
2042   8C9B             
2042   9E24             
2042   9E24~                ADPCM(sp_five,chan1,dbm0)
2042   9E24~                ADPCM(sp_five,chan1,dbm0)
2042   9E24             
2042   9E24             
2042   9E24             
2042   9485             
2042   9485 86          
2042   9504             
2042   9504 10          
2042   9505             
2042   9E24             
2042   9E24~                ADPCM(sp_five,chan1,dbm0)
2042   9E24~                ADPCM(sp_five,chan1,dbm0)
2042   9E24             
2043   9E24                 \ \tmpptr .set *\.export sp_six\sp_six = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2043   9E24             
2043   9E24             
2043   9E24             
2043   9E24             
2043   8BEE             
2043   8BEE 08          
2043   8BEF             
2043   9E24             
2043   9E24~                ADPCM(sp_six,chan1,dbm0)
2043   9E24~                ADPCM(sp_six,chan1,dbm0)
2043   9E24             
2043   9E24             
2043   9E24             
2043   8C9B             
2043   8C9B 06          
2043   8C9C             
2043   9E24             
2043   9E24~                ADPCM(sp_six,chan1,dbm0)
2043   9E24~                ADPCM(sp_six,chan1,dbm0)
2043   9E24             
2043   9E24             
2043   9E24             
2043   9486             
2043   9486 87          
2043   9505             
2043   9505 10          
2043   9506             
2043   9E24             
2043   9E24~                ADPCM(sp_six,chan1,dbm0)
2043   9E24~                ADPCM(sp_six,chan1,dbm0)
2043   9E24             
2044   9E24                 \ \tmpptr .set *\.export sp_seven\sp_seven = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2044   9E24             
2044   9E24             
2044   9E24             
2044   9E24             
2044   8BEF             
2044   8BEF 08          
2044   8BF0             
2044   9E24             
2044   9E24~                ADPCM(sp_seven,chan1,dbm0)
2044   9E24~                ADPCM(sp_seven,chan1,dbm0)
2044   9E24             
2044   9E24             
2044   9E24             
2044   8C9C             
2044   8C9C 07          
2044   8C9D             
2044   9E24             
2044   9E24~                ADPCM(sp_seven,chan1,dbm0)
2044   9E24~                ADPCM(sp_seven,chan1,dbm0)
2044   9E24             
2044   9E24             
2044   9E24             
2044   9487             
2044   9487 88          
2044   9506             
2044   9506 10          
2044   9507             
2044   9E24             
2044   9E24~                ADPCM(sp_seven,chan1,dbm0)
2044   9E24~                ADPCM(sp_seven,chan1,dbm0)
2044   9E24             
2045   9E24                 \ \tmpptr .set *\.export sp_eight\sp_eight = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2045   9E24             
2045   9E24             
2045   9E24             
2045   9E24             
2045   8BF0             
2045   8BF0 08          
2045   8BF1             
2045   9E24             
2045   9E24~                ADPCM(sp_eight,chan1,dbm0)
2045   9E24~                ADPCM(sp_eight,chan1,dbm0)
2045   9E24             
2045   9E24             
2045   9E24             
2045   8C9D             
2045   8C9D 08          
2045   8C9E             
2045   9E24             
2045   9E24~                ADPCM(sp_eight,chan1,dbm0)
2045   9E24~                ADPCM(sp_eight,chan1,dbm0)
2045   9E24             
2045   9E24             
2045   9E24             
2045   9488             
2045   9488 89          
2045   9507             
2045   9507 10          
2045   9508             
2045   9E24             
2045   9E24~                ADPCM(sp_eight,chan1,dbm0)
2045   9E24~                ADPCM(sp_eight,chan1,dbm0)
2045   9E24             
2046   9E24                 \ \tmpptr .set *\.export sp_nine\sp_nine = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2046   9E24             
2046   9E24             
2046   9E24             
2046   9E24             
2046   8BF1             
2046   8BF1 08          
2046   8BF2             
2046   9E24             
2046   9E24~                ADPCM(sp_nine,chan1,dbm0)
2046   9E24~                ADPCM(sp_nine,chan1,dbm0)
2046   9E24             
2046   9E24             
2046   9E24             
2046   8C9E             
2046   8C9E 09          
2046   8C9F             
2046   9E24             
2046   9E24~                ADPCM(sp_nine,chan1,dbm0)
2046   9E24~                ADPCM(sp_nine,chan1,dbm0)
2046   9E24             
2046   9E24             
2046   9E24             
2046   9489             
2046   9489 8A          
2046   9508             
2046   9508 10          
2046   9509             
2046   9E24             
2046   9E24~                ADPCM(sp_nine,chan1,dbm0)
2046   9E24~                ADPCM(sp_nine,chan1,dbm0)
2046   9E24             
2047   9E24                 \ \tmpptr .set *\.export sp_ten\sp_ten = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan1 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2047   9E24             
2047   9E24             
2047   9E24             
2047   9E24             
2047   8BF2             
2047   8BF2 08          
2047   8BF3             
2047   9E24             
2047   9E24~                ADPCM(sp_ten,chan1,dbm0)
2047   9E24~                ADPCM(sp_ten,chan1,dbm0)
2047   9E24             
2047   9E24             
2047   9E24             
2047   8C9F             
2047   8C9F 0A          
2047   8CA0             
2047   9E24             
2047   9E24~                ADPCM(sp_ten,chan1,dbm0)
2047   9E24~                ADPCM(sp_ten,chan1,dbm0)
2047   9E24             
2047   9E24             
2047   9E24             
2047   948A             
2047   948A 8B          
2047   9509             
2047   9509 10          
2047   950A             
2047   9E24             
2047   9E24~                ADPCM(sp_ten,chan1,dbm0)
2047   9E24~                ADPCM(sp_ten,chan1,dbm0)
2047   9E24             
2048   9E24             	
2049   9E24             	;Max voice
2050   9E24             	\ \tmpptr .set *\.export sp_maxintruder\sp_maxintruder = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;used when Max Activates
2050   9E24             
2050   9E24             
2050   9E24             
2050   9E24             
2050   8BF3             
2050   8BF3 08          
2050   8BF4             
2050   9E24             
2050   9E24~            	ADPCM(sp_maxintruder,chan2,dbm0)		;used when Max Activates
2050   9E24~            	ADPCM(sp_maxintruder,chan2,dbm0)		;used when Max Activates
2050   9E24             
2050   9E24             
2050   9E24             
2050   8CA0             
2050   8CA0 0B          
2050   8CA1             
2050   9E24             
2050   9E24~            	ADPCM(sp_maxintruder,chan2,dbm0)		;used when Max Activates
2050   9E24~            	ADPCM(sp_maxintruder,chan2,dbm0)		;used when Max Activates
2050   9E24             
2050   9E24             
2050   9E24             
2050   948B             
2050   948B 8C          
2050   950A             
2050   950A 20          
2050   950B             
2050   9E24             
2050   9E24~            	ADPCM(sp_maxintruder,chan2,dbm0)		;used when Max Activates
2050   9E24~            	ADPCM(sp_maxintruder,chan2,dbm0)		;used when Max Activates
2050   9E24             
2051   9E24             	\ \tmpptr .set *\.export sp_maxdestint\sp_maxdestint = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used when Max Activates
2051   9E24             
2051   9E24             
2051   9E24             
2051   9E24             
2051   8BF4             
2051   8BF4 08          
2051   8BF5             
2051   9E24             
2051   9E24~            	ADPCM(sp_maxdestint,chan2,dbm0)			;used when Max Activates
2051   9E24~            	ADPCM(sp_maxdestint,chan2,dbm0)			;used when Max Activates
2051   9E24             
2051   9E24             
2051   9E24             
2051   8CA1             
2051   8CA1 0C          
2051   8CA2             
2051   9E24             
2051   9E24~            	ADPCM(sp_maxdestint,chan2,dbm0)			;used when Max Activates
2051   9E24~            	ADPCM(sp_maxdestint,chan2,dbm0)			;used when Max Activates
2051   9E24             
2051   9E24             
2051   9E24             
2051   948C             
2051   948C 8D          
2051   950B             
2051   950B 20          
2051   950C             
2051   9E24             
2051   9E24~            	ADPCM(sp_maxdestint,chan2,dbm0)			;used when Max Activates
2051   9E24~            	ADPCM(sp_maxdestint,chan2,dbm0)			;used when Max Activates
2051   9E24             
2052   9E24             	\ \tmpptr .set *\.export sp_maxdestroy\sp_maxdestroy = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;used when Max kills Rex
2052   9E24             
2052   9E24             
2052   9E24             
2052   9E24             
2052   8BF5             
2052   8BF5 08          
2052   8BF6             
2052   9E24             
2052   9E24~            	ADPCM(sp_maxdestroy,chan2,dbm0)		;used when Max kills Rex
2052   9E24~            	ADPCM(sp_maxdestroy,chan2,dbm0)		;used when Max kills Rex
2052   9E24             
2052   9E24             
2052   9E24             
2052   8CA2             
2052   8CA2 0D          
2052   8CA3             
2052   9E24             
2052   9E24~            	ADPCM(sp_maxdestroy,chan2,dbm0)		;used when Max kills Rex
2052   9E24~            	ADPCM(sp_maxdestroy,chan2,dbm0)		;used when Max kills Rex
2052   9E24             
2052   9E24             
2052   9E24             
2052   948D             
2052   948D 8E          
2052   950C             
2052   950C 20          
2052   950D             
2052   9E24             
2052   9E24~            	ADPCM(sp_maxdestroy,chan2,dbm0)		;used when Max kills Rex
2052   9E24~            	ADPCM(sp_maxdestroy,chan2,dbm0)		;used when Max kills Rex
2052   9E24             
2053   9E24                 \ \tmpptr .set *\.export sp_maxhaha1\sp_maxhaha1 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used when Max kills Rex
2053   9E24             
2053   9E24             
2053   9E24             
2053   9E24             
2053   8BF6             
2053   8BF6 08          
2053   8BF7             
2053   9E24             
2053   9E24~                ADPCM(sp_maxhaha1,chan2,dbm0)			;used when Max kills Rex
2053   9E24~                ADPCM(sp_maxhaha1,chan2,dbm0)			;used when Max kills Rex
2053   9E24             
2053   9E24             
2053   9E24             
2053   8CA3             
2053   8CA3 0E          
2053   8CA4             
2053   9E24             
2053   9E24~                ADPCM(sp_maxhaha1,chan2,dbm0)			;used when Max kills Rex
2053   9E24~                ADPCM(sp_maxhaha1,chan2,dbm0)			;used when Max kills Rex
2053   9E24             
2053   9E24             
2053   9E24             
2053   948E             
2053   948E 8F          
2053   950D             
2053   950D 20          
2053   950E             
2053   9E24             
2053   9E24~                ADPCM(sp_maxhaha1,chan2,dbm0)			;used when Max kills Rex
2053   9E24~                ADPCM(sp_maxhaha1,chan2,dbm0)			;used when Max kills Rex
2053   9E24             
2054   9E24             	\ \tmpptr .set *\.export sp_maxhaha2\sp_maxhaha2 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used when Max kills Rex
2054   9E24             
2054   9E24             
2054   9E24             
2054   9E24             
2054   8BF7             
2054   8BF7 08          
2054   8BF8             
2054   9E24             
2054   9E24~            	ADPCM(sp_maxhaha2,chan2,dbm0)			;used when Max kills Rex
2054   9E24~            	ADPCM(sp_maxhaha2,chan2,dbm0)			;used when Max kills Rex
2054   9E24             
2054   9E24             
2054   9E24             
2054   8CA4             
2054   8CA4 0F          
2054   8CA5             
2054   9E24             
2054   9E24~            	ADPCM(sp_maxhaha2,chan2,dbm0)			;used when Max kills Rex
2054   9E24~            	ADPCM(sp_maxhaha2,chan2,dbm0)			;used when Max kills Rex
2054   9E24             
2054   9E24             
2054   9E24             
2054   948F             
2054   948F 90          
2054   950E             
2054   950E 20          
2054   950F             
2054   9E24             
2054   9E24~            	ADPCM(sp_maxhaha2,chan2,dbm0)			;used when Max kills Rex
2054   9E24~            	ADPCM(sp_maxhaha2,chan2,dbm0)			;used when Max kills Rex
2054   9E24             
2055   9E24             	\ \tmpptr .set *\.export sp_maxhaha3\sp_maxhaha3 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used when Max kills Rex
2055   9E24             
2055   9E24             
2055   9E24             
2055   9E24             
2055   8BF8             
2055   8BF8 08          
2055   8BF9             
2055   9E24             
2055   9E24~            	ADPCM(sp_maxhaha3,chan2,dbm0)			;used when Max kills Rex
2055   9E24~            	ADPCM(sp_maxhaha3,chan2,dbm0)			;used when Max kills Rex
2055   9E24             
2055   9E24             
2055   9E24             
2055   8CA5             
2055   8CA5 10          
2055   8CA6             
2055   9E24             
2055   9E24~            	ADPCM(sp_maxhaha3,chan2,dbm0)			;used when Max kills Rex
2055   9E24~            	ADPCM(sp_maxhaha3,chan2,dbm0)			;used when Max kills Rex
2055   9E24             
2055   9E24             
2055   9E24             
2055   9490             
2055   9490 91          
2055   950F             
2055   950F 20          
2055   9510             
2055   9E24             
2055   9E24~            	ADPCM(sp_maxhaha3,chan2,dbm0)			;used when Max kills Rex
2055   9E24~            	ADPCM(sp_maxhaha3,chan2,dbm0)			;used when Max kills Rex
2055   9E24             
2056   9E24             	\ \tmpptr .set *\.export sp_maxwewin\sp_maxwewin = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used when Max kills Rex
2056   9E24             
2056   9E24             
2056   9E24             
2056   9E24             
2056   8BF9             
2056   8BF9 08          
2056   8BFA             
2056   9E24             
2056   9E24~            	ADPCM(sp_maxwewin,chan2,dbm0)			;used when Max kills Rex
2056   9E24~            	ADPCM(sp_maxwewin,chan2,dbm0)			;used when Max kills Rex
2056   9E24             
2056   9E24             
2056   9E24             
2056   8CA6             
2056   8CA6 11          
2056   8CA7             
2056   9E24             
2056   9E24~            	ADPCM(sp_maxwewin,chan2,dbm0)			;used when Max kills Rex
2056   9E24~            	ADPCM(sp_maxwewin,chan2,dbm0)			;used when Max kills Rex
2056   9E24             
2056   9E24             
2056   9E24             
2056   9491             
2056   9491 92          
2056   9510             
2056   9510 20          
2056   9511             
2056   9E24             
2056   9E24~            	ADPCM(sp_maxwewin,chan2,dbm0)			;used when Max kills Rex
2056   9E24~            	ADPCM(sp_maxwewin,chan2,dbm0)			;used when Max kills Rex
2056   9E24             
2057   9E24             	\ \tmpptr .set *\.export sp_maxyoulose\sp_maxyoulose = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used when Max kills Rex
2057   9E24             
2057   9E24             
2057   9E24             
2057   9E24             
2057   8BFA             
2057   8BFA 08          
2057   8BFB             
2057   9E24             
2057   9E24~            	ADPCM(sp_maxyoulose,chan2,dbm0)			;used when Max kills Rex
2057   9E24~            	ADPCM(sp_maxyoulose,chan2,dbm0)			;used when Max kills Rex
2057   9E24             
2057   9E24             
2057   9E24             
2057   8CA7             
2057   8CA7 12          
2057   8CA8             
2057   9E24             
2057   9E24~            	ADPCM(sp_maxyoulose,chan2,dbm0)			;used when Max kills Rex
2057   9E24~            	ADPCM(sp_maxyoulose,chan2,dbm0)			;used when Max kills Rex
2057   9E24             
2057   9E24             
2057   9E24             
2057   9492             
2057   9492 93          
2057   9511             
2057   9511 20          
2057   9512             
2057   9E24             
2057   9E24~            	ADPCM(sp_maxyoulose,chan2,dbm0)			;used when Max kills Rex
2057   9E24~            	ADPCM(sp_maxyoulose,chan2,dbm0)			;used when Max kills Rex
2057   9E24             
2058   9E24             	\ \tmpptr .set *\.export sp_maxactivate\sp_maxactivate = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;used when Max Activates
2058   9E24             
2058   9E24             
2058   9E24             
2058   9E24             
2058   8BFB             
2058   8BFB 08          
2058   8BFC             
2058   9E24             
2058   9E24~            	ADPCM(sp_maxactivate,chan2,dbm0)		;used when Max Activates
2058   9E24~            	ADPCM(sp_maxactivate,chan2,dbm0)		;used when Max Activates
2058   9E24             
2058   9E24             
2058   9E24             
2058   8CA8             
2058   8CA8 13          
2058   8CA9             
2058   9E24             
2058   9E24~            	ADPCM(sp_maxactivate,chan2,dbm0)		;used when Max Activates
2058   9E24~            	ADPCM(sp_maxactivate,chan2,dbm0)		;used when Max Activates
2058   9E24             
2058   9E24             
2058   9E24             
2058   9493             
2058   9493 94          
2058   9512             
2058   9512 20          
2058   9513             
2058   9E24             
2058   9E24~            	ADPCM(sp_maxactivate,chan2,dbm0)		;used when Max Activates
2058   9E24~            	ADPCM(sp_maxactivate,chan2,dbm0)		;used when Max Activates
2058   9E24             
2059   9E24             	\ \tmpptr .set *\.export sp_maxattack\sp_maxattack = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used when Max Activates
2059   9E24             
2059   9E24             
2059   9E24             
2059   9E24             
2059   8BFC             
2059   8BFC 08          
2059   8BFD             
2059   9E24             
2059   9E24~            	ADPCM(sp_maxattack,chan2,dbm0)			;used when Max Activates
2059   9E24~            	ADPCM(sp_maxattack,chan2,dbm0)			;used when Max Activates
2059   9E24             
2059   9E24             
2059   9E24             
2059   8CA9             
2059   8CA9 14          
2059   8CAA             
2059   9E24             
2059   9E24~            	ADPCM(sp_maxattack,chan2,dbm0)			;used when Max Activates
2059   9E24~            	ADPCM(sp_maxattack,chan2,dbm0)			;used when Max Activates
2059   9E24             
2059   9E24             
2059   9E24             
2059   9494             
2059   9494 95          
2059   9513             
2059   9513 20          
2059   9514             
2059   9E24             
2059   9E24~            	ADPCM(sp_maxattack,chan2,dbm0)			;used when Max Activates
2059   9E24~            	ADPCM(sp_maxattack,chan2,dbm0)			;used when Max Activates
2059   9E24             
2060   9E24             	\ \tmpptr .set *\.export sp_maxcannot\sp_maxcannot = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used at start of star castle
2060   9E24             
2060   9E24             
2060   9E24             
2060   9E24             
2060   8BFD             
2060   8BFD 08          
2060   8BFE             
2060   9E24             
2060   9E24~            	ADPCM(sp_maxcannot,chan2,dbm0)			;used at start of star castle
2060   9E24~            	ADPCM(sp_maxcannot,chan2,dbm0)			;used at start of star castle
2060   9E24             
2060   9E24             
2060   9E24             
2060   8CAA             
2060   8CAA 15          
2060   8CAB             
2060   9E24             
2060   9E24~            	ADPCM(sp_maxcannot,chan2,dbm0)			;used at start of star castle
2060   9E24~            	ADPCM(sp_maxcannot,chan2,dbm0)			;used at start of star castle
2060   9E24             
2060   9E24             
2060   9E24             
2060   9495             
2060   9495 96          
2060   9514             
2060   9514 20          
2060   9515             
2060   9E24             
2060   9E24~            	ADPCM(sp_maxcannot,chan2,dbm0)			;used at start of star castle
2060   9E24~            	ADPCM(sp_maxcannot,chan2,dbm0)			;used at start of star castle
2060   9E24             
2061   9E24             	\ \tmpptr .set *\.export sp_maxwillnot\sp_maxwillnot = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used at start of star castle
2061   9E24             
2061   9E24             
2061   9E24             
2061   9E24             
2061   8BFE             
2061   8BFE 08          
2061   8BFF             
2061   9E24             
2061   9E24~            	ADPCM(sp_maxwillnot,chan2,dbm0)			;used at start of star castle
2061   9E24~            	ADPCM(sp_maxwillnot,chan2,dbm0)			;used at start of star castle
2061   9E24             
2061   9E24             
2061   9E24             
2061   8CAB             
2061   8CAB 16          
2061   8CAC             
2061   9E24             
2061   9E24~            	ADPCM(sp_maxwillnot,chan2,dbm0)			;used at start of star castle
2061   9E24~            	ADPCM(sp_maxwillnot,chan2,dbm0)			;used at start of star castle
2061   9E24             
2061   9E24             
2061   9E24             
2061   9496             
2061   9496 97          
2061   9515             
2061   9515 20          
2061   9516             
2061   9E24             
2061   9E24~            	ADPCM(sp_maxwillnot,chan2,dbm0)			;used at start of star castle
2061   9E24~            	ADPCM(sp_maxwillnot,chan2,dbm0)			;used at start of star castle
2061   9E24             
2062   9E24             	\ \tmpptr .set *\.export sp_maxbeback\sp_maxbeback = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used for Max death
2062   9E24             
2062   9E24             
2062   9E24             
2062   9E24             
2062   8BFF             
2062   8BFF 08          
2062   8C00             
2062   9E24             
2062   9E24~            	ADPCM(sp_maxbeback,chan2,dbm0)			;used for Max death
2062   9E24~            	ADPCM(sp_maxbeback,chan2,dbm0)			;used for Max death
2062   9E24             
2062   9E24             
2062   9E24             
2062   8CAC             
2062   8CAC 17          
2062   8CAD             
2062   9E24             
2062   9E24~            	ADPCM(sp_maxbeback,chan2,dbm0)			;used for Max death
2062   9E24~            	ADPCM(sp_maxbeback,chan2,dbm0)			;used for Max death
2062   9E24             
2062   9E24             
2062   9E24             
2062   9497             
2062   9497 98          
2062   9516             
2062   9516 20          
2062   9517             
2062   9E24             
2062   9E24~            	ADPCM(sp_maxbeback,chan2,dbm0)			;used for Max death
2062   9E24~            	ADPCM(sp_maxbeback,chan2,dbm0)			;used for Max death
2062   9E24             
2063   9E24             	\ \tmpptr .set *\.export sp_maxahhhh\sp_maxahhhh = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used for Max injury
2063   9E24             
2063   9E24             
2063   9E24             
2063   9E24             
2063   8C00             
2063   8C00 08          
2063   8C01             
2063   9E24             
2063   9E24~            	ADPCM(sp_maxahhhh,chan2,dbm0)			;used for Max injury
2063   9E24~            	ADPCM(sp_maxahhhh,chan2,dbm0)			;used for Max injury
2063   9E24             
2063   9E24             
2063   9E24             
2063   8CAD             
2063   8CAD 18          
2063   8CAE             
2063   9E24             
2063   9E24~            	ADPCM(sp_maxahhhh,chan2,dbm0)			;used for Max injury
2063   9E24~            	ADPCM(sp_maxahhhh,chan2,dbm0)			;used for Max injury
2063   9E24             
2063   9E24             
2063   9E24             
2063   9498             
2063   9498 99          
2063   9517             
2063   9517 20          
2063   9518             
2063   9E24             
2063   9E24~            	ADPCM(sp_maxahhhh,chan2,dbm0)			;used for Max injury
2063   9E24~            	ADPCM(sp_maxahhhh,chan2,dbm0)			;used for Max injury
2063   9E24             
2064   9E24             	\ \tmpptr .set *\.export sp_maxohhhh\sp_maxohhhh = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used for Max injury
2064   9E24             
2064   9E24             
2064   9E24             
2064   9E24             
2064   8C01             
2064   8C01 08          
2064   8C02             
2064   9E24             
2064   9E24~            	ADPCM(sp_maxohhhh,chan2,dbm0)			;used for Max injury
2064   9E24~            	ADPCM(sp_maxohhhh,chan2,dbm0)			;used for Max injury
2064   9E24             
2064   9E24             
2064   9E24             
2064   8CAE             
2064   8CAE 19          
2064   8CAF             
2064   9E24             
2064   9E24~            	ADPCM(sp_maxohhhh,chan2,dbm0)			;used for Max injury
2064   9E24~            	ADPCM(sp_maxohhhh,chan2,dbm0)			;used for Max injury
2064   9E24             
2064   9E24             
2064   9E24             
2064   9499             
2064   9499 9A          
2064   9518             
2064   9518 20          
2064   9519             
2064   9E24             
2064   9E24~            	ADPCM(sp_maxohhhh,chan2,dbm0)			;used for Max injury
2064   9E24~            	ADPCM(sp_maxohhhh,chan2,dbm0)			;used for Max injury
2064   9E24             
2065   9E24             	\ \tmpptr .set *\.export sp_maxeeeeww\sp_maxeeeeww = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan2 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used for Max death
2065   9E24             
2065   9E24             
2065   9E24             
2065   9E24             
2065   8C02             
2065   8C02 08          
2065   8C03             
2065   9E24             
2065   9E24~            	ADPCM(sp_maxeeeeww,chan2,dbm0)			;used for Max death
2065   9E24~            	ADPCM(sp_maxeeeeww,chan2,dbm0)			;used for Max death
2065   9E24             
2065   9E24             
2065   9E24             
2065   8CAF             
2065   8CAF 1A          
2065   8CB0             
2065   9E24             
2065   9E24~            	ADPCM(sp_maxeeeeww,chan2,dbm0)			;used for Max death
2065   9E24~            	ADPCM(sp_maxeeeeww,chan2,dbm0)			;used for Max death
2065   9E24             
2065   9E24             
2065   9E24             
2065   949A             
2065   949A 9B          
2065   9519             
2065   9519 20          
2065   951A             
2065   9E24             
2065   9E24~            	ADPCM(sp_maxeeeeww,chan2,dbm0)			;used for Max death
2065   9E24~            	ADPCM(sp_maxeeeeww,chan2,dbm0)			;used for Max death
2065   9E24             
2066   9E24             	
2067   9E24             	;Rex voice
2068   9E24             	\ \tmpptr .set *\.export sp_rexhurry\sp_rexhurry = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;used when Reactor is at 15
2068   9E24             
2068   9E24             
2068   9E24             
2068   9E24             
2068   8C03             
2068   8C03 08          
2068   8C04             
2068   9E24             
2068   9E24~            	ADPCM(sp_rexhurry,chan3,dbm0)			;used when Reactor is at 15
2068   9E24~            	ADPCM(sp_rexhurry,chan3,dbm0)			;used when Reactor is at 15
2068   9E24             
2068   9E24             
2068   9E24             
2068   8CB0             
2068   8CB0 1B          
2068   8CB1             
2068   9E24             
2068   9E24~            	ADPCM(sp_rexhurry,chan3,dbm0)			;used when Reactor is at 15
2068   9E24~            	ADPCM(sp_rexhurry,chan3,dbm0)			;used when Reactor is at 15
2068   9E24             
2068   9E24             
2068   9E24             
2068   949B             
2068   949B 9C          
2068   951A             
2068   951A 40          
2068   951B             
2068   9E24             
2068   9E24~            	ADPCM(sp_rexhurry,chan3,dbm0)			;used when Reactor is at 15
2068   9E24~            	ADPCM(sp_rexhurry,chan3,dbm0)			;used when Reactor is at 15
2068   9E24             
2069   9E24             	\ \tmpptr .set *\.export sp_rexcomeon\sp_rexcomeon = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;Full 1/256 random
2069   9E24             
2069   9E24             
2069   9E24             
2069   9E24             
2069   8C04             
2069   8C04 08          
2069   8C05             
2069   9E24             
2069   9E24~            	ADPCM(sp_rexcomeon,chan3,dbm0)		;Full 1/256 random
2069   9E24~            	ADPCM(sp_rexcomeon,chan3,dbm0)		;Full 1/256 random
2069   9E24             
2069   9E24             
2069   9E24             
2069   8CB1             
2069   8CB1 1C          
2069   8CB2             
2069   9E24             
2069   9E24~            	ADPCM(sp_rexcomeon,chan3,dbm0)		;Full 1/256 random
2069   9E24~            	ADPCM(sp_rexcomeon,chan3,dbm0)		;Full 1/256 random
2069   9E24             
2069   9E24             
2069   9E24             
2069   949C             
2069   949C 9D          
2069   951B             
2069   951B 40          
2069   951C             
2069   9E24             
2069   9E24~            	ADPCM(sp_rexcomeon,chan3,dbm0)		;Full 1/256 random
2069   9E24~            	ADPCM(sp_rexcomeon,chan3,dbm0)		;Full 1/256 random
2069   9E24             
2070   9E24             	\ \tmpptr .set *\.export sp_rexouttahere\sp_rexouttahere = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 	;not yet used
2070   9E24             
2070   9E24             
2070   9E24             
2070   9E24             
2070   8C05             
2070   8C05 08          
2070   8C06             
2070   9E24             
2070   9E24~            	ADPCM(sp_rexouttahere,chan3,dbm0)	;not yet used
2070   9E24~            	ADPCM(sp_rexouttahere,chan3,dbm0)	;not yet used
2070   9E24             
2070   9E24             
2070   9E24             
2070   8CB2             
2070   8CB2 1D          
2070   8CB3             
2070   9E24             
2070   9E24~            	ADPCM(sp_rexouttahere,chan3,dbm0)	;not yet used
2070   9E24~            	ADPCM(sp_rexouttahere,chan3,dbm0)	;not yet used
2070   9E24             
2070   9E24             
2070   9E24             
2070   949D             
2070   949D 9E          
2070   951C             
2070   951C 40          
2070   951D             
2070   9E24             
2070   9E24~            	ADPCM(sp_rexouttahere,chan3,dbm0)	;not yet used
2070   9E24~            	ADPCM(sp_rexouttahere,chan3,dbm0)	;not yet used
2070   9E24             
2071   9E24             	\ \tmpptr .set *\.export sp_rexooof\sp_rexooof = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;used when Rex hits wall/ceiling
2071   9E24             
2071   9E24             
2071   9E24             
2071   9E24             
2071   8C06             
2071   8C06 08          
2071   8C07             
2071   9E24             
2071   9E24~            	ADPCM(sp_rexooof,chan3,dbm0)		;used when Rex hits wall/ceiling
2071   9E24~            	ADPCM(sp_rexooof,chan3,dbm0)		;used when Rex hits wall/ceiling
2071   9E24             
2071   9E24             
2071   9E24             
2071   8CB3             
2071   8CB3 1E          
2071   8CB4             
2071   9E24             
2071   9E24~            	ADPCM(sp_rexooof,chan3,dbm0)		;used when Rex hits wall/ceiling
2071   9E24~            	ADPCM(sp_rexooof,chan3,dbm0)		;used when Rex hits wall/ceiling
2071   9E24             
2071   9E24             
2071   9E24             
2071   949E             
2071   949E 9F          
2071   951D             
2071   951D 40          
2071   951E             
2071   9E24             
2071   9E24~            	ADPCM(sp_rexooof,chan3,dbm0)		;used when Rex hits wall/ceiling
2071   9E24~            	ADPCM(sp_rexooof,chan3,dbm0)		;used when Rex hits wall/ceiling
2071   9E24             
2072   9E24             	\ \tmpptr .set *\.export sp_rexooom\sp_rexooom = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;used when Rex hits wall/ceiling
2072   9E24             
2072   9E24             
2072   9E24             
2072   9E24             
2072   8C07             
2072   8C07 08          
2072   8C08             
2072   9E24             
2072   9E24~            	ADPCM(sp_rexooom,chan3,dbm0)		;used when Rex hits wall/ceiling
2072   9E24~            	ADPCM(sp_rexooom,chan3,dbm0)		;used when Rex hits wall/ceiling
2072   9E24             
2072   9E24             
2072   9E24             
2072   8CB4             
2072   8CB4 1F          
2072   8CB5             
2072   9E24             
2072   9E24~            	ADPCM(sp_rexooom,chan3,dbm0)		;used when Rex hits wall/ceiling
2072   9E24~            	ADPCM(sp_rexooom,chan3,dbm0)		;used when Rex hits wall/ceiling
2072   9E24             
2072   9E24             
2072   9E24             
2072   949F             
2072   949F A0          
2072   951E             
2072   951E 40          
2072   951F             
2072   9E24             
2072   9E24~            	ADPCM(sp_rexooom,chan3,dbm0)		;used when Rex hits wall/ceiling
2072   9E24~            	ADPCM(sp_rexooom,chan3,dbm0)		;used when Rex hits wall/ceiling
2072   9E24             
2073   9E24             	\ \tmpptr .set *\.export sp_rexouch\sp_rexouch = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		
2073   9E24             
2073   9E24             
2073   9E24             
2073   9E24             
2073   8C08             
2073   8C08 08          
2073   8C09             
2073   9E24             
2073   9E24~            	ADPCM(sp_rexouch,chan3,dbm0)		
2073   9E24~            	ADPCM(sp_rexouch,chan3,dbm0)		
2073   9E24             
2073   9E24             
2073   9E24             
2073   8CB5             
2073   8CB5 20          
2073   8CB6             
2073   9E24             
2073   9E24~            	ADPCM(sp_rexouch,chan3,dbm0)		
2073   9E24~            	ADPCM(sp_rexouch,chan3,dbm0)		
2073   9E24             
2073   9E24             
2073   9E24             
2073   94A0             
2073   94A0 A1          
2073   951F             
2073   951F 40          
2073   9520             
2073   9E24             
2073   9E24~            	ADPCM(sp_rexouch,chan3,dbm0)		
2073   9E24~            	ADPCM(sp_rexouch,chan3,dbm0)		
2073   9E24             
2074   9E24             	\ \tmpptr .set *\.export sp_rexuggh\sp_rexuggh = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;used when Rex hits wall/ceiling - also used for suffocate
2074   9E24             
2074   9E24             
2074   9E24             
2074   9E24             
2074   8C09             
2074   8C09 08          
2074   8C0A             
2074   9E24             
2074   9E24~            	ADPCM(sp_rexuggh,chan3,dbm0)		;used when Rex hits wall/ceiling - also used for suffocate
2074   9E24~            	ADPCM(sp_rexuggh,chan3,dbm0)		;used when Rex hits wall/ceiling - also used for suffocate
2074   9E24             
2074   9E24             
2074   9E24             
2074   8CB6             
2074   8CB6 21          
2074   8CB7             
2074   9E24             
2074   9E24~            	ADPCM(sp_rexuggh,chan3,dbm0)		;used when Rex hits wall/ceiling - also used for suffocate
2074   9E24~            	ADPCM(sp_rexuggh,chan3,dbm0)		;used when Rex hits wall/ceiling - also used for suffocate
2074   9E24             
2074   9E24             
2074   9E24             
2074   94A1             
2074   94A1 A2          
2074   9520             
2074   9520 40          
2074   9521             
2074   9E24             
2074   9E24~            	ADPCM(sp_rexuggh,chan3,dbm0)		;used when Rex hits wall/ceiling - also used for suffocate
2074   9E24~            	ADPCM(sp_rexuggh,chan3,dbm0)		;used when Rex hits wall/ceiling - also used for suffocate
2074   9E24             
2075   9E24             	\ \tmpptr .set *\.export sp_rexuhoh\sp_rexuhoh = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2075   9E24             
2075   9E24             
2075   9E24             
2075   9E24             
2075   8C0A             
2075   8C0A 08          
2075   8C0B             
2075   9E24             
2075   9E24~            	ADPCM(sp_rexuhoh,chan3,dbm0)
2075   9E24~            	ADPCM(sp_rexuhoh,chan3,dbm0)
2075   9E24             
2075   9E24             
2075   9E24             
2075   8CB7             
2075   8CB7 22          
2075   8CB8             
2075   9E24             
2075   9E24~            	ADPCM(sp_rexuhoh,chan3,dbm0)
2075   9E24~            	ADPCM(sp_rexuhoh,chan3,dbm0)
2075   9E24             
2075   9E24             
2075   9E24             
2075   94A2             
2075   94A2 A3          
2075   9521             
2075   9521 40          
2075   9522             
2075   9E24             
2075   9E24~            	ADPCM(sp_rexuhoh,chan3,dbm0)
2075   9E24~            	ADPCM(sp_rexuhoh,chan3,dbm0)
2075   9E24             
2076   9E24             	\ \tmpptr .set *\.export sp_rexumhmm\sp_rexumhmm = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2076   9E24             
2076   9E24             
2076   9E24             
2076   9E24             
2076   8C0B             
2076   8C0B 08          
2076   8C0C             
2076   9E24             
2076   9E24~            	ADPCM(sp_rexumhmm,chan3,dbm0)
2076   9E24~            	ADPCM(sp_rexumhmm,chan3,dbm0)
2076   9E24             
2076   9E24             
2076   9E24             
2076   8CB8             
2076   8CB8 23          
2076   8CB9             
2076   9E24             
2076   9E24~            	ADPCM(sp_rexumhmm,chan3,dbm0)
2076   9E24~            	ADPCM(sp_rexumhmm,chan3,dbm0)
2076   9E24             
2076   9E24             
2076   9E24             
2076   94A3             
2076   94A3 A4          
2076   9522             
2076   9522 40          
2076   9523             
2076   9E24             
2076   9E24~            	ADPCM(sp_rexumhmm,chan3,dbm0)
2076   9E24~            	ADPCM(sp_rexumhmm,chan3,dbm0)
2076   9E24             
2077   9E24             	\ \tmpptr .set *\.export sp_rexummm\sp_rexummm = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 
2077   9E24             
2077   9E24             
2077   9E24             
2077   9E24             
2077   8C0C             
2077   8C0C 08          
2077   8C0D             
2077   9E24             
2077   9E24~            	ADPCM(sp_rexummm,chan3,dbm0)
2077   9E24~            	ADPCM(sp_rexummm,chan3,dbm0)
2077   9E24             
2077   9E24             
2077   9E24             
2077   8CB9             
2077   8CB9 24          
2077   8CBA             
2077   9E24             
2077   9E24~            	ADPCM(sp_rexummm,chan3,dbm0)
2077   9E24~            	ADPCM(sp_rexummm,chan3,dbm0)
2077   9E24             
2077   9E24             
2077   9E24             
2077   94A4             
2077   94A4 A5          
2077   9523             
2077   9523 40          
2077   9524             
2077   9E24             
2077   9E24~            	ADPCM(sp_rexummm,chan3,dbm0)
2077   9E24~            	ADPCM(sp_rexummm,chan3,dbm0)
2077   9E24             
2078   9E24             	\ \tmpptr .set *\.export sp_rexwhoa\sp_rexwhoa = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		
2078   9E24             
2078   9E24             
2078   9E24             
2078   9E24             
2078   8C0D             
2078   8C0D 08          
2078   8C0E             
2078   9E24             
2078   9E24~            	ADPCM(sp_rexwhoa,chan3,dbm0)		
2078   9E24~            	ADPCM(sp_rexwhoa,chan3,dbm0)		
2078   9E24             
2078   9E24             
2078   9E24             
2078   8CBA             
2078   8CBA 25          
2078   8CBB             
2078   9E24             
2078   9E24~            	ADPCM(sp_rexwhoa,chan3,dbm0)		
2078   9E24~            	ADPCM(sp_rexwhoa,chan3,dbm0)		
2078   9E24             
2078   9E24             
2078   9E24             
2078   94A5             
2078   94A5 A6          
2078   9524             
2078   9524 40          
2078   9525             
2078   9E24             
2078   9E24~            	ADPCM(sp_rexwhoa,chan3,dbm0)		
2078   9E24~            	ADPCM(sp_rexwhoa,chan3,dbm0)		
2078   9E24             
2079   9E24             	\ \tmpptr .set *\.export sp_rexwoohoo\sp_rexwoohoo = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan3 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;used random when Rex ship is blasting off from station
2079   9E24             
2079   9E24             
2079   9E24             
2079   9E24             
2079   8C0E             
2079   8C0E 08          
2079   8C0F             
2079   9E24             
2079   9E24~            	ADPCM(sp_rexwoohoo,chan3,dbm0)		;used random when Rex ship is blasting off from station
2079   9E24~            	ADPCM(sp_rexwoohoo,chan3,dbm0)		;used random when Rex ship is blasting off from station
2079   9E24             
2079   9E24             
2079   9E24             
2079   8CBB             
2079   8CBB 26          
2079   8CBC             
2079   9E24             
2079   9E24~            	ADPCM(sp_rexwoohoo,chan3,dbm0)		;used random when Rex ship is blasting off from station
2079   9E24~            	ADPCM(sp_rexwoohoo,chan3,dbm0)		;used random when Rex ship is blasting off from station
2079   9E24             
2079   9E24             
2079   9E24             
2079   94A6             
2079   94A6 A7          
2079   9525             
2079   9525 40          
2079   9526             
2079   9E24             
2079   9E24~            	ADPCM(sp_rexwoohoo,chan3,dbm0)		;used random when Rex ship is blasting off from station
2079   9E24~            	ADPCM(sp_rexwoohoo,chan3,dbm0)		;used random when Rex ship is blasting off from station
2079   9E24             
2080   9E24             	
2081   9E24             	;Extras for Easter Eggs
2082   9E24             	\ \tmpptr .set *\.export sp_sw1\sp_sw1 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan4 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 			;no source
2082   9E24             
2082   9E24             
2082   9E24             
2082   9E24             
2082   8C0F             
2082   8C0F 08          
2082   8C10             
2082   9E24             
2082   9E24~            	ADPCM(sp_sw1,chan4,dbm0)			;no source
2082   9E24~            	ADPCM(sp_sw1,chan4,dbm0)			;no source
2082   9E24             
2082   9E24             
2082   9E24             
2082   8CBC             
2082   8CBC 27          
2082   8CBD             
2082   9E24             
2082   9E24~            	ADPCM(sp_sw1,chan4,dbm0)			;no source
2082   9E24~            	ADPCM(sp_sw1,chan4,dbm0)			;no source
2082   9E24             
2082   9E24             
2082   9E24             
2082   94A7             
2082   94A7 A8          
2082   9526             
2082   9526 80          
2082   9527             
2082   9E24             
2082   9E24~            	ADPCM(sp_sw1,chan4,dbm0)			;no source
2082   9E24~            	ADPCM(sp_sw1,chan4,dbm0)			;no source
2082   9E24             
2083   9E24             	\ \tmpptr .set *\.export sp_indy_01\sp_indy_01 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_speech\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte o_okiptr\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_okicmd+(o_okiptr)\ .db ($80 | o_okiptr+1)\ .org t_okiattch+(o_okiptr)\ .db (chan4 | dbm0)\o_okiptr .set o_okiptr+1\ .org tmpptr\#IF o_okiptr > (numoki)\	.error "RPM: Too many ADPCM IDs defined. Increase limit."\#ENDIF 		;no source
2083   9E24             
2083   9E24             
2083   9E24             
2083   9E24             
2083   8C10             
2083   8C10 08          
2083   8C11             
2083   9E24             
2083   9E24~            	ADPCM(sp_indy_01,chan4,dbm0)		;no source
2083   9E24~            	ADPCM(sp_indy_01,chan4,dbm0)		;no source
2083   9E24             
2083   9E24             
2083   9E24             
2083   8CBD             
2083   8CBD 28          
2083   8CBE             
2083   9E24             
2083   9E24~            	ADPCM(sp_indy_01,chan4,dbm0)		;no source
2083   9E24~            	ADPCM(sp_indy_01,chan4,dbm0)		;no source
2083   9E24             
2083   9E24             
2083   9E24             
2083   94A8             
2083   94A8 A9          
2083   9527             
2083   9527 80          
2083   9528             
2083   9E24             
2083   9E24~            	ADPCM(sp_indy_01,chan4,dbm0)		;no source
2083   9E24~            	ADPCM(sp_indy_01,chan4,dbm0)		;no source
2083   9E24             
2084   9E24             
2085   9E24             
2086   9E24             #ENDIF
2087   9E24             
2088   9E24             
2089   9E24~            #IF ___tlk == 1
2090   9E24~            
2091   9E24~                TALK(sp_test,sps_test,spx_test)
2092   9E24~                TALK(sp_one,sps_one,spx_one)
2093   9E24~                TALK(sp_two,sps_two,spx_two)
2094   9E24~                TALK(sp_three,sps_three,spx_three)
2095   9E24~                TALK(sp_four,sps_four,spx_four)
2096   9E24~                TALK(sp_five,sps_five,spx_five)
2097   9E24~                TALK(sp_six,sps_six,spx_six)
2098   9E24~                TALK(sp_seven,sps_seven,spx_seven)
2099   9E24~                TALK(sp_eight,sps_eight,spx_eight)
2100   9E24~                TALK(sp_nine,sps_nine,spx_nine)
2101   9E24~                TALK(sp_ten,sps_ten,spx_ten)
2102   9E24~            	;TALK(sp_xxx,sps_xxx,spx_xxx)
2103   9E24~            	
2104   9E24~            	;Max voice
2105   9E24~            	TALK(sp_maxintruder,sps_maxintruder,spx_maxintruder)		;used when Max Activates
2106   9E24~            	TALK(sp_maxdestint,sps_maxdestint,spx_maxdestint)			;used when Max Activates
2107   9E24~            	TALK(sp_maxdestroy,sps_maxdestroy,spx_maxdestroy)		;used when Max kills Rex
2108   9E24~                TALK(sp_maxhaha1,sps_maxhaha1,spx_maxhaha1)			;used when Max kills Rex
2109   9E24~            	TALK(sp_maxhaha2,sps_maxhaha2,spx_maxhaha2)			;used when Max kills Rex
2110   9E24~            	TALK(sp_maxhaha3,sps_maxhaha3,spx_maxhaha3)			;used when Max kills Rex
2111   9E24~            	TALK(sp_maxwewin,sps_maxwewin,spx_maxwewin)			;used when Max kills Rex
2112   9E24~            	TALK(sp_maxyoulose,sps_maxyoulose,spx_maxyoulose)			;used when Max kills Rex
2113   9E24~            	TALK(sp_maxactivate,sps_maxactivate,spx_maxactivate)
2114   9E24~            	TALK(sp_maxattack,sps_maxattack,spx_maxattack)			;used when Max Activates
2115   9E24~            	TALK(sp_maxcannot,sps_maxcannot,spx_maxcannot)			;used at start of star castle
2116   9E24~            	TALK(sp_maxwillnot,sps_maxwillnot,spx_maxwillnot)			;used at start of star castle
2117   9E24~            	TALK(sp_maxbeback,sps_maxbeback,spx_maxbeback)			;used for Max death
2118   9E24~            	TALK(sp_maxahhhh,sps_maxahhhh,spx_maxahhhh)			;used for Max injury
2119   9E24~            	TALK(sp_maxohhhh,sps_maxohhhh,spx_maxohhhh)			;used for Max injury
2120   9E24~            	TALK(sp_maxeeeeww,sps_maxeeeeww,spx_maxeeeeww)			;used for Max death
2121   9E24~            	
2122   9E24~                ;TALK(sp_maxhaha,sps_maxhaha,spx_maxhaha)
2123   9E24~            	;TALK(sp_maxuggh,sps_maxuggh,spx_maxuggh)
2124   9E24~            	;TALK(sp_maxback,sps_maxback,spx_maxback)
2125   9E24~            	
2126   9E24~            	
2127   9E24~            	
2128   9E24~            	;Rex voice
2129   9E24~            	TALK(sp_rexhurry,sps_xxx,spx_xxx)			;used when Reactor is at 15, 1/16 chance
2130   9E24~            	TALK(sp_rexcomeon,sps_xxx,spx_xxx)		;Full 1/256 random
2131   9E24~            	TALK(sp_rexouttahere,sps_xxx,spx_xxx)	;not yet used
2132   9E24~            	TALK(sp_rexooof,sps_xxx,spx_xxx)		;used when Rex hits wall/ceiling
2133   9E24~            	TALK(sp_rexooom,sps_xxx,spx_xxx)		;used when Rex hits wall/ceiling
2134   9E24~            	TALK(sp_rexouch,sps_xxx,spx_xxx)		
2135   9E24~            	TALK(sp_rexuggh,sps_xxx,spx_xxx)		;used when Rex hits wall/ceiling - also used for suffocate
2136   9E24~            	TALK(sp_rexuhoh,sps_xxx,spx_xxx)
2137   9E24~            	TALK(sp_rexumhmm,sps_xxx,spx_xxx)
2138   9E24~            	TALK(sp_rexummm,sps_xxx,spx_xxx)
2139   9E24~            	TALK(sp_rexwhoa,sps_xxx,spx_xxx)		
2140   9E24~            	TALK(sp_rexwoohoo,sps_xxx,spx_xxx)		;used random when Rex ship is blasting off from station
2141   9E24~            	
2142   9E24~            	;Rex voice
2143   9E24~            	;TALK(sp_ughlow,sps_ugh1ow,spx_ughlow)
2144   9E24~            	;TALK(sp_ughmid,sps_ughmid,spx_ughmid)
2145   9E24~            	;TALK(sp_ughhig,sps_ughhig,spx_ughhig)
2146   9E24~            	;TALK(sp_suffocate,sps_suffocate,spx_suffocate)
2147   9E24~            	;TALK(sp_rexknockit,sps_rexknockit,spx_rexknockit)
2148   9E24~            	;TALK(sp_rexayeee,sps_rexayeee,spx_rexayeee)
2149   9E24~            	
2150   9E24~            	;Vaxxian Army Voice
2151   9E24~            	;TALK(sp_youcannot,sps_youcannot,spx_youcannot)
2152   9E24~            	;TALK(sp_youwillnot,sps_youwillnot,spx_youwillnot)
2153   9E24~            	
2154   9E24~            	;Extras for Easter Eggs
2155   9E24~            	;TALK(sp_sw1,sps_sw1,spx_sw1)
2156   9E24~            	;TALK(sp_sw2,sps_sw2,spx_sw2)
2157   9E24~            	;TALK(sp_indy_01,sps_indy_01,spx_indy_01)
2158   9E24~            
2159   9E24             #ENDIF      
2160   9E24                 
2161   9E24             ;* Keep this in order because we will limit the upper bound of sound commands to send
2162   9E24             ;* in the self test by only allowing commands up to this point.    
2163   9E24                 \ \ \tmpptr .set *\.export snd_off\snd_off = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_attract\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte $ff\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF     
2163   9E24             
2163   9E24             
2163   9E24             
2163   9E24             
2163   9E24             
2163   8C11             
2163   8C11 00          
2163   8C12             
2163   9E24             
2163   9E24~                SILENT(snd_off)
2163   9E24~                SILENT(snd_off)
2163   9E24             
2163   9E24             
2163   9E24             
2163   8CBE             
2163   8CBE FF          
2163   8CBF             
2163   9E24             
2163   9E24~                SILENT(snd_off)
2163   9E24~                SILENT(snd_off)
2163   9E24             
2163   9E24             
2163   9E24             
2163   9089             
2163   9089 FF          
2163   908A             
2163   9E24             
2163   9E24~                SILENT(snd_off)
2163   9E24~                SILENT(snd_off)
2163   9E24             
2164   9E24                 \ \ \tmpptr .set *\.export snd_onn\snd_onn = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_attract\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte $00\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
2164   9E24             
2164   9E24             
2164   9E24             
2164   9E24             
2164   9E24             
2164   8C12             
2164   8C12 00          
2164   8C13             
2164   9E24             
2164   9E24~                NOISY(snd_onn)
2164   9E24~                NOISY(snd_onn)
2164   9E24             
2164   9E24             
2164   9E24             
2164   8CBF             
2164   8CBF 00          
2164   8CC0             
2164   9E24             
2164   9E24~                NOISY(snd_onn)
2164   9E24~                NOISY(snd_onn)
2164   9E24             
2164   9E24             
2164   9E24             
2164   908A             
2164   908A FF          
2164   908B             
2164   9E24             
2164   9E24~                NOISY(snd_onn)
2164   9E24~                NOISY(snd_onn)
2164   9E24             
2165   9E24                 \ \tmpptr .set *\.export snd_med\snd_med = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_attract\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte 5\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
2165   9E24             
2165   9E24             
2165   9E24             
2165   9E24             
2165   8C13             
2165   8C13 00          
2165   8C14             
2165   9E24             
2165   9E24~                SETATR(snd_med,5)
2165   9E24~                SETATR(snd_med,5)
2165   9E24             
2165   9E24             
2165   9E24             
2165   8CC0             
2165   8CC0 05          
2165   8CC1             
2165   9E24             
2165   9E24~                SETATR(snd_med,5)
2165   9E24~                SETATR(snd_med,5)
2165   9E24             
2165   9E24             
2165   9E24             
2165   908B             
2165   908B FF          
2165   908C             
2165   9E24             
2165   9E24~                SETATR(snd_med,5)
2165   9E24~                SETATR(snd_med,5)
2165   9E24             
2166   9E24                 \ \ \tmpptr .set *\.export snd_on3\snd_on3 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_eflag\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte 3|$80\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
2166   9E24             
2166   9E24             
2166   9E24             
2166   9E24             
2166   9E24             
2166   8C14             
2166   8C14 01          
2166   8C15             
2166   9E24             
2166   9E24~                SETFL(snd_on3,3)
2166   9E24~                SETFL(snd_on3,3)
2166   9E24             
2166   9E24             
2166   9E24             
2166   8CC1             
2166   8CC1 83          
2166   8CC2             
2166   9E24             
2166   9E24~                SETFL(snd_on3,3)
2166   9E24~                SETFL(snd_on3,3)
2166   9E24             
2166   9E24             
2166   9E24             
2166   908C             
2166   908C FF          
2166   908D             
2166   9E24             
2166   9E24~                SETFL(snd_on3,3)
2166   9E24~                SETFL(snd_on3,3)
2166   9E24             
2167   9E24                 \ \tmpptr .set *\.export snd_of3\snd_of3 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_eflag\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte 3\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
2167   9E24             
2167   9E24             
2167   9E24             
2167   9E24             
2167   8C15             
2167   8C15 01          
2167   8C16             
2167   9E24             
2167   9E24~                CLRFL(snd_of3,3)
2167   9E24~                CLRFL(snd_of3,3)
2167   9E24             
2167   9E24             
2167   9E24             
2167   8CC2             
2167   8CC2 03          
2167   8CC3             
2167   9E24             
2167   9E24~                CLRFL(snd_of3,3)
2167   9E24~                CLRFL(snd_of3,3)
2167   9E24             
2167   9E24             
2167   9E24             
2167   908D             
2167   908D FF          
2167   908E             
2167   9E24             
2167   9E24~                CLRFL(snd_of3,3)
2167   9E24~                CLRFL(snd_of3,3)
2167   9E24             
2168   9E24                 \ \tmpptr .set *\.export snd_kil5\snd_kil5 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte rt_killpri\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte 5\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF 
2168   9E24             
2168   9E24             
2168   9E24             
2168   9E24             
2168   8C16             
2168   8C16 03          
2168   8C17             
2168   9E24             
2168   9E24~                KILPRI(snd_kil5,5)
2168   9E24~                KILPRI(snd_kil5,5)
2168   9E24             
2168   9E24             
2168   9E24             
2168   8CC3             
2168   8CC3 05          
2168   8CC4             
2168   9E24             
2168   9E24~                KILPRI(snd_kil5,5)
2168   9E24~                KILPRI(snd_kil5,5)
2168   9E24             
2168   9E24             
2168   9E24             
2168   908E             
2168   908E FF          
2168   908F             
2168   9E24             
2168   9E24~                KILPRI(snd_kil5,5)
2168   9E24~                KILPRI(snd_kil5,5)
2168   9E24             
2169   9E24                 \ \tmpptr .set *\.export snd_stp0\snd_stp0 = o_commandnum\ .org t_commandtype+o_commandnum\ .byte  rt_killdev\o_commandnum .set o_commandnum+1 \ .org tmpptr\#IF o_commandnum > (numcom)\	.error "RPM: Too many command types defined. Increase 'numcom' limit."\#ENDIF  \ \tmpptr .set *\ .org t_commandparam+o_commandparam\ .byte 0\o_commandparam .set o_commandparam+1\ .org tmpptr\#IF o_commandparam > (numcom)\	.error "RPM: Too many command parameters defined. Increase 'numcom' limit."\#ENDIF \ \tmpptr .set *\ .org t_exceptidx+o_exceptidx\ .byte no_exe\o_exceptidx .set o_exceptidx+1\ .org tmpptr\#IF o_exceptidx > (numcom) \	.error "RPM: Too many exceptions defined across all commands. Increase 'numcom'."\#ENDIF    
2169   9E24             
2169   9E24             
2169   9E24             
2169   9E24             
2169   8C17             
2169   8C17 05          
2169   8C18             
2169   9E24             
2169   9E24~                KILDEV(snd_stp0,0,0)   
2169   9E24~                KILDEV(snd_stp0,0,0)   
2169   9E24             
2169   9E24             
2169   9E24             
2169   8CC4             
2169   8CC4 00          
2169   8CC5             
2169   9E24             
2169   9E24~                KILDEV(snd_stp0,0,0)   
2169   9E24~                KILDEV(snd_stp0,0,0)   
2169   9E24             
2169   9E24             
2169   9E24             
2169   908F             
2169   908F FF          
2169   9090             
2169   9E24             
2169   9E24~                KILDEV(snd_stp0,0,0)   
2169   9E24~                KILDEV(snd_stp0,0,0)   
2169   9E24             
2170   9E24                 	
2171   9E24             ;**********************************************************
2172   9E24             ; New Sound Definitions 
2173   9E24             ;**********************************************************
2174   9E24             ; Commands that trigger speech
2175   9E24             	;GOSUB(sp_rand_ugh,random_ugh)
2176   9E24             	
2177   9E24             ;*******************************************************************
2178   9E24                 .sbttl "Tune Data"
2179   9E24             ;*******************************************************************
2180   9E24             ;* This is the actual data for each sound defined above
2181   9E24             ;*******************************************************************
2182   9E24             ;**************************************
2183   9E24                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_blank = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     
2183   9E24             
2183   92DC             
2183   92DC 24          
2183   936C             
2183   936C 9E          
2183   936D             
2183   936D             
2183   9E24             
2183   9E24~                NEWSNDAMP(sctrl_blank)    
2183   9E24~                NEWSNDAMP(sctrl_blank)    
2183   9E24             
2184   9E24                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_blank = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    
2184   9E24             
2184   91B2             
2184   91B2 24          
2184   9242             
2184   9242 9E          
2184   9243             
2184   9243             
2184   9E24             
2184   9E24~                NEWSNDFREQ(sfreq_blank)   
2184   9E24~                NEWSNDFREQ(sfreq_blank)   
2184   9E24             
2185   9E24                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_blank = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2185   9E24             
2185   9090             
2185   9090 24          
2185   9120             
2185   9120 9E          
2185   9121             
2185   9121             
2185   9E24             
2185   9E24~                NEWTUNE(s_blank) 
2185   9E24~                NEWTUNE(s_blank) 
2185   9E24             
2186   9E24                 \ .dw $0000
2186   9E24 00 00       
2187   9E26             	
2188   9E26                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_coin = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$07
2188   9E26             
2188   92DD             
2188   92DD 26          
2188   936D             
2188   936D 9E          
2188   936E             
2188   936E             
2188   9E26             
2188   9E26~                NEWSNDAMP(sctrl_coin) ;$07
2188   9E26~                NEWSNDAMP(sctrl_coin) ;$07
2188   9E26             
2189   9E26             	\ #if (20>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (20<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 20 << 1\		#endif\   #endif\ #endif              ;Eff Slope:10     Dur:2    Net:20
2189   9E26~            	SCTRL(20,2)              ;Eff Slope:10     Dur:2    Net:20
2189   9E26~            	SCTRL(20,2)              ;Eff Slope:10     Dur:2    Net:20
2189   9E26             
2189   9E26~            	SCTRL(20,2)              ;Eff Slope:10     Dur:2    Net:20
2189   9E26~            	SCTRL(20,2)              ;Eff Slope:10     Dur:2    Net:20
2189   9E26             
2189   9E26~            	SCTRL(20,2)              ;Eff Slope:10     Dur:2    Net:20
2189   9E26~            	SCTRL(20,2)              ;Eff Slope:10     Dur:2    Net:20
2189   9E26             
2189   9E26 02          
2189   9E27 28          
2189   9E28             
2189   9E28             
2189   9E28             
2190   9E28             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (8 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 8 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:8    Net:20
2190   9E28~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2190   9E28~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2190   9E28             
2190   9E28~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2190   9E28~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2190   9E28             
2190   9E28~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2190   9E28~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2190   9E28             
2190   9E28 08          
2190   9E29 00          
2190   9E2A             
2190   9E2A             
2190   9E2A             
2191   9E2A             	\ #if (-4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -4 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-2     Dur:2    Net:16
2191   9E2A~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:16
2191   9E2A~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:16
2191   9E2A             
2191   9E2A~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:16
2191   9E2A~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:16
2191   9E2A             
2191   9E2A~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:16
2191   9E2A~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:16
2191   9E2A             
2191   9E2A 02          
2191   9E2B F8          
2191   9E2C             
2191   9E2C             
2191   9E2C             
2192   9E2C             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (14 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 14 \ 			.db -2 << 1\		#endif\   #endif\ #endif             ;Eff Slope:-1     Dur:14   Net:2
2192   9E2C~            	SCTRL(-2,14)             ;Eff Slope:-1     Dur:14   Net:2
2192   9E2C~            	SCTRL(-2,14)             ;Eff Slope:-1     Dur:14   Net:2
2192   9E2C             
2192   9E2C~            	SCTRL(-2,14)             ;Eff Slope:-1     Dur:14   Net:2
2192   9E2C~            	SCTRL(-2,14)             ;Eff Slope:-1     Dur:14   Net:2
2192   9E2C             
2192   9E2C~            	SCTRL(-2,14)             ;Eff Slope:-1     Dur:14   Net:2
2192   9E2C~            	SCTRL(-2,14)             ;Eff Slope:-1     Dur:14   Net:2
2192   9E2C             
2192   9E2C 0E          
2192   9E2D FC          
2192   9E2E             
2192   9E2E             
2192   9E2E             
2193   9E2E             	\ #if (18>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (18<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 18 << 1\		#endif\   #endif\ #endif              ;Eff Slope:9      Dur:2    Net:20
2193   9E2E~            	SCTRL(18,2)              ;Eff Slope:9      Dur:2    Net:20
2193   9E2E~            	SCTRL(18,2)              ;Eff Slope:9      Dur:2    Net:20
2193   9E2E             
2193   9E2E~            	SCTRL(18,2)              ;Eff Slope:9      Dur:2    Net:20
2193   9E2E~            	SCTRL(18,2)              ;Eff Slope:9      Dur:2    Net:20
2193   9E2E             
2193   9E2E~            	SCTRL(18,2)              ;Eff Slope:9      Dur:2    Net:20
2193   9E2E~            	SCTRL(18,2)              ;Eff Slope:9      Dur:2    Net:20
2193   9E2E             
2193   9E2E 02          
2193   9E2F 24          
2193   9E30             
2193   9E30             
2193   9E30             
2194   9E30             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (12 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 12 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:12   Net:20
2194   9E30~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2194   9E30~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2194   9E30             
2194   9E30~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2194   9E30~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2194   9E30             
2194   9E30~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2194   9E30~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2194   9E30             
2194   9E30 0C          
2194   9E31 00          
2194   9E32             
2194   9E32             
2194   9E32             
2195   9E32             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:18
2195   9E32~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2195   9E32~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2195   9E32             
2195   9E32~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2195   9E32~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2195   9E32             
2195   9E32~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2195   9E32~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2195   9E32             
2195   9E32 02          
2195   9E33 FC          
2195   9E34             
2195   9E34             
2195   9E34             
2196   9E34             	\ #if (-4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db -4 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-2     Dur:4    Net:10
2196   9E34~            	SCTRL(-4,4)              ;Eff Slope:-2     Dur:4    Net:10
2196   9E34~            	SCTRL(-4,4)              ;Eff Slope:-2     Dur:4    Net:10
2196   9E34             
2196   9E34~            	SCTRL(-4,4)              ;Eff Slope:-2     Dur:4    Net:10
2196   9E34~            	SCTRL(-4,4)              ;Eff Slope:-2     Dur:4    Net:10
2196   9E34             
2196   9E34~            	SCTRL(-4,4)              ;Eff Slope:-2     Dur:4    Net:10
2196   9E34~            	SCTRL(-4,4)              ;Eff Slope:-2     Dur:4    Net:10
2196   9E34             
2196   9E34 04          
2196   9E35 F8          
2196   9E36             
2196   9E36             
2196   9E36             
2197   9E36             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (8 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 8 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:8    Net:2
2197   9E36~            	SCTRL(-2,8)              ;Eff Slope:-1     Dur:8    Net:2
2197   9E36~            	SCTRL(-2,8)              ;Eff Slope:-1     Dur:8    Net:2
2197   9E36             
2197   9E36~            	SCTRL(-2,8)              ;Eff Slope:-1     Dur:8    Net:2
2197   9E36~            	SCTRL(-2,8)              ;Eff Slope:-1     Dur:8    Net:2
2197   9E36             
2197   9E36~            	SCTRL(-2,8)              ;Eff Slope:-1     Dur:8    Net:2
2197   9E36~            	SCTRL(-2,8)              ;Eff Slope:-1     Dur:8    Net:2
2197   9E36             
2197   9E36 08          
2197   9E37 FC          
2197   9E38             
2197   9E38             
2197   9E38             
2198   9E38             
2199   9E38                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_coin = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$07
2199   9E38             
2199   91B3             
2199   91B3 38          
2199   9243             
2199   9243 9E          
2199   9244             
2199   9244             
2199   9E38             
2199   9E38~                NEWSNDFREQ(sfreq_coin)   ;,$07
2199   9E38~                NEWSNDFREQ(sfreq_coin)   ;,$07
2199   9E38             
2200   9E38                 \ .db 2 \ #if (40>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 40 << 1\	#endif\ #endif              ;Eff Slope:2.5    Dur:2    Net:5
2200   9E38 02          
2200   9E39~                SFREQ(40,2)              ;Eff Slope:2.5    Dur:2    Net:5
2200   9E39~                SFREQ(40,2)              ;Eff Slope:2.5    Dur:2    Net:5
2200   9E39             
2200   9E39~                SFREQ(40,2)              ;Eff Slope:2.5    Dur:2    Net:5
2200   9E39~                SFREQ(40,2)              ;Eff Slope:2.5    Dur:2    Net:5
2200   9E39             
2200   9E39 50 00       
2200   9E3B             
2200   9E3B             
2201   9E3B             	\ .db 22 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (22 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif              ;Eff Slope:0      Dur:22   Net:5
2201   9E3B 16          
2201   9E3C~            	SFREQ(0,22)              ;Eff Slope:0      Dur:22   Net:5
2201   9E3C~            	SFREQ(0,22)              ;Eff Slope:0      Dur:22   Net:5
2201   9E3C             
2201   9E3C~            	SFREQ(0,22)              ;Eff Slope:0      Dur:22   Net:5
2201   9E3C~            	SFREQ(0,22)              ;Eff Slope:0      Dur:22   Net:5
2201   9E3C             
2201   9E3C 00 00       
2201   9E3E             
2201   9E3E             
2202   9E3E             	\ .db 2 \ #if (16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 16 << 1\	#endif\ #endif              ;Eff Slope:1      Dur:2    Net:7
2202   9E3E 02          
2202   9E3F~            	SFREQ(16,2)              ;Eff Slope:1      Dur:2    Net:7
2202   9E3F~            	SFREQ(16,2)              ;Eff Slope:1      Dur:2    Net:7
2202   9E3F             
2202   9E3F~            	SFREQ(16,2)              ;Eff Slope:1      Dur:2    Net:7
2202   9E3F~            	SFREQ(16,2)              ;Eff Slope:1      Dur:2    Net:7
2202   9E3F             
2202   9E3F 20 00       
2202   9E41             
2202   9E41             
2203   9E41             	\ .db 28 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (28 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif              ;Eff Slope:0      Dur:28   Net:7
2203   9E41 1C          
2203   9E42~            	SFREQ(0,28)              ;Eff Slope:0      Dur:28   Net:7
2203   9E42~            	SFREQ(0,28)              ;Eff Slope:0      Dur:28   Net:7
2203   9E42             
2203   9E42~            	SFREQ(0,28)              ;Eff Slope:0      Dur:28   Net:7
2203   9E42~            	SFREQ(0,28)              ;Eff Slope:0      Dur:28   Net:7
2203   9E42             
2203   9E42 00 00       
2203   9E44             
2203   9E44             
2204   9E44             
2205   9E44                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_coin = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
2205   9E44             
2205   9091             
2205   9091 44          
2205   9121             
2205   9121 9E          
2205   9122             
2205   9122             
2205   9E44             
2205   9E44~                NEWTUNE(s_coin)  
2205   9E44~                NEWTUNE(s_coin)  
2205   9E44             
2206   9E44                 \ .db isc_freq,sfreq_coin
2206   9E44 86 03       
2207   9E46                 \ .db isc_ctrl,sctrl_coin
2207   9E46 87 0D       
2208   9E48                 \ .db isc_sfunc10,$00
2208   9E48 90 00       
2209   9E4A                 \ .db isc_sebvol,$00
2209   9E4A 82 00       
2210   9E4C                 \ .db isc_ctrlm,CHCTL_POLY4_5
2210   9E4C 8A 40       
2211   9E4E                 \ .db _REST,$36
2211   9E4E 00 36       
2212   9E50                 \ .dw $0000
2212   9E50 00 00       
2213   9E52                 
2214   9E52             ;****************************************
2215   9E52                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_launch = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;$08
2215   9E52             
2215   92DE             
2215   92DE 52          
2215   936E             
2215   936E 9E          
2215   936F             
2215   936F             
2215   9E52             
2215   9E52~                NEWSNDAMP(sctrl_launch)  ;$08
2215   9E52~                NEWSNDAMP(sctrl_launch)  ;$08
2215   9E52             
2216   9E52                 \ #if (4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 4 << 1\		#endif\   #endif\ #endif               ;Eff Slope:2      Dur:2    Net:4
2216   9E52~                SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:4
2216   9E52~                SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:4
2216   9E52             
2216   9E52~                SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:4
2216   9E52~                SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:4
2216   9E52             
2216   9E52~                SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:4
2216   9E52~                SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:4
2216   9E52             
2216   9E52 02          
2216   9E53 08          
2216   9E54             
2216   9E54             
2216   9E54             
2217   9E54             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:4
2217   9E54~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2217   9E54~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2217   9E54             
2217   9E54~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2217   9E54~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2217   9E54             
2217   9E54~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2217   9E54~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2217   9E54             
2217   9E54 02          
2217   9E55 00          
2217   9E56             
2217   9E56             
2217   9E56             
2218   9E56             	\ #if (4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 4 << 1\		#endif\   #endif\ #endif               ;Eff Slope:2      Dur:2    Net:8
2218   9E56~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2218   9E56~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2218   9E56             
2218   9E56~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2218   9E56~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2218   9E56             
2218   9E56~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2218   9E56~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2218   9E56             
2218   9E56 02          
2218   9E57 08          
2218   9E58             
2218   9E58             
2218   9E58             
2219   9E58             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:8
2219   9E58~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2219   9E58~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2219   9E58             
2219   9E58~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2219   9E58~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2219   9E58             
2219   9E58~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2219   9E58~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2219   9E58             
2219   9E58 04          
2219   9E59 00          
2219   9E5A             
2219   9E5A             
2219   9E5A             
2220   9E5A             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:10
2220   9E5A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
2220   9E5A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
2220   9E5A             
2220   9E5A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
2220   9E5A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
2220   9E5A             
2220   9E5A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
2220   9E5A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
2220   9E5A             
2220   9E5A 02          
2220   9E5B 04          
2220   9E5C             
2220   9E5C             
2220   9E5C             
2221   9E5C             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:10
2221   9E5C~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:10
2221   9E5C~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:10
2221   9E5C             
2221   9E5C~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:10
2221   9E5C~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:10
2221   9E5C             
2221   9E5C~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:10
2221   9E5C~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:10
2221   9E5C             
2221   9E5C 02          
2221   9E5D 00          
2221   9E5E             
2221   9E5E             
2221   9E5E             
2222   9E5E             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:4    Net:14
2222   9E5E~            	SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:14
2222   9E5E~            	SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:14
2222   9E5E             
2222   9E5E~            	SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:14
2222   9E5E~            	SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:14
2222   9E5E             
2222   9E5E~            	SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:14
2222   9E5E~            	SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:14
2222   9E5E             
2222   9E5E 04          
2222   9E5F 04          
2222   9E60             
2222   9E60             
2222   9E60             
2223   9E60             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (26 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 26 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:26   Net:14
2223   9E60~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2223   9E60~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2223   9E60             
2223   9E60~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2223   9E60~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2223   9E60             
2223   9E60~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2223   9E60~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2223   9E60             
2223   9E60 1A          
2223   9E61 00          
2223   9E62             
2223   9E62             
2223   9E62             
2224   9E62             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:16
2224   9E62~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:16
2224   9E62~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:16
2224   9E62             
2224   9E62~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:16
2224   9E62~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:16
2224   9E62             
2224   9E62~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:16
2224   9E62~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:16
2224   9E62             
2224   9E62 02          
2224   9E63 04          
2224   9E64             
2224   9E64             
2224   9E64             
2225   9E64             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:16
2225   9E64~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:16
2225   9E64~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:16
2225   9E64             
2225   9E64~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:16
2225   9E64~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:16
2225   9E64             
2225   9E64~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:16
2225   9E64~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:16
2225   9E64             
2225   9E64 04          
2225   9E65 00          
2225   9E66             
2225   9E66             
2225   9E66             
2226   9E66             	\ #if (4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 4 << 1\		#endif\   #endif\ #endif               ;Eff Slope:2      Dur:2    Net:20
2226   9E66~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:20
2226   9E66~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:20
2226   9E66             
2226   9E66~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:20
2226   9E66~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:20
2226   9E66             
2226   9E66~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:20
2226   9E66~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:20
2226   9E66             
2226   9E66 02          
2226   9E67 08          
2226   9E68             
2226   9E68             
2226   9E68             
2227   9E68             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (8 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 8 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:8    Net:20
2227   9E68~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2227   9E68~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2227   9E68             
2227   9E68~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2227   9E68~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2227   9E68             
2227   9E68~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2227   9E68~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:20
2227   9E68             
2227   9E68 08          
2227   9E69 00          
2227   9E6A             
2227   9E6A             
2227   9E6A             
2228   9E6A             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:22
2228   9E6A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:22
2228   9E6A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:22
2228   9E6A             
2228   9E6A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:22
2228   9E6A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:22
2228   9E6A             
2228   9E6A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:22
2228   9E6A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:22
2228   9E6A             
2228   9E6A 02          
2228   9E6B 04          
2228   9E6C             
2228   9E6C             
2228   9E6C             
2229   9E6C             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:22
2229   9E6C~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:22
2229   9E6C~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:22
2229   9E6C             
2229   9E6C~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:22
2229   9E6C~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:22
2229   9E6C             
2229   9E6C~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:22
2229   9E6C~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:22
2229   9E6C             
2229   9E6C 04          
2229   9E6D 00          
2229   9E6E             
2229   9E6E             
2229   9E6E             
2230   9E6E             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:24
2230   9E6E~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:24
2230   9E6E~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:24
2230   9E6E             
2230   9E6E~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:24
2230   9E6E~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:24
2230   9E6E             
2230   9E6E~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:24
2230   9E6E~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:24
2230   9E6E             
2230   9E6E 02          
2230   9E6F 04          
2230   9E70             
2230   9E70             
2230   9E70             
2231   9E70             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (8 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 8 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:8    Net:24
2231   9E70~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:24
2231   9E70~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:24
2231   9E70             
2231   9E70~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:24
2231   9E70~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:24
2231   9E70             
2231   9E70~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:24
2231   9E70~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:24
2231   9E70             
2231   9E70 08          
2231   9E71 00          
2231   9E72             
2231   9E72             
2231   9E72             
2232   9E72             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:26
2232   9E72~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:26
2232   9E72~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:26
2232   9E72             
2232   9E72~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:26
2232   9E72~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:26
2232   9E72             
2232   9E72~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:26
2232   9E72~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:26
2232   9E72             
2232   9E72 02          
2232   9E73 04          
2232   9E74             
2232   9E74             
2232   9E74             
2233   9E74             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (32 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 32 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:32   Net:26
2233   9E74~            	SCTRL(0,32)              ;Eff Slope:0      Dur:32   Net:26
2233   9E74~            	SCTRL(0,32)              ;Eff Slope:0      Dur:32   Net:26
2233   9E74             
2233   9E74~            	SCTRL(0,32)              ;Eff Slope:0      Dur:32   Net:26
2233   9E74~            	SCTRL(0,32)              ;Eff Slope:0      Dur:32   Net:26
2233   9E74             
2233   9E74~            	SCTRL(0,32)              ;Eff Slope:0      Dur:32   Net:26
2233   9E74~            	SCTRL(0,32)              ;Eff Slope:0      Dur:32   Net:26
2233   9E74             
2233   9E74 20          
2233   9E75 00          
2233   9E76             
2233   9E76             
2233   9E76             
2234   9E76             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:28
2234   9E76~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:28
2234   9E76~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:28
2234   9E76             
2234   9E76~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:28
2234   9E76~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:28
2234   9E76             
2234   9E76~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:28
2234   9E76~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:28
2234   9E76             
2234   9E76 02          
2234   9E77 04          
2234   9E78             
2234   9E78             
2234   9E78             
2235   9E78             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (26 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 26 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:26   Net:28
2235   9E78~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:28
2235   9E78~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:28
2235   9E78             
2235   9E78~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:28
2235   9E78~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:28
2235   9E78             
2235   9E78~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:28
2235   9E78~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:28
2235   9E78             
2235   9E78 1A          
2235   9E79 00          
2235   9E7A             
2235   9E7A             
2235   9E7A             
2236   9E7A             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:30
2236   9E7A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
2236   9E7A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
2236   9E7A             
2236   9E7A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
2236   9E7A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
2236   9E7A             
2236   9E7A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
2236   9E7A~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
2236   9E7A             
2236   9E7A 02          
2236   9E7B 04          
2236   9E7C             
2236   9E7C             
2236   9E7C             
2237   9E7C             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (82 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 82 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:82   Net:30
2237   9E7C~            	SCTRL(0,82)              ;Eff Slope:0      Dur:82   Net:30
2237   9E7C~            	SCTRL(0,82)              ;Eff Slope:0      Dur:82   Net:30
2237   9E7C             
2237   9E7C~            	SCTRL(0,82)              ;Eff Slope:0      Dur:82   Net:30
2237   9E7C~            	SCTRL(0,82)              ;Eff Slope:0      Dur:82   Net:30
2237   9E7C             
2237   9E7C~            	SCTRL(0,82)              ;Eff Slope:0      Dur:82   Net:30
2237   9E7C~            	SCTRL(0,82)              ;Eff Slope:0      Dur:82   Net:30
2237   9E7C             
2237   9E7C 52          
2237   9E7D 00          
2237   9E7E             
2237   9E7E             
2237   9E7E             
2238   9E7E             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:28
2238   9E7E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2238   9E7E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2238   9E7E             
2238   9E7E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2238   9E7E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2238   9E7E             
2238   9E7E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2238   9E7E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2238   9E7E             
2238   9E7E 02          
2238   9E7F FC          
2238   9E80             
2238   9E80             
2238   9E80             
2239   9E80             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (40 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 40 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:40   Net:28
2239   9E80~            	SCTRL(0,40)              ;Eff Slope:0      Dur:40   Net:28
2239   9E80~            	SCTRL(0,40)              ;Eff Slope:0      Dur:40   Net:28
2239   9E80             
2239   9E80~            	SCTRL(0,40)              ;Eff Slope:0      Dur:40   Net:28
2239   9E80~            	SCTRL(0,40)              ;Eff Slope:0      Dur:40   Net:28
2239   9E80             
2239   9E80~            	SCTRL(0,40)              ;Eff Slope:0      Dur:40   Net:28
2239   9E80~            	SCTRL(0,40)              ;Eff Slope:0      Dur:40   Net:28
2239   9E80             
2239   9E80 28          
2239   9E81 00          
2239   9E82             
2239   9E82             
2239   9E82             
2240   9E82             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:26
2240   9E82~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2240   9E82~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2240   9E82             
2240   9E82~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2240   9E82~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2240   9E82             
2240   9E82~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2240   9E82~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2240   9E82             
2240   9E82 02          
2240   9E83 FC          
2240   9E84             
2240   9E84             
2240   9E84             
2241   9E84             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (18 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 18 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:18   Net:26
2241   9E84~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:26
2241   9E84~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:26
2241   9E84             
2241   9E84~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:26
2241   9E84~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:26
2241   9E84             
2241   9E84~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:26
2241   9E84~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:26
2241   9E84             
2241   9E84 12          
2241   9E85 00          
2241   9E86             
2241   9E86             
2241   9E86             
2242   9E86             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:24
2242   9E86~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2242   9E86~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2242   9E86             
2242   9E86~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2242   9E86~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2242   9E86             
2242   9E86~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2242   9E86~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2242   9E86             
2242   9E86 02          
2242   9E87 FC          
2242   9E88             
2242   9E88             
2242   9E88             
2243   9E88             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (20 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 20 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:20   Net:24
2243   9E88~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:24
2243   9E88~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:24
2243   9E88             
2243   9E88~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:24
2243   9E88~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:24
2243   9E88             
2243   9E88~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:24
2243   9E88~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:24
2243   9E88             
2243   9E88 14          
2243   9E89 00          
2243   9E8A             
2243   9E8A             
2243   9E8A             
2244   9E8A             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:22
2244   9E8A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2244   9E8A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2244   9E8A             
2244   9E8A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2244   9E8A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2244   9E8A             
2244   9E8A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2244   9E8A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2244   9E8A             
2244   9E8A 02          
2244   9E8B FC          
2244   9E8C             
2244   9E8C             
2244   9E8C             
2245   9E8C             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (12 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 12 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:12   Net:22
2245   9E8C~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:22
2245   9E8C~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:22
2245   9E8C             
2245   9E8C~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:22
2245   9E8C~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:22
2245   9E8C             
2245   9E8C~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:22
2245   9E8C~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:22
2245   9E8C             
2245   9E8C 0C          
2245   9E8D 00          
2245   9E8E             
2245   9E8E             
2245   9E8E             
2246   9E8E             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:20
2246   9E8E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2246   9E8E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2246   9E8E             
2246   9E8E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2246   9E8E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2246   9E8E             
2246   9E8E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2246   9E8E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2246   9E8E             
2246   9E8E 02          
2246   9E8F FC          
2246   9E90             
2246   9E90             
2246   9E90             
2247   9E90             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (12 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 12 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:12   Net:20
2247   9E90~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2247   9E90~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2247   9E90             
2247   9E90~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2247   9E90~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2247   9E90             
2247   9E90~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2247   9E90~            	SCTRL(0,12)              ;Eff Slope:0      Dur:12   Net:20
2247   9E90             
2247   9E90 0C          
2247   9E91 00          
2247   9E92             
2247   9E92             
2247   9E92             
2248   9E92             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:18
2248   9E92~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2248   9E92~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2248   9E92             
2248   9E92~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2248   9E92~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2248   9E92             
2248   9E92~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2248   9E92~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2248   9E92             
2248   9E92 02          
2248   9E93 FC          
2248   9E94             
2248   9E94             
2248   9E94             
2249   9E94             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (8 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 8 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:8    Net:18
2249   9E94~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:18
2249   9E94~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:18
2249   9E94             
2249   9E94~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:18
2249   9E94~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:18
2249   9E94             
2249   9E94~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:18
2249   9E94~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:18
2249   9E94             
2249   9E94 08          
2249   9E95 00          
2249   9E96             
2249   9E96             
2249   9E96             
2250   9E96             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:16
2250   9E96~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2250   9E96~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2250   9E96             
2250   9E96~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2250   9E96~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2250   9E96             
2250   9E96~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2250   9E96~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2250   9E96             
2250   9E96 02          
2250   9E97 FC          
2250   9E98             
2250   9E98             
2250   9E98             
2251   9E98             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (10 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 10 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:10   Net:16
2251   9E98~            	SCTRL(0,10)              ;Eff Slope:0      Dur:10   Net:16
2251   9E98~            	SCTRL(0,10)              ;Eff Slope:0      Dur:10   Net:16
2251   9E98             
2251   9E98~            	SCTRL(0,10)              ;Eff Slope:0      Dur:10   Net:16
2251   9E98~            	SCTRL(0,10)              ;Eff Slope:0      Dur:10   Net:16
2251   9E98             
2251   9E98~            	SCTRL(0,10)              ;Eff Slope:0      Dur:10   Net:16
2251   9E98~            	SCTRL(0,10)              ;Eff Slope:0      Dur:10   Net:16
2251   9E98             
2251   9E98 0A          
2251   9E99 00          
2251   9E9A             
2251   9E9A             
2251   9E9A             
2252   9E9A             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:14
2252   9E9A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2252   9E9A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2252   9E9A             
2252   9E9A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2252   9E9A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2252   9E9A             
2252   9E9A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2252   9E9A~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2252   9E9A             
2252   9E9A 02          
2252   9E9B FC          
2252   9E9C             
2252   9E9C             
2252   9E9C             
2253   9E9C             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (8 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 8 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:8    Net:14
2253   9E9C~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:14
2253   9E9C~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:14
2253   9E9C             
2253   9E9C~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:14
2253   9E9C~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:14
2253   9E9C             
2253   9E9C~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:14
2253   9E9C~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:14
2253   9E9C             
2253   9E9C 08          
2253   9E9D 00          
2253   9E9E             
2253   9E9E             
2253   9E9E             
2254   9E9E             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:12
2254   9E9E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2254   9E9E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2254   9E9E             
2254   9E9E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2254   9E9E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2254   9E9E             
2254   9E9E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2254   9E9E~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2254   9E9E             
2254   9E9E 02          
2254   9E9F FC          
2254   9EA0             
2254   9EA0             
2254   9EA0             
2255   9EA0             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:12
2255   9EA0~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:12
2255   9EA0~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:12
2255   9EA0             
2255   9EA0~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:12
2255   9EA0~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:12
2255   9EA0             
2255   9EA0~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:12
2255   9EA0~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:12
2255   9EA0             
2255   9EA0 04          
2255   9EA1 00          
2255   9EA2             
2255   9EA2             
2255   9EA2             
2256   9EA2             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:10
2256   9EA2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2256   9EA2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2256   9EA2             
2256   9EA2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2256   9EA2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2256   9EA2             
2256   9EA2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2256   9EA2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2256   9EA2             
2256   9EA2 02          
2256   9EA3 FC          
2256   9EA4             
2256   9EA4             
2256   9EA4             
2257   9EA4             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (6 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 6 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:6    Net:10
2257   9EA4~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:10
2257   9EA4~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:10
2257   9EA4             
2257   9EA4~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:10
2257   9EA4~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:10
2257   9EA4             
2257   9EA4~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:10
2257   9EA4~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:10
2257   9EA4             
2257   9EA4 06          
2257   9EA5 00          
2257   9EA6             
2257   9EA6             
2257   9EA6             
2258   9EA6             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:8
2258   9EA6~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2258   9EA6~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2258   9EA6             
2258   9EA6~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2258   9EA6~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2258   9EA6             
2258   9EA6~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2258   9EA6~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2258   9EA6             
2258   9EA6 02          
2258   9EA7 FC          
2258   9EA8             
2258   9EA8             
2258   9EA8             
2259   9EA8             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:8
2259   9EA8~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:8
2259   9EA8~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:8
2259   9EA8             
2259   9EA8~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:8
2259   9EA8~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:8
2259   9EA8             
2259   9EA8~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:8
2259   9EA8~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:8
2259   9EA8             
2259   9EA8 02          
2259   9EA9 00          
2259   9EAA             
2259   9EAA             
2259   9EAA             
2260   9EAA             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:6
2260   9EAA~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2260   9EAA~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2260   9EAA             
2260   9EAA~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2260   9EAA~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2260   9EAA             
2260   9EAA~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2260   9EAA~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2260   9EAA             
2260   9EAA 02          
2260   9EAB FC          
2260   9EAC             
2260   9EAC             
2260   9EAC             
2261   9EAC             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:6
2261   9EAC~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:6
2261   9EAC~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:6
2261   9EAC             
2261   9EAC~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:6
2261   9EAC~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:6
2261   9EAC             
2261   9EAC~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:6
2261   9EAC~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:6
2261   9EAC             
2261   9EAC 02          
2261   9EAD 00          
2261   9EAE             
2261   9EAE             
2261   9EAE             
2262   9EAE             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:4
2262   9EAE~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2262   9EAE~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2262   9EAE             
2262   9EAE~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2262   9EAE~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2262   9EAE             
2262   9EAE~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2262   9EAE~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2262   9EAE             
2262   9EAE 02          
2262   9EAF FC          
2262   9EB0             
2262   9EB0             
2262   9EB0             
2263   9EB0             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:4
2263   9EB0~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2263   9EB0~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2263   9EB0             
2263   9EB0~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2263   9EB0~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2263   9EB0             
2263   9EB0~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2263   9EB0~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:4
2263   9EB0             
2263   9EB0 02          
2263   9EB1 00          
2263   9EB2             
2263   9EB2             
2263   9EB2             
2264   9EB2             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:2
2264   9EB2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2264   9EB2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2264   9EB2             
2264   9EB2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2264   9EB2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2264   9EB2             
2264   9EB2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2264   9EB2~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2264   9EB2             
2264   9EB2 02          
2264   9EB3 FC          
2264   9EB4             
2264   9EB4             
2264   9EB4             
2265   9EB4             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:2
2265   9EB4~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:2
2265   9EB4~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:2
2265   9EB4             
2265   9EB4~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:2
2265   9EB4~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:2
2265   9EB4             
2265   9EB4~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:2
2265   9EB4~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:2
2265   9EB4             
2265   9EB4 02          
2265   9EB5 00          
2265   9EB6             
2265   9EB6             
2265   9EB6             
2266   9EB6                 
2267   9EB6                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_launch = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$08
2267   9EB6             
2267   91B4             
2267   91B4 B6          
2267   9244             
2267   9244 9E          
2267   9245             
2267   9245             
2267   9EB6             
2267   9EB6~                NEWSNDFREQ(sfreq_launch) ;,$08
2267   9EB6~                NEWSNDFREQ(sfreq_launch) ;,$08
2267   9EB6             
2268   9EB6                 \ .db 2 \ #if (1832>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 1832 << 1\	#endif\ #endif            ;Eff Slope:114.5  Dur:2    Net:229
2268   9EB6 02          
2268   9EB7~                SFREQ(1832,2)            ;Eff Slope:114.5  Dur:2    Net:229
2268   9EB7~                SFREQ(1832,2)            ;Eff Slope:114.5  Dur:2    Net:229
2268   9EB7             
2268   9EB7~                SFREQ(1832,2)            ;Eff Slope:114.5  Dur:2    Net:229
2268   9EB7~                SFREQ(1832,2)            ;Eff Slope:114.5  Dur:2    Net:229
2268   9EB7             
2268   9EB7 50 0E       
2268   9EB9             
2268   9EB9             
2269   9EB9             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:228
2269   9EB9 02          
2269   9EBA~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:228
2269   9EBA~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:228
2269   9EBA             
2269   9EBA~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:228
2269   9EBA~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:228
2269   9EBA             
2269   9EBA F0 FF       
2269   9EBC             
2269   9EBC             
2270   9EBC             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:225
2270   9EBC 02          
2270   9EBD~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:225
2270   9EBD~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:225
2270   9EBD             
2270   9EBD~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:225
2270   9EBD~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:225
2270   9EBD             
2270   9EBD D0 FF       
2270   9EBF             
2270   9EBF             
2271   9EBF             	\ .db 10 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (10 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif             ;Eff Slope:-0.5   Dur:10   Net:220
2271   9EBF 0A          
2271   9EC0~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:220
2271   9EC0~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:220
2271   9EC0             
2271   9EC0~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:220
2271   9EC0~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:220
2271   9EC0             
2271   9EC0 F0 FF       
2271   9EC2             
2271   9EC2             
2272   9EC2             	\ .db 4 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:4    Net:216
2272   9EC2 04          
2272   9EC3~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:216
2272   9EC3~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:216
2272   9EC3             
2272   9EC3~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:216
2272   9EC3~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:216
2272   9EC3             
2272   9EC3 E0 FF       
2272   9EC5             
2272   9EC5             
2273   9EC5             	\ .db 2 \ #if (-48>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -48 << 1\	#endif\ #endif             ;Eff Slope:-3     Dur:2    Net:210
2273   9EC5 02          
2273   9EC6~            	SFREQ(-48,2)             ;Eff Slope:-3     Dur:2    Net:210
2273   9EC6~            	SFREQ(-48,2)             ;Eff Slope:-3     Dur:2    Net:210
2273   9EC6             
2273   9EC6~            	SFREQ(-48,2)             ;Eff Slope:-3     Dur:2    Net:210
2273   9EC6~            	SFREQ(-48,2)             ;Eff Slope:-3     Dur:2    Net:210
2273   9EC6             
2273   9EC6 A0 FF       
2273   9EC8             
2273   9EC8             
2274   9EC8             	\ .db 2 \ #if (-32>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -32 << 1\	#endif\ #endif             ;Eff Slope:-2     Dur:2    Net:206
2274   9EC8 02          
2274   9EC9~            	SFREQ(-32,2)             ;Eff Slope:-2     Dur:2    Net:206
2274   9EC9~            	SFREQ(-32,2)             ;Eff Slope:-2     Dur:2    Net:206
2274   9EC9             
2274   9EC9~            	SFREQ(-32,2)             ;Eff Slope:-2     Dur:2    Net:206
2274   9EC9~            	SFREQ(-32,2)             ;Eff Slope:-2     Dur:2    Net:206
2274   9EC9             
2274   9EC9 C0 FF       
2274   9ECB             
2274   9ECB             
2275   9ECB             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:204
2275   9ECB 02          
2275   9ECC~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:204
2275   9ECC~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:204
2275   9ECC             
2275   9ECC~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:204
2275   9ECC~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:204
2275   9ECC             
2275   9ECC E0 FF       
2275   9ECE             
2275   9ECE             
2276   9ECE             	\ .db 2 \ #if (-32>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -32 << 1\	#endif\ #endif             ;Eff Slope:-2     Dur:2    Net:200
2276   9ECE 02          
2276   9ECF~            	SFREQ(-32,2)             ;Eff Slope:-2     Dur:2    Net:200
2276   9ECF~            	SFREQ(-32,2)             ;Eff Slope:-2     Dur:2    Net:200
2276   9ECF             
2276   9ECF~            	SFREQ(-32,2)             ;Eff Slope:-2     Dur:2    Net:200
2276   9ECF~            	SFREQ(-32,2)             ;Eff Slope:-2     Dur:2    Net:200
2276   9ECF             
2276   9ECF C0 FF       
2276   9ED1             
2276   9ED1             
2277   9ED1             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:198
2277   9ED1 02          
2277   9ED2~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:198
2277   9ED2~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:198
2277   9ED2             
2277   9ED2~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:198
2277   9ED2~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:198
2277   9ED2             
2277   9ED2 E0 FF       
2277   9ED4             
2277   9ED4             
2278   9ED4             	\ .db 4 \ #if (-32>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -32 << 1\	#endif\ #endif             ;Eff Slope:-2     Dur:4    Net:190
2278   9ED4 04          
2278   9ED5~            	SFREQ(-32,4)             ;Eff Slope:-2     Dur:4    Net:190
2278   9ED5~            	SFREQ(-32,4)             ;Eff Slope:-2     Dur:4    Net:190
2278   9ED5             
2278   9ED5~            	SFREQ(-32,4)             ;Eff Slope:-2     Dur:4    Net:190
2278   9ED5~            	SFREQ(-32,4)             ;Eff Slope:-2     Dur:4    Net:190
2278   9ED5             
2278   9ED5 C0 FF       
2278   9ED7             
2278   9ED7             
2279   9ED7             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:188
2279   9ED7 02          
2279   9ED8~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:188
2279   9ED8~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:188
2279   9ED8             
2279   9ED8~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:188
2279   9ED8~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:188
2279   9ED8             
2279   9ED8 E0 FF       
2279   9EDA             
2279   9EDA             
2280   9EDA             	\ .db 2 \ #if (-40>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -40 << 1\	#endif\ #endif             ;Eff Slope:-2.5   Dur:2    Net:183
2280   9EDA 02          
2280   9EDB~            	SFREQ(-40,2)             ;Eff Slope:-2.5   Dur:2    Net:183
2280   9EDB~            	SFREQ(-40,2)             ;Eff Slope:-2.5   Dur:2    Net:183
2280   9EDB             
2280   9EDB~            	SFREQ(-40,2)             ;Eff Slope:-2.5   Dur:2    Net:183
2280   9EDB~            	SFREQ(-40,2)             ;Eff Slope:-2.5   Dur:2    Net:183
2280   9EDB             
2280   9EDB B0 FF       
2280   9EDD             
2280   9EDD             
2281   9EDD             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:180
2281   9EDD 02          
2281   9EDE~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:180
2281   9EDE~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:180
2281   9EDE             
2281   9EDE~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:180
2281   9EDE~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:180
2281   9EDE             
2281   9EDE D0 FF       
2281   9EE0             
2281   9EE0             
2282   9EE0             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:179
2282   9EE0 02          
2282   9EE1~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:179
2282   9EE1~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:179
2282   9EE1             
2282   9EE1~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:179
2282   9EE1~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:179
2282   9EE1             
2282   9EE1 F0 FF       
2282   9EE3             
2282   9EE3             
2283   9EE3             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:177
2283   9EE3 02          
2283   9EE4~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:177
2283   9EE4~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:177
2283   9EE4             
2283   9EE4~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:177
2283   9EE4~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:177
2283   9EE4             
2283   9EE4 E0 FF       
2283   9EE6             
2283   9EE6             
2284   9EE6             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:175
2284   9EE6 04          
2284   9EE7~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:175
2284   9EE7~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:175
2284   9EE7             
2284   9EE7~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:175
2284   9EE7~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:175
2284   9EE7             
2284   9EE7 F0 FF       
2284   9EE9             
2284   9EE9             
2285   9EE9             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:173
2285   9EE9 02          
2285   9EEA~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:173
2285   9EEA~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:173
2285   9EEA             
2285   9EEA~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:173
2285   9EEA~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:173
2285   9EEA             
2285   9EEA E0 FF       
2285   9EEC             
2285   9EEC             
2286   9EEC             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:171
2286   9EEC 04          
2286   9EED~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:171
2286   9EED~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:171
2286   9EED             
2286   9EED~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:171
2286   9EED~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:171
2286   9EED             
2286   9EED F0 FF       
2286   9EEF             
2286   9EEF             
2287   9EEF             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:169
2287   9EEF 02          
2287   9EF0~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:169
2287   9EF0~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:169
2287   9EF0             
2287   9EF0~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:169
2287   9EF0~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:169
2287   9EF0             
2287   9EF0 E0 FF       
2287   9EF2             
2287   9EF2             
2288   9EF2             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:166
2288   9EF2 02          
2288   9EF3~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:166
2288   9EF3~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:166
2288   9EF3             
2288   9EF3~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:166
2288   9EF3~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:166
2288   9EF3             
2288   9EF3 D0 FF       
2288   9EF5             
2288   9EF5             
2289   9EF5             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:165
2289   9EF5 02          
2289   9EF6~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:165
2289   9EF6~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:165
2289   9EF6             
2289   9EF6~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:165
2289   9EF6~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:165
2289   9EF6             
2289   9EF6 F0 FF       
2289   9EF8             
2289   9EF8             
2290   9EF8             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:165
2290   9EF8 02          
2290   9EF9~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:165
2290   9EF9~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:165
2290   9EF9             
2290   9EF9~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:165
2290   9EF9~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:165
2290   9EF9             
2290   9EF9 00 00       
2290   9EFB             
2290   9EFB             
2291   9EFB             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:162
2291   9EFB 02          
2291   9EFC~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:162
2291   9EFC~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:162
2291   9EFC             
2291   9EFC~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:162
2291   9EFC~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:162
2291   9EFC             
2291   9EFC D0 FF       
2291   9EFE             
2291   9EFE             
2292   9EFE             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:161
2292   9EFE 02          
2292   9EFF~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:161
2292   9EFF~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:161
2292   9EFF             
2292   9EFF~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:161
2292   9EFF~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:161
2292   9EFF             
2292   9EFF F0 FF       
2292   9F01             
2292   9F01             
2293   9F01             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:159
2293   9F01 02          
2293   9F02~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:159
2293   9F02~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:159
2293   9F02             
2293   9F02~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:159
2293   9F02~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:159
2293   9F02             
2293   9F02 E0 FF       
2293   9F04             
2293   9F04             
2294   9F04             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:156
2294   9F04 02          
2294   9F05~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:156
2294   9F05~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:156
2294   9F05             
2294   9F05~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:156
2294   9F05~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:156
2294   9F05             
2294   9F05 D0 FF       
2294   9F07             
2294   9F07             
2295   9F07             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:154
2295   9F07 04          
2295   9F08~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:154
2295   9F08~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:154
2295   9F08             
2295   9F08~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:154
2295   9F08~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:154
2295   9F08             
2295   9F08 F0 FF       
2295   9F0A             
2295   9F0A             
2296   9F0A             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:152
2296   9F0A 02          
2296   9F0B~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:152
2296   9F0B~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:152
2296   9F0B             
2296   9F0B~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:152
2296   9F0B~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:152
2296   9F0B             
2296   9F0B E0 FF       
2296   9F0D             
2296   9F0D             
2297   9F0D             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:151
2297   9F0D 02          
2297   9F0E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:151
2297   9F0E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:151
2297   9F0E             
2297   9F0E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:151
2297   9F0E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:151
2297   9F0E             
2297   9F0E F0 FF       
2297   9F10             
2297   9F10             
2298   9F10             	\ .db 4 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:4    Net:147
2298   9F10 04          
2298   9F11~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:147
2298   9F11~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:147
2298   9F11             
2298   9F11~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:147
2298   9F11~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:147
2298   9F11             
2298   9F11 E0 FF       
2298   9F13             
2298   9F13             
2299   9F13             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:147
2299   9F13 02          
2299   9F14~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:147
2299   9F14~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:147
2299   9F14             
2299   9F14~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:147
2299   9F14~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:147
2299   9F14             
2299   9F14 00 00       
2299   9F16             
2299   9F16             
2300   9F16             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:145
2300   9F16 02          
2300   9F17~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:145
2300   9F17~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:145
2300   9F17             
2300   9F17~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:145
2300   9F17~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:145
2300   9F17             
2300   9F17 E0 FF       
2300   9F19             
2300   9F19             
2301   9F19             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:142
2301   9F19 02          
2301   9F1A~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:142
2301   9F1A~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:142
2301   9F1A             
2301   9F1A~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:142
2301   9F1A~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:142
2301   9F1A             
2301   9F1A D0 FF       
2301   9F1C             
2301   9F1C             
2302   9F1C             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:141
2302   9F1C 02          
2302   9F1D~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:141
2302   9F1D~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:141
2302   9F1D             
2302   9F1D~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:141
2302   9F1D~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:141
2302   9F1D             
2302   9F1D F0 FF       
2302   9F1F             
2302   9F1F             
2303   9F1F             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:139
2303   9F1F 02          
2303   9F20~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:139
2303   9F20~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:139
2303   9F20             
2303   9F20~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:139
2303   9F20~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:139
2303   9F20             
2303   9F20 E0 FF       
2303   9F22             
2303   9F22             
2304   9F22             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:137
2304   9F22 04          
2304   9F23~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:137
2304   9F23~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:137
2304   9F23             
2304   9F23~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:137
2304   9F23~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:137
2304   9F23             
2304   9F23 F0 FF       
2304   9F25             
2304   9F25             
2305   9F25             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:135
2305   9F25 02          
2305   9F26~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:135
2305   9F26~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:135
2305   9F26             
2305   9F26~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:135
2305   9F26~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:135
2305   9F26             
2305   9F26 E0 FF       
2305   9F28             
2305   9F28             
2306   9F28             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:132
2306   9F28 02          
2306   9F29~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:132
2306   9F29~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:132
2306   9F29             
2306   9F29~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:132
2306   9F29~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:132
2306   9F29             
2306   9F29 D0 FF       
2306   9F2B             
2306   9F2B             
2307   9F2B             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:132
2307   9F2B 02          
2307   9F2C~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:132
2307   9F2C~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:132
2307   9F2C             
2307   9F2C~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:132
2307   9F2C~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:132
2307   9F2C             
2307   9F2C 00 00       
2307   9F2E             
2307   9F2E             
2308   9F2E             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:131
2308   9F2E 02          
2308   9F2F~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:131
2308   9F2F~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:131
2308   9F2F             
2308   9F2F~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:131
2308   9F2F~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:131
2308   9F2F             
2308   9F2F F0 FF       
2308   9F31             
2308   9F31             
2309   9F31             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:128
2309   9F31 02          
2309   9F32~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:128
2309   9F32~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:128
2309   9F32             
2309   9F32~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:128
2309   9F32~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:128
2309   9F32             
2309   9F32 D0 FF       
2309   9F34             
2309   9F34             
2310   9F34             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:127
2310   9F34 02          
2310   9F35~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:127
2310   9F35~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:127
2310   9F35             
2310   9F35~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:127
2310   9F35~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:127
2310   9F35             
2310   9F35 F0 FF       
2310   9F37             
2310   9F37             
2311   9F37             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:125
2311   9F37 02          
2311   9F38~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:125
2311   9F38~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:125
2311   9F38             
2311   9F38~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:125
2311   9F38~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:125
2311   9F38             
2311   9F38 E0 FF       
2311   9F3A             
2311   9F3A             
2312   9F3A             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:123
2312   9F3A 04          
2312   9F3B~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:123
2312   9F3B~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:123
2312   9F3B             
2312   9F3B~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:123
2312   9F3B~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:123
2312   9F3B             
2312   9F3B F0 FF       
2312   9F3D             
2312   9F3D             
2313   9F3D             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:121
2313   9F3D 02          
2313   9F3E~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:121
2313   9F3E~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:121
2313   9F3E             
2313   9F3E~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:121
2313   9F3E~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:121
2313   9F3E             
2313   9F3E E0 FF       
2313   9F40             
2313   9F40             
2314   9F40             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:118
2314   9F40 02          
2314   9F41~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:118
2314   9F41~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:118
2314   9F41             
2314   9F41~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:118
2314   9F41~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:118
2314   9F41             
2314   9F41 D0 FF       
2314   9F43             
2314   9F43             
2315   9F43             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:117
2315   9F43 02          
2315   9F44~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:117
2315   9F44~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:117
2315   9F44             
2315   9F44~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:117
2315   9F44~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:117
2315   9F44             
2315   9F44 F0 FF       
2315   9F46             
2315   9F46             
2316   9F46             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:115
2316   9F46 02          
2316   9F47~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:115
2316   9F47~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:115
2316   9F47             
2316   9F47~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:115
2316   9F47~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:115
2316   9F47             
2316   9F47 E0 FF       
2316   9F49             
2316   9F49             
2317   9F49             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:113
2317   9F49 04          
2317   9F4A~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:113
2317   9F4A~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:113
2317   9F4A             
2317   9F4A~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:113
2317   9F4A~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:113
2317   9F4A             
2317   9F4A F0 FF       
2317   9F4C             
2317   9F4C             
2318   9F4C             	\ .db 4 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:4    Net:109
2318   9F4C 04          
2318   9F4D~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:109
2318   9F4D~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:109
2318   9F4D             
2318   9F4D~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:109
2318   9F4D~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:109
2318   9F4D             
2318   9F4D E0 FF       
2318   9F4F             
2318   9F4F             
2319   9F4F             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:109
2319   9F4F 02          
2319   9F50~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:109
2319   9F50~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:109
2319   9F50             
2319   9F50~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:109
2319   9F50~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:109
2319   9F50             
2319   9F50 00 00       
2319   9F52             
2319   9F52             
2320   9F52             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:107
2320   9F52 02          
2320   9F53~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:107
2320   9F53~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:107
2320   9F53             
2320   9F53~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:107
2320   9F53~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:107
2320   9F53             
2320   9F53 E0 FF       
2320   9F55             
2320   9F55             
2321   9F55             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:104
2321   9F55 02          
2321   9F56~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:104
2321   9F56~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:104
2321   9F56             
2321   9F56~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:104
2321   9F56~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:104
2321   9F56             
2321   9F56 D0 FF       
2321   9F58             
2321   9F58             
2322   9F58             	\ .db 4 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:4    Net:100
2322   9F58 04          
2322   9F59~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:100
2322   9F59~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:100
2322   9F59             
2322   9F59~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:100
2322   9F59~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:100
2322   9F59             
2322   9F59 E0 FF       
2322   9F5B             
2322   9F5B             
2323   9F5B             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:98
2323   9F5B 04          
2323   9F5C~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:98
2323   9F5C~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:98
2323   9F5C             
2323   9F5C~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:98
2323   9F5C~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:98
2323   9F5C             
2323   9F5C F0 FF       
2323   9F5E             
2323   9F5E             
2324   9F5E             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:96
2324   9F5E 02          
2324   9F5F~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:96
2324   9F5F~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:96
2324   9F5F             
2324   9F5F~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:96
2324   9F5F~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:96
2324   9F5F             
2324   9F5F E0 FF       
2324   9F61             
2324   9F61             
2325   9F61             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:93
2325   9F61 02          
2325   9F62~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:93
2325   9F62~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:93
2325   9F62             
2325   9F62~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:93
2325   9F62~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:93
2325   9F62             
2325   9F62 D0 FF       
2325   9F64             
2325   9F64             
2326   9F64             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:92
2326   9F64 02          
2326   9F65~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:92
2326   9F65~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:92
2326   9F65             
2326   9F65~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:92
2326   9F65~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:92
2326   9F65             
2326   9F65 F0 FF       
2326   9F67             
2326   9F67             
2327   9F67             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:90
2327   9F67 02          
2327   9F68~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:90
2327   9F68~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:90
2327   9F68             
2327   9F68~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:90
2327   9F68~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:90
2327   9F68             
2327   9F68 E0 FF       
2327   9F6A             
2327   9F6A             
2328   9F6A             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:88
2328   9F6A 04          
2328   9F6B~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:88
2328   9F6B~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:88
2328   9F6B             
2328   9F6B~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:88
2328   9F6B~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:88
2328   9F6B             
2328   9F6B F0 FF       
2328   9F6D             
2328   9F6D             
2329   9F6D             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:85
2329   9F6D 02          
2329   9F6E~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:85
2329   9F6E~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:85
2329   9F6E             
2329   9F6E~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:85
2329   9F6E~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:85
2329   9F6E             
2329   9F6E D0 FF       
2329   9F70             
2329   9F70             
2330   9F70             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:83
2330   9F70 02          
2330   9F71~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:83
2330   9F71~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:83
2330   9F71             
2330   9F71~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:83
2330   9F71~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:83
2330   9F71             
2330   9F71 E0 FF       
2330   9F73             
2330   9F73             
2331   9F73             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:81
2331   9F73 04          
2331   9F74~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:81
2331   9F74~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:81
2331   9F74             
2331   9F74~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:81
2331   9F74~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:81
2331   9F74             
2331   9F74 F0 FF       
2331   9F76             
2331   9F76             
2332   9F76             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:79
2332   9F76 02          
2332   9F77~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:79
2332   9F77~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:79
2332   9F77             
2332   9F77~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:79
2332   9F77~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:79
2332   9F77             
2332   9F77 E0 FF       
2332   9F79             
2332   9F79             
2333   9F79             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:78
2333   9F79 02          
2333   9F7A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:78
2333   9F7A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:78
2333   9F7A             
2333   9F7A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:78
2333   9F7A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:78
2333   9F7A             
2333   9F7A F0 FF       
2333   9F7C             
2333   9F7C             
2334   9F7C             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:76
2334   9F7C 02          
2334   9F7D~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:76
2334   9F7D~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:76
2334   9F7D             
2334   9F7D~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:76
2334   9F7D~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:76
2334   9F7D             
2334   9F7D E0 FF       
2334   9F7F             
2334   9F7F             
2335   9F7F             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:76
2335   9F7F 04          
2335   9F80~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:76
2335   9F80~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:76
2335   9F80             
2335   9F80~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:76
2335   9F80~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:76
2335   9F80             
2335   9F80 00 00       
2335   9F82             
2335   9F82             
2336   9F82             	\ .db 4 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:4    Net:72
2336   9F82 04          
2336   9F83~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:72
2336   9F83~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:72
2336   9F83             
2336   9F83~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:72
2336   9F83~            	SFREQ(-16,4)             ;Eff Slope:-1     Dur:4    Net:72
2336   9F83             
2336   9F83 E0 FF       
2336   9F85             
2336   9F85             
2337   9F85             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:71
2337   9F85 02          
2337   9F86~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:71
2337   9F86~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:71
2337   9F86             
2337   9F86~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:71
2337   9F86~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:71
2337   9F86             
2337   9F86 F0 FF       
2337   9F88             
2337   9F88             
2338   9F88             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:68
2338   9F88 02          
2338   9F89~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:68
2338   9F89~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:68
2338   9F89             
2338   9F89~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:68
2338   9F89~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:68
2338   9F89             
2338   9F89 D0 FF       
2338   9F8B             
2338   9F8B             
2339   9F8B             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:67
2339   9F8B 02          
2339   9F8C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:67
2339   9F8C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:67
2339   9F8C             
2339   9F8C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:67
2339   9F8C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:67
2339   9F8C             
2339   9F8C F0 FF       
2339   9F8E             
2339   9F8E             
2340   9F8E             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:67
2340   9F8E 04          
2340   9F8F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:67
2340   9F8F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:67
2340   9F8F             
2340   9F8F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:67
2340   9F8F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:67
2340   9F8F             
2340   9F8F 00 00       
2340   9F91             
2340   9F91             
2341   9F91             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:65
2341   9F91 02          
2341   9F92~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:65
2341   9F92~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:65
2341   9F92             
2341   9F92~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:65
2341   9F92~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:65
2341   9F92             
2341   9F92 E0 FF       
2341   9F94             
2341   9F94             
2342   9F94             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:64
2342   9F94 02          
2342   9F95~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:64
2342   9F95~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:64
2342   9F95             
2342   9F95~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:64
2342   9F95~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:64
2342   9F95             
2342   9F95 F0 FF       
2342   9F97             
2342   9F97             
2343   9F97             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:61
2343   9F97 02          
2343   9F98~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:61
2343   9F98~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:61
2343   9F98             
2343   9F98~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:61
2343   9F98~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:61
2343   9F98             
2343   9F98 D0 FF       
2343   9F9A             
2343   9F9A             
2344   9F9A             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:59
2344   9F9A 02          
2344   9F9B~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:59
2344   9F9B~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:59
2344   9F9B             
2344   9F9B~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:59
2344   9F9B~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:59
2344   9F9B             
2344   9F9B E0 FF       
2344   9F9D             
2344   9F9D             
2345   9F9D             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:59
2345   9F9D 04          
2345   9F9E~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:59
2345   9F9E~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:59
2345   9F9E             
2345   9F9E~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:59
2345   9F9E~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:59
2345   9F9E             
2345   9F9E 00 00       
2345   9FA0             
2345   9FA0             
2346   9FA0             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:57
2346   9FA0 04          
2346   9FA1~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:57
2346   9FA1~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:57
2346   9FA1             
2346   9FA1~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:57
2346   9FA1~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:57
2346   9FA1             
2346   9FA1 F0 FF       
2346   9FA3             
2346   9FA3             
2347   9FA3             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:54
2347   9FA3 02          
2347   9FA4~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:54
2347   9FA4~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:54
2347   9FA4             
2347   9FA4~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:54
2347   9FA4~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:54
2347   9FA4             
2347   9FA4 D0 FF       
2347   9FA6             
2347   9FA6             
2348   9FA6             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:52
2348   9FA6 02          
2348   9FA7~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:52
2348   9FA7~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:52
2348   9FA7             
2348   9FA7~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:52
2348   9FA7~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:52
2348   9FA7             
2348   9FA7 E0 FF       
2348   9FA9             
2348   9FA9             
2349   9FA9             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:52
2349   9FA9 04          
2349   9FAA~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:52
2349   9FAA~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:52
2349   9FAA             
2349   9FAA~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:52
2349   9FAA~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:52
2349   9FAA             
2349   9FAA 00 00       
2349   9FAC             
2349   9FAC             
2350   9FAC             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:50
2350   9FAC 02          
2350   9FAD~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:50
2350   9FAD~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:50
2350   9FAD             
2350   9FAD~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:50
2350   9FAD~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:50
2350   9FAD             
2350   9FAD E0 FF       
2350   9FAF             
2350   9FAF             
2351   9FAF             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:49
2351   9FAF 02          
2351   9FB0~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:49
2351   9FB0~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:49
2351   9FB0             
2351   9FB0~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:49
2351   9FB0~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:49
2351   9FB0             
2351   9FB0 F0 FF       
2351   9FB2             
2351   9FB2             
2352   9FB2             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:49
2352   9FB2 02          
2352   9FB3~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:49
2352   9FB3~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:49
2352   9FB3             
2352   9FB3~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:49
2352   9FB3~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:49
2352   9FB3             
2352   9FB3 00 00       
2352   9FB5             
2352   9FB5             
2353   9FB5             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:47
2353   9FB5 02          
2353   9FB6~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:47
2353   9FB6~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:47
2353   9FB6             
2353   9FB6~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:47
2353   9FB6~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:47
2353   9FB6             
2353   9FB6 E0 FF       
2353   9FB8             
2353   9FB8             
2354   9FB8             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:46
2354   9FB8 02          
2354   9FB9~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:46
2354   9FB9~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:46
2354   9FB9             
2354   9FB9~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:46
2354   9FB9~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:46
2354   9FB9             
2354   9FB9 F0 FF       
2354   9FBB             
2354   9FBB             
2355   9FBB             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:46
2355   9FBB 04          
2355   9FBC~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:46
2355   9FBC~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:46
2355   9FBC             
2355   9FBC~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:46
2355   9FBC~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:46
2355   9FBC             
2355   9FBC 00 00       
2355   9FBE             
2355   9FBE             
2356   9FBE             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:45
2356   9FBE 02          
2356   9FBF~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:45
2356   9FBF~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:45
2356   9FBF             
2356   9FBF~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:45
2356   9FBF~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:45
2356   9FBF             
2356   9FBF F0 FF       
2356   9FC1             
2356   9FC1             
2357   9FC1             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:43
2357   9FC1 02          
2357   9FC2~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:43
2357   9FC2~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:43
2357   9FC2             
2357   9FC2~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:43
2357   9FC2~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:43
2357   9FC2             
2357   9FC2 E0 FF       
2357   9FC4             
2357   9FC4             
2358   9FC4             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:43
2358   9FC4 04          
2358   9FC5~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:43
2358   9FC5~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:43
2358   9FC5             
2358   9FC5~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:43
2358   9FC5~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:43
2358   9FC5             
2358   9FC5 00 00       
2358   9FC7             
2358   9FC7             
2359   9FC7             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:41
2359   9FC7 02          
2359   9FC8~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:41
2359   9FC8~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:41
2359   9FC8             
2359   9FC8~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:41
2359   9FC8~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:41
2359   9FC8             
2359   9FC8 E0 FF       
2359   9FCA             
2359   9FCA             
2360   9FCA             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:40
2360   9FCA 02          
2360   9FCB~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:40
2360   9FCB~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:40
2360   9FCB             
2360   9FCB~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:40
2360   9FCB~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:40
2360   9FCB             
2360   9FCB F0 FF       
2360   9FCD             
2360   9FCD             
2361   9FCD             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:40
2361   9FCD 04          
2361   9FCE~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:40
2361   9FCE~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:40
2361   9FCE             
2361   9FCE~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:40
2361   9FCE~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:40
2361   9FCE             
2361   9FCE 00 00       
2361   9FD0             
2361   9FD0             
2362   9FD0             	\ .db 2 \ #if (-16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -16 << 1\	#endif\ #endif             ;Eff Slope:-1     Dur:2    Net:38
2362   9FD0 02          
2362   9FD1~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:38
2362   9FD1~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:38
2362   9FD1             
2362   9FD1~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:38
2362   9FD1~            	SFREQ(-16,2)             ;Eff Slope:-1     Dur:2    Net:38
2362   9FD1             
2362   9FD1 E0 FF       
2362   9FD3             
2362   9FD3             
2363   9FD3             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:37
2363   9FD3 02          
2363   9FD4~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:37
2363   9FD4~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:37
2363   9FD4             
2363   9FD4~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:37
2363   9FD4~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:37
2363   9FD4             
2363   9FD4 F0 FF       
2363   9FD6             
2363   9FD6             
2364   9FD6             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:37
2364   9FD6 02          
2364   9FD7~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:37
2364   9FD7~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:37
2364   9FD7             
2364   9FD7~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:37
2364   9FD7~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:37
2364   9FD7             
2364   9FD7 00 00       
2364   9FD9             
2364   9FD9             
2365   9FD9             	\ .db 6 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (6 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:6    Net:34
2365   9FD9 06          
2365   9FDA~            	SFREQ(-8,6)              ;Eff Slope:-0.5   Dur:6    Net:34
2365   9FDA~            	SFREQ(-8,6)              ;Eff Slope:-0.5   Dur:6    Net:34
2365   9FDA             
2365   9FDA~            	SFREQ(-8,6)              ;Eff Slope:-0.5   Dur:6    Net:34
2365   9FDA~            	SFREQ(-8,6)              ;Eff Slope:-0.5   Dur:6    Net:34
2365   9FDA             
2365   9FDA F0 FF       
2365   9FDC             
2365   9FDC             
2366   9FDC             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:34
2366   9FDC 04          
2366   9FDD~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:34
2366   9FDD~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:34
2366   9FDD             
2366   9FDD~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:34
2366   9FDD~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:34
2366   9FDD             
2366   9FDD 00 00       
2366   9FDF             
2366   9FDF             
2367   9FDF             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:31
2367   9FDF 02          
2367   9FE0~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:31
2367   9FE0~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:31
2367   9FE0             
2367   9FE0~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:31
2367   9FE0~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:31
2367   9FE0             
2367   9FE0 D0 FF       
2367   9FE2             
2367   9FE2             
2368   9FE2             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:31
2368   9FE2 04          
2368   9FE3~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:31
2368   9FE3~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:31
2368   9FE3             
2368   9FE3~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:31
2368   9FE3~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:31
2368   9FE3             
2368   9FE3 00 00       
2368   9FE5             
2368   9FE5             
2369   9FE5             	\ .db 4 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:4    Net:29
2369   9FE5 04          
2369   9FE6~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:29
2369   9FE6~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:29
2369   9FE6             
2369   9FE6~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:29
2369   9FE6~            	SFREQ(-8,4)              ;Eff Slope:-0.5   Dur:4    Net:29
2369   9FE6             
2369   9FE6 F0 FF       
2369   9FE8             
2369   9FE8             
2370   9FE8             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:29
2370   9FE8 02          
2370   9FE9~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:29
2370   9FE9~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:29
2370   9FE9             
2370   9FE9~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:29
2370   9FE9~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:29
2370   9FE9             
2370   9FE9 00 00       
2370   9FEB             
2370   9FEB             
2371   9FEB             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:28
2371   9FEB 02          
2371   9FEC~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:28
2371   9FEC~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:28
2371   9FEC             
2371   9FEC~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:28
2371   9FEC~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:28
2371   9FEC             
2371   9FEC F0 FF       
2371   9FEE             
2371   9FEE             
2372   9FEE             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:28
2372   9FEE 04          
2372   9FEF~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:28
2372   9FEF~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:28
2372   9FEF             
2372   9FEF~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:28
2372   9FEF~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:28
2372   9FEF             
2372   9FEF 00 00       
2372   9FF1             
2372   9FF1             
2373   9FF1             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:27
2373   9FF1 02          
2373   9FF2~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:27
2373   9FF2~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:27
2373   9FF2             
2373   9FF2~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:27
2373   9FF2~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:27
2373   9FF2             
2373   9FF2 F0 FF       
2373   9FF4             
2373   9FF4             
2374   9FF4             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:27
2374   9FF4 04          
2374   9FF5~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:27
2374   9FF5~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:27
2374   9FF5             
2374   9FF5~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:27
2374   9FF5~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:27
2374   9FF5             
2374   9FF5 00 00       
2374   9FF7             
2374   9FF7             
2375   9FF7             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:26
2375   9FF7 02          
2375   9FF8~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:26
2375   9FF8~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:26
2375   9FF8             
2375   9FF8~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:26
2375   9FF8~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:26
2375   9FF8             
2375   9FF8 F0 FF       
2375   9FFA             
2375   9FFA             
2376   9FFA             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:26
2376   9FFA 02          
2376   9FFB~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:26
2376   9FFB~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:26
2376   9FFB             
2376   9FFB~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:26
2376   9FFB~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:26
2376   9FFB             
2376   9FFB 00 00       
2376   9FFD             
2376   9FFD             
2377   9FFD             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:25
2377   9FFD 02          
2377   9FFE~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:25
2377   9FFE~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:25
2377   9FFE             
2377   9FFE~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:25
2377   9FFE~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:25
2377   9FFE             
2377   9FFE F0 FF       
2377   A000             
2377   A000             
2378   A000             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:25
2378   A000 02          
2378   A001~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:25
2378   A001~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:25
2378   A001             
2378   A001~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:25
2378   A001~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:25
2378   A001             
2378   A001 00 00       
2378   A003             
2378   A003             
2379   A003             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:24
2379   A003 02          
2379   A004~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:24
2379   A004~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:24
2379   A004             
2379   A004~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:24
2379   A004~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:24
2379   A004             
2379   A004 F0 FF       
2379   A006             
2379   A006             
2380   A006             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:24
2380   A006 04          
2380   A007~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:24
2380   A007~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:24
2380   A007             
2380   A007~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:24
2380   A007~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:24
2380   A007             
2380   A007 00 00       
2380   A009             
2380   A009             
2381   A009             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:23
2381   A009 02          
2381   A00A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:23
2381   A00A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:23
2381   A00A             
2381   A00A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:23
2381   A00A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:23
2381   A00A             
2381   A00A F0 FF       
2381   A00C             
2381   A00C             
2382   A00C             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:23
2382   A00C 02          
2382   A00D~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:23
2382   A00D~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:23
2382   A00D             
2382   A00D~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:23
2382   A00D~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:23
2382   A00D             
2382   A00D 00 00       
2382   A00F             
2382   A00F             
2383   A00F             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:22
2383   A00F 02          
2383   A010~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:22
2383   A010~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:22
2383   A010             
2383   A010~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:22
2383   A010~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:22
2383   A010             
2383   A010 F0 FF       
2383   A012             
2383   A012             
2384   A012             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:22
2384   A012 04          
2384   A013~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:22
2384   A013~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:22
2384   A013             
2384   A013~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:22
2384   A013~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:22
2384   A013             
2384   A013 00 00       
2384   A015             
2384   A015             
2385   A015             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:21
2385   A015 02          
2385   A016~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:21
2385   A016~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:21
2385   A016             
2385   A016~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:21
2385   A016~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:21
2385   A016             
2385   A016 F0 FF       
2385   A018             
2385   A018             
2386   A018             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:21
2386   A018 04          
2386   A019~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:21
2386   A019~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:21
2386   A019             
2386   A019~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:21
2386   A019~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:21
2386   A019             
2386   A019 00 00       
2386   A01B             
2386   A01B             
2387   A01B             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:20
2387   A01B 02          
2387   A01C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:20
2387   A01C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:20
2387   A01C             
2387   A01C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:20
2387   A01C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:20
2387   A01C             
2387   A01C F0 FF       
2387   A01E             
2387   A01E             
2388   A01E             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:20
2388   A01E 02          
2388   A01F~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:20
2388   A01F~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:20
2388   A01F             
2388   A01F~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:20
2388   A01F~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:20
2388   A01F             
2388   A01F 00 00       
2388   A021             
2388   A021             
2389   A021             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:19
2389   A021 02          
2389   A022~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:19
2389   A022~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:19
2389   A022             
2389   A022~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:19
2389   A022~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:19
2389   A022             
2389   A022 F0 FF       
2389   A024             
2389   A024             
2390   A024             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:19
2390   A024 02          
2390   A025~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:19
2390   A025~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:19
2390   A025             
2390   A025~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:19
2390   A025~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:19
2390   A025             
2390   A025 00 00       
2390   A027             
2390   A027             
2391   A027             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:18
2391   A027 02          
2391   A028~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:18
2391   A028~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:18
2391   A028             
2391   A028~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:18
2391   A028~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:18
2391   A028             
2391   A028 F0 FF       
2391   A02A             
2391   A02A             
2392   A02A             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:18
2392   A02A 04          
2392   A02B~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:18
2392   A02B~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:18
2392   A02B             
2392   A02B~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:18
2392   A02B~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:18
2392   A02B             
2392   A02B 00 00       
2392   A02D             
2392   A02D             
2393   A02D             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:17
2393   A02D 02          
2393   A02E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:17
2393   A02E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:17
2393   A02E             
2393   A02E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:17
2393   A02E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:17
2393   A02E             
2393   A02E F0 FF       
2393   A030             
2393   A030             
2394   A030             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:17
2394   A030 02          
2394   A031~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:17
2394   A031~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:17
2394   A031             
2394   A031~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:17
2394   A031~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:17
2394   A031             
2394   A031 00 00       
2394   A033             
2394   A033             
2395   A033             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:16
2395   A033 02          
2395   A034~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:16
2395   A034~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:16
2395   A034             
2395   A034~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:16
2395   A034~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:16
2395   A034             
2395   A034 F0 FF       
2395   A036             
2395   A036             
2396   A036             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:16
2396   A036 04          
2396   A037~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:16
2396   A037~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:16
2396   A037             
2396   A037~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:16
2396   A037~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:16
2396   A037             
2396   A037 00 00       
2396   A039             
2396   A039             
2397   A039             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:15
2397   A039 02          
2397   A03A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:15
2397   A03A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:15
2397   A03A             
2397   A03A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:15
2397   A03A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:15
2397   A03A             
2397   A03A F0 FF       
2397   A03C             
2397   A03C             
2398   A03C             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:15
2398   A03C 04          
2398   A03D~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:15
2398   A03D~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:15
2398   A03D             
2398   A03D~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:15
2398   A03D~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:15
2398   A03D             
2398   A03D 00 00       
2398   A03F             
2398   A03F             
2399   A03F             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:14
2399   A03F 02          
2399   A040~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:14
2399   A040~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:14
2399   A040             
2399   A040~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:14
2399   A040~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:14
2399   A040             
2399   A040 F0 FF       
2399   A042             
2399   A042             
2400   A042             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:14
2400   A042 02          
2400   A043~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:14
2400   A043~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:14
2400   A043             
2400   A043~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:14
2400   A043~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:14
2400   A043             
2400   A043 00 00       
2400   A045             
2400   A045             
2401   A045             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:13
2401   A045 02          
2401   A046~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:13
2401   A046~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:13
2401   A046             
2401   A046~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:13
2401   A046~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:13
2401   A046             
2401   A046 F0 FF       
2401   A048             
2401   A048             
2402   A048             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:13
2402   A048 02          
2402   A049~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:13
2402   A049~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:13
2402   A049             
2402   A049~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:13
2402   A049~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:13
2402   A049             
2402   A049 00 00       
2402   A04B             
2402   A04B             
2403   A04B             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:12
2403   A04B 02          
2403   A04C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:12
2403   A04C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:12
2403   A04C             
2403   A04C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:12
2403   A04C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:12
2403   A04C             
2403   A04C F0 FF       
2403   A04E             
2403   A04E             
2404   A04E             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:12
2404   A04E 04          
2404   A04F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:12
2404   A04F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:12
2404   A04F             
2404   A04F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:12
2404   A04F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:12
2404   A04F             
2404   A04F 00 00       
2404   A051             
2404   A051             
2405   A051             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:11
2405   A051 02          
2405   A052~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:11
2405   A052~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:11
2405   A052             
2405   A052~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:11
2405   A052~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:11
2405   A052             
2405   A052 F0 FF       
2405   A054             
2405   A054             
2406   A054             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:11
2406   A054 02          
2406   A055~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:11
2406   A055~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:11
2406   A055             
2406   A055~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:11
2406   A055~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:11
2406   A055             
2406   A055 00 00       
2406   A057             
2406   A057             
2407   A057             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:10
2407   A057 02          
2407   A058~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:10
2407   A058~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:10
2407   A058             
2407   A058~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:10
2407   A058~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:10
2407   A058             
2407   A058 F0 FF       
2407   A05A             
2407   A05A             
2408   A05A             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:10
2408   A05A 04          
2408   A05B~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:10
2408   A05B~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:10
2408   A05B             
2408   A05B~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:10
2408   A05B~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:10
2408   A05B             
2408   A05B 00 00       
2408   A05D             
2408   A05D             
2409   A05D             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:9
2409   A05D 02          
2409   A05E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:9
2409   A05E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:9
2409   A05E             
2409   A05E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:9
2409   A05E~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:9
2409   A05E             
2409   A05E F0 FF       
2409   A060             
2409   A060             
2410   A060             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:9
2410   A060 04          
2410   A061~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:9
2410   A061~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:9
2410   A061             
2410   A061~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:9
2410   A061~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:9
2410   A061             
2410   A061 00 00       
2410   A063             
2410   A063             
2411   A063             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:8
2411   A063 02          
2411   A064~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:8
2411   A064~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:8
2411   A064             
2411   A064~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:8
2411   A064~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:8
2411   A064             
2411   A064 F0 FF       
2411   A066             
2411   A066             
2412   A066             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:8
2412   A066 02          
2412   A067~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:8
2412   A067~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:8
2412   A067             
2412   A067~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:8
2412   A067~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:8
2412   A067             
2412   A067 00 00       
2412   A069             
2412   A069             
2413   A069             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:7
2413   A069 02          
2413   A06A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:7
2413   A06A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:7
2413   A06A             
2413   A06A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:7
2413   A06A~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:7
2413   A06A             
2413   A06A F0 FF       
2413   A06C             
2413   A06C             
2414   A06C             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:7
2414   A06C 02          
2414   A06D~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:7
2414   A06D~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:7
2414   A06D             
2414   A06D~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:7
2414   A06D~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:7
2414   A06D             
2414   A06D 00 00       
2414   A06F             
2414   A06F             
2415   A06F             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:6
2415   A06F 02          
2415   A070~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:6
2415   A070~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:6
2415   A070             
2415   A070~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:6
2415   A070~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:6
2415   A070             
2415   A070 F0 FF       
2415   A072             
2415   A072             
2416   A072             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:6
2416   A072 04          
2416   A073~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:6
2416   A073~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:6
2416   A073             
2416   A073~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:6
2416   A073~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:6
2416   A073             
2416   A073 00 00       
2416   A075             
2416   A075             
2417   A075             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:5
2417   A075 02          
2417   A076~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:5
2417   A076~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:5
2417   A076             
2417   A076~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:5
2417   A076~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:5
2417   A076             
2417   A076 F0 FF       
2417   A078             
2417   A078             
2418   A078             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:5
2418   A078 02          
2418   A079~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:5
2418   A079~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:5
2418   A079             
2418   A079~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:5
2418   A079~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:5
2418   A079             
2418   A079 00 00       
2418   A07B             
2418   A07B             
2419   A07B             	\ .db 2 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif              ;Eff Slope:-0.5   Dur:2    Net:4
2419   A07B 02          
2419   A07C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:4
2419   A07C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:4
2419   A07C             
2419   A07C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:4
2419   A07C~            	SFREQ(-8,2)              ;Eff Slope:-0.5   Dur:2    Net:4
2419   A07C             
2419   A07C F0 FF       
2419   A07E             
2419   A07E             
2420   A07E             	\ .db 4 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (4 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:4    Net:4
2420   A07E 04          
2420   A07F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:4
2420   A07F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:4
2420   A07F             
2420   A07F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:4
2420   A07F~            	SFREQ(0,4)               ;Eff Slope:0      Dur:4    Net:4
2420   A07F             
2420   A07F 00 00       
2420   A081             
2420   A081             
2421   A081                 
2422   A081                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_launch = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
2422   A081             
2422   9092             
2422   9092 81          
2422   9122             
2422   9122 A0          
2422   9123             
2422   9123             
2422   A081             
2422   A081~                NEWTUNE(s_launch)
2422   A081~                NEWTUNE(s_launch)
2422   A081             
2423   A081                 \ .db isc_freq,sfreq_launch
2423   A081 86 04       
2424   A083                 \ .db isc_ctrl,sctrl_launch
2424   A083 87 0E       
2425   A085                 \ .db isc_sfunc10,$00
2425   A085 90 00       
2426   A087                 \ .db isc_sebvol,$00
2426   A087 82 00       
2427   A089                 \ .db isc_ctrlm,CHCTL_POLY17
2427   A089 8A 80       
2428   A08B                 \ .db _REST,$FE
2428   A08B 00 FE       
2429   A08D                 \ .db isc_ctrlm,CHCTL_POLY17
2429   A08D 8A 80       
2430   A08F                 \ .db _REST,$8F
2430   A08F 00 8F       
2431   A091                 \ .dw $0000
2431   A091 00 00       
2432   A093                 
2433   A093             ;**********************************
2434   A093                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_launch2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$09
2434   A093             
2434   92DF             
2434   92DF 93          
2434   936F             
2434   936F A0          
2434   9370             
2434   9370             
2434   A093             
2434   A093~                NEWSNDAMP(sctrl_launch2) ;$09
2434   A093~                NEWSNDAMP(sctrl_launch2) ;$09
2434   A093             
2435   A093                 \ #if (30>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (30<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 30 << 1\		#endif\   #endif\ #endif              ;Eff Slope:15     Dur:2    Net:30
2435   A093~                SCTRL(30,2)              ;Eff Slope:15     Dur:2    Net:30
2435   A093~                SCTRL(30,2)              ;Eff Slope:15     Dur:2    Net:30
2435   A093             
2435   A093~                SCTRL(30,2)              ;Eff Slope:15     Dur:2    Net:30
2435   A093~                SCTRL(30,2)              ;Eff Slope:15     Dur:2    Net:30
2435   A093             
2435   A093~                SCTRL(30,2)              ;Eff Slope:15     Dur:2    Net:30
2435   A093~                SCTRL(30,2)              ;Eff Slope:15     Dur:2    Net:30
2435   A093             
2435   A093 02          
2435   A094 3C          
2435   A095             
2435   A095             
2435   A095             
2436   A095             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (34 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 34 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:34   Net:30
2436   A095~            	SCTRL(0,34)              ;Eff Slope:0      Dur:34   Net:30
2436   A095~            	SCTRL(0,34)              ;Eff Slope:0      Dur:34   Net:30
2436   A095             
2436   A095~            	SCTRL(0,34)              ;Eff Slope:0      Dur:34   Net:30
2436   A095~            	SCTRL(0,34)              ;Eff Slope:0      Dur:34   Net:30
2436   A095             
2436   A095~            	SCTRL(0,34)              ;Eff Slope:0      Dur:34   Net:30
2436   A095~            	SCTRL(0,34)              ;Eff Slope:0      Dur:34   Net:30
2436   A095             
2436   A095 22          
2436   A096 00          
2436   A097             
2436   A097             
2436   A097             
2437   A097             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:28
2437   A097~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2437   A097~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2437   A097             
2437   A097~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2437   A097~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2437   A097             
2437   A097~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2437   A097~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2437   A097             
2437   A097 02          
2437   A098 FC          
2437   A099             
2437   A099             
2437   A099             
2438   A099             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (18 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 18 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:18   Net:28
2438   A099~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:28
2438   A099~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:28
2438   A099             
2438   A099~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:28
2438   A099~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:28
2438   A099             
2438   A099~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:28
2438   A099~            	SCTRL(0,18)              ;Eff Slope:0      Dur:18   Net:28
2438   A099             
2438   A099 12          
2438   A09A 00          
2438   A09B             
2438   A09B             
2438   A09B             
2439   A09B             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:26
2439   A09B~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2439   A09B~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2439   A09B             
2439   A09B~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2439   A09B~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2439   A09B             
2439   A09B~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2439   A09B~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2439   A09B             
2439   A09B 02          
2439   A09C FC          
2439   A09D             
2439   A09D             
2439   A09D             
2440   A09D             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (20 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 20 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:20   Net:26
2440   A09D~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:26
2440   A09D~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:26
2440   A09D             
2440   A09D~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:26
2440   A09D~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:26
2440   A09D             
2440   A09D~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:26
2440   A09D~            	SCTRL(0,20)              ;Eff Slope:0      Dur:20   Net:26
2440   A09D             
2440   A09D 14          
2440   A09E 00          
2440   A09F             
2440   A09F             
2440   A09F             
2441   A09F             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:4    Net:22
2441   A09F~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:22
2441   A09F~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:22
2441   A09F             
2441   A09F~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:22
2441   A09F~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:22
2441   A09F             
2441   A09F~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:22
2441   A09F~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:22
2441   A09F             
2441   A09F 04          
2441   A0A0 FC          
2441   A0A1             
2441   A0A1             
2441   A0A1             
2442   A0A1             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:22
2442   A0A1~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2442   A0A1~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2442   A0A1             
2442   A0A1~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2442   A0A1~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2442   A0A1             
2442   A0A1~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2442   A0A1~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2442   A0A1             
2442   A0A1 02          
2442   A0A2 00          
2442   A0A3             
2442   A0A3             
2442   A0A3             
2443   A0A3             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:4    Net:18
2443   A0A3~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:18
2443   A0A3~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:18
2443   A0A3             
2443   A0A3~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:18
2443   A0A3~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:18
2443   A0A3             
2443   A0A3~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:18
2443   A0A3~            	SCTRL(-2,4)              ;Eff Slope:-1     Dur:4    Net:18
2443   A0A3             
2443   A0A3 04          
2443   A0A4 FC          
2443   A0A5             
2443   A0A5             
2443   A0A5             
2444   A0A5             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:18
2444   A0A5~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:18
2444   A0A5~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:18
2444   A0A5             
2444   A0A5~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:18
2444   A0A5~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:18
2444   A0A5             
2444   A0A5~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:18
2444   A0A5~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:18
2444   A0A5             
2444   A0A5 02          
2444   A0A6 00          
2444   A0A7             
2444   A0A7             
2444   A0A7             
2445   A0A7             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:16
2445   A0A7~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2445   A0A7~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2445   A0A7             
2445   A0A7~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2445   A0A7~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2445   A0A7             
2445   A0A7~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2445   A0A7~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2445   A0A7             
2445   A0A7 02          
2445   A0A8 FC          
2445   A0A9             
2445   A0A9             
2445   A0A9             
2446   A0A9             	\ #if (-4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -4 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-2     Dur:2    Net:12
2446   A0A9~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:12
2446   A0A9~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:12
2446   A0A9             
2446   A0A9~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:12
2446   A0A9~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:12
2446   A0A9             
2446   A0A9~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:12
2446   A0A9~            	SCTRL(-4,2)              ;Eff Slope:-2     Dur:2    Net:12
2446   A0A9             
2446   A0A9 02          
2446   A0AA F8          
2446   A0AB             
2446   A0AB             
2446   A0AB             
2447   A0AB             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (6 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 6 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:6    Net:12
2447   A0AB~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:12
2447   A0AB~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:12
2447   A0AB             
2447   A0AB~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:12
2447   A0AB~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:12
2447   A0AB             
2447   A0AB~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:12
2447   A0AB~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:12
2447   A0AB             
2447   A0AB 06          
2447   A0AC 00          
2447   A0AD             
2447   A0AD             
2447   A0AD             
2448   A0AD             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:10
2448   A0AD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2448   A0AD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2448   A0AD             
2448   A0AD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2448   A0AD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2448   A0AD             
2448   A0AD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2448   A0AD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:10
2448   A0AD             
2448   A0AD 02          
2448   A0AE FC          
2448   A0AF             
2448   A0AF             
2448   A0AF             
2449   A0AF             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:10
2449   A0AF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:10
2449   A0AF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:10
2449   A0AF             
2449   A0AF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:10
2449   A0AF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:10
2449   A0AF             
2449   A0AF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:10
2449   A0AF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:10
2449   A0AF             
2449   A0AF 04          
2449   A0B0 00          
2449   A0B1             
2449   A0B1             
2449   A0B1             
2450   A0B1             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:8
2450   A0B1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2450   A0B1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2450   A0B1             
2450   A0B1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2450   A0B1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2450   A0B1             
2450   A0B1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2450   A0B1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:8
2450   A0B1             
2450   A0B1 02          
2450   A0B2 FC          
2450   A0B3             
2450   A0B3             
2450   A0B3             
2451   A0B3             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:8
2451   A0B3~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2451   A0B3~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2451   A0B3             
2451   A0B3~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2451   A0B3~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2451   A0B3             
2451   A0B3~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2451   A0B3~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:8
2451   A0B3             
2451   A0B3 04          
2451   A0B4 00          
2451   A0B5             
2451   A0B5             
2451   A0B5             
2452   A0B5             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:6
2452   A0B5~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2452   A0B5~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2452   A0B5             
2452   A0B5~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2452   A0B5~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2452   A0B5             
2452   A0B5~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2452   A0B5~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:6
2452   A0B5             
2452   A0B5 02          
2452   A0B6 FC          
2452   A0B7             
2452   A0B7             
2452   A0B7             
2453   A0B7             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (6 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 6 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:6    Net:6
2453   A0B7~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:6
2453   A0B7~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:6
2453   A0B7             
2453   A0B7~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:6
2453   A0B7~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:6
2453   A0B7             
2453   A0B7~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:6
2453   A0B7~            	SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:6
2453   A0B7             
2453   A0B7 06          
2453   A0B8 00          
2453   A0B9             
2453   A0B9             
2453   A0B9             
2454   A0B9             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:4
2454   A0B9~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2454   A0B9~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2454   A0B9             
2454   A0B9~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2454   A0B9~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2454   A0B9             
2454   A0B9~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2454   A0B9~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:4
2454   A0B9             
2454   A0B9 02          
2454   A0BA FC          
2454   A0BB             
2454   A0BB             
2454   A0BB             
2455   A0BB             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:4
2455   A0BB~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:4
2455   A0BB~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:4
2455   A0BB             
2455   A0BB~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:4
2455   A0BB~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:4
2455   A0BB             
2455   A0BB~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:4
2455   A0BB~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:4
2455   A0BB             
2455   A0BB 04          
2455   A0BC 00          
2455   A0BD             
2455   A0BD             
2455   A0BD             
2456   A0BD             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:2
2456   A0BD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2456   A0BD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2456   A0BD             
2456   A0BD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2456   A0BD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2456   A0BD             
2456   A0BD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2456   A0BD~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:2
2456   A0BD             
2456   A0BD 02          
2456   A0BE FC          
2456   A0BF             
2456   A0BF             
2456   A0BF             
2457   A0BF             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:2
2457   A0BF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:2
2457   A0BF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:2
2457   A0BF             
2457   A0BF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:2
2457   A0BF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:2
2457   A0BF             
2457   A0BF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:2
2457   A0BF~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:2
2457   A0BF             
2457   A0BF 04          
2457   A0C0 00          
2457   A0C1             
2457   A0C1             
2457   A0C1             
2458   A0C1             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:0
2458   A0C1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:0
2458   A0C1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:0
2458   A0C1             
2458   A0C1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:0
2458   A0C1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:0
2458   A0C1             
2458   A0C1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:0
2458   A0C1~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:0
2458   A0C1             
2458   A0C1 02          
2458   A0C2 FC          
2458   A0C3             
2458   A0C3             
2458   A0C3             
2459   A0C3             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (254 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 254 \ 			.db 0 << 1\		#endif\   #endif\ #endif             ;Eff Slope:0      Dur:254  Net:0
2459   A0C3~            	SCTRL(0,254)             ;Eff Slope:0      Dur:254  Net:0
2459   A0C3~            	SCTRL(0,254)             ;Eff Slope:0      Dur:254  Net:0
2459   A0C3             
2459   A0C3~            	SCTRL(0,254)             ;Eff Slope:0      Dur:254  Net:0
2459   A0C3~            	SCTRL(0,254)             ;Eff Slope:0      Dur:254  Net:0
2459   A0C3             
2459   A0C3~            	SCTRL(0,254)             ;Eff Slope:0      Dur:254  Net:0
2459   A0C3~            	SCTRL(0,254)             ;Eff Slope:0      Dur:254  Net:0
2459   A0C3             
2459   A0C3 FE          
2459   A0C4 00          
2459   A0C5             
2459   A0C5             
2459   A0C5             
2460   A0C5             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (8 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 8 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:8    Net:0
2460   A0C5~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:0
2460   A0C5~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:0
2460   A0C5             
2460   A0C5~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:0
2460   A0C5~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:0
2460   A0C5             
2460   A0C5~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:0
2460   A0C5~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:0
2460   A0C5             
2460   A0C5 08          
2460   A0C6 00          
2460   A0C7             
2460   A0C7             
2460   A0C7             
2461   A0C7                 
2462   A0C7                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_launch2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$09
2462   A0C7             
2462   91B5             
2462   91B5 C7          
2462   9245             
2462   9245 A0          
2462   9246             
2462   9246             
2462   A0C7             
2462   A0C7~                NEWSNDFREQ(sfreq_launch2)    ;,$09
2462   A0C7~                NEWSNDFREQ(sfreq_launch2)    ;,$09
2462   A0C7             
2463   A0C7                 \ .db 2 \ #if (720>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 720 << 1\	#endif\ #endif             ;Eff Slope:45     Dur:2    Net:90
2463   A0C7 02          
2463   A0C8~                SFREQ(720,2)             ;Eff Slope:45     Dur:2    Net:90
2463   A0C8~                SFREQ(720,2)             ;Eff Slope:45     Dur:2    Net:90
2463   A0C8             
2463   A0C8~                SFREQ(720,2)             ;Eff Slope:45     Dur:2    Net:90
2463   A0C8~                SFREQ(720,2)             ;Eff Slope:45     Dur:2    Net:90
2463   A0C8             
2463   A0C8 A0 05       
2463   A0CA             
2463   A0CA             
2464   A0CA             	\ .db 254 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (254 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif             ;Eff Slope:0      Dur:254  Net:90
2464   A0CA FE          
2464   A0CB~            	SFREQ(0,254)             ;Eff Slope:0      Dur:254  Net:90
2464   A0CB~            	SFREQ(0,254)             ;Eff Slope:0      Dur:254  Net:90
2464   A0CB             
2464   A0CB~            	SFREQ(0,254)             ;Eff Slope:0      Dur:254  Net:90
2464   A0CB~            	SFREQ(0,254)             ;Eff Slope:0      Dur:254  Net:90
2464   A0CB             
2464   A0CB 00 00       
2464   A0CD             
2464   A0CD             
2465   A0CD             	\ .db 140 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (140 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif             ;Eff Slope:0      Dur:140  Net:90
2465   A0CD 8C          
2465   A0CE~            	SFREQ(0,140)             ;Eff Slope:0      Dur:140  Net:90
2465   A0CE~            	SFREQ(0,140)             ;Eff Slope:0      Dur:140  Net:90
2465   A0CE             
2465   A0CE~            	SFREQ(0,140)             ;Eff Slope:0      Dur:140  Net:90
2465   A0CE~            	SFREQ(0,140)             ;Eff Slope:0      Dur:140  Net:90
2465   A0CE             
2465   A0CE 00 00       
2465   A0D0             
2465   A0D0             
2466   A0D0                 
2467   A0D0                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_launch2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
2467   A0D0             
2467   9093             
2467   9093 D0          
2467   9123             
2467   9123 A0          
2467   9124             
2467   9124             
2467   A0D0             
2467   A0D0~                NEWTUNE(s_launch2)
2467   A0D0~                NEWTUNE(s_launch2)
2467   A0D0             
2468   A0D0                 \ .db isc_freq,sfreq_launch2
2468   A0D0 86 05       
2469   A0D2                 \ .db isc_ctrl,sctrl_launch2
2469   A0D2 87 0F       
2470   A0D4                 \ .db isc_sfunc10,$00
2470   A0D4 90 00       
2471   A0D6                 \ .db isc_sebvol,$00
2471   A0D6 82 00       
2472   A0D8                 \ .db isc_ctrlm,CHCTL_POLY17_5
2472   A0D8 8A 00       
2473   A0DA                 \ .db _REST,$FE
2473   A0DA 00 FE       
2474   A0DC                 \ .db isc_ctrlm,CHCTL_POLY17_5
2474   A0DC 8A 00       
2475   A0DE                 \ .db _REST,$8F
2475   A0DE 00 8F       
2476   A0E0                 \ .dw $0000
2476   A0E0 00 00       
2477   A0E2                 
2478   A0E2             ;****************************************
2479   A0E2                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_passby = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;$0a
2479   A0E2             
2479   92E0             
2479   92E0 E2          
2479   9370             
2479   9370 A0          
2479   9371             
2479   9371             
2479   A0E2             
2479   A0E2~                NEWSNDAMP(sctrl_passby)  ;$0a
2479   A0E2~                NEWSNDAMP(sctrl_passby)  ;$0a
2479   A0E2             
2480   A0E2                 \ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:4    Net:4
2480   A0E2~                SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:4
2480   A0E2~                SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:4
2480   A0E2             
2480   A0E2~                SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:4
2480   A0E2~                SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:4
2480   A0E2             
2480   A0E2~                SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:4
2480   A0E2~                SCTRL(2,4)               ;Eff Slope:1      Dur:4    Net:4
2480   A0E2             
2480   A0E2 04          
2480   A0E3 04          
2480   A0E4             
2480   A0E4             
2480   A0E4             
2481   A0E4             	\ #if (4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 4 << 1\		#endif\   #endif\ #endif               ;Eff Slope:2      Dur:2    Net:8
2481   A0E4~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2481   A0E4~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2481   A0E4             
2481   A0E4~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2481   A0E4~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2481   A0E4             
2481   A0E4~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2481   A0E4~            	SCTRL(4,2)               ;Eff Slope:2      Dur:2    Net:8
2481   A0E4             
2481   A0E4 02          
2481   A0E5 08          
2481   A0E6             
2481   A0E6             
2481   A0E6             
2482   A0E6             	\ #if (6>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (6<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 6 << 1\		#endif\   #endif\ #endif               ;Eff Slope:3      Dur:2    Net:14
2482   A0E6~            	SCTRL(6,2)               ;Eff Slope:3      Dur:2    Net:14
2482   A0E6~            	SCTRL(6,2)               ;Eff Slope:3      Dur:2    Net:14
2482   A0E6             
2482   A0E6~            	SCTRL(6,2)               ;Eff Slope:3      Dur:2    Net:14
2482   A0E6~            	SCTRL(6,2)               ;Eff Slope:3      Dur:2    Net:14
2482   A0E6             
2482   A0E6~            	SCTRL(6,2)               ;Eff Slope:3      Dur:2    Net:14
2482   A0E6~            	SCTRL(6,2)               ;Eff Slope:3      Dur:2    Net:14
2482   A0E6             
2482   A0E6 02          
2482   A0E7 0C          
2482   A0E8             
2482   A0E8             
2482   A0E8             
2483   A0E8             	\ #if (8>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (8<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 8 << 1\		#endif\   #endif\ #endif               ;Eff Slope:4      Dur:4    Net:30
2483   A0E8~            	SCTRL(8,4)               ;Eff Slope:4      Dur:4    Net:30
2483   A0E8~            	SCTRL(8,4)               ;Eff Slope:4      Dur:4    Net:30
2483   A0E8             
2483   A0E8~            	SCTRL(8,4)               ;Eff Slope:4      Dur:4    Net:30
2483   A0E8~            	SCTRL(8,4)               ;Eff Slope:4      Dur:4    Net:30
2483   A0E8             
2483   A0E8~            	SCTRL(8,4)               ;Eff Slope:4      Dur:4    Net:30
2483   A0E8~            	SCTRL(8,4)               ;Eff Slope:4      Dur:4    Net:30
2483   A0E8             
2483   A0E8 04          
2483   A0E9 10          
2483   A0EA             
2483   A0EA             
2483   A0EA             
2484   A0EA             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:30
2484   A0EA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:30
2484   A0EA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:30
2484   A0EA             
2484   A0EA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:30
2484   A0EA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:30
2484   A0EA             
2484   A0EA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:30
2484   A0EA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:30
2484   A0EA             
2484   A0EA 02          
2484   A0EB 00          
2484   A0EC             
2484   A0EC             
2484   A0EC             
2485   A0EC             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:28
2485   A0EC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2485   A0EC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2485   A0EC             
2485   A0EC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2485   A0EC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2485   A0EC             
2485   A0EC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2485   A0EC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:28
2485   A0EC             
2485   A0EC 02          
2485   A0ED FC          
2485   A0EE             
2485   A0EE             
2485   A0EE             
2486   A0EE             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:28
2486   A0EE~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:28
2486   A0EE~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:28
2486   A0EE             
2486   A0EE~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:28
2486   A0EE~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:28
2486   A0EE             
2486   A0EE~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:28
2486   A0EE~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:28
2486   A0EE             
2486   A0EE 02          
2486   A0EF 00          
2486   A0F0             
2486   A0F0             
2486   A0F0             
2487   A0F0             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:26
2487   A0F0~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2487   A0F0~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2487   A0F0             
2487   A0F0~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2487   A0F0~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2487   A0F0             
2487   A0F0~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2487   A0F0~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:26
2487   A0F0             
2487   A0F0 02          
2487   A0F1 FC          
2487   A0F2             
2487   A0F2             
2487   A0F2             
2488   A0F2             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:26
2488   A0F2~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:26
2488   A0F2~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:26
2488   A0F2             
2488   A0F2~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:26
2488   A0F2~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:26
2488   A0F2             
2488   A0F2~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:26
2488   A0F2~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:26
2488   A0F2             
2488   A0F2 04          
2488   A0F3 00          
2488   A0F4             
2488   A0F4             
2488   A0F4             
2489   A0F4             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:24
2489   A0F4~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2489   A0F4~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2489   A0F4             
2489   A0F4~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2489   A0F4~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2489   A0F4             
2489   A0F4~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2489   A0F4~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:24
2489   A0F4             
2489   A0F4 02          
2489   A0F5 FC          
2489   A0F6             
2489   A0F6             
2489   A0F6             
2490   A0F6             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:24
2490   A0F6~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:24
2490   A0F6~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:24
2490   A0F6             
2490   A0F6~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:24
2490   A0F6~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:24
2490   A0F6             
2490   A0F6~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:24
2490   A0F6~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:24
2490   A0F6             
2490   A0F6 02          
2490   A0F7 00          
2490   A0F8             
2490   A0F8             
2490   A0F8             
2491   A0F8             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:22
2491   A0F8~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2491   A0F8~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2491   A0F8             
2491   A0F8~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2491   A0F8~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2491   A0F8             
2491   A0F8~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2491   A0F8~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:22
2491   A0F8             
2491   A0F8 02          
2491   A0F9 FC          
2491   A0FA             
2491   A0FA             
2491   A0FA             
2492   A0FA             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:22
2492   A0FA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2492   A0FA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2492   A0FA             
2492   A0FA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2492   A0FA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2492   A0FA             
2492   A0FA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2492   A0FA~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:22
2492   A0FA             
2492   A0FA 02          
2492   A0FB 00          
2492   A0FC             
2492   A0FC             
2492   A0FC             
2493   A0FC             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:20
2493   A0FC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2493   A0FC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2493   A0FC             
2493   A0FC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2493   A0FC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2493   A0FC             
2493   A0FC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2493   A0FC~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:20
2493   A0FC             
2493   A0FC 02          
2493   A0FD FC          
2493   A0FE             
2493   A0FE             
2493   A0FE             
2494   A0FE             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:20
2494   A0FE~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:20
2494   A0FE~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:20
2494   A0FE             
2494   A0FE~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:20
2494   A0FE~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:20
2494   A0FE             
2494   A0FE~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:20
2494   A0FE~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:20
2494   A0FE             
2494   A0FE 04          
2494   A0FF 00          
2494   A100             
2494   A100             
2494   A100             
2495   A100             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:18
2495   A100~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2495   A100~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2495   A100             
2495   A100~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2495   A100~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2495   A100             
2495   A100~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2495   A100~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:18
2495   A100             
2495   A100 02          
2495   A101 FC          
2495   A102             
2495   A102             
2495   A102             
2496   A102             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:4    Net:18
2496   A102~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:18
2496   A102~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:18
2496   A102             
2496   A102~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:18
2496   A102~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:18
2496   A102             
2496   A102~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:18
2496   A102~            	SCTRL(0,4)               ;Eff Slope:0      Dur:4    Net:18
2496   A102             
2496   A102 04          
2496   A103 00          
2496   A104             
2496   A104             
2496   A104             
2497   A104             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:16
2497   A104~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2497   A104~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2497   A104             
2497   A104~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2497   A104~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2497   A104             
2497   A104~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2497   A104~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:16
2497   A104             
2497   A104 02          
2497   A105 FC          
2497   A106             
2497   A106             
2497   A106             
2498   A106             	\ .push *
2498   A106             
2499   A106             	 \ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (6 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 6 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:6    Net:16
2499   A106~            	 SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:16
2499   A106~            	 SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:16
2499   A106             
2499   A106~            	 SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:16
2499   A106~            	 SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:16
2499   A106             
2499   A106~            	 SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:16
2499   A106~            	 SCTRL(0,6)               ;Eff Slope:0      Dur:6    Net:16
2499   A106             
2499   A106 06          
2499   A107 00          
2499   A108             
2499   A108             
2499   A108             
2500   A108             	 \ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:14
2500   A108~            	 SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2500   A108~            	 SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2500   A108             
2500   A108~            	 SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2500   A108~            	 SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2500   A108             
2500   A108~            	 SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2500   A108~            	 SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:14
2500   A108             
2500   A108 02          
2500   A109 FC          
2500   A10A             
2500   A10A             
2500   A10A             
2501   A10A             	\ .pop __rpmsloop\ .db $FF,6,(*-__rpmsloop+3)                ;Loop Back 6 times.
2501   A10A             
2501   A10A FF 06 07    
2502   A10D             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (26 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 26 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:26   Net:14
2502   A10D~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2502   A10D~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2502   A10D             
2502   A10D~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2502   A10D~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2502   A10D             
2502   A10D~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2502   A10D~            	SCTRL(0,26)              ;Eff Slope:0      Dur:26   Net:14
2502   A10D             
2502   A10D 1A          
2502   A10E 00          
2502   A10F             
2502   A10F             
2502   A10F             
2503   A10F             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db -2 << 1\		#endif\   #endif\ #endif              ;Eff Slope:-1     Dur:2    Net:12
2503   A10F~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2503   A10F~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2503   A10F             
2503   A10F~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2503   A10F~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2503   A10F             
2503   A10F~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2503   A10F~            	SCTRL(-2,2)              ;Eff Slope:-1     Dur:2    Net:12
2503   A10F             
2503   A10F 02          
2503   A110 FC          
2503   A111             
2503   A111             
2503   A111             
2504   A111             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (152 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 152 \ 			.db 0 << 1\		#endif\   #endif\ #endif             ;Eff Slope:0      Dur:152  Net:12
2504   A111~            	SCTRL(0,152)             ;Eff Slope:0      Dur:152  Net:12
2504   A111~            	SCTRL(0,152)             ;Eff Slope:0      Dur:152  Net:12
2504   A111             
2504   A111~            	SCTRL(0,152)             ;Eff Slope:0      Dur:152  Net:12
2504   A111~            	SCTRL(0,152)             ;Eff Slope:0      Dur:152  Net:12
2504   A111             
2504   A111~            	SCTRL(0,152)             ;Eff Slope:0      Dur:152  Net:12
2504   A111~            	SCTRL(0,152)             ;Eff Slope:0      Dur:152  Net:12
2504   A111             
2504   A111 98          
2504   A112 00          
2504   A113             
2504   A113             
2504   A113             
2505   A113                 
2506   A113                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_passby = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$0a
2506   A113             
2506   91B6             
2506   91B6 13          
2506   9246             
2506   9246 A1          
2506   9247             
2506   9247             
2506   A113             
2506   A113~                NEWSNDFREQ(sfreq_passby) ;,$0a
2506   A113~                NEWSNDFREQ(sfreq_passby) ;,$0a
2506   A113             
2507   A113             	\ .db 2 \ #if (112>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 112 << 1\	#endif\ #endif             ;Eff Slope:7      Dur:2    Net:14
2507   A113 02          
2507   A114~            	SFREQ(112,2)             ;Eff Slope:7      Dur:2    Net:14
2507   A114~            	SFREQ(112,2)             ;Eff Slope:7      Dur:2    Net:14
2507   A114             
2507   A114~            	SFREQ(112,2)             ;Eff Slope:7      Dur:2    Net:14
2507   A114~            	SFREQ(112,2)             ;Eff Slope:7      Dur:2    Net:14
2507   A114             
2507   A114 E0 00       
2507   A116             
2507   A116             
2508   A116             	\ .db 10 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (10 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif             ;Eff Slope:-0.5   Dur:10   Net:9
2508   A116 0A          
2508   A117~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:9
2508   A117~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:9
2508   A117             
2508   A117~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:9
2508   A117~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:9
2508   A117             
2508   A117 F0 FF       
2508   A119             
2508   A119             
2509   A119             	\ .db 254 \ #if (8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (254 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 8 << 1\	#endif\ #endif             ;Eff Slope:0.5    Dur:254  Net:136
2509   A119 FE          
2509   A11A~            	SFREQ(8,254)             ;Eff Slope:0.5    Dur:254  Net:136
2509   A11A~            	SFREQ(8,254)             ;Eff Slope:0.5    Dur:254  Net:136
2509   A11A             
2509   A11A~            	SFREQ(8,254)             ;Eff Slope:0.5    Dur:254  Net:136
2509   A11A~            	SFREQ(8,254)             ;Eff Slope:0.5    Dur:254  Net:136
2509   A11A             
2509   A11A 10 00       
2509   A11C             
2509   A11C             
2510   A11C             	\ .db 12 \ #if (8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (12 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 8 << 1\	#endif\ #endif              ;Eff Slope:0.5    Dur:12   Net:142
2510   A11C 0C          
2510   A11D~            	SFREQ(8,12)              ;Eff Slope:0.5    Dur:12   Net:142
2510   A11D~            	SFREQ(8,12)              ;Eff Slope:0.5    Dur:12   Net:142
2510   A11D             
2510   A11D~            	SFREQ(8,12)              ;Eff Slope:0.5    Dur:12   Net:142
2510   A11D~            	SFREQ(8,12)              ;Eff Slope:0.5    Dur:12   Net:142
2510   A11D             
2510   A11D 10 00       
2510   A11F             
2510   A11F             
2511   A11F             	\ .db 2 \ #if (-1136>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -1136 << 1\	#endif\ #endif           ;Eff Slope:-71    Dur:2    Net:0
2511   A11F 02          
2511   A120~            	SFREQ(-1136,2)           ;Eff Slope:-71    Dur:2    Net:0
2511   A120~            	SFREQ(-1136,2)           ;Eff Slope:-71    Dur:2    Net:0
2511   A120             
2511   A120~            	SFREQ(-1136,2)           ;Eff Slope:-71    Dur:2    Net:0
2511   A120~            	SFREQ(-1136,2)           ;Eff Slope:-71    Dur:2    Net:0
2511   A120             
2511   A120 20 F7       
2511   A122             
2511   A122             
2512   A122             	\ .db 2 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif               ;Eff Slope:0      Dur:2    Net:0
2512   A122 02          
2512   A123~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:0
2512   A123~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:0
2512   A123             
2512   A123~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:0
2512   A123~            	SFREQ(0,2)               ;Eff Slope:0      Dur:2    Net:0
2512   A123             
2512   A123 00 00       
2512   A125             
2512   A125             
2513   A125                 
2514   A125                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_passby = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
2514   A125             
2514   9094             
2514   9094 25          
2514   9124             
2514   9124 A1          
2514   9125             
2514   9125             
2514   A125             
2514   A125~                NEWTUNE(s_passby)   
2514   A125~                NEWTUNE(s_passby)   
2514   A125             
2515   A125                 \ .db isc_freq,sfreq_passby
2515   A125 86 06       
2516   A127                 \ .db isc_ctrl,sctrl_passby
2516   A127 87 10       
2517   A129                 \ .db isc_sfunc10,$00
2517   A129 90 00       
2518   A12B                 \ .db isc_sebvol,$00
2518   A12B 82 00       
2519   A12D                 \ .db isc_ctrlm,CHCTL_POLY17
2519   A12D 8A 80       
2520   A12F                 \ .db _REST,$FE
2520   A12F 00 FE       
2521   A131                 \ .db isc_ctrlm,CHCTL_POLY17
2521   A131 8A 80       
2522   A133                 \ .db _REST,$03
2522   A133 00 03       
2523   A135                 \ .db isc_ctrlm,CHCTL_POLY17_5
2523   A135 8A 00       
2524   A137                 \ .db _REST,$1B
2524   A137 00 1B       
2525   A139                 \ .dw $0000
2525   A139 00 00       
2526   A13B                 
2527   A13B             ;****************************************
2528   A13B                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_passby2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$0b
2528   A13B             
2528   92E1             
2528   92E1 3B          
2528   9371             
2528   9371 A1          
2528   9372             
2528   9372             
2528   A13B             
2528   A13B~                NEWSNDAMP(sctrl_passby2) ;$0b
2528   A13B~                NEWSNDAMP(sctrl_passby2) ;$0b
2528   A13B             
2529   A13B 04 04           .byte $04,$04
2530   A13D 02 08       	.byte $02,$08
2531   A13F 02 0C       	.byte $02,$0C
2532   A141 04 10       	.byte $04,$10
2533   A143 02 00       	.byte $02,$00
2534   A145 02 FC       	.byte $02,$FC
2535   A147 02 00       	.byte $02,$00
2536   A149 02 FC       	.byte $02,$FC
2537   A14B 02 00       	.byte $02,$00
2538   A14D 04 FC       	.byte $04,$FC
2539   A14F FF 02       	.byte $FF,$02
2540   A151 07 02       	.byte $07,$02
2541   A153 00 0A       	.byte $00,$0A
2542   A155 FC 02       	.byte $FC,$02
2543   A157 00 02       	.byte $00,$02
2544   A159 FC 02       	.byte $FC,$02
2545   A15B 00 02       	.byte $00,$02
2546   A15D FC F8       	.byte $FC,$F8
2547   A15F 00          	.byte $00
2548   A160                 
2549   A160                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_passby2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$0b
2549   A160             
2549   91B7             
2549   91B7 60          
2549   9247             
2549   9247 A1          
2549   9248             
2549   9248             
2549   A160             
2549   A160~                NEWSNDFREQ(sfreq_passby2)    ;,$0b
2549   A160~                NEWSNDFREQ(sfreq_passby2)    ;,$0b
2549   A160             
2550   A160             	\ .db 2 \ #if (208>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 208 << 1\	#endif\ #endif             ;Eff Slope:13     Dur:2    Net:26
2550   A160 02          
2550   A161~            	SFREQ(208,2)             ;Eff Slope:13     Dur:2    Net:26
2550   A161~            	SFREQ(208,2)             ;Eff Slope:13     Dur:2    Net:26
2550   A161             
2550   A161~            	SFREQ(208,2)             ;Eff Slope:13     Dur:2    Net:26
2550   A161~            	SFREQ(208,2)             ;Eff Slope:13     Dur:2    Net:26
2550   A161             
2550   A161 A0 01       
2550   A163             
2550   A163             
2551   A163             	\ .db 10 \ #if (-8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (10 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -8 << 1\	#endif\ #endif             ;Eff Slope:-0.5   Dur:10   Net:21
2551   A163 0A          
2551   A164~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:21
2551   A164~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:21
2551   A164             
2551   A164~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:21
2551   A164~            	SFREQ(-8,10)             ;Eff Slope:-0.5   Dur:10   Net:21
2551   A164             
2551   A164 F0 FF       
2551   A166             
2551   A166             
2552   A166             	\ .db 254 \ #if (8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (254 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 8 << 1\	#endif\ #endif             ;Eff Slope:0.5    Dur:254  Net:148
2552   A166 FE          
2552   A167~            	SFREQ(8,254)             ;Eff Slope:0.5    Dur:254  Net:148
2552   A167~            	SFREQ(8,254)             ;Eff Slope:0.5    Dur:254  Net:148
2552   A167             
2552   A167~            	SFREQ(8,254)             ;Eff Slope:0.5    Dur:254  Net:148
2552   A167~            	SFREQ(8,254)             ;Eff Slope:0.5    Dur:254  Net:148
2552   A167             
2552   A167 10 00       
2552   A169             
2552   A169             
2553   A169             	\ .db 2 \ #if (8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 8 << 1\	#endif\ #endif               ;Eff Slope:0.5    Dur:2    Net:149
2553   A169 02          
2553   A16A~            	SFREQ(8,2)               ;Eff Slope:0.5    Dur:2    Net:149
2553   A16A~            	SFREQ(8,2)               ;Eff Slope:0.5    Dur:2    Net:149
2553   A16A             
2553   A16A~            	SFREQ(8,2)               ;Eff Slope:0.5    Dur:2    Net:149
2553   A16A~            	SFREQ(8,2)               ;Eff Slope:0.5    Dur:2    Net:149
2553   A16A             
2553   A16A 10 00       
2553   A16C             
2553   A16C             
2554   A16C             	\ .db 2 \ #if (-24>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -24 << 1\	#endif\ #endif             ;Eff Slope:-1.5   Dur:2    Net:146
2554   A16C 02          
2554   A16D~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:146
2554   A16D~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:146
2554   A16D             
2554   A16D~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:146
2554   A16D~            	SFREQ(-24,2)             ;Eff Slope:-1.5   Dur:2    Net:146
2554   A16D             
2554   A16D D0 FF       
2554   A16F             
2554   A16F             
2555   A16F             	\ .db 10 \ #if (8>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (10 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 8 << 1\	#endif\ #endif              ;Eff Slope:0.5    Dur:10   Net:151
2555   A16F 0A          
2555   A170~            	SFREQ(8,10)              ;Eff Slope:0.5    Dur:10   Net:151
2555   A170~            	SFREQ(8,10)              ;Eff Slope:0.5    Dur:10   Net:151
2555   A170             
2555   A170~            	SFREQ(8,10)              ;Eff Slope:0.5    Dur:10   Net:151
2555   A170~            	SFREQ(8,10)              ;Eff Slope:0.5    Dur:10   Net:151
2555   A170             
2555   A170 10 00       
2555   A172             
2555   A172             
2556   A172             	\ .db 2 \ #if (16>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 16 << 1\	#endif\ #endif              ;Eff Slope:1      Dur:2    Net:153
2556   A172 02          
2556   A173~            	SFREQ(16,2)              ;Eff Slope:1      Dur:2    Net:153
2556   A173~            	SFREQ(16,2)              ;Eff Slope:1      Dur:2    Net:153
2556   A173             
2556   A173~            	SFREQ(16,2)              ;Eff Slope:1      Dur:2    Net:153
2556   A173~            	SFREQ(16,2)              ;Eff Slope:1      Dur:2    Net:153
2556   A173             
2556   A173 20 00       
2556   A175             
2556   A175             
2557   A175             	\ .db 2 \ #if (-1224>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw -1224 << 1\	#endif\ #endif           ;Eff Slope:-76.5  Dur:2    Net:0
2557   A175 02          
2557   A176~            	SFREQ(-1224,2)           ;Eff Slope:-76.5  Dur:2    Net:0
2557   A176~            	SFREQ(-1224,2)           ;Eff Slope:-76.5  Dur:2    Net:0
2557   A176             
2557   A176~            	SFREQ(-1224,2)           ;Eff Slope:-76.5  Dur:2    Net:0
2557   A176~            	SFREQ(-1224,2)           ;Eff Slope:-76.5  Dur:2    Net:0
2557   A176             
2557   A176 70 F6       
2557   A178             
2557   A178             
2558   A178             	\ .db 22 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (22 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif              ;Eff Slope:0      Dur:22   Net:0
2558   A178 16          
2558   A179~            	SFREQ(0,22)              ;Eff Slope:0      Dur:22   Net:0
2558   A179~            	SFREQ(0,22)              ;Eff Slope:0      Dur:22   Net:0
2558   A179             
2558   A179~            	SFREQ(0,22)              ;Eff Slope:0      Dur:22   Net:0
2558   A179~            	SFREQ(0,22)              ;Eff Slope:0      Dur:22   Net:0
2558   A179             
2558   A179 00 00       
2558   A17B             
2558   A17B             
2559   A17B             	
2560   A17B                 ; .byte $02,$A0,$01
2561   A17B             	; .byte $0A,$F0,$FF
2562   A17B             	; .byte $FE,$10,$00
2563   A17B             	; .byte $02,$10,$00
2564   A17B             	; .byte $02,$D0,$FF
2565   A17B             	; .byte $0A,$10,$00
2566   A17B             	; .byte $02,$20,$00
2567   A17B             	; .byte $02,$70,$F6
2568   A17B             	; .byte $16,$00,$00
2569   A17B                 
2570   A17B                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_passby2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
2570   A17B             
2570   9095             
2570   9095 7B          
2570   9125             
2570   9125 A1          
2570   9126             
2570   9126             
2570   A17B             
2570   A17B~                NEWTUNE(s_passby2)
2570   A17B~                NEWTUNE(s_passby2)
2570   A17B             
2571   A17B                 \ .db isc_freq,sfreq_passby2
2571   A17B 86 07       
2572   A17D                 \ .db isc_ctrl,sctrl_passby2
2572   A17D 87 11       
2573   A17F                 \ .db isc_sfunc10,$00
2573   A17F 90 00       
2574   A181                 \ .db isc_sebvol,$00
2574   A181 82 00       
2575   A183                 \ .db isc_ctrlm,CHCTL_POLY4
2575   A183 8A C0       
2576   A185                 \ .db _REST,$FE
2576   A185 00 FE       
2577   A187                 \ .db isc_ctrlm,CHCTL_POLY4
2577   A187 8A C0       
2578   A189                 \ .db _REST,$1F
2578   A189 00 1F       
2579   A18B                 \ .db isc_ctrlm,CHCTL_POLY17_5
2579   A18B 8A 00       
2580   A18D                 \ .db _REST,$03
2580   A18D 00 03       
2581   A18F                 \ .db isc_ctrlm,CHCTL_POLY17
2581   A18F 8A 80       
2582   A191                 \ .db _REST,$13
2582   A191 00 13       
2583   A193                 \ .dw $0000
2583   A193 00 00       
2584   A195                 
2585   A195             ;***************************************
2586   A195                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_galert = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;$0c
2586   A195             
2586   92E2             
2586   92E2 95          
2586   9372             
2586   9372 A1          
2586   9373             
2586   9373             
2586   A195             
2586   A195~                NEWSNDAMP(sctrl_galert)  ;$0c
2586   A195~                NEWSNDAMP(sctrl_galert)  ;$0c
2586   A195             
2587   A195 02 0C           .byte $02,$0C
2588   A197 FE 00       	.byte $FE,$00
2589   A199                 
2590   A199                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_galert = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$0c
2590   A199             
2590   91B8             
2590   91B8 99          
2590   9248             
2590   9248 A1          
2590   9249             
2590   9249             
2590   A199             
2590   A199~                NEWSNDFREQ(sfreq_galert) ;,$0c
2590   A199~                NEWSNDFREQ(sfreq_galert) ;,$0c
2590   A199             
2591   A199 023007021000    .byte $02,$30,$07,$02,$10,$00,$02,$00,$00,$02,$00,$FE,$04,$00,$00,$02,$20
2591   A19F 0200000200FE0400000220
2592   A1AA 010400000260    .byte $01,$04,$00,$00,$02,$60,$FE,$04,$00,$00,$02,$60,$02,$04,$00,$00
2592   A1B0 FE040000026002040000
2593   A1BA 0220FE040000    .byte $02,$20,$FE,$04,$00,$00,$02,$C0,$02,$04,$00,$00,$02,$00,$FE,$04
2593   A1C0 02C0020400000200FE04
2594   A1CA 000002000104    .byte $00,$00,$02,$00,$01,$04,$00,$00,$02,$30,$FE,$04,$00,$00,$02,$20
2594   A1D0 00000230FE0400000220
2595   A1DA 0004000002B0    .byte $00,$04,$00,$00,$02,$B0,$FE,$04,$00,$00,$02,$00,$05,$04,$00,$00
2595   A1E0 FE040000020005040000
2596   A1EA 02C0FD040000    .byte $02,$C0,$FD,$04,$00,$00,$02,$E0,$FF,$04,$00,$00,$02,$50,$FE,$04
2596   A1F0 02E0FF0400000250FE04
2597   A1FA 000002A00204    .byte $00,$00,$02,$A0,$02,$04,$00,$00,$02,$20,$FE,$04,$00,$00,$02,$50
2597   A200 00000220FE0400000250
2598   A20A 0304000002C0    .byte $03,$04,$00,$00,$02,$C0,$FD,$04,$00,$00,$02,$10,$04,$04,$00,$00
2598   A210 FD040000021004040000
2599   A21A 0230FD040000    .byte $02,$30,$FD,$04,$00,$00,$02,$90,$01,$04,$00,$00,$02,$90,$FD,$04
2599   A220 0290010400000290FD04
2600   A22A 000002E0FE04    .byte $00,$00,$02,$E0,$FE,$04,$00,$00,$02,$80,$FE,$04,$00,$00,$02,$C0
2600   A230 00000280FE04000002C0
2601   A23A 010400000270    .byte $01,$04,$00,$00,$02,$70,$FE,$04,$00,$00,$02,$D0,$01,$04,$00,$00
2601   A240 FE04000002D001040000
2602   A24A 0260FE040000    .byte $02,$60,$FE,$04,$00,$00,$02,$E0,$01,$04,$00,$00,$02,$50,$FE,$04
2602   A250 02E0010400000250FE04
2603   A25A 000002100204    .byte $00,$00,$02,$10,$02,$04,$00,$00,$02,$30,$FE,$04,$00,$00,$02,$40
2603   A260 00000230FE0400000240
2604   A26A 020400000220    .byte $02,$04,$00,$00,$02,$20,$FE,$04,$00,$00,$02,$50,$02,$04,$00,$00
2604   A270 FE040000025002040000
2605   A27A 0200FE040000    .byte $02,$00,$FE,$04,$00,$00,$02,$80,$02,$04,$00,$00,$02,$E0,$FD,$04
2605   A280 02800204000002E0FD04
2606   A28A 000002A00204    .byte $00,$00,$02,$A0,$02,$04,$00,$00,$02,$C0,$FD,$04,$00,$00,$02,$D0
2606   A290 000002C0FD04000002D0
2607   A29A 02 04 00 00     .byte $02,$04,$00,$00
2608   A29E                 
2609   A29E                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_galert = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
2609   A29E             
2609   9096             
2609   9096 9E          
2609   9126             
2609   9126 A2          
2609   9127             
2609   9127             
2609   A29E             
2609   A29E~                NEWTUNE(s_galert)
2609   A29E~                NEWTUNE(s_galert)
2609   A29E             
2610   A29E                 \ .db isc_freq,sfreq_galert
2610   A29E 86 08       
2611   A2A0                 \ .db isc_ctrl,sctrl_galert
2611   A2A0 87 12       
2612   A2A2                 \ .db isc_sfunc10,$00
2612   A2A2 90 00       
2613   A2A4                 \ .db isc_sebvol,$00
2613   A2A4 82 00       
2614   A2A6                 \ .db isc_ctrlm,CHCTL_NOPOLY
2614   A2A6 8A A0       
2615   A2A8                 \ .db _REST,$FE
2615   A2A8 00 FE       
2616   A2AA                 \ .dw $0000
2616   A2AA 00 00       
2617   A2AC                 
2618   A2AC             ;*************************************  
2619   A2AC                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_blaunch = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;$0e
2619   A2AC             
2619   92E3             
2619   92E3 AC          
2619   9373             
2619   9373 A2          
2619   9374             
2619   9374             
2619   A2AC             
2619   A2AC~                NEWSNDAMP(sctrl_blaunch) ;$0e
2619   A2AC~                NEWSNDAMP(sctrl_blaunch) ;$0e
2619   A2AC             
2620   A2AC 02 3C           .byte $02,$3C
2621   A2AE 04 00       	.byte $04,$00
2622   A2B0                 
2623   A2B0                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_blaunch = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$0e
2623   A2B0             
2623   91B9             
2623   91B9 B0          
2623   9249             
2623   9249 A2          
2623   924A             
2623   924A             
2623   A2B0             
2623   A2B0~                NEWSNDFREQ(sfreq_blaunch)    ;,$0e
2623   A2B0~                NEWSNDFREQ(sfreq_blaunch)    ;,$0e
2623   A2B0             
2624   A2B0 02 10 05        .byte $02,$10,$05
2625   A2B3 04 00 00    	.byte $04,$00,$00
2626   A2B6             
2627   A2B6                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_blaunch = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
2627   A2B6             
2627   9097             
2627   9097 B6          
2627   9127             
2627   9127 A2          
2627   9128             
2627   9128             
2627   A2B6             
2627   A2B6~                NEWTUNE(s_blaunch)  
2627   A2B6~                NEWTUNE(s_blaunch)  
2627   A2B6             
2628   A2B6                 \ .db isc_freq,sfreq_blaunch
2628   A2B6 86 09       
2629   A2B8                 \ .db isc_ctrl,sctrl_blaunch
2629   A2B8 87 13       
2630   A2BA                 \ .db isc_sfunc10,$00
2630   A2BA 90 00       
2631   A2BC                 \ .db isc_sebvol,$00
2631   A2BC 82 00       
2632   A2BE                 \ .db isc_ctrlm,CHCTL_NOPOLY
2632   A2BE 8A A0       
2633   A2C0                 \ .db _REST,$06
2633   A2C0 00 06       
2634   A2C2                 \ .dw $0000
2634   A2C2 00 00       
2635   A2C4                 
2636   A2C4             ;*************************************
2637   A2C4                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bbrick = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;$0f
2637   A2C4             
2637   92E4             
2637   92E4 C4          
2637   9374             
2637   9374 A2          
2637   9375             
2637   9375             
2637   A2C4             
2637   A2C4~                NEWSNDAMP(sctrl_bbrick)  ;$0f
2637   A2C4~                NEWSNDAMP(sctrl_bbrick)  ;$0f
2637   A2C4             
2638   A2C4 02 3C           .byte $02,$3C	
2639   A2C6 04 00       	.byte $04,$00
2640   A2C8                 
2641   A2C8                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bbrick = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$0f
2641   A2C8             
2641   91BA             
2641   91BA C8          
2641   924A             
2641   924A A2          
2641   924B             
2641   924B             
2641   A2C8             
2641   A2C8~                NEWSNDFREQ(sfreq_bbrick) ;,$0f
2641   A2C8~                NEWSNDFREQ(sfreq_bbrick) ;,$0f
2641   A2C8             
2642   A2C8 02 80 03    	.byte $02,$80,$03
2643   A2CB 02 10 00    	.byte $02,$10,$00
2644   A2CE 02 00 00    	.byte $02,$00,$00
2645   A2D1             	    
2646   A2D1                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bbrick = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
2646   A2D1             
2646   9098             
2646   9098 D1          
2646   9128             
2646   9128 A2          
2646   9129             
2646   9129             
2646   A2D1             
2646   A2D1~                NEWTUNE(s_bbrick)   
2646   A2D1~                NEWTUNE(s_bbrick)   
2646   A2D1             
2647   A2D1                 \ .db isc_freq,sfreq_bbrick
2647   A2D1 86 0A       
2648   A2D3                 \ .db isc_ctrl,sctrl_bbrick
2648   A2D3 87 14       
2649   A2D5                 \ .db isc_sfunc10,$00
2649   A2D5 90 00       
2650   A2D7                 \ .db isc_sebvol,$00				;Starting Volume level
2650   A2D7 82 00       
2651   A2D9                 \ .db isc_ctrlm,CHCTL_NOPOLY		;Upper CTRL bits (
2651   A2D9 8A A0       
2652   A2DB                 \ .db _REST,$06
2652   A2DB 00 06       
2653   A2DD                 \ .dw $0000
2653   A2DD 00 00       
2654   A2DF                 
2655   A2DF             ;**************************************
2656   A2DF                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bpaddle = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$10
2656   A2DF             
2656   92E5             
2656   92E5 DF          
2656   9375             
2656   9375 A2          
2656   9376             
2656   9376             
2656   A2DF             
2656   A2DF~                NEWSNDAMP(sctrl_bpaddle) ;,$10
2656   A2DF~                NEWSNDAMP(sctrl_bpaddle) ;,$10
2656   A2DF             
2657   A2DF 02 3C 04        .byte $02,$3C,$04
2658   A2E2 00          	.byte $00
2659   A2E3                 
2660   A2E3                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bpaddle = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$10
2660   A2E3             
2660   91BB             
2660   91BB E3          
2660   924B             
2660   924B A2          
2660   924C             
2660   924C             
2660   A2E3             
2660   A2E3~                NEWSNDFREQ(sfreq_bpaddle)    ;,$10
2660   A2E3~                NEWSNDFREQ(sfreq_bpaddle)    ;,$10
2660   A2E3             
2661   A2E3 02 90 07        .byte $02,$90,$07
2662   A2E6 04 00 00    	.byte $04,$00,$00
2663   A2E9             	
2664   A2E9                 ;79
2665   A2E9                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bpaddle = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
2665   A2E9             
2665   9099             
2665   9099 E9          
2665   9129             
2665   9129 A2          
2665   912A             
2665   912A             
2665   A2E9             
2665   A2E9~                NEWTUNE(s_bpaddle)  
2665   A2E9~                NEWTUNE(s_bpaddle)  
2665   A2E9             
2666   A2E9                 \ .db isc_freq,sfreq_bpaddle
2666   A2E9 86 0B       
2667   A2EB                 \ .db isc_ctrl,sctrl_bpaddle
2667   A2EB 87 15       
2668   A2ED                 \ .db isc_sfunc10,$00
2668   A2ED 90 00       
2669   A2EF                 \ .db isc_sebvol,$00
2669   A2EF 82 00       
2670   A2F1                 \ .db isc_ctrlm,CHCTL_NOPOLY
2670   A2F1 8A A0       
2671   A2F3                 \ .db _REST,$06
2671   A2F3 00 06       
2672   A2F5                 \ .dw $0000
2672   A2F5 00 00       
2673   A2F7                 
2674   A2F7             ;**************************************
2675   A2F7                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bmissp = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$11
2675   A2F7             
2675   92E6             
2675   92E6 F7          
2675   9376             
2675   9376 A2          
2675   9377             
2675   9377             
2675   A2F7             
2675   A2F7~                NEWSNDAMP(sctrl_bmissp)  ;,$11
2675   A2F7~                NEWSNDAMP(sctrl_bmissp)  ;,$11
2675   A2F7             
2676   A2F7 02 3C           .byte $02,$3C
2677   A2F9 22 00       	.byte $22,$00
2678   A2FB                 
2679   A2FB                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bmissp = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$11
2679   A2FB             
2679   91BC             
2679   91BC FB          
2679   924C             
2679   924C A2          
2679   924D             
2679   924D             
2679   A2FB             
2679   A2FB~                NEWSNDFREQ(sfreq_bmissp) ;,$11
2679   A2FB~                NEWSNDFREQ(sfreq_bmissp) ;,$11
2679   A2FB             
2680   A2FB 02 40 0E        .byte $02,$40,$0E
2681   A2FE 02 30 00    	.byte $02,$30,$00
2682   A301 02 D0 FF    	.byte $02,$D0,$FF
2683   A304 FF 04 09    	.byte $FF,$04,$09
2684   A307 02 30 00    	.byte $02,$30,$00
2685   A30A 02 F0 FF    	.byte $02,$F0,$FF
2686   A30D 02 40 00    	.byte $02,$40,$00
2687   A310 02 E0 FF    	.byte $02,$E0,$FF
2688   A313 02 50 00    	.byte $02,$50,$00
2689   A316 02 D0 FF    	.byte $02,$D0,$FF
2690   A319 02 60 00    	.byte $02,$60,$00
2691   A31C                 
2692   A31C                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bmissp = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
2692   A31C             
2692   909A             
2692   909A 1C          
2692   912A             
2692   912A A3          
2692   912B             
2692   912B             
2692   A31C             
2692   A31C~                NEWTUNE(s_bmissp)   
2692   A31C~                NEWTUNE(s_bmissp)   
2692   A31C             
2693   A31C                 \ .db isc_freq,sfreq_bmissp
2693   A31C 86 0C       
2694   A31E                 \ .db isc_ctrl,sctrl_bmissp
2694   A31E 87 16       
2695   A320                 \ .db isc_sfunc10,$00
2695   A320 90 00       
2696   A322                 \ .db isc_sebvol,$00
2696   A322 82 00       
2697   A324                 \ .db isc_ctrlm,CHCTL_NOPOLY
2697   A324 8A A0       
2698   A326                 \ .db _REST,$24
2698   A326 00 24       
2699   A328                 \ .dw $0000
2699   A328 00 00       
2700   A32A                 
2701   A32A             ;**************************************
2702   A32A                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_digit = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$12
2702   A32A             
2702   92E7             
2702   92E7 2A          
2702   9377             
2702   9377 A3          
2702   9378             
2702   9378             
2702   A32A             
2702   A32A~                NEWSNDAMP(sctrl_digit)   ;,$12
2702   A32A~                NEWSNDAMP(sctrl_digit)   ;,$12
2702   A32A             
2703   A32A 02 10       	.byte $02,$10 ;02		$C2,$C4,$C7,$CA,$CC,$CF,$CF,$CF,... $CD,$CB,$C9,$C7
2704   A32C 02 18       	.byte $02,$18 ;03		$02,$02,$03,$03,$02,$03
2705   A32E 02 14       	.byte $02,$14 ;02
2706   A330 0E 00       	.byte $0E,$00 ;00
2707   A332 06 F0       	.byte $06,$F0 ;FE
2708   A334 02 F4       	.byte $02,$F4 ;FE
2709   A336             	
2710   A336                 
2711   A336                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_digit = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$12		;;$26,$4C,$4A,$48,
2711   A336             
2711   91BD             
2711   91BD 36          
2711   924D             
2711   924D A3          
2711   924E             
2711   924E             
2711   A336             
2711   A336~                NEWSNDFREQ(sfreq_digit)  ;,$12		;;$26,$4C,$4A,$48,
2711   A336~                NEWSNDFREQ(sfreq_digit)  ;,$12		;;$26,$4C,$4A,$48,
2711   A336             
2712   A336 02 C0 04    	.byte $02,$C0,$04		
2713   A339 02 C0 FF    	.byte $02,$C0,$FF
2714   A33C 02 50 FF    	.byte $02,$50,$FF
2715   A33F 02 C0 FF    	.byte $02,$C0,$FF
2716   A342 02 A0 FF    	.byte $02,$A0,$FF
2717   A345 04 D0 FF    	.byte $04,$D0,$FF
2718   A348 02 E0 FF        .byte $02,$E0,$FF
2719   A34B 02 D0 FF    	.byte $02,$D0,$FF
2720   A34E 02 C0 FF    	.byte $02,$C0,$FF
2721   A351 08 00 00    	.byte $08,$00,$00
2722   A354             
2723   A354             
2724   A354                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_digit = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
2724   A354             
2724   909B             
2724   909B 54          
2724   912B             
2724   912B A3          
2724   912C             
2724   912C             
2724   A354             
2724   A354~                NEWTUNE(s_digit)    
2724   A354~                NEWTUNE(s_digit)    
2724   A354             
2725   A354                 \ .db isc_freq,sfreq_digit
2725   A354 86 0D       
2726   A356                 \ .db isc_ctrl,sctrl_digit
2726   A356 87 17       
2727   A358                 \ .db isc_sfunc10,$00
2727   A358 90 00       
2728   A35A                 \ .db isc_sebvol,$00
2728   A35A 82 00       
2729   A35C                 \ .db isc_ctrlm,CHCTL_POLY4
2729   A35C 8A C0       
2730   A35E                 \ .db _REST,$1C
2730   A35E 00 1C       
2731   A360                 \ .dw $0000
2731   A360 00 00       
2732   A362                 
2733   A362             ;**************************************
2734   A362                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_notused1 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$13
2734   A362             
2734   92E8             
2734   92E8 62          
2734   9378             
2734   9378 A3          
2734   9379             
2734   9379             
2734   A362             
2734   A362~                NEWSNDAMP(sctrl_notused1)    ;,$13
2734   A362~                NEWSNDAMP(sctrl_notused1)    ;,$13
2734   A362             
2735   A362                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_notused1 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$13
2735   A362             
2735   91BE             
2735   91BE 62          
2735   924E             
2735   924E A3          
2735   924F             
2735   924F             
2735   A362             
2735   A362~                NEWSNDFREQ(sfreq_notused1)   ;,$13
2735   A362~                NEWSNDFREQ(sfreq_notused1)   ;,$13
2735   A362             
2736   A362                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_notused1 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2736   A362             
2736   909C             
2736   909C 62          
2736   912C             
2736   912C A3          
2736   912D             
2736   912D             
2736   A362             
2736   A362~                NEWTUNE(s_notused1) 
2736   A362~                NEWTUNE(s_notused1) 
2736   A362             
2737   A362                 \ .dw $0000
2737   A362 00 00       
2738   A364             
2739   A364             ;**************************************
2740   A364                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_notused2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$14
2740   A364             
2740   92E9             
2740   92E9 64          
2740   9379             
2740   9379 A3          
2740   937A             
2740   937A             
2740   A364             
2740   A364~                NEWSNDAMP(sctrl_notused2)    ;,$14
2740   A364~                NEWSNDAMP(sctrl_notused2)    ;,$14
2740   A364             
2741   A364                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_notused2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$14
2741   A364             
2741   91BF             
2741   91BF 64          
2741   924F             
2741   924F A3          
2741   9250             
2741   9250             
2741   A364             
2741   A364~                NEWSNDFREQ(sfreq_notused2)   ;,$14
2741   A364~                NEWSNDFREQ(sfreq_notused2)   ;,$14
2741   A364             
2742   A364                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_notused2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2742   A364             
2742   909D             
2742   909D 64          
2742   912D             
2742   912D A3          
2742   912E             
2742   912E             
2742   A364             
2742   A364~                NEWTUNE(s_notused2) 
2742   A364~                NEWTUNE(s_notused2) 
2742   A364             
2743   A364                 \ .dw $0000
2743   A364 00 00       
2744   A366                 
2745   A366             ;**************************************
2746   A366                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_notused3 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$15
2746   A366             
2746   92EA             
2746   92EA 66          
2746   937A             
2746   937A A3          
2746   937B             
2746   937B             
2746   A366             
2746   A366~                NEWSNDAMP(sctrl_notused3)    ;,$15
2746   A366~                NEWSNDAMP(sctrl_notused3)    ;,$15
2746   A366             
2747   A366                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_notused3 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$15
2747   A366             
2747   91C0             
2747   91C0 66          
2747   9250             
2747   9250 A3          
2747   9251             
2747   9251             
2747   A366             
2747   A366~                NEWSNDFREQ(sfreq_notused3)   ;,$15
2747   A366~                NEWSNDFREQ(sfreq_notused3)   ;,$15
2747   A366             
2748   A366                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_notused3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2748   A366             
2748   909E             
2748   909E 66          
2748   912E             
2748   912E A3          
2748   912F             
2748   912F             
2748   A366             
2748   A366~                NEWTUNE(s_notused3) 
2748   A366~                NEWTUNE(s_notused3) 
2748   A366             
2749   A366                 \ .dw $0000
2749   A366 00 00       
2750   A368                 
2751   A368             ;**************************************
2752   A368                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_ccorrect = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$16
2752   A368             
2752   92EB             
2752   92EB 68          
2752   937B             
2752   937B A3          
2752   937C             
2752   937C             
2752   A368             
2752   A368~                NEWSNDAMP(sctrl_ccorrect)    ;,$16
2752   A368~                NEWSNDAMP(sctrl_ccorrect)    ;,$16
2752   A368             
2753   A368 02 20           .byte $02,$20
2754   A36A 12 00       	.byte $12,$00
2755   A36C 02 F8       	.byte $02,$F8
2756   A36E 06 00       	.byte $06,$00
2757   A370 02 FC       	.byte $02,$FC
2758   A372 02 00       	.byte $02,$00
2759   A374 FF 02       	.byte $FF,$02
2760   A376 07 04       	.byte $07,$04
2761   A378 FC 3C           .byte $FC,$3C
2762   A37A 00          	.byte $00
2763   A37B                 
2764   A37B                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_ccorrect = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$16
2764   A37B             
2764   91C1             
2764   91C1 7B          
2764   9251             
2764   9251 A3          
2764   9252             
2764   9252             
2764   A37B             
2764   A37B~                NEWSNDFREQ(sfreq_ccorrect)  ;,$16
2764   A37B~                NEWSNDFREQ(sfreq_ccorrect)  ;,$16
2764   A37B             
2765   A37B 02200302F000    .byte $02,$20,$03,$02,$F0,$00,$02,$70,$FE,$02,$00,$01,$02
2765   A381 0270FE02000102
2766   A388 90FE02F00002    .byte $90,$FE,$02,$F0,$00,$02,$A0,$FE,$02,$F0,$00,$02,$C0,$FE,$02,$E0
2766   A38E A0FE02F00002C0FE02E0
2767   A398 0002F0FE02D0    .byte $00,$02,$F0,$FE,$02,$D0,$00,$02,$10,$FF,$02,$C0,$00,$02,$20,$FF
2767   A39E 000210FF02C0000220FF
2768   A3A8 02B000FF0209    .byte $02,$B0,$00,$FF,$02,$09,$02,$40,$FF,$02,$B0,$00,$FF,$04,$09,$02
2768   A3AE 0240FF02B000FF040902
2769   A3B8 50FF02A00002    .byte $50,$FF,$02,$A0,$00,$02,$50,$FF,$02,$A0,$00,$02,$60,$FF,$02,$90
2769   A3BE 50FF02A0000260FF0290
2770   A3C8 000260FF0290    .byte $00,$02,$60,$FF,$02,$90,$00,$02,$70,$FF,$02,$80,$00,$02,$70,$FF
2770   A3CE 000270FF0280000270FF
2771   A3D8 0280000280FF    .byte $02,$80,$00,$02,$80,$FF,$02,$70,$00,$02,$80,$FF,$02,$70,$00,$02
2771   A3DE 0270000280FF02700002
2772   A3E8 90FF02600002    .byte $90,$FF,$02,$60,$00,$02,$90,$FF,$02,$60,$00,$02,$A0,$FF,$02,$60
2772   A3EE 90FF02600002A0FF0260
2773   A3F8 00              .byte $00,
2774   A3F9                 
2775   A3F9                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_ccorrect = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2775   A3F9             
2775   909F             
2775   909F F9          
2775   912F             
2775   912F A3          
2775   9130             
2775   9130             
2775   A3F9             
2775   A3F9~                NEWTUNE(s_ccorrect) 
2775   A3F9~                NEWTUNE(s_ccorrect) 
2775   A3F9             
2776   A3F9                 \ .db isc_freq,sfreq_ccorrect
2776   A3F9 86 11       
2777   A3FB                 \ .db isc_ctrl,sctrl_ccorrect
2777   A3FB 87 1B       
2778   A3FD                 \ .db isc_sfunc10,$00
2778   A3FD 90 00       
2779   A3FF                 \ .db isc_sebvol,$00
2779   A3FF 82 00       
2780   A401                 \ .db isc_ctrlm,CHCTL_NOPOLY
2780   A401 8A A0       
2781   A403                 \ .db _REST,$68
2781   A403 00 68       
2782   A405                 \ .dw $0000
2782   A405 00 00       
2783   A407             
2784   A407             ;**************************************
2785   A407                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_exp = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$17
2785   A407             
2785   92EC             
2785   92EC 07          
2785   937C             
2785   937C A4          
2785   937D             
2785   937D             
2785   A407             
2785   A407~                NEWSNDAMP(sctrl_exp) ;,$17
2785   A407~                NEWSNDAMP(sctrl_exp) ;,$17
2785   A407             
2786   A407 02 3C           .byte $02,$3C
2787   A409 FE 00       	.byte $FE,$00
2788   A40B FE 00       	.byte $FE,$00
2789   A40D                 
2790   A40D                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_exp = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$17
2790   A40D             
2790   91C2             
2790   91C2 0D          
2790   9252             
2790   9252 A4          
2790   9253             
2790   9253             
2790   A40D             
2790   A40D~                NEWSNDFREQ(sfreq_exp)    ;,$17
2790   A40D~                NEWSNDFREQ(sfreq_exp)    ;,$17
2790   A40D             
2791   A40D 04 00 00        .byte $04,$00,$00
2792   A410 FE 10 00    	.byte $FE,$10,$00
2793   A413 FE 10 00    	.byte $FE,$10,$00
2794   A416                 
2795   A416                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_exp = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
2795   A416             
2795   90A0             
2795   90A0 16          
2795   9130             
2795   9130 A4          
2795   9131             
2795   9131             
2795   A416             
2795   A416~                NEWTUNE(s_exp)  
2795   A416~                NEWTUNE(s_exp)  
2795   A416             
2796   A416                 \ .db isc_freq,sfreq_exp
2796   A416 86 12       
2797   A418                 \ .db isc_ctrl,sctrl_exp
2797   A418 87 1C       
2798   A41A                 \ .db isc_sfunc10,$00
2798   A41A 90 00       
2799   A41C                 \ .db isc_sebvol,$00
2799   A41C 82 00       
2800   A41E                 \ .db isc_ctrlm,CHCTL_POLY4_5
2800   A41E 8A 40       
2801   A420                 \ .db _REST,$FE
2801   A420 00 FE       
2802   A422                 \ .db isc_ctrlm,CHCTL_POLY4_5
2802   A422 8A 40       
2803   A424                 \ .db _REST,$FF
2803   A424 00 FF       
2804   A426                 \ .db isc_ctrlm,CHCTL_POLY4_5
2804   A426 8A 40       
2805   A428                 \ .db _REST,$03
2805   A428 00 03       
2806   A42A                 \ .dw $0000
2806   A42A 00 00       
2807   A42C                 
2808   A42C             ;**************************************
2809   A42C                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_exp2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$18
2809   A42C             
2809   92ED             
2809   92ED 2C          
2809   937D             
2809   937D A4          
2809   937E             
2809   937E             
2809   A42C             
2809   A42C~                NEWSNDAMP(sctrl_exp2)    ;,$18
2809   A42C~                NEWSNDAMP(sctrl_exp2)    ;,$18
2809   A42C             
2810   A42C 02 1C 10 04     .byte $02,$1C,$10,$04
2811   A430 28 00 02 FC 	.byte $28,$00,$02,$FC
2812   A434 0A 00 02 F8 	.byte $0A,$00,$02,$F8
2813   A438 08 00 02 FC     .byte $08,$00,$02,$FC
2814   A43C FF 08 07 06 	.byte $FF,$08,$07,$06
2815   A440 00 02 FC 04 	.byte $00,$02,$FC,$04
2816   A444 00 02 FC 02 	.byte $00,$02,$FC,$02
2817   A448 00 02 FC        .byte $00,$02,$FC
2818   A44B                 
2819   A44B                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_exp2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$18
2819   A44B             
2819   91C3             
2819   91C3 4B          
2819   9253             
2819   9253 A4          
2819   9254             
2819   9254             
2819   A44B             
2819   A44B~                NEWSNDFREQ(sfreq_exp2)   ;,$18
2819   A44B~                NEWSNDFREQ(sfreq_exp2)   ;,$18
2819   A44B             
2820   A44B 02600002A0FF    .byte $02,$60,$00,$02,$A0,$FF,$02,$00,$00,$02,$A0,$00,$02
2820   A451 02000002A00002
2821   A458 00000260FF02    .byte $00,$00,$02,$60,$FF,$02,$00,$00,$02,$90,$00,$02,$C0,$FF,$02,$10
2821   A45E 000002900002C0FF0210
2822   A468 0002D0FF0230    .byte $00,$02,$D0,$FF,$02,$30,$00,$02,$40,$00,$02,$C0,$FF,$02,$A0,$00
2822   A46E 0002400002C0FF02A000
2823   A478 0230FF020000    .byte $02,$30,$FF,$02,$00,$00,$02,$30,$01,$02,$00,$00,$02,$60,$FF,$02
2823   A47E 0230010200000260FF02
2824   A488 000002800002    .byte $00,$00,$02,$80,$00,$02,$90,$FF,$02,$50,$00,$02,$F0,$FF,$02,$B0
2824   A48E 90FF02500002F0FF02B0
2825   A498 FF0480000200    .byte $FF,$04,$80,$00,$02,$00,$00,$02,$80,$FF,$02,$D0,$FF,$02,$00,$00
2825   A49E 000280FF02D0FF020000
2826   A4A8 02B0000280FF    .byte $02,$B0,$00,$02,$80,$FF,$02,$00,$02,$02,$70,$FE,$02,$00,$01,$02
2826   A4AE 0200020270FE02000102
2827   A4B8 00FF02900002    .byte $00,$FF,$02,$90,$00,$02,$90,$01,$02,$00,$00,$02,$20,$FF,$02,$00
2827   A4BE 90010200000220FF0200
2828   A4C8 0002B0010210    .byte $00,$02,$B0,$01,$02,$10,$FF,$02,$20,$FF,$02,$00,$00,$02,$60,$02
2828   A4CE FF0220FF020000026002
2829   A4D8 02E0FE020000    .byte $02,$E0,$FE,$02,$00,$00,$02,$60,$FF,$02,$60,$01,$02,$30,$FE,$02
2829   A4DE 0260FF0260010230FE02
2830   A4E8 F00202F0FE02    .byte $F0,$02,$02,$F0,$FE,$02,$00,$00,$02,$40,$FF,$02,$B0,$02,$02,$10
2830   A4EE 00000240FF02B0020210
2831   A4F8 FD0200000240    .byte $FD,$02,$00,$00,$02,$40,$01,$02,$00,$00,$02,$50,$FF,$02,$00,$00
2831   A4FE 010200000250FF020000
2832   A508 02D0010250FF    .byte $02,$D0,$01,$02,$50,$FF,$02,$C0,$01,$02,$70,$FD,$02,$00,$00,$02
2832   A50E 02C0010270FD02000002
2833   A518 400102000002    .byte $40,$01,$02,$00,$00,$02,$80,$FF,$02,$00,$00,$02,$70,$01,$02,$E0
2833   A51E 80FF02000002700102E0
2834   A528 FE02B0000200    .byte $FE,$02,$B0,$00,$02,$00,$00,$02,$F0,$00,$02,$A0,$FD,$02,$40,$01
2834   A52E 0002F00002A0FD024001
2835   A538 0200000270FF    .byte $02,$00,$00,$02,$70,$FF,$02,$30,$01,$02,$B0,$00,$02,$D0,$FD,$02
2835   A53E 02300102B00002D0FD02
2836   A548 000002100102    .byte $00,$00,$02,$10,$01,$02,$00,$00,$02,$D0,$01,$02,$00,$00
2836   A54E 000002D001020000
2837   A556                 
2838   A556                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_exp2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2838   A556             
2838   90A1             
2838   90A1 56          
2838   9131             
2838   9131 A5          
2838   9132             
2838   9132             
2838   A556             
2838   A556~                NEWTUNE(s_exp2) 
2838   A556~                NEWTUNE(s_exp2) 
2838   A556             
2839   A556                 \ .db isc_dctl,$80
2839   A556 8B 80       
2840   A558                 \ .db isc_freq,sfreq_exp2
2840   A558 86 13       
2841   A55A                 \ .db isc_ctrl,sctrl_exp2
2841   A55A 87 1D       
2842   A55C                 \ .db isc_sfunc10,$00
2842   A55C 90 00       
2843   A55E                 \ .db isc_sebvol,$00
2843   A55E 82 00       
2844   A560                 \ .db isc_ctrlm,CHCTL_POLY17
2844   A560 8A 80       
2845   A562                 \ .db _REST,$B4
2845   A562 00 B4       
2846   A564                 \ .dw $0000
2846   A564 00 00       
2847   A566                 
2848   A566             ;**************************************
2849   A566                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_exp3 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$19)
2849   A566             
2849   92EE             
2849   92EE 66          
2849   937E             
2849   937E A5          
2849   937F             
2849   937F             
2849   A566             
2849   A566~                NEWSNDAMP(sctrl_exp3)    ;,$19)
2849   A566~                NEWSNDAMP(sctrl_exp3)    ;,$19)
2849   A566             
2850   A566 02 3C           .byte $02,$3C
2851   A568 020002C40400    .byte $02,$00,$02,$C4,$04,$00,$02,$3C,$06,$FC,$02,$00,$02,$FC,$FF,$02
2851   A56E 023C06FC020002FCFF02
2852   A578 07040002FCFF    .byte $07,$04,$00,$02,$FC,$FF,$02,$07,$06,$00,$02,$FC,$0C,$00,$02,$FC
2852   A57E 0207060002FC0C0002FC
2853   A588 0A0002FCFF02    .byte $0A,$00,$02,$FC,$FF,$02,$07,$0E,$00,$02,$FC
2853   A58E 070E0002FC
2854   A593                 
2855   A593                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_exp3 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$19
2855   A593             
2855   91C4             
2855   91C4 93          
2855   9254             
2855   9254 A5          
2855   9255             
2855   9255             
2855   A593             
2855   A593~                NEWSNDFREQ(sfreq_exp3)   ;,$19
2855   A593~                NEWSNDFREQ(sfreq_exp3)   ;,$19
2855   A593             
2856   A593 0270010610      .byte $02,$70,$01,$06,$10
2857   A598 0008F0FF0810    .byte $00,$08,$F0,$FF,$08,$10,$00,$FF,$06,$09,$02,$F0,$FF
2857   A59E 00FF060902F0FF
2858   A5A5                 
2859   A5A5                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_exp3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2859   A5A5             
2859   90A2             
2859   90A2 A5          
2859   9132             
2859   9132 A5          
2859   9133             
2859   9133             
2859   A5A5             
2859   A5A5~                NEWTUNE(s_exp3) 
2859   A5A5~                NEWTUNE(s_exp3) 
2859   A5A5             
2860   A5A5                 \ .db isc_freq,sfreq_exp3
2860   A5A5 86 14       
2861   A5A7                 \ .db isc_ctrl,sctrl_exp3
2861   A5A7 87 1E       
2862   A5A9                 \ .db isc_sfunc10,$00
2862   A5A9 90 00       
2863   A5AB                 \ .db isc_sebvol,$00
2863   A5AB 82 00       
2864   A5AD                 \ .db isc_ctrlm,CHCTL_POLY17_5
2864   A5AD 8A 00       
2865   A5AF                 \ .db _REST,$7A
2865   A5AF 00 7A       
2866   A5B1                 \ .dw $0000
2866   A5B1 00 00       
2867   A5B3                 
2868   A5B3             ;**************************************
2869   A5B3                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_exp4 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$1a
2869   A5B3             
2869   92EF             
2869   92EF B3          
2869   937F             
2869   937F A5          
2869   9380             
2869   9380             
2869   A5B3             
2869   A5B3~                NEWSNDAMP(sctrl_exp4)    ;,$1a
2869   A5B3~                NEWSNDAMP(sctrl_exp4)    ;,$1a
2869   A5B3             
2870   A5B3 023C020002      .byte $02,$3C,$02,$00,$02
2871   A5B8 C40400023C06    .byte $C4,$04,$00,$02,$3C,$06,$FC,$02,$00,$02,$FC,$02,$00,$02,$FC,$02
2871   A5BE FC020002FC020002FC02
2872   A5C8 0002FC0400FF    .byte $00,$02,$FC,$04,$00,$FF,$04,$07,$02,$FC,$02,$00,$02,$FC,$02,$00
2872   A5CE 040702FC020002FC0200
2873   A5D8 02FC040002FC    .byte $02,$FC,$04,$00,$02,$FC,$04,$00,$02,$FC
2873   A5DE 040002FC
2874   A5E2                 
2875   A5E2                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_exp4 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$1a
2875   A5E2             
2875   91C5             
2875   91C5 E2          
2875   9255             
2875   9255 A5          
2875   9256             
2875   9256             
2875   A5E2             
2875   A5E2~                NEWSNDFREQ(sfreq_exp4)   ;,$1a
2875   A5E2~                NEWSNDFREQ(sfreq_exp4)   ;,$1a
2875   A5E2             
2876   A5E2 02D000061000    .byte $02,$D0,$00,$06,$10,$00
2877   A5E8 08F0FF081000    .byte $08,$F0,$FF,$08,$10,$00,$08,$F0,$FF,$FF,$03,$09
2877   A5EE 08F0FFFF0309
2878   A5F4                 
2879   A5F4                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_exp4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2879   A5F4             
2879   90A3             
2879   90A3 F4          
2879   9133             
2879   9133 A5          
2879   9134             
2879   9134             
2879   A5F4             
2879   A5F4~                NEWTUNE(s_exp4) 
2879   A5F4~                NEWTUNE(s_exp4) 
2879   A5F4             
2880   A5F4                 \ .db isc_freq,sfreq_exp4
2880   A5F4 86 15       
2881   A5F6                 \ .db isc_ctrl,sctrl_exp4
2881   A5F6 87 1F       
2882   A5F8                 \ .db isc_sfunc10,$00
2882   A5F8 90 00       
2883   A5FA                 \ .db isc_sebvol,$00
2883   A5FA 82 00       
2884   A5FC                 \ .db isc_ctrlm,CHCTL_POLY17_5
2884   A5FC 8A 00       
2885   A5FE                 \ .db _REST,$50
2885   A5FE 00 50       
2886   A600                 \ .dw $0000
2886   A600 00 00       
2887   A602             ;**************************************
2888   A602                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_exp5 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$1b
2888   A602             
2888   92F0             
2888   92F0 02          
2888   9380             
2888   9380 A6          
2888   9381             
2888   9381             
2888   A602             
2888   A602~                NEWSNDAMP(sctrl_exp5)    ;,$1b
2888   A602~                NEWSNDAMP(sctrl_exp5)    ;,$1b
2888   A602             
2889   A602 023C0C0002C4    .byte $02,$3C,$0C,$00,$02,$C4
2890   A608 0600023C0600    .byte $06,$00,$02,$3C,$06,$00,$02,$FC,$FF,$03,$07,$04,$00,$02,$FC,$04
2890   A60E 02FCFF0307040002FC04
2891   A618 0002FC020002    .byte $00,$02,$FC,$02,$00,$02,$FC,$06,$00,$02,$FC,$02,$00,$02,$FC,$02
2891   A61E FC060002FC020002FC02
2892   A628 0002FC040002    .byte $00,$02,$FC,$04,$00,$02,$FC,$06,$00,$02,$FC,$06,$00,$02,$FC,$08
2892   A62E FC060002FC060002FC08
2893   A638 0002FC060002    .byte $00,$02,$FC,$06,$00,$02,$FC
2893   A63E FC
2894   A63F                 
2895   A63F                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_exp5 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$1b
2895   A63F             
2895   91C6             
2895   91C6 3F          
2895   9256             
2895   9256 A6          
2895   9257             
2895   9257             
2895   A63F             
2895   A63F~                NEWSNDFREQ(sfreq_exp5)   ;,$1b
2895   A63F~                NEWSNDFREQ(sfreq_exp5)   ;,$1b
2895   A63F             
2896   A63F 0260070AF0FF    .byte $02,$60,$07,$0A,$F0,$FF,$0C,$10,$00
2896   A645 0C1000
2897   A648 0CF0FFFF0309    .byte $0C,$F0,$FF,$FF,$03,$09,$0C,$10,$00,$08,$F0,$FF
2897   A64E 0C100008F0FF
2898   A654                 
2899   A654                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_exp5 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2899   A654             
2899   90A4             
2899   90A4 54          
2899   9134             
2899   9134 A6          
2899   9135             
2899   9135             
2899   A654             
2899   A654~                NEWTUNE(s_exp5) 
2899   A654~                NEWTUNE(s_exp5) 
2899   A654             
2900   A654                 \ .db isc_freq,sfreq_exp5
2900   A654 86 16       
2901   A656                 \ .db isc_ctrl,sctrl_exp5
2901   A656 87 20       
2902   A658                 \ .db isc_sfunc10,$00
2902   A658 90 00       
2903   A65A                 \ .db isc_sebvol,$00
2903   A65A 82 00       
2904   A65C                 \ .db isc_ctrlm,CHCTL_POLY4_5
2904   A65C 8A 40       
2905   A65E                 \ .db _REST,$80
2905   A65E 00 80       
2906   A660                 \ .dw $0000
2906   A660 00 00       
2907   A662                 
2908   A662             ;**************************************
2909   A662                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_exp6 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$1c
2909   A662             
2909   92F1             
2909   92F1 62          
2909   9381             
2909   9381 A6          
2909   9382             
2909   9382             
2909   A662             
2909   A662~                NEWSNDAMP(sctrl_exp6)    ;,$1c
2909   A662~                NEWSNDAMP(sctrl_exp6)    ;,$1c
2909   A662             
2910   A662 023C060002C4    .byte $02,$3C,$06,$00,$02,$C4
2911   A668 0600023C06FC    .byte $06,$00,$02,$3C,$06,$FC,$02,$00,$02,$FC,$FF,$02,$07,$04,$00,$02
2911   A66E 020002FCFF0207040002
2912   A678 FCFF02070600    .byte $FC,$FF,$02,$07,$06,$00,$02,$FC,$FF,$02,$07,$08,$00,$02,$FC,$FF
2912   A67E 02FCFF0207080002FCFF
2913   A688 02 07           .byte $02,$07
2914   A68A                 
2915   A68A                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_exp6 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$1c
2915   A68A             
2915   91C7             
2915   91C7 8A          
2915   9257             
2915   9257 A6          
2915   9258             
2915   9258             
2915   A68A             
2915   A68A~                NEWSNDFREQ(sfreq_exp6)   ;,$1c
2915   A68A~                NEWSNDFREQ(sfreq_exp6)   ;,$1c
2915   A68A             
2916   A68A 02C0036A0000    .byte $02,$C0,$03,$6A,$00,$00
2917   A690                 
2918   A690                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_exp6 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
2918   A690             
2918   90A5             
2918   90A5 90          
2918   9135             
2918   9135 A6          
2918   9136             
2918   9136             
2918   A690             
2918   A690~                NEWTUNE(s_exp6) 
2918   A690~                NEWTUNE(s_exp6) 
2918   A690             
2919   A690                 \ .db isc_freq,sfreq_exp6
2919   A690 86 17       
2920   A692                 \ .db isc_ctrl,sctrl_exp6
2920   A692 87 21       
2921   A694                 \ .db isc_sfunc10,$00
2921   A694 90 00       
2922   A696                 \ .db isc_sebvol,$00
2922   A696 82 00       
2923   A698                 \ .db isc_ctrlm,CHCTL_POLY4_5
2923   A698 8A 40       
2924   A69A                 \ .db _REST,$6C
2924   A69A 00 6C       
2925   A69C                 \ .dw $0000
2925   A69C 00 00       
2926   A69E                 
2927   A69E             ;**************************************
2928   A69E                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_pfire = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$1d
2928   A69E             
2928   92F2             
2928   92F2 9E          
2928   9382             
2928   9382 A6          
2928   9383             
2928   9383             
2928   A69E             
2928   A69E~                NEWSNDAMP(sctrl_pfire)   ;,$1d
2928   A69E~                NEWSNDAMP(sctrl_pfire)   ;,$1d
2928   A69E             
2929   A69E 02 1C 0A 00     .byte $02,$1C,$0A,$00
2930   A6A2                 
2931   A6A2                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_pfire = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$1d
2931   A6A2             
2931   91C8             
2931   91C8 A2          
2931   9258             
2931   9258 A6          
2931   9259             
2931   9259             
2931   A6A2             
2931   A6A2~                NEWSNDFREQ(sfreq_pfire)  ;,$1d
2931   A6A2~                NEWSNDFREQ(sfreq_pfire)  ;,$1d
2931   A6A2             
2932   A6A2 026001027000    .byte $02,$60,$01,$02,$70,$00
2933   A6A8 02B00002D000    .byte $02,$B0,$00,$02,$D0,$00,$02,$30,$01,$02,$80,$01
2933   A6AE 023001028001
2934   A6B4                 
2935   A6B4                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_pfire = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
2935   A6B4             
2935   90A6             
2935   90A6 B4          
2935   9136             
2935   9136 A6          
2935   9137             
2935   9137             
2935   A6B4             
2935   A6B4~                NEWTUNE(s_pfire)    
2935   A6B4~                NEWTUNE(s_pfire)    
2935   A6B4             
2936   A6B4                 \ .db isc_freq,sfreq_pfire
2936   A6B4 86 18       
2937   A6B6                 \ .db isc_ctrl,sctrl_pfire
2937   A6B6 87 22       
2938   A6B8                 \ .db isc_sfunc10,$00
2938   A6B8 90 00       
2939   A6BA                 \ .db isc_sebvol,$00
2939   A6BA 82 00       
2940   A6BC                 \ .db isc_ctrlm,CHCTL_NOPOLY
2940   A6BC 8A A0       
2941   A6BE                 \ .db _REST,$0C
2941   A6BE 00 0C       
2942   A6C0                 \ .dw $0000
2942   A6C0 00 00       
2943   A6C2                 
2944   A6C2             ;**************************************
2945   A6C2                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_shotstat = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$1e
2945   A6C2             
2945   92F3             
2945   92F3 C2          
2945   9383             
2945   9383 A6          
2945   9384             
2945   9384             
2945   A6C2             
2945   A6C2~                NEWSNDAMP(sctrl_shotstat)    ;,$1e
2945   A6C2~                NEWSNDAMP(sctrl_shotstat)    ;,$1e
2945   A6C2             
2946   A6C2 02 3C           .byte $02,$3C
2947   A6C4 04 00       	.byte $04,$00
2948   A6C6 06 F8       	.byte $06,$F8
2949   A6C8 02 F4       	.byte $02,$F4
2950   A6CA 02 F8       	.byte $02,$F8
2951   A6CC                 
2952   A6CC                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_shotstat = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$1e
2952   A6CC             
2952   91C9             
2952   91C9 CC          
2952   9259             
2952   9259 A6          
2952   925A             
2952   925A             
2952   A6CC             
2952   A6CC~                NEWSNDFREQ(sfreq_shotstat)   ;,$1e
2952   A6CC~                NEWSNDFREQ(sfreq_shotstat)   ;,$1e
2952   A6CC             
2953   A6CC 12 00 00        .byte $12,$00,$00
2954   A6CF                 
2955   A6CF                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_shotstat = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
2955   A6CF             
2955   90A7             
2955   90A7 CF          
2955   9137             
2955   9137 A6          
2955   9138             
2955   9138             
2955   A6CF             
2955   A6CF~                NEWTUNE(s_shotstat)
2955   A6CF~                NEWTUNE(s_shotstat)
2955   A6CF             
2956   A6CF                 \ .db isc_freq,sfreq_shotstat
2956   A6CF 86 19       
2957   A6D1                 \ .db isc_ctrl,sctrl_shotstat
2957   A6D1 87 23       
2958   A6D3                 \ .db isc_sfunc10,$00
2958   A6D3 90 00       
2959   A6D5                 \ .db isc_sebvol,$00
2959   A6D5 82 00       
2960   A6D7                 \ .db isc_ctrlm,CHCTL_POLY17_5
2960   A6D7 8A 00       
2961   A6D9                 \ .db _REST,$10
2961   A6D9 00 10       
2962   A6DB                 \ .dw $0000
2962   A6DB 00 00       
2963   A6DD                 
2964   A6DD             ;**************************************
2965   A6DD                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_fishhatch = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$1f
2965   A6DD             
2965   92F4             
2965   92F4 DD          
2965   9384             
2965   9384 A6          
2965   9385             
2965   9385             
2965   A6DD             
2965   A6DD~                NEWSNDAMP(sctrl_fishhatch)   ;,$1f
2965   A6DD~                NEWSNDAMP(sctrl_fishhatch)   ;,$1f
2965   A6DD             
2966   A6DD 0220120002F8    .byte $02,$20,$12,$00,$02,$F8,$06,$00,$02,$FC,$02
2966   A6E3 060002FC02
2967   A6E8 0002FC020002    .byte $00,$02,$FC,$02,$00,$02,$FC,$02,$00,$06,$FC
2967   A6EE FC020006FC
2968   A6F3                 
2969   A6F3                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_fishhatch = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$1f
2969   A6F3             
2969   91CA             
2969   91CA F3          
2969   925A             
2969   925A A6          
2969   925B             
2969   925B             
2969   A6F3             
2969   A6F3~                NEWSNDFREQ(sfreq_fishhatch)  ;,$1f
2969   A6F3~                NEWSNDFREQ(sfreq_fishhatch)  ;,$1f
2969   A6F3             
2970   A6F3 02200302F0      .byte $02,$20,$03,$02,$F0
2971   A6F8 000270FE0200    .byte $00,$02,$70,$FE,$02,$00,$01,$02,$90,$FE,$02,$F0,$00,$02,$A0,$FE
2971   A6FE 010290FE02F00002A0FE
2972   A708 02F00002C0FE    .byte $02,$F0,$00,$02,$C0,$FE,$02,$E0,$00,$02,$F0,$FE,$02,$D0,$00,$02
2972   A70E 02E00002F0FE02D00002
2973   A718 10FF02C00002    .byte $10,$FF,$02,$C0,$00,$02,$20,$FF,$02,$B0,$00,$02,$30,$FF,$02,$B0
2973   A71E 20FF02B0000230FF02B0
2974   A728 000230FF02B0    .byte $00,$02,$30,$FF,$02,$B0,$00,$02,$40,$FF,$02,$B0,$00,$02,$C0,$FE
2974   A72E 000240FF02B00002C0FE
2975   A738             
2976   A738                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_fishhatch = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
2976   A738             
2976   90A8             
2976   90A8 38          
2976   9138             
2976   9138 A7          
2976   9139             
2976   9139             
2976   A738             
2976   A738~                NEWTUNE(s_fishhatch)
2976   A738~                NEWTUNE(s_fishhatch)
2976   A738             
2977   A738                 \ .db isc_freq,sfreq_fishhatch
2977   A738 86 1A       
2978   A73A                 \ .db isc_ctrl,sctrl_fishhatch
2978   A73A 87 24       
2979   A73C                 \ .db isc_sfunc10,$00
2979   A73C 90 00       
2980   A73E                 \ .db isc_sebvol,$00
2980   A73E 82 00       
2981   A740                 \ .db isc_ctrlm,CHCTL_NOPOLY
2981   A740 8A A0       
2982   A742                 \ .db _REST,$2E
2982   A742 00 2E       
2983   A744                 \ .dw $0000
2983   A744 00 00       
2984   A746                 
2985   A746             ;**************************************
2986   A746                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_reactor = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$22
2986   A746             
2986   92F5             
2986   92F5 46          
2986   9385             
2986   9385 A7          
2986   9386             
2986   9386             
2986   A746             
2986   A746~                NEWSNDAMP(sctrl_reactor) ;,$22
2986   A746~                NEWSNDAMP(sctrl_reactor) ;,$22
2986   A746             
2987   A746 0228040002FC    .byte $02,$28,$04,$00,$02,$FC,$02,$00,$02,$FC,$FF,$05,$07,$06
2987   A74C 020002FCFF050706
2988   A754 0002FC060002    .byte $00,$02,$FC,$06,$00,$02,$FC,$20,$00,$02,$04,$06,$00,$02,$04,$06
2988   A75A FC200002040600020406
2989   A764 0002040200FF    .byte $00,$02,$04,$02,$00,$FF,$05,$07,$02,$04,$06,$00
2989   A76A 050702040600
2990   A770                 
2991   A770                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_reactor = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$22
2991   A770             
2991   91CB             
2991   91CB 70          
2991   925B             
2991   925B A7          
2991   925C             
2991   925C             
2991   A770             
2991   A770~                NEWSNDFREQ(sfreq_reactor)    ;,$22
2991   A770~                NEWSNDFREQ(sfreq_reactor)    ;,$22
2991   A770             
2992   A770 02 80 03 02     .byte $02,$80,$03,$02
2993   A774 F0FF02400002    .byte $F0,$FF,$02,$40,$00,$02,$A0,$FF,$02,$80,$00,$02,$A0,$FF,$02,$40
2993   A77A A0FF02800002A0FF0240
2994   A784 0004E0FFFF07    .byte $00,$04,$E0,$FF,$FF,$07,$15,$02,$40,$00,$02,$A0,$FF,$02,$80,$00
2994   A78A 1502400002A0FF028000
2995   A794 02A0FF024000    .byte $02,$A0,$FF,$02,$40,$00,$02,$E0,$FF
2995   A79A 02E0FF
2996   A79D                 
2997   A79D                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_reactor = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
2997   A79D             
2997   90A9             
2997   90A9 9D          
2997   9139             
2997   9139 A7          
2997   913A             
2997   913A             
2997   A79D             
2997   A79D~                NEWTUNE(s_reactor)
2997   A79D~                NEWTUNE(s_reactor)
2997   A79D             
2998   A79D                 \ .db isc_freq,sfreq_reactor
2998   A79D 86 1B       
2999   A79F                 \ .db isc_ctrl,sctrl_reactor
2999   A79F 87 25       
3000   A7A1                 \ .db isc_sfunc10,$00
3000   A7A1 90 00       
3001   A7A3                 \ .db isc_sebvol,$00
3001   A7A3 82 00       
3002   A7A5                 \ .db isc_ctrlm,CHCTL_NOPOLY
3002   A7A5 8A A0       
3003   A7A7                 \ .db _REST,$80
3003   A7A7 00 80       
3004   A7A9                 \ .dw $0000
3004   A7A9 00 00       
3005   A7AB                 
3006   A7AB             ;**************************************
3007   A7AB                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_reactor2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$23
3007   A7AB             
3007   92F6             
3007   92F6 AB          
3007   9386             
3007   9386 A7          
3007   9387             
3007   9387             
3007   A7AB             
3007   A7AB~                NEWSNDAMP(sctrl_reactor2)    ;,$23
3007   A7AB~                NEWSNDAMP(sctrl_reactor2)    ;,$23
3007   A7AB             
3008   A7AB 020404000204    .byte $02,$04,$04,$00,$02,$04,$02,$00,$FF
3008   A7B1 0200FF
3009   A7B4 050702040600    .byte $05,$07,$02,$04,$06,$00,$02,$04,$06,$00,$02,$04,$20,$00,$02,$FC
3009   A7BA 020406000204200002FC
3010   A7C4 060002FC0600    .byte $06,$00,$02,$FC,$06,$00,$02,$FC,$02,$00,$FF,$05,$07,$02,$FC,$06,$00
3010   A7CA 02FC0200FF050702FC0600
3011   A7D5                 
3012   A7D5                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_reactor2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$23
3012   A7D5             
3012   91CC             
3012   91CC D5          
3012   925C             
3012   925C A7          
3012   925D             
3012   925D             
3012   A7D5             
3012   A7D5~                NEWSNDFREQ(sfreq_reactor2)   ;,$23
3012   A7D5~                NEWSNDFREQ(sfreq_reactor2)   ;,$23
3012   A7D5             
3013   A7D5 02B00102E0FF    .byte $02,$B0,$01,$02,$E0,$FF,$02,$40,$00,$02,$A0,$FF,$02,$80,$00
3013   A7DB 02400002A0FF028000
3014   A7E4 02A0FF024000    .byte $02,$A0,$FF,$02,$40,$00,$04,$E0,$FF,$FF,$07,$15,$02,$40,$00,$02
3014   A7EA 04E0FFFF071502400002
3015   A7F4 A0FF02800002    .byte $A0,$FF,$02,$80,$00,$02,$A0,$FF,$02,$40,$00,$02,$E0,$FF
3015   A7FA A0FF02400002E0FF
3016   A802             
3017   A802                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_reactor2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3017   A802             
3017   90AA             
3017   90AA 02          
3017   913A             
3017   913A A8          
3017   913B             
3017   913B             
3017   A802             
3017   A802~                NEWTUNE(s_reactor2) 
3017   A802~                NEWTUNE(s_reactor2) 
3017   A802             
3018   A802                 \ .db isc_freq,sfreq_reactor2
3018   A802 86 1C       
3019   A804                 \ .db isc_ctrl,sctrl_reactor2
3019   A804 87 26       
3020   A806                 \ .db isc_sfunc10,$00
3020   A806 90 00       
3021   A808                 \ .db isc_sebvol,$00
3021   A808 82 00       
3022   A80A                 \ .db isc_ctrlm,CHCTL_NOPOLY
3022   A80A 8A A0       
3023   A80C                 \ .db _REST,$80
3023   A80C 00 80       
3024   A80E                 \ .dw $0000
3024   A80E 00 00       
3025   A810                 
3026   A810             ;**************************************
3027   A810                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_goosefish = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$24
3027   A810             
3027   92F7             
3027   92F7 10          
3027   9387             
3027   9387 A8          
3027   9388             
3027   9388             
3027   A810             
3027   A810~                NEWSNDAMP(sctrl_goosefish)   ;,$24
3027   A810~                NEWSNDAMP(sctrl_goosefish)   ;,$24
3027   A810             
3028   A810 020404100218    .byte $02,$04,$04,$10,$02,$18,$12,$00,$02,$E8,$04,$F0
3028   A816 120002E804F0
3029   A81C                 
3030   A81C                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_goosefish = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$24
3030   A81C             
3030   91CD             
3030   91CD 1C          
3030   925D             
3030   925D A8          
3030   925E             
3030   925E             
3030   A81C             
3030   A81C~                NEWSNDFREQ(sfreq_goosefish)  ;,$24
3030   A81C~                NEWSNDFREQ(sfreq_goosefish)  ;,$24
3030   A81C             
3031   A81C 0210060A0000    .byte $02,$10,$06,$0A,$00,$00,$14,$E0,$FF
3031   A822 14E0FF
3032   A825             
3033   A825                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_goosefish = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3033   A825             
3033   90AB             
3033   90AB 25          
3033   913B             
3033   913B A8          
3033   913C             
3033   913C             
3033   A825             
3033   A825~                NEWTUNE(s_goosefish)    
3033   A825~                NEWTUNE(s_goosefish)    
3033   A825             
3034   A825                 \ .db isc_dctl,$40
3034   A825 8B 40       
3035   A827                 \ .db isc_freq,sfreq_goosefish
3035   A827 86 1D       
3036   A829                 \ .db isc_ctrl,sctrl_goosefish
3036   A829 87 27       
3037   A82B                 \ .db isc_sfunc10,$00
3037   A82B 90 00       
3038   A82D                 \ .db isc_sebvol,$00
3038   A82D 82 00       
3039   A82F                 \ .db isc_ctrlm,CHCTL_POLY4
3039   A82F 8A C0       
3040   A831                 \ .db _REST,$20
3040   A831 00 20       
3041   A833                 \ .dw $0000
3041   A833 00 00       
3042   A835                 
3043   A835             ;**************************************
3044   A835                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_blowfish = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$25
3044   A835             
3044   92F8             
3044   92F8 35          
3044   9388             
3044   9388 A8          
3044   9389             
3044   9389             
3044   A835             
3044   A835~                NEWSNDAMP(sctrl_blowfish)    ;,$25
3044   A835~                NEWSNDAMP(sctrl_blowfish)    ;,$25
3044   A835             
3045   A835 021C10042800    .byte $02,$1C,$10,$04,$28,$00,$02,$FC,$0A,$00,$02,$F8,$08,$00,$02
3045   A83B 02FC0A0002F8080002
3046   A844 FCFF08070600    .byte $FC,$FF,$08,$07,$06,$00,$02,$FC,$04,$00,$02,$FC,$02,$00,$02,$FC
3046   A84A 02FC040002FC020002FC
3047   A854                 
3048   A854                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_blowfish = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$25
3048   A854             
3048   91CE             
3048   91CE 54          
3048   925E             
3048   925E A8          
3048   925F             
3048   925F             
3048   A854             
3048   A854~                NEWSNDFREQ(sfreq_blowfish)   ;,$25
3048   A854~                NEWSNDFREQ(sfreq_blowfish)   ;,$25
3048   A854             
3049   A854 02600002A0FF    .byte $02,$60,$00,$02,$A0,$FF,$02,$00,$00,$02,$A0,$00,$02,$00,$00,$02
3049   A85A 02000002A00002000002
3050   A864 60FF02000002    .byte $60,$FF,$02,$00,$00,$02,$90,$00,$02,$C0,$FF,$02,$10,$00,$02,$D0
3050   A86A 900002C0FF02100002D0
3051   A874 FF0230000240    .byte $FF,$02,$30,$00,$02,$40,$00,$02,$C0,$FF,$02,$A0,$00,$02,$30,$FF
3051   A87A 0002C0FF02A0000230FF
3052   A884 020000023001    .byte $02,$00,$00,$02,$30,$01,$02,$00,$00,$02,$60,$FF,$02,$00,$00,$02
3052   A88A 0200000260FF02000002
3053   A894 80000290FF02    .byte $80,$00,$02,$90,$FF,$02,$50,$00,$02,$F0,$FF,$02,$B0,$FF,$04,$80
3053   A89A 500002F0FF02B0FF0480
3054   A8A4 000200000280    .byte $00,$02,$00,$00,$02,$80,$FF,$02,$D0,$FF,$02,$00,$00,$02,$B0,$00
3054   A8AA FF02D0FF02000002B000
3055   A8B4 0280FF020002    .byte $02,$80,$FF,$02,$00,$02,$02,$70,$FE,$02,$00,$01,$02,$00,$FF,$02
3055   A8BA 0270FE0200010200FF02
3056   A8C4 900002900102    .byte $90,$00,$02,$90,$01,$02,$00,$00,$02,$20,$FF,$02,$00,$00,$02,$B0
3056   A8CA 00000220FF02000002B0
3057   A8D4 010210FF0220    .byte $01,$02,$10,$FF,$02,$20,$FF,$02,$00,$00,$02,$60,$02,$02,$E0,$FE
3057   A8DA FF02000002600202E0FE
3058   A8E4 0200000260FF    .byte $02,$00,$00,$02,$60,$FF,$02,$60,$01,$02,$30,$FE,$02,$F0,$02,$02
3058   A8EA 0260010230FE02F00202
3059   A8F4 F0FE02000002    .byte $F0,$FE,$02,$00,$00,$02,$40,$FF,$02,$B0,$02,$02,$10,$FD,$02,$00
3059   A8FA 40FF02B0020210FD0200
3060   A904 000240010200    .byte $00,$02,$40,$01,$02,$00,$00,$02,$50,$FF,$02,$00,$00,$02,$D0,$01
3060   A90A 000250FF02000002D001
3061   A914 0250FF02C001    .byte $02,$50,$FF,$02,$C0,$01,$02,$70,$FD,$02,$00,$00,$02,$40,$01,$02
3061   A91A 0270FD02000002400102
3062   A924 00000280FF02    .byte $00,$00,$02,$80,$FF,$02,$00,$00,$02,$70,$01,$02,$E0,$FE,$02,$B0
3062   A92A 000002700102E0FE02B0
3063   A934 0002000002F0    .byte $00,$02,$00,$00,$02,$F0,$00,$02,$A0,$FD,$02,$40,$01,$02,$00,$00
3063   A93A 0002A0FD024001020000
3064   A944 0270FF023001    .byte $02,$70,$FF,$02,$30,$01,$02,$B0,$00,$02,$D0,$FD,$02,$00,$00,$02
3064   A94A 02B00002D0FD02000002
3065   A954 100102000002    .byte $10,$01,$02,$00,$00,$02,$D0,$01,$02,$00,$00
3065   A95A D001020000
3066   A95F                 
3067   A95F                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_blowfish = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
3067   A95F             
3067   90AC             
3067   90AC 5F          
3067   913C             
3067   913C A9          
3067   913D             
3067   913D             
3067   A95F             
3067   A95F~                NEWTUNE(s_blowfish)
3067   A95F~                NEWTUNE(s_blowfish)
3067   A95F             
3068   A95F                 \ .db isc_dctl,$80
3068   A95F 8B 80       
3069   A961                 \ .db isc_freq,sfreq_blowfish
3069   A961 86 1E       
3070   A963                 \ .db isc_ctrl,sctrl_blowfish
3070   A963 87 28       
3071   A965                 \ .db isc_sfunc10,$00
3071   A965 90 00       
3072   A967                 \ .db isc_sebvol,$00
3072   A967 82 00       
3073   A969                 \ .db isc_ctrlm,CHCTL_NOPOLY
3073   A969 8A A0       
3074   A96B                 \ .db _REST,$B4
3074   A96B 00 B4       
3075   A96D                 \ .dw $0000
3075   A96D 00 00       
3076   A96F                 
3077   A96F             ;**************************************
3078   A96F                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_blowfish2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$26
3078   A96F             
3078   92F9             
3078   92F9 6F          
3078   9389             
3078   9389 A9          
3078   938A             
3078   938A             
3078   A96F             
3078   A96F~                NEWSNDAMP(sctrl_blowfish2)   ;,$26
3078   A96F~                NEWSNDAMP(sctrl_blowfish2)   ;,$26
3078   A96F             
3079   A96F 021C100428      .byte $02,$1C,$10,$04,$28
3080   A974 0002FC0A0002    .byte $00,$02,$FC,$0A,$00,$02,$F8,$08,$00,$02,$FC,$FF,$08,$07,$06,$00
3080   A97A F8080002FCFF08070600
3081   A984 02FC040002FC    .byte $02,$FC,$04,$00,$02,$FC,$02,$00,$02,$FC
3081   A98A 020002FC
3082   A98E                 
3083   A98E                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_blowfish2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$26
3083   A98E             
3083   91CF             
3083   91CF 8E          
3083   925F             
3083   925F A9          
3083   9260             
3083   9260             
3083   A98E             
3083   A98E~                NEWSNDFREQ(sfreq_blowfish2)  ;,$26
3083   A98E~                NEWSNDFREQ(sfreq_blowfish2)  ;,$26
3083   A98E             
3084   A98E 02600002A0FF    .byte $02,$60,$00,$02,$A0,$FF
3085   A994 02000002A000    .byte $02,$00,$00,$02,$A0,$00,$02,$00,$00,$02,$60,$FF,$02,$00,$00,$02
3085   A99A 0200000260FF02000002
3086   A9A4 900002C0FF02    .byte $90,$00,$02,$C0,$FF,$02,$10,$00,$02,$D0,$FF,$02,$30,$00,$02,$40
3086   A9AA 100002D0FF0230000240
3087   A9B4 0002C0FF02A0    .byte $00,$02,$C0,$FF,$02,$A0,$00,$02,$30,$FF,$02,$00,$00,$02,$30,$01
3087   A9BA 000230FF020000023001
3088   A9C4 0200000260FF    .byte $02,$00,$00,$02,$60,$FF,$02,$00,$00,$02,$80,$00,$02,$90,$FF,$02
3088   A9CA 0200000280000290FF02
3089   A9D4 500002F0FF02    .byte $50,$00,$02,$F0,$FF,$02,$B0,$FF,$04,$80,$00,$02,$00,$00,$02,$80
3089   A9DA B0FF0480000200000280
3090   A9E4 FF02D0FF0200    .byte $FF,$02,$D0,$FF,$02,$00,$00,$02,$B0,$00,$02,$80,$FF,$02,$00,$02
3090   A9EA 0002B0000280FF020002
3091   A9F4 0270FE020001    .byte $02,$70,$FE,$02,$00,$01,$02,$00,$FF,$02,$90,$00,$02,$90,$01,$02
3091   A9FA 0200FF02900002900102
3092   AA04 00000220FF02    .byte $00,$00,$02,$20,$FF,$02,$00,$00,$02,$B0,$01,$02,$10,$FF,$02,$20
3092   AA0A 000002B0010210FF0220
3093   AA14 FF0200000260    .byte $FF,$02,$00,$00,$02,$60,$02,$02,$E0,$FE,$02,$00,$00,$02,$60,$FF
3093   AA1A 0202E0FE0200000260FF
3094   AA24 0260010230FE    .byte $02,$60,$01,$02,$30,$FE,$02,$F0,$02,$02,$F0,$FE,$02,$00,$00,$02
3094   AA2A 02F00202F0FE02000002
3095   AA34 40FF02B00202    .byte $40,$FF,$02,$B0,$02,$02,$10,$FD,$02,$00,$00,$02,$40,$01,$02,$00
3095   AA3A 10FD0200000240010200
3096   AA44 000250FF0200    .byte $00,$02,$50,$FF,$02,$00,$00,$02,$D0,$01,$02,$50,$FF,$02,$C0,$01
3096   AA4A 0002D0010250FF02C001
3097   AA54 0270FD020000    .byte $02,$70,$FD,$02,$00,$00,$02,$40,$01,$02,$00,$00,$02,$80,$FF,$02
3097   AA5A 0240010200000280FF02
3098   AA64 000002700102    .byte $00,$00,$02,$70,$01,$02,$E0,$FE,$02,$B0,$00,$02,$00,$00,$02,$F0
3098   AA6A E0FE02B00002000002F0
3099   AA74 0002A0FD0240    .byte $00,$02,$A0,$FD,$02,$40,$01,$02,$00,$00,$02,$70,$FF,$02,$30,$01
3099   AA7A 010200000270FF023001
3100   AA84 02B00002D0FD    .byte $02,$B0,$00,$02,$D0,$FD,$02,$00,$00,$02,$10,$01,$02,$00,$00,$02
3100   AA8A 02000002100102000002
3101   AA94 D001020000      .byte $D0,$01,$02,$00,$00
3102   AA99             
3103   AA99                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_blowfish2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3103   AA99             
3103   90AD             
3103   90AD 99          
3103   913D             
3103   913D AA          
3103   913E             
3103   913E             
3103   AA99             
3103   AA99~                NEWTUNE(s_blowfish2)    
3103   AA99~                NEWTUNE(s_blowfish2)    
3103   AA99             
3104   AA99                 \ .db isc_dctl,$80
3104   AA99 8B 80       
3105   AA9B                 \ .db isc_freq,sfreq_blowfish2
3105   AA9B 86 1F       
3106   AA9D                 \ .db isc_ctrl,sctrl_blowfish2
3106   AA9D 87 29       
3107   AA9F                 \ .db isc_sfunc10,$00
3107   AA9F 90 00       
3108   AAA1                 \ .db isc_sebvol,$00
3108   AAA1 82 00       
3109   AAA3                 \ .db isc_ctrlm,CHCTL_POLY17
3109   AAA3 8A 80       
3110   AAA5                 \ .db _REST,$B4
3110   AAA5 00 B4       
3111   AAA7                 \ .dw $0000
3111   AAA7 00 00       
3112   AAA9                 
3113   AAA9             ;**************************************
3114   AAA9                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_circfish = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$27
3114   AAA9             
3114   92FA             
3114   92FA A9          
3114   938A             
3114   938A AA          
3114   938B             
3114   938B             
3114   AAA9             
3114   AAA9~                NEWSNDAMP(sctrl_circfish)    ;,$27
3114   AAA9~                NEWSNDAMP(sctrl_circfish)    ;,$27
3114   AAA9             
3115   AAA9 14 04 12 00     .byte $14,$04,$12,$00
3116   AAAD 02 F0 02 FC     .byte $02,$F0,$02,$FC
3117   AAB1 02 00 02 FC     .byte $02,$00,$02,$FC
3118   AAB5 16 00 02 FC     .byte $16,$00,$02,$FC
3119   AAB9 02 00 02 FC     .byte $02,$00,$02,$FC
3120   AABD 02 00 02 FC     .byte $02,$00,$02,$FC
3121   AAC1 02 00 02 FC     .byte $02,$00,$02,$FC
3122   AAC5 2C 00           .byte $2C,$00
3123   AAC7                 
3124   AAC7                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_circfish = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$27
3124   AAC7             
3124   91D0             
3124   91D0 C7          
3124   9260             
3124   9260 AA          
3124   9261             
3124   9261             
3124   AAC7             
3124   AAC7~                NEWSNDFREQ(sfreq_circfish)   ;,$27
3124   AAC7~                NEWSNDFREQ(sfreq_circfish)   ;,$27
3124   AAC7             
3125   AAC7 02 F0           .byte $02,$F0
3126   AAC9 0F 24 00 00     .byte $0F,$24,$00,$00
3127   AACD 02 F0 FE 56     .byte $02,$F0,$FE,$56
3128   AAD1 00 00           .byte $00,$00
3129   AAD3                 
3130   AAD3                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_circfish = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
3130   AAD3             
3130   90AE             
3130   90AE D3          
3130   913E             
3130   913E AA          
3130   913F             
3130   913F             
3130   AAD3             
3130   AAD3~                NEWTUNE(s_circfish)
3130   AAD3~                NEWTUNE(s_circfish)
3130   AAD3             
3131   AAD3                 \ .db isc_freq,sfreq_circfish
3131   AAD3 86 20       
3132   AAD5                 \ .db isc_ctrl,sctrl_circfish
3132   AAD5 87 2A       
3133   AAD7                 \ .db isc_sfunc10,$00
3133   AAD7 90 00       
3134   AAD9                 \ .db isc_sebvol,$00
3134   AAD9 82 00       
3135   AADB                 \ .db isc_ctrlm,CHCTL_NOPOLY
3135   AADB 8A A0       
3136   AADD                 \ .db _REST,$7E
3136   AADD 00 7E       
3137   AADF                 \ .dw $0000
3137   AADF 00 00       
3138   AAE1                 
3139   AAE1             ;**************************************
3140   AAE1                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_circfish2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$28
3140   AAE1             
3140   92FB             
3140   92FB E1          
3140   938B             
3140   938B AA          
3140   938C             
3140   938C             
3140   AAE1             
3140   AAE1~                NEWSNDAMP(sctrl_circfish2)   ;,$28
3140   AAE1~                NEWSNDAMP(sctrl_circfish2)   ;,$28
3140   AAE1             
3141   AAE1 0A0406000204    .byte $0A,$04,$06,$00,$02,$04,$08,$00,$06,$FC,$08,$00,$02,$04
3141   AAE7 080006FC08000204
3142   AAEF 1A0004FC0600    .byte $1A,$00,$04,$FC,$06,$00,$04,$FC,$2C,$00
3142   AAF5 04FC2C00
3143   AAF9                 
3144   AAF9                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_circfish2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$28
3144   AAF9             
3144   91D1             
3144   91D1 F9          
3144   9261             
3144   9261 AA          
3144   9262             
3144   9262             
3144   AAF9             
3144   AAF9~                NEWSNDFREQ(sfreq_circfish2)  ;,$28
3144   AAF9~                NEWSNDFREQ(sfreq_circfish2)  ;,$28
3144   AAF9             
3145   AAF9 02E00F240000    .byte $02,$E0,$0F,$24,$00,$00,$02,$10,$FF,$56,$00,$00
3145   AAFF 0210FF560000
3146   AB05                 
3147   AB05                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_circfish2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
3147   AB05             
3147   90AF             
3147   90AF 05          
3147   913F             
3147   913F AB          
3147   9140             
3147   9140             
3147   AB05             
3147   AB05~                NEWTUNE(s_circfish2)
3147   AB05~                NEWTUNE(s_circfish2)
3147   AB05             
3148   AB05                 \ .db isc_freq,sfreq_circfish2
3148   AB05 86 21       
3149   AB07                 \ .db isc_ctrl,sctrl_circfish2
3149   AB07 87 2B       
3150   AB09                 \ .db isc_sfunc10,$00
3150   AB09 90 00       
3151   AB0B                 \ .db isc_sebvol,$00
3151   AB0B 82 00       
3152   AB0D                 \ .db isc_ctrlm,CHCTL_NOPOLY
3152   AB0D 8A A0       
3153   AB0F                 \ .db _REST,$7E
3153   AB0F 00 7E       
3154   AB11                 \ .dw $0000
3154   AB11 00 00       
3155   AB13                 
3156   AB13             ;**************************************
3157   AB13                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_feject = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$29
3157   AB13             
3157   92FC             
3157   92FC 13          
3157   938C             
3157   938C AB          
3157   938D             
3157   938D             
3157   AB13             
3157   AB13~                NEWSNDAMP(sctrl_feject)  ;,$29
3157   AB13~                NEWSNDAMP(sctrl_feject)  ;,$29
3157   AB13             
3158   AB13 023C06F802FC    .byte $02,$3C,$06,$F8,$02,$FC,$02,$00,$02,$FC,$02,$00,$02,$FC,$04,$00,$02
3158   AB19 020002FC020002FC040002
3159   AB24 FC120002FC06    .byte $FC,$12,$00,$02,$FC,$06,$00,$02,$FC,$0A,$00,$02,$FC,$0C,$00,$02
3159   AB2A 0002FC0A0002FC0C0002
3160   AB34 FC 0A 00        .byte $FC,$0A,$00
3161   AB37                 
3162   AB37                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_feject = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$29
3162   AB37             
3162   91D2             
3162   91D2 37          
3162   9262             
3162   9262 AB          
3162   9263             
3162   9263             
3162   AB37             
3162   AB37~                NEWSNDFREQ(sfreq_feject) ;,$29
3162   AB37~                NEWSNDFREQ(sfreq_feject) ;,$29
3162   AB37             
3163   AB37 0260020440FF    .byte $02,$60,$02,$04,$40,$FF,$02,$30,$FF,$38,$10,$00,$02
3163   AB3D 0230FF38100002
3164   AB44 000002200014    .byte $00,$00,$02,$20,$00,$14,$10,$00
3164   AB4A 1000
3165   AB4C             
3166   AB4C                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_feject = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF        
3166   AB4C             
3166   90B0             
3166   90B0 4C          
3166   9140             
3166   9140 AB          
3166   9141             
3166   9141             
3166   AB4C             
3166   AB4C~                NEWTUNE(s_feject)       
3166   AB4C~                NEWTUNE(s_feject)       
3166   AB4C             
3167   AB4C                 \ .db isc_freq,sfreq_feject
3167   AB4C 86 22       
3168   AB4E                 \ .db isc_ctrl,sctrl_feject
3168   AB4E 87 2C       
3169   AB50                 \ .db isc_sfunc10,$00
3169   AB50 90 00       
3170   AB52                 \ .db isc_sebvol,$00
3170   AB52 82 00       
3171   AB54                 \ .db isc_ctrlm,CHCTL_POLY5X
3171   AB54 8A 60       
3172   AB56                 \ .db _REST,$58
3172   AB56 00 58       
3173   AB58                 \ .dw $0000
3173   AB58 00 00       
3174   AB5A                 
3175   AB5A             ;**************************************
3176   AB5A                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_fshot = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$2a
3176   AB5A             
3176   92FD             
3176   92FD 5A          
3176   938D             
3176   938D AB          
3176   938E             
3176   938E             
3176   AB5A             
3176   AB5A~                NEWSNDAMP(sctrl_fshot)   ;,$2a
3176   AB5A~                NEWSNDAMP(sctrl_fshot)   ;,$2a
3176   AB5A             
3177   AB5A 023004000204    .byte $02,$30,$04,$00,$02,$04,$02,$00,$02,$04
3177   AB60 02000204
3178   AB64 0200020404FC    .byte $02,$00,$02,$04,$04,$FC,$02,$00,$02,$FC,$04,$00,$02,$FC,$06,$00
3178   AB6A 020002FC040002FC0600
3179   AB74 02FC060002FC    .byte $02,$FC,$06,$00,$02,$FC,$04,$00,$02,$FC,$06,$00,$02,$FC,$FF,$03
3179   AB7A 040002FC060002FCFF03
3180   AB84 070C0002FC0E    .byte $07,$0C,$00,$02,$FC,$0E,$00,$02,$FC,$0E,$00,$02,$FC,$0E,$00,$02
3180   AB8A 0002FC0E0002FC0E0002
3181   AB94 FC              .byte $FC
3182   AB95                 
3183   AB95                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_fshot = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$2a
3183   AB95             
3183   91D3             
3183   91D3 95          
3183   9263             
3183   9263 AB          
3183   9264             
3183   9264             
3183   AB95             
3183   AB95~                NEWSNDFREQ(sfreq_fshot)  ;,$2a
3183   AB95~                NEWSNDFREQ(sfreq_fshot)  ;,$2a
3183   AB95             
3184   AB95 02 20 07        .byte $02,$20,$07
3185   AB98 0C E0 FF    	.byte $0C,$E0,$FF
3186   AB9B 02 D0 F9    	.byte $02,$D0,$F9
3187   AB9E 7E 40 00    	.byte $7E,$40,$00
3188   ABA1 02 10 F0    	.byte $02,$10,$F0		;second batch
3189   ABA4 02 00 00        .byte $02,$00,$00
3190   ABA7             
3191   ABA7                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_fshot = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3191   ABA7             
3191   90B1             
3191   90B1 A7          
3191   9141             
3191   9141 AB          
3191   9142             
3191   9142             
3191   ABA7             
3191   ABA7~                NEWTUNE(s_fshot)    
3191   ABA7~                NEWTUNE(s_fshot)    
3191   ABA7             
3192   ABA7                 \ .db isc_freq,sfreq_fshot
3192   ABA7 86 23       
3193   ABA9                 \ .db isc_ctrl,sctrl_fshot
3193   ABA9 87 2D       
3194   ABAB                 \ .db isc_sfunc10,$00
3194   ABAB 90 00       
3195   ABAD                 \ .db isc_sebvol,$00
3195   ABAD 82 00       
3196   ABAF                 \ .db isc_ctrlm,CHCTL_POLY4
3196   ABAF 8A C0       
3197   ABB1                 \ .db _REST,$0C
3197   ABB1 00 0C       
3198   ABB3                 \ .db isc_ctrlm,CHCTL_NOPOLY
3198   ABB3 8A A0       
3199   ABB5                 \ .db _REST,$03
3199   ABB5 00 03       
3200   ABB7                 \ .db isc_ctrlm,CHCTL_POLY17
3200   ABB7 8A 80       
3201   ABB9                 \ .db _REST,$27
3201   ABB9 00 27       
3202   ABBB                 \ .db isc_ctrlm,CHCTL_POLY4
3202   ABBB 8A C0       
3203   ABBD                 \ .db _REST,$4D
3203   ABBD 00 4D       
3204   ABBF                 \ .db isc_ctrlm,CHCTL_NOPOLY
3204   ABBF 8A A0       
3205   ABC1                 \ .db _REST,$13
3205   ABC1 00 13       
3206   ABC3                 \ .dw $0000
3206   ABC3 00 00       
3207   ABC5                 
3208   ABC5             ;**************************************
3209   ABC5                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_blowspin = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$2e
3209   ABC5             
3209   92FE             
3209   92FE C5          
3209   938E             
3209   938E AB          
3209   938F             
3209   938F             
3209   ABC5             
3209   ABC5~                NEWSNDAMP(sctrl_blowspin)    ;,$2e
3209   ABC5~                NEWSNDAMP(sctrl_blowspin)    ;,$2e
3209   ABC5             
3210   ABC5 040002100214    .byte $04,$00,$02,$10,$02,$14,$02,$18,$3E
3210   ABCB 02183E
3211   ABCE 00 1C FC        .byte $00,$1C,$FC
3212   ABD1                 
3213   ABD1                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_blowspin = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$2e
3213   ABD1             
3213   91D4             
3213   91D4 D1          
3213   9264             
3213   9264 AB          
3213   9265             
3213   9265             
3213   ABD1             
3213   ABD1~                NEWSNDFREQ(sfreq_blowspin)   ;,$2e
3213   ABD1~                NEWSNDFREQ(sfreq_blowspin)   ;,$2e
3213   ABD1             
3214   ABD1 0230062EF0FF    .byte $02,$30,$06,$2E,$F0,$FF,$32,$10,$00
3214   ABD7 321000
3215   ABDA                 
3216   ABDA                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_blowspin = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3216   ABDA             
3216   90B2             
3216   90B2 DA          
3216   9142             
3216   9142 AB          
3216   9143             
3216   9143             
3216   ABDA             
3216   ABDA~                NEWTUNE(s_blowspin) 
3216   ABDA~                NEWTUNE(s_blowspin) 
3216   ABDA             
3217   ABDA                 \ .db isc_dctl,$40
3217   ABDA 8B 40       
3218   ABDC                 \ .db isc_freq,sfreq_blowspin
3218   ABDC 86 24       
3219   ABDE                 \ .db isc_ctrl,sctrl_blowspin
3219   ABDE 87 2E       
3220   ABE0                 \ .db isc_sfunc10,$00
3220   ABE0 90 00       
3221   ABE2                 \ .db isc_sebvol,$00
3221   ABE2 82 00       
3222   ABE4                 \ .db isc_ctrlm,CHCTL_POLY4_5
3222   ABE4 8A 40       
3223   ABE6                 \ .db _REST,$62
3223   ABE6 00 62       
3224   ABE8                 \ .dw $0000
3224   ABE8 00 00       
3225   ABEA                 
3226   ABEA             ;**************************************
3227   ABEA                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_mazehit = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$2f
3227   ABEA             
3227   92FF             
3227   92FF EA          
3227   938F             
3227   938F AB          
3227   9390             
3227   9390             
3227   ABEA             
3227   ABEA~                NEWSNDAMP(sctrl_mazehit) ;,$2f
3227   ABEA~                NEWSNDAMP(sctrl_mazehit) ;,$2f
3227   ABEA             
3228   ABEA 12 04 06 08     .byte $12,$04,$06,$08
3229   ABEE                 
3230   ABEE                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_mazehit = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$2f
3230   ABEE             
3230   91D5             
3230   91D5 EE          
3230   9265             
3230   9265 AB          
3230   9266             
3230   9266             
3230   ABEE             
3230   ABEE~                NEWSNDFREQ(sfreq_mazehit)    ;,$2f
3230   ABEE~                NEWSNDFREQ(sfreq_mazehit)    ;,$2f
3230   ABEE             
3231   ABEE 023000160000    .byte $02,$30,$00,$16,$00,$00
3232   ABF4                 
3233   ABF4                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_mazehit = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3233   ABF4             
3233   90B3             
3233   90B3 F4          
3233   9143             
3233   9143 AB          
3233   9144             
3233   9144             
3233   ABF4             
3233   ABF4~                NEWTUNE(s_mazehit)  
3233   ABF4~                NEWTUNE(s_mazehit)  
3233   ABF4             
3234   ABF4                 \ .db isc_freq,sfreq_mazehit
3234   ABF4 86 25       
3235   ABF6                 \ .db isc_ctrl,sctrl_mazehit
3235   ABF6 87 2F       
3236   ABF8                 \ .db isc_sfunc10,$00
3236   ABF8 90 00       
3237   ABFA                 \ .db isc_sebvol,$00
3237   ABFA 82 00       
3238   ABFC                 \ .db isc_ctrlm,CHCTL_POLY4_5
3238   ABFC 8A 40       
3239   ABFE                 \ .db _REST,$18
3239   ABFE 00 18       
3240   AC00                 \ .dw $0000
3240   AC00 00 00       
3241   AC02                 
3242   AC02             ;**************************************
3243   AC02                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_exp7 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$30
3243   AC02             
3243   9300             
3243   9300 02          
3243   9390             
3243   9390 AC          
3243   9391             
3243   9391             
3243   AC02             
3243   AC02~                NEWSNDAMP(sctrl_exp7)    ;,$30
3243   AC02~                NEWSNDAMP(sctrl_exp7)    ;,$30
3243   AC02             
3244   AC02 02 3C           .byte $02,$3C
3245   AC04 0E 00       	.byte $0E,$00
3246   AC06 02 F4       	.byte $02,$F4
3247   AC08 06 F8       	.byte $06,$F8
3248   AC0A 02 F4       	.byte $02,$F4
3249   AC0C 02 F8       	.byte $02,$F8
3250   AC0E 02 FC           .byte $02,$FC
3251   AC10                 
3252   AC10                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_exp7 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$30
3252   AC10             
3252   91D6             
3252   91D6 10          
3252   9266             
3252   9266 AC          
3252   9267             
3252   9267             
3252   AC10             
3252   AC10~                NEWSNDFREQ(sfreq_exp7)   ;,$30
3252   AC10~                NEWSNDFREQ(sfreq_exp7)   ;,$30
3252   AC10             
3253   AC10 02 A0 08        .byte $02,$A0,$08
3254   AC13 02 00 00    	.byte $02,$00,$00
3255   AC16 02 20 02    	.byte $02,$20,$02
3256   AC19 02 00 00    	.byte $02,$00,$00
3257   AC1C 02 50 02    	.byte $02,$50,$02		;second batch?
3258   AC1F 02 00 00    	.byte $02,$00,$00
3259   AC22 02 B0 F4    	.byte $02,$B0,$F4
3260   AC25 10 00 00    	.byte $10,$00,$00
3261   AC28                 
3262   AC28                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_exp7 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3262   AC28             
3262   90B4             
3262   90B4 28          
3262   9144             
3262   9144 AC          
3262   9145             
3262   9145             
3262   AC28             
3262   AC28~                NEWTUNE(s_exp7) 
3262   AC28~                NEWTUNE(s_exp7) 
3262   AC28             
3263   AC28                 \ .db isc_freq,sfreq_exp7
3263   AC28 86 26       
3264   AC2A                 \ .db isc_ctrl,sctrl_exp7
3264   AC2A 87 30       
3265   AC2C                 \ .db isc_sfunc10,$00
3265   AC2C 90 00       
3266   AC2E                 \ .db isc_sebvol,$00
3266   AC2E 82 00       
3267   AC30                 \ .db isc_ctrlm,CHCTL_POLY4
3267   AC30 8A C0       
3268   AC32                 \ .db _REST,$0C		;This is even, which means we need to jump to postition $0c in the FREQ table
3268   AC32 00 0C       
3269   AC34                 \ .db isc_ctrlm,CHCTL_POLY17_5
3269   AC34 8A 00       
3270   AC36                 \ .db _REST,$13
3270   AC36 00 13       
3271   AC38                 \ .dw $0000
3271   AC38 00 00       
3272   AC3A                 
3273   AC3A             ;**************************************
3274   AC3A                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_lshot = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$31
3274   AC3A             
3274   9301             
3274   9301 3A          
3274   9391             
3274   9391 AC          
3274   9392             
3274   9392             
3274   AC3A             
3274   AC3A~                NEWSNDAMP(sctrl_lshot)   ;,$31
3274   AC3A~                NEWSNDAMP(sctrl_lshot)   ;,$31
3274   AC3A             
3275   AC3A 02 3C 02 00     .byte $02,$3C,$02,$00
3276   AC3E 02F8020002F8    .byte $02,$F8,$02,$00,$02,$F8,$02,$00,$02,$F8,$02,$00,$02,$F0,$02,$00
3276   AC44 020002F8020002F00200
3277   AC4E 020412000204    .byte $02,$04,$12,$00,$02,$04,$06,$00,$08,$04,$04,$08
3277   AC54 060008040408
3278   AC5A                 
3279   AC5A                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_lshot = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$31
3279   AC5A             
3279   91D7             
3279   91D7 5A          
3279   9267             
3279   9267 AC          
3279   9268             
3279   9268             
3279   AC5A             
3279   AC5A~                NEWSNDFREQ(sfreq_lshot)  ;,$31
3279   AC5A~                NEWSNDFREQ(sfreq_lshot)  ;,$31
3279   AC5A             
3280   AC5A 02 60 02 02     .byte $02,$60,$02,$02
3281   AC5E 00000240FF02    .byte $00,$00,$02,$40,$FF,$02,$00,$00,$02,$40,$FF,$02,$00,$00,$02,$30
3281   AC64 00000240FF0200000230
3282   AC6E FF1C00000210    .byte $FF,$1C,$00,$00,$02,$10,$00,$08,$00,$00,$02,$10,$00,$06,$00,$00
3282   AC74 00080000021000060000
3283   AC7E                     
3284   AC7E                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_lshot = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3284   AC7E             
3284   90B5             
3284   90B5 7E          
3284   9145             
3284   9145 AC          
3284   9146             
3284   9146             
3284   AC7E             
3284   AC7E~                NEWTUNE(s_lshot)    
3284   AC7E~                NEWTUNE(s_lshot)    
3284   AC7E             
3285   AC7E                 \ .db isc_freq,sfreq_lshot
3285   AC7E 86 27       
3286   AC80                 \ .db isc_ctrl,sctrl_lshot
3286   AC80 87 31       
3287   AC82                 \ .db isc_sfunc10,$00
3287   AC82 90 00       
3288   AC84                 \ .db isc_sebvol,$00
3288   AC84 82 00       
3289   AC86                 \ .db isc_ctrlm,CHCTL_NOPOLY
3289   AC86 8A A0       
3290   AC88                 \ .db _REST,$10
3290   AC88 00 10       
3291   AC8A                 \ .db isc_ctrlm,CHCTL_POLY17_5
3291   AC8A 8A 00       
3292   AC8C                 \ .db _REST,$2D
3292   AC8C 00 2D       
3293   AC8E                 \ .dw $0000
3293   AC8E 00 00       
3294   AC90                 
3295   AC90             ;**************************************
3296   AC90                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_hitshield = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$32
3296   AC90             
3296   9302             
3296   9302 90          
3296   9392             
3296   9392 AC          
3296   9393             
3296   9393             
3296   AC90             
3296   AC90~                NEWSNDAMP(sctrl_hitshield)   ;,$32
3296   AC90~                NEWSNDAMP(sctrl_hitshield)   ;,$32
3296   AC90             
3297   AC90 020402000204    .byte $02,$04,$02,$00,$02,$04,$02,$08,$06,$0C,$02,$CC,$18,$00
3297   AC96 0208060C02CC1800
3298   AC9E                 
3299   AC9E                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_hitshield = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$32
3299   AC9E             
3299   91D8             
3299   91D8 9E          
3299   9268             
3299   9268 AC          
3299   9269             
3299   9269             
3299   AC9E             
3299   AC9E~                NEWSNDFREQ(sfreq_hitshield)  ;,$32
3299   AC9E~                NEWSNDFREQ(sfreq_hitshield)  ;,$32
3299   AC9E             
3300   AC9E 02 80 00        .byte $02,$80,$00
3301   ACA1 1C 00 00    	.byte $1C,$00,$00
3302   ACA4 02 80 FF    	.byte $02,$80,$FF
3303   ACA7 08 00 00    	.byte $08,$00,$00
3304   ACAA                 
3305   ACAA                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_hitshield = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3305   ACAA             
3305   90B6             
3305   90B6 AA          
3305   9146             
3305   9146 AC          
3305   9147             
3305   9147             
3305   ACAA             
3305   ACAA~                NEWTUNE(s_hitshield)    
3305   ACAA~                NEWTUNE(s_hitshield)    
3305   ACAA             
3306   ACAA                 \ .db isc_freq,sfreq_hitshield
3306   ACAA 86 28       
3307   ACAC                 \ .db isc_ctrl,sctrl_hitshield
3307   ACAC 87 32       
3308   ACAE                 \ .db isc_sfunc10,$00
3308   ACAE 90 00       
3309   ACB0                 \ .db isc_sebvol,$00
3309   ACB0 82 00       
3310   ACB2                 \ .db isc_ctrlm,CHCTL_POLY4_5
3310   ACB2 8A 40       
3311   ACB4                 \ .db _REST,$12
3311   ACB4 00 12       
3312   ACB6                 \ .db isc_ctrlm,CHCTL_POLY17_5
3312   ACB6 8A 00       
3313   ACB8                 \ .db _REST,$17
3313   ACB8 00 17       
3314   ACBA                 \ .dw $0000
3314   ACBA 00 00       
3315   ACBC                 
3316   ACBC             ;**************************************
3317   ACBC                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_noshield = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$33
3317   ACBC             
3317   9303             
3317   9303 BC          
3317   9393             
3317   9393 AC          
3317   9394             
3317   9394             
3317   ACBC             
3317   ACBC~                NEWSNDAMP(sctrl_noshield)    ;,$33
3317   ACBC~                NEWSNDAMP(sctrl_noshield)    ;,$33
3317   ACBC             
3318   ACBC 021804000204    .byte $02,$18,$04,$00,$02,$04,$04,$00,$02,$04,$02,$00,$04,$04,$02,$08,$02,$0C
3318   ACC2 04000204020004040208020C
3319   ACCE                 
3320   ACCE                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_noshield = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$33
3320   ACCE             
3320   91D9             
3320   91D9 CE          
3320   9269             
3320   9269 AC          
3320   926A             
3320   926A             
3320   ACCE             
3320   ACCE~                NEWSNDFREQ(sfreq_noshield)   ;,$33
3320   ACCE~                NEWSNDFREQ(sfreq_noshield)   ;,$33
3320   ACCE             
3321   ACCE 022004020000    .byte $02,$20,$04,$02,$00,$00,$02,$F0,$FF,$02,$00,$00,$06,$F0,$FF,$04
3321   ACD4 02F0FF02000006F0FF04
3322   ACDE E0FF02C0FF02    .byte $E0,$FF,$02,$C0,$FF,$02,$A0,$FF,$02,$80,$FF
3322   ACE4 A0FF0280FF
3323   ACE9                 
3324   ACE9                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_noshield = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3324   ACE9             
3324   90B7             
3324   90B7 E9          
3324   9147             
3324   9147 AC          
3324   9148             
3324   9148             
3324   ACE9             
3324   ACE9~                NEWTUNE(s_noshield) 
3324   ACE9~                NEWTUNE(s_noshield) 
3324   ACE9             
3325   ACE9                 \ .db isc_freq,sfreq_noshield
3325   ACE9 86 29       
3326   ACEB                 \ .db isc_ctrl,sctrl_noshield
3326   ACEB 87 33       
3327   ACED                 \ .db isc_sfunc10,$00
3327   ACED 90 00       
3328   ACEF                 \ .db isc_sebvol,$00
3328   ACEF 82 00       
3329   ACF1                 \ .db isc_ctrlm,CHCTL_NOPOLY
3329   ACF1 8A A0       
3330   ACF3                 \ .db _REST,$18
3330   ACF3 00 18       
3331   ACF5                 \ .dw $0000
3331   ACF5 00 00       
3332   ACF7                 
3333   ACF7             ;**************************************
3334   ACF7                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_manhit = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$34
3334   ACF7             
3334   9304             
3334   9304 F7          
3334   9394             
3334   9394 AC          
3334   9395             
3334   9395             
3334   ACF7             
3334   ACF7~                NEWSNDAMP(sctrl_manhit)  ;,$34
3334   ACF7~                NEWSNDAMP(sctrl_manhit)  ;,$34
3334   ACF7             
3335   ACF7 021408000204    .byte $02,$14,$08,$00,$02,$04,$04
3335   ACFD 04
3336   ACFE 0002040200FF    .byte $00,$02,$04,$02,$00,$FF,$02,$07,$08,$04,$02,$08,$0A,$00,$02,$C4
3336   AD04 0207080402080A0002C4
3337   AD0E                 
3338   AD0E                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_manhit = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$34
3338   AD0E             
3338   91DA             
3338   91DA 0E          
3338   926A             
3338   926A AD          
3338   926B             
3338   926B             
3338   AD0E             
3338   AD0E~                NEWSNDFREQ(sfreq_manhit) ;,$34
3338   AD0E~                NEWSNDFREQ(sfreq_manhit) ;,$34
3338   AD0E             
3339   AD0E 023000300000    .byte $02,$30,$00,$30,$00,$00
3340   AD14                 
3341   AD14                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_manhit = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3341   AD14             
3341   90B8             
3341   90B8 14          
3341   9148             
3341   9148 AD          
3341   9149             
3341   9149             
3341   AD14             
3341   AD14~                NEWTUNE(s_manhit)   
3341   AD14~                NEWTUNE(s_manhit)   
3341   AD14             
3342   AD14                 \ .db isc_freq,sfreq_manhit
3342   AD14 86 2A       
3343   AD16                 \ .db isc_ctrl,sctrl_manhit
3343   AD16 87 34       
3344   AD18                 \ .db isc_sfunc10,$00
3344   AD18 90 00       
3345   AD1A                 \ .db isc_sebvol,$00
3345   AD1A 82 00       
3346   AD1C                 \ .db isc_ctrlm,CHCTL_POLY4_5
3346   AD1C 8A 40       
3347   AD1E                 \ .db _REST,$32
3347   AD1E 00 32       
3348   AD20                 \ .dw $0000
3348   AD20 00 00       
3349   AD22                 
3350   AD22             ;**************************************
3351   AD22                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_mantrip = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$35
3351   AD22             
3351   9305             
3351   9305 22          
3351   9395             
3351   9395 AD          
3351   9396             
3351   9396             
3351   AD22             
3351   AD22~                NEWSNDAMP(sctrl_mantrip) ;,$35
3351   AD22~                NEWSNDAMP(sctrl_mantrip) ;,$35
3351   AD22             
3352   AD22 0220040002F8    .byte $02,$20,$04,$00,$02,$F8,$02,$FC,$06,$0C,$02,$04
3352   AD28 02FC060C0204
3353   AD2E 060002FC0200    .byte $06,$00,$02,$FC,$02,$00,$FF,$03,$07,$0E,$F8,$02,$FC,$10,$00
3353   AD34 FF03070EF802FC1000
3354   AD3D                 
3355   AD3D                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_mantrip = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$35
3355   AD3D             
3355   91DB             
3355   91DB 3D          
3355   926B             
3355   926B AD          
3355   926C             
3355   926C             
3355   AD3D             
3355   AD3D~                NEWSNDFREQ(sfreq_mantrip)    ;,$35
3355   AD3D~                NEWSNDFREQ(sfreq_mantrip)    ;,$35
3355   AD3D             
3356   AD3D 02500104E0FF    .byte $02,$50,$01,$04,$E0,$FF,$02,$F0,$FF,$02,$30,$03,$02,$20,$00,$02,$10
3356   AD43 02F0FF0230030220000210
3357   AD4E 0002000002E0    .byte $00,$02,$00,$00,$02,$E0,$FF,$04,$D0,$FF,$02,$E0,$FF,$02,$F0,$FF
3357   AD54 FF04D0FF02E0FF02F0FF
3358   AD5E 02E0FF020000    .byte $02,$E0,$FF,$02,$00,$00,$02,$D0,$FF,$02,$F0,$FF,$02,$E0,$FF,$02
3358   AD64 02D0FF02F0FF02E0FF02
3359   AD6E 000004F0FF04    .byte $00,$00,$04,$F0,$FF,$04,$00,$00,$02,$F0,$FF,$04,$00,$00,$02,$F0
3359   AD74 000002F0FF04000002F0
3360   AD7E FF0800000210    .byte $FF,$08,$00,$00,$02,$10,$00,$06,$00,$00
3360   AD84 00060000
3361   AD88                 
3362   AD88                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_mantrip = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3362   AD88             
3362   90B9             
3362   90B9 88          
3362   9149             
3362   9149 AD          
3362   914A             
3362   914A             
3362   AD88             
3362   AD88~                NEWTUNE(s_mantrip)  
3362   AD88~                NEWTUNE(s_mantrip)  
3362   AD88             
3363   AD88                 \ .db isc_dctl,$01
3363   AD88 8B 01       
3364   AD8A                 \ .db isc_freq,sfreq_mantrip
3364   AD8A 86 2B       
3365   AD8C                 \ .db isc_ctrl,sctrl_mantrip
3365   AD8C 87 35       
3366   AD8E                 \ .db isc_sfunc10,$00
3366   AD8E 90 00       
3367   AD90                 \ .db isc_sebvol,$00
3367   AD90 82 00       
3368   AD92                 \ .db isc_ctrlm,CHCTL_NOPOLY2
3368   AD92 8A E0       
3369   AD94                 \ .db _REST,$46
3369   AD94 00 46       
3370   AD96                 \ .dw $0000
3370   AD96 00 00       
3371   AD98                 
3372   AD98             ;**************************************
3373   AD98                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_spikes = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$38
3373   AD98             
3373   9306             
3373   9306 98          
3373   9396             
3373   9396 AD          
3373   9397             
3373   9397             
3373   AD98             
3373   AD98~                NEWSNDAMP(sctrl_spikes)  ;,$38
3373   AD98~                NEWSNDAMP(sctrl_spikes)  ;,$38
3373   AD98             
3374   AD98 020402000204    .byte $02,$04,$02,$00,$02,$04,$02,$08,$28,$00,$02,$FC,$30,$00,$02,$FC,$2E,$00
3374   AD9E 0208280002FC300002FC2E00
3375   ADAA 02 FC 26 00     .byte $02,$FC,$26,$00
3376   ADAE                 
3377   ADAE                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_spikes = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$38
3377   ADAE             
3377   91DC             
3377   91DC AE          
3377   926C             
3377   926C AD          
3377   926D             
3377   926D             
3377   ADAE             
3377   ADAE~                NEWSNDFREQ(sfreq_spikes) ;,$38
3377   ADAE~                NEWSNDFREQ(sfreq_spikes) ;,$38
3377   ADAE             
3378   ADAE 02F00FB80000    .byte $02,$F0,$0F,$B8,$00,$00
3379   ADB4                 
3380   ADB4                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_spikes = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3380   ADB4             
3380   90BA             
3380   90BA B4          
3380   914A             
3380   914A AD          
3380   914B             
3380   914B             
3380   ADB4             
3380   ADB4~                NEWTUNE(s_spikes)   
3380   ADB4~                NEWTUNE(s_spikes)   
3380   ADB4             
3381   ADB4                 \ .db isc_dctl,$C1
3381   ADB4 8B C1       
3382   ADB6                 \ .db isc_freq,sfreq_spikes
3382   ADB6 86 2C       
3383   ADB8                 \ .db isc_ctrl,sctrl_spikes
3383   ADB8 87 36       
3384   ADBA                 \ .db isc_sfunc10,$00
3384   ADBA 90 00       
3385   ADBC                 \ .db isc_sebvol,$00
3385   ADBC 82 00       
3386   ADBE                 \ .db isc_ctrlm,CHCTL_POLY17
3386   ADBE 8A 80       
3387   ADC0                 \ .db _REST,$BA
3387   ADC0 00 BA       
3388   ADC2                 \ .dw $0000
3388   ADC2 00 00       
3389   ADC4                 
3390   ADC4             ;**************************************
3391   ADC4                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_spikes2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$39
3391   ADC4             
3391   9307             
3391   9307 C4          
3391   9397             
3391   9397 AD          
3391   9398             
3391   9398             
3391   ADC4             
3391   ADC4~                NEWSNDAMP(sctrl_spikes2) ;,$39
3391   ADC4~                NEWSNDAMP(sctrl_spikes2) ;,$39
3391   ADC4             
3392   ADC4 020402000204    .byte $02,$04,$02,$00,$02,$04
3393   ADCA 080802141200    .byte $08,$08,$02,$14,$12,$00,$02,$FC,$08,$00,$02,$FC,$06,$00,$02,$FC
3393   ADD0 02FC080002FC060002FC
3394   ADDA 060002FC0600    .byte $06,$00,$02,$FC,$06,$00,$02,$FC,$08,$00,$02,$FC,$06,$00,$02,$FC
3394   ADE0 02FC080002FC060002FC
3395   ADEA 080002FC0600    .byte $08,$00,$02,$FC,$06,$00,$02,$FC,$08,$00,$02,$FC,$08,$00,$02,$FC
3395   ADF0 02FC080002FC080002FC
3396   ADFA 0E0002FC1200    .byte $0E,$00,$02,$FC,$12,$00,$02,$FC,$14,$00,$02,$FC,$02,$00
3396   AE00 02FC140002FC0200
3397   AE08                 
3398   AE08                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_spikes2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$39
3398   AE08             
3398   91DD             
3398   91DD 08          
3398   926D             
3398   926D AE          
3398   926E             
3398   926E             
3398   AE08             
3398   AE08~                NEWSNDFREQ(sfreq_spikes2)    ;,$39
3398   AE08~                NEWSNDFREQ(sfreq_spikes2)    ;,$39
3398   AE08             
3399   AE08 02D00FB80000    .byte $02,$D0,$0F,$B8,$00,$00
3400   AE0E                 
3401   AE0E                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_spikes2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3401   AE0E             
3401   90BB             
3401   90BB 0E          
3401   914B             
3401   914B AE          
3401   914C             
3401   914C             
3401   AE0E             
3401   AE0E~                NEWTUNE(s_spikes2)  
3401   AE0E~                NEWTUNE(s_spikes2)  
3401   AE0E             
3402   AE0E                 \ .db isc_dctl,$C1
3402   AE0E 8B C1       
3403   AE10                 \ .db isc_freq,sfreq_spikes2
3403   AE10 86 2D       
3404   AE12                 \ .db isc_ctrl,sctrl_spikes2
3404   AE12 87 37       
3405   AE14                 \ .db isc_sfunc10,$00
3405   AE14 90 00       
3406   AE16                 \ .db isc_sebvol,$00
3406   AE16 82 00       
3407   AE18                 \ .db isc_ctrlm,CHCTL_NOPOLY
3407   AE18 8A A0       
3408   AE1A                 \ .db _REST,$BA
3408   AE1A 00 BA       
3409   AE1C                 \ .dw $0000
3409   AE1C 00 00       
3410   AE1E                 
3411   AE1E             ;**************************************
3412   AE1E                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_spikes3 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$3a
3412   AE1E             
3412   9308             
3412   9308 1E          
3412   9398             
3412   9398 AE          
3412   9399             
3412   9399             
3412   AE1E             
3412   AE1E~                NEWSNDAMP(sctrl_spikes3) ;,$3a
3412   AE1E~                NEWSNDAMP(sctrl_spikes3) ;,$3a
3412   AE1E             
3413   AE1E 023C040002F4    .byte $02,$3C,$04,$00,$02,$F4,$06,$F8,$02,$F4,$02,$F8
3413   AE24 06F802F402F8
3414   AE2A                 
3415   AE2A                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_spikes3 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$3a
3415   AE2A             
3415   91DE             
3415   91DE 2A          
3415   926E             
3415   926E AE          
3415   926F             
3415   926F             
3415   AE2A             
3415   AE2A~                NEWSNDFREQ(sfreq_spikes3)    ;,$3a
3415   AE2A~                NEWSNDFREQ(sfreq_spikes3)    ;,$3a
3415   AE2A             
3416   AE2A 02 70 00        .byte $02,$70,$00
3417   AE2D 10 00 00    	.byte $10,$00,$00
3418   AE30                 
3419   AE30                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_spikes3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3419   AE30             
3419   90BC             
3419   90BC 30          
3419   914C             
3419   914C AE          
3419   914D             
3419   914D             
3419   AE30             
3419   AE30~                NEWTUNE(s_spikes3)  
3419   AE30~                NEWTUNE(s_spikes3)  
3419   AE30             
3420   AE30                 \ .db isc_dctl,$C1
3420   AE30 8B C1       
3421   AE32                 \ .db isc_freq,sfreq_spikes3
3421   AE32 86 2E       
3422   AE34                 \ .db isc_ctrl,sctrl_spikes3
3422   AE34 87 38       
3423   AE36                 \ .db isc_sfunc10,$00
3423   AE36 90 00       
3424   AE38                 \ .db isc_sebvol,$00
3424   AE38 82 00       
3425   AE3A                 \ .db isc_ctrlm,CHCTL_POLY17_5
3425   AE3A 8A 00       
3426   AE3C                 \ .db _REST,$12
3426   AE3C 00 12       
3427   AE3E                 \ .dw $0000
3427   AE3E 00 00       
3428   AE40                 
3429   AE40             ;**************************************
3430   AE40                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_key = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$3b
3430   AE40             
3430   9309             
3430   9309 40          
3430   9399             
3430   9399 AE          
3430   939A             
3430   939A             
3430   AE40             
3430   AE40~                NEWSNDAMP(sctrl_key) ;,$3b
3430   AE40~                NEWSNDAMP(sctrl_key) ;,$3b
3430   AE40             
3431   AE40 023002FC02F4    .byte $02,$30,$02,$FC,$02,$F4,$02,$18,$02,$F0
3431   AE46 021802F0
3432   AE4A 020C020004F8    .byte $02,$0C,$02,$00,$04,$F8,$02,$08,$02,$F8,$02,$F4,$02,$F8,$02,$0C
3432   AE50 020802F802F402F8020C
3433   AE5A 02FC02080204    .byte $02,$FC,$02,$08,$02,$04,$02,$08,$02,$F4,$02,$14,$02,$08,$02,$F8
3433   AE60 020802F40214020802F8
3434   AE6A 020402EC02FC    .byte $02,$04,$02,$EC,$02,$FC,$02,$08,$02,$F8,$02,$04,$02,$F4,$02,$0C
3434   AE70 020802F8020402F4020C
3435   AE7A 02F002080204    .byte $02,$F0,$02,$08,$02,$04,$02,$EC,$02,$10,$02,$F0,$02,$0C,$02,$F0
3435   AE80 02EC021002F0020C02F0
3436   AE8A 020802FC0208    .byte $02,$08,$02,$FC,$02,$08,$02,$F4,$04,$04,$04,$FC,$02,$08,$08,$FC
3436   AE90 02F4040404FC020808FC
3437   AE9A 08 00           .byte $08,$00
3438   AE9C                 
3439   AE9C                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_key = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$3b
3439   AE9C             
3439   91DF             
3439   91DF 9C          
3439   926F             
3439   926F AE          
3439   9270             
3439   9270             
3439   AE9C             
3439   AE9C~                NEWSNDFREQ(sfreq_key)    ;,$3b
3439   AE9C~                NEWSNDFREQ(sfreq_key)    ;,$3b
3439   AE9C             
3440   AE9C 0250036C0000    .byte $02,$50,$03,$6C,$00,$00
3441   AEA2                 
3442   AEA2                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_key = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3442   AEA2             
3442   90BD             
3442   90BD A2          
3442   914D             
3442   914D AE          
3442   914E             
3442   914E             
3442   AEA2             
3442   AEA2~                NEWTUNE(s_key)  
3442   AEA2~                NEWTUNE(s_key)  
3442   AEA2             
3443   AEA2                 \ .db isc_dctl,$40
3443   AEA2 8B 40       
3444   AEA4                 \ .db isc_freq,sfreq_key
3444   AEA4 86 2F       
3445   AEA6                 \ .db isc_ctrl,sctrl_key
3445   AEA6 87 39       
3446   AEA8                 \ .db isc_sfunc10,$00
3446   AEA8 90 00       
3447   AEAA                 \ .db isc_sebvol,$00
3447   AEAA 82 00       
3448   AEAC                 \ .db isc_ctrlm,CHCTL_POLY4
3448   AEAC 8A C0       
3449   AEAE                 \ .db _REST,$6E
3449   AEAE 00 6E       
3450   AEB0                 \ .dw $0000
3450   AEB0 00 00       
3451   AEB2                 
3452   AEB2             ;**************************************
3453   AEB2                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_door = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$3c
3453   AEB2             
3453   930A             
3453   930A B2          
3453   939A             
3453   939A AE          
3453   939B             
3453   939B             
3453   AEB2             
3453   AEB2~                NEWSNDAMP(sctrl_door)    ;,$3c
3453   AEB2~                NEWSNDAMP(sctrl_door)    ;,$3c
3453   AEB2             
3454   AEB2 023C040002FC    .byte $02,$3C,$04,$00,$02,$FC,$04,$00
3454   AEB8 0400
3455   AEBA 02FC020004FC    .byte $02,$FC,$02,$00,$04,$FC,$06,$00,$04,$FC,$04,$00,$06,$FC,$08,$00
3455   AEC0 060004FC040006FC0800
3456   AECA 02FCFF0507      .byte $02,$FC,$FF,$05,$07
3457   AECF                 
3458   AECF                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_door = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$3c
3458   AECF             
3458   91E0             
3458   91E0 CF          
3458   9270             
3458   9270 AE          
3458   9271             
3458   9271             
3458   AECF             
3458   AECF~                NEWSNDFREQ(sfreq_door)   ;,$3c
3458   AECF~                NEWSNDFREQ(sfreq_door)   ;,$3c
3458   AECF             
3459   AECF 027000620000    .byte $02,$70,$00,$62,$00,$00
3460   AED5                 
3461   AED5                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_door = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3461   AED5             
3461   90BE             
3461   90BE D5          
3461   914E             
3461   914E AE          
3461   914F             
3461   914F             
3461   AED5             
3461   AED5~                NEWTUNE(s_door) 
3461   AED5~                NEWTUNE(s_door) 
3461   AED5             
3462   AED5                 \ .db isc_dctl,$01
3462   AED5 8B 01       
3463   AED7                 \ .db isc_freq,sfreq_door
3463   AED7 86 30       
3464   AED9                 \ .db isc_ctrl,sctrl_door
3464   AED9 87 3A       
3465   AEDB                 \ .db isc_sfunc10,$00
3465   AEDB 90 00       
3466   AEDD                 \ .db isc_sebvol,$00
3466   AEDD 82 00       
3467   AEDF                 \ .db isc_ctrlm,CHCTL_POLY17
3467   AEDF 8A 80       
3468   AEE1                 \ .db _REST,$06
3468   AEE1 00 06       
3469   AEE3                 \ .db isc_ctrlm,CHCTL_POLY5
3469   AEE3 8A 20       
3470   AEE5                 \ .db _REST,$07
3470   AEE5 00 07       
3471   AEE7                 \ .db isc_ctrlm,CHCTL_POLY17
3471   AEE7 8A 80       
3472   AEE9                 \ .db _REST,$57
3472   AEE9 00 57       
3473   AEEB                 \ .dw $0000
3473   AEEB 00 00       
3474   AEED                 
3475   AEED             ;**************************************
3476   AEED                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_handoff = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$41
3476   AEED             
3476   930B             
3476   930B ED          
3476   939B             
3476   939B AE          
3476   939C             
3476   939C             
3476   AEED             
3476   AEED~                NEWSNDAMP(sctrl_handoff) ;,$41
3476   AEED~                NEWSNDAMP(sctrl_handoff) ;,$41
3476   AEED             
3477   AEED 02 3C       	.byte $02,$3C
3478   AEEF 04 00       	.byte $04,$00
3479   AEF1 08 00       	.byte $08,$00
3480   AEF3 02 6C       	.byte $02,$6C
3481   AEF5 FF 0A       	.byte $FF,$0A
3482   AEF7 07 02       	.byte $07,$02
3483   AEF9 EC 02       	.byte $EC,$02
3484   AEFB 10 0C       	.byte $10,$0C
3485   AEFD 00 02       	.byte $00,$02
3486   AEFF F0 02       	.byte $F0,$02
3487   AF01 10 06       	.byte $10,$06
3488   AF03 00 02       	.byte $00,$02
3489   AF05 F0 02       	.byte $F0,$02
3490   AF07 0C 08       	.byte $0C,$08
3491   AF09 00 02       	.byte $00,$02
3492   AF0B F4 02       	.byte $F4,$02
3493   AF0D 0C 06       	.byte $0C,$06,
3494   AF0F 00 02       	.byte $00,$02
3495   AF11 FC040002F802	.byte $FC,$04,$00,$02,$F8,$02,$08,$04,$00,$02,$F8,$02,$04,$02,$FC,$FF,$04
3495   AF17 08040002F8020402FCFF04
3496   AF22 07              .byte $07
3497   AF23                 
3498   AF23                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_handoff = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$41  
3498   AF23             
3498   91E1             
3498   91E1 23          
3498   9271             
3498   9271 AF          
3498   9272             
3498   9272             
3498   AF23             
3498   AF23~                NEWSNDFREQ(sfreq_handoff)    ;,$41  
3498   AF23~                NEWSNDFREQ(sfreq_handoff)    ;,$41  
3498   AF23             
3499   AF23 02 00 0C        .byte $02,$00,$0C
3500   AF26 02 00 00    	.byte $02,$00,$00
3501   AF29 02 10 00    	.byte $02,$10,$00
3502   AF2C FF 1B 09    	.byte $FF,$1B,$09
3503   AF2F 02 00 00    	.byte $02,$00,$00
3504   AF32 02 10 00    	.byte $02,$10,$00
3505   AF35 FF 06 09    	.byte $FF,$06,$09
3506   AF38 02 00 00    	.byte $02,$00,$00
3507   AF3B 02 20 00    	.byte $02,$20,$00
3508   AF3E FF 0B 09    	.byte $FF,$0B,$09
3509   AF41 02 00 00    	.byte $02,$00,$00
3510   AF44 02 30 F0    	.byte $02,$30,$F0
3511   AF47                 
3512   AF47                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_handoff = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3512   AF47             
3512   90BF             
3512   90BF 47          
3512   914F             
3512   914F AF          
3512   9150             
3512   9150             
3512   AF47             
3512   AF47~                NEWTUNE(s_handoff)  
3512   AF47~                NEWTUNE(s_handoff)  
3512   AF47             
3513   AF47                 \ .db isc_dctl,$01
3513   AF47 8B 01       
3514   AF49                 \ .db isc_freq,sfreq_handoff
3514   AF49 86 31       
3515   AF4B                 \ .db isc_ctrl,sctrl_handoff
3515   AF4B 87 3B       
3516   AF4D                 \ .db isc_sfunc10,$00
3516   AF4D 90 00       
3517   AF4F                 \ .db isc_sebvol,$00
3517   AF4F 82 00       
3518   AF51                 \ .db isc_ctrlm,CHCTL_NOPOLY
3518   AF51 8A A0       
3519   AF53                 \ .db _REST,$C8
3519   AF53 00 C8       
3520   AF55                 \ .dw $0000
3520   AF55 00 00       
3521   AF57                 
3522   AF57             ;**************************************
3523   AF57                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_handon = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$42
3523   AF57             
3523   930C             
3523   930C 57          
3523   939C             
3523   939C AF          
3523   939D             
3523   939D             
3523   AF57             
3523   AF57~                NEWSNDAMP(sctrl_handon)  ;,$42
3523   AF57~                NEWSNDAMP(sctrl_handon)  ;,$42
3523   AF57             
3524   AF57 020402FCFF04    .byte $02,$04,$02,$FC,$FF,$04,$07,$02,$08,$04,$00
3524   AF5D 0702080400
3525   AF62 02F802080400    .byte $02,$F8,$02,$08,$04,$00,$02,$F8,$02,$08,$02,$00,$02,$04,$08,$00
3525   AF68 02F80208020002040800
3526   AF72 02F4020C0600    .byte $02,$F4,$02,$0C,$06,$00,$02,$04,$06,$00,$02,$F0,$02,$10,$08,$00
3526   AF78 0204060002F002100800
3527   AF82 02040900FF10    .byte $02,$04,$09,$00,$FF,$10,$07
3527   AF88 07
3528   AF89                 
3529   AF89                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_handon = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$42
3529   AF89             
3529   91E2             
3529   91E2 89          
3529   9272             
3529   9272 AF          
3529   9273             
3529   9273             
3529   AF89             
3529   AF89~                NEWSNDFREQ(sfreq_handon) ;,$42
3529   AF89~                NEWSNDFREQ(sfreq_handon) ;,$42
3529   AF89             
3530   AF89 02D00F020000    .byte $02,$D0,$0F,$02,$00,$00,$02,$E0,$FF
3530   AF8F 02E0FF
3531   AF92 FF0B09020000    .byte $FF,$0B,$09,$02,$00,$00,$02,$F0,$FF,$FF,$24,$09,$04,$00,$00
3531   AF98 02F0FFFF2409040000
3532   AFA1                 
3533   AFA1                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_handon = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3533   AFA1             
3533   90C0             
3533   90C0 A1          
3533   9150             
3533   9150 AF          
3533   9151             
3533   9151             
3533   AFA1             
3533   AFA1~                NEWTUNE(s_handon)   
3533   AFA1~                NEWTUNE(s_handon)   
3533   AFA1             
3534   AFA1                 \ .db isc_dctl,$01
3534   AFA1 8B 01       
3535   AFA3                 \ .db isc_freq,sfreq_handon
3535   AFA3 86 32       
3536   AFA5                 \ .db isc_ctrl,sctrl_handon
3536   AFA5 87 3C       
3537   AFA7                 \ .db isc_sfunc10,$00
3537   AFA7 90 00       
3538   AFA9                 \ .db isc_sebvol,$00
3538   AFA9 82 00       
3539   AFAB                 \ .db isc_ctrlm,CHCTL_NOPOLY
3539   AFAB 8A A0       
3540   AFAD                 \ .db _REST,$CA
3540   AFAD 00 CA       
3541   AFAF                 \ .dw $0000
3541   AFAF 00 00       
3542   AFB1                 
3543   AFB1             ;**************************************
3544   AFB1                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_trans = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$45
3544   AFB1             
3544   930D             
3544   930D B1          
3544   939D             
3544   939D AF          
3544   939E             
3544   939E             
3544   AFB1             
3544   AFB1~                NEWSNDAMP(sctrl_trans)   ;,$45
3544   AFB1~                NEWSNDAMP(sctrl_trans)   ;,$45
3544   AFB1             
3545   AFB1 020404000204    .byte $02,$04,$04,$00,$02,$04,$02,$00,$02,$04,$02,$00,$04
3545   AFB7 02000204020004
3546   AFBE 040408040C48    .byte $04,$04,$08,$04,$0C,$48,$00,$1C,$FC
3546   AFC4 001CFC
3547   AFC7                 
3548   AFC7                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_trans = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$45
3548   AFC7             
3548   91E3             
3548   91E3 C7          
3548   9273             
3548   9273 AF          
3548   9274             
3548   9274             
3548   AFC7             
3548   AFC7~                NEWSNDFREQ(sfreq_trans)  ;,$45
3548   AFC7~                NEWSNDFREQ(sfreq_trans)  ;,$45
3548   AFC7             
3549   AFC7 0230007C0000    .byte $02,$30,$00,$7C,$00,$00
3550   AFCD                 
3551   AFCD                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_trans = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3551   AFCD             
3551   90C1             
3551   90C1 CD          
3551   9151             
3551   9151 AF          
3551   9152             
3551   9152             
3551   AFCD             
3551   AFCD~                NEWTUNE(s_trans)    
3551   AFCD~                NEWTUNE(s_trans)    
3551   AFCD             
3552   AFCD                 \ .db isc_dctl,$64
3552   AFCD 8B 64       
3553   AFCF                 \ .db isc_freq,sfreq_trans
3553   AFCF 86 33       
3554   AFD1                 \ .db isc_ctrl,sctrl_trans
3554   AFD1 87 3D       
3555   AFD3                 \ .db isc_sfunc10,$00
3555   AFD3 90 00       
3556   AFD5                 \ .db isc_sebvol,$00
3556   AFD5 82 00       
3557   AFD7                 \ .db isc_ctrlm,CHCTL_POLY4_5
3557   AFD7 8A 40       
3558   AFD9                 \ .db _REST,$7E
3558   AFD9 00 7E       
3559   AFDB                 \ .dw $0000
3559   AFDB 00 00       
3560   AFDD                 
3561   AFDD             ;**************************************
3562   AFDD                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_trans2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$46
3562   AFDD             
3562   930E             
3562   930E DD          
3562   939E             
3562   939E AF          
3562   939F             
3562   939F             
3562   AFDD             
3562   AFDD~                NEWSNDAMP(sctrl_trans2)  ;,$46
3562   AFDD~                NEWSNDAMP(sctrl_trans2)  ;,$46
3562   AFDD             
3563   AFDD 04 00           .byte $04,$00
3564   AFDF                 
3565   AFDF                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_trans2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$46
3565   AFDF             
3565   91E4             
3565   91E4 DF          
3565   9274             
3565   9274 AF          
3565   9275             
3565   9275             
3565   AFDF             
3565   AFDF~                NEWSNDFREQ(sfreq_trans2) ;,$46
3565   AFDF~                NEWSNDFREQ(sfreq_trans2) ;,$46
3565   AFDF             
3566   AFDF 02 A0 0F        .byte $02,$A0,$0F
3567   AFE2                 
3568   AFE2                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_trans2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3568   AFE2             
3568   90C2             
3568   90C2 E2          
3568   9152             
3568   9152 AF          
3568   9153             
3568   9153             
3568   AFE2             
3568   AFE2~                NEWTUNE(s_trans2)   
3568   AFE2~                NEWTUNE(s_trans2)   
3568   AFE2             
3569   AFE2                 \ .dw $0000
3569   AFE2 00 00       
3570   AFE4             
3571   AFE4                 
3572   AFE4             ;**************************************
3573   AFE4                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_cann = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$47
3573   AFE4             
3573   930F             
3573   930F E4          
3573   939F             
3573   939F AF          
3573   93A0             
3573   93A0             
3573   AFE4             
3573   AFE4~                NEWSNDAMP(sctrl_cann)    ;,$47
3573   AFE4~                NEWSNDAMP(sctrl_cann)    ;,$47
3573   AFE4             
3574   AFE4 1000023802C8    .byte $10,$00,$02,$38,$02,$C8,$2A,$00
3574   AFEA 2A00
3575   AFEC                 
3576   AFEC                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_cann = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$47
3576   AFEC             
3576   91E5             
3576   91E5 EC          
3576   9275             
3576   9275 AF          
3576   9276             
3576   9276             
3576   AFEC             
3576   AFEC~                NEWSNDFREQ(sfreq_cann)   ;,$47
3576   AFEC~                NEWSNDFREQ(sfreq_cann)   ;,$47
3576   AFEC             
3577   AFEC 3E 00 00        .byte $3E,$00,$00
3578   AFEF             
3579   AFEF                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_cann = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3579   AFEF             
3579   90C3             
3579   90C3 EF          
3579   9153             
3579   9153 AF          
3579   9154             
3579   9154             
3579   AFEF             
3579   AFEF~                NEWTUNE(s_cann) 
3579   AFEF~                NEWTUNE(s_cann) 
3579   AFEF             
3580   AFEF                 \ .db isc_freq,sfreq_cann
3580   AFEF 86 35       
3581   AFF1                 \ .db isc_ctrl,sctrl_cann
3581   AFF1 87 3F       
3582   AFF3                 \ .db isc_sfunc10,$00
3582   AFF3 90 00       
3583   AFF5                 \ .db isc_sebvol,$00
3583   AFF5 82 00       
3584   AFF7                 \ .db isc_ctrlm,CHCTL_POLY4_5
3584   AFF7 8A 40       
3585   AFF9                 \ .db _REST,$3C
3585   AFF9 00 3C       
3586   AFFB                 \ .dw $0000
3586   AFFB 00 00       
3587   AFFD                 
3588   AFFD             ;**************************************
3589   AFFD                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_cann2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$48
3589   AFFD             
3589   9310             
3589   9310 FD          
3589   93A0             
3589   93A0 AF          
3589   93A1             
3589   93A1             
3589   AFFD             
3589   AFFD~                NEWSNDAMP(sctrl_cann2)   ;,$48
3589   AFFD~                NEWSNDAMP(sctrl_cann2)   ;,$48
3589   AFFD             
3590   AFFD 1E0402001CFC    .byte $1E,$04,$02,$00,$1C,$FC
3591   B003                 
3592   B003                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_cann2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$48
3592   B003             
3592   91E6             
3592   91E6 03          
3592   9276             
3592   9276 B0          
3592   9277             
3592   9277             
3592   B003             
3592   B003~                NEWSNDFREQ(sfreq_cann2)  ;,$48
3592   B003~                NEWSNDFREQ(sfreq_cann2)  ;,$48
3592   B003             
3593   B003 02A000380000    .byte $02,$A0,$00,$38,$00,$00,$02,$60,$FF
3593   B009 0260FF
3594   B00C                 
3595   B00C                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_cann2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3595   B00C             
3595   90C4             
3595   90C4 0C          
3595   9154             
3595   9154 B0          
3595   9155             
3595   9155             
3595   B00C             
3595   B00C~                NEWTUNE(s_cann2)    
3595   B00C~                NEWTUNE(s_cann2)    
3595   B00C             
3596   B00C                 \ .db isc_freq,sfreq_cann2
3596   B00C 86 36       
3597   B00E                 \ .db isc_ctrl,sctrl_cann2
3597   B00E 87 40       
3598   B010                 \ .db isc_sfunc10,$00
3598   B010 90 00       
3599   B012                 \ .db isc_sebvol,$00
3599   B012 82 00       
3600   B014                 \ .db isc_ctrlm,CHCTL_POLY4_5
3600   B014 8A 40       
3601   B016                 \ .db _REST,$3C
3601   B016 00 3C       
3602   B018                 \ .dw $0000
3602   B018 00 00       
3603   B01A                 
3604   B01A             ;**************************************
3605   B01A                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_cann3 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$49
3605   B01A             
3605   9311             
3605   9311 1A          
3605   93A1             
3605   93A1 B0          
3605   93A2             
3605   93A2             
3605   B01A             
3605   B01A~                NEWSNDAMP(sctrl_cann3)   ;,$49
3605   B01A~                NEWSNDAMP(sctrl_cann3)   ;,$49
3605   B01A             
3606   B01A 10 00           .byte $10,$00
3607   B01C 02 3C       	.byte $02,$3C
3608   B01E 02 00           .byte $02,$00
3609   B020 02 C4       	.byte $02,$C4
3610   B022 02 00       	.byte $02,$00
3611   B024 02 3C       	.byte $02,$3C
3612   B026 06 00       	.byte $06,$00
3613   B028 0E F8       	.byte $0E,$F8
3614   B02A 02 FC       	.byte $02,$FC
3615   B02C 0E 00       	.byte $0E,$00
3616   B02E                 
3617   B02E                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_cann3 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$49
3617   B02E             
3617   91E7             
3617   91E7 2E          
3617   9277             
3617   9277 B0          
3617   9278             
3617   9278             
3617   B02E             
3617   B02E~                NEWSNDFREQ(sfreq_cann3)  ;,$49
3617   B02E~                NEWSNDFREQ(sfreq_cann3)  ;,$49
3617   B02E             
3618   B02E 02 30 00        .byte $02,$30,$00
3619   B031 3A 00 00    	.byte $3A,$00,$00
3620   B034                 
3621   B034                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_cann3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3621   B034             
3621   90C5             
3621   90C5 34          
3621   9155             
3621   9155 B0          
3621   9156             
3621   9156             
3621   B034             
3621   B034~                NEWTUNE(s_cann3)    
3621   B034~                NEWTUNE(s_cann3)    
3621   B034             
3622   B034                 \ .db isc_freq,sfreq_cann3
3622   B034 86 37       
3623   B036                 \ .db isc_ctrl,sctrl_cann3
3623   B036 87 41       
3624   B038                 \ .db isc_sfunc10,$00
3624   B038 90 00       
3625   B03A                 \ .db isc_sebvol,$00
3625   B03A 82 00       
3626   B03C                 \ .db isc_ctrlm,CHCTL_POLY17_5
3626   B03C 8A 00       
3627   B03E                 \ .db _REST,$3C
3627   B03E 00 3C       
3628   B040                 \ .dw $0000
3628   B040 00 00       
3629   B042                 
3630   B042             ;**************************************
3631   B042                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_cann4 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$4a
3631   B042             
3631   9312             
3631   9312 42          
3631   93A2             
3631   93A2 B0          
3631   93A3             
3631   93A3             
3631   B042             
3631   B042~                NEWSNDAMP(sctrl_cann4)   ;,$4a
3631   B042~                NEWSNDAMP(sctrl_cann4)   ;,$4a
3631   B042             
3632   B042 10 00           .byte $10,$00
3633   B044 02 3C       	.byte $02,$3C
3634   B046 1E FC       	.byte $1E,$FC
3635   B048 0E 00       	.byte $0E,$00
3636   B04A                 
3637   B04A                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_cann4 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$4a
3637   B04A             
3637   91E8             
3637   91E8 4A          
3637   9278             
3637   9278 B0          
3637   9279             
3637   9279             
3637   B04A             
3637   B04A~                NEWSNDFREQ(sfreq_cann4)  ;,$4a
3637   B04A~                NEWSNDFREQ(sfreq_cann4)  ;,$4a
3637   B04A             
3638   B04A 12 00 00 28     .byte $12,$00,$00,$28
3639   B04E 1000040000      .byte $10,$00,$04,$00,$00
3640   B053                 
3641   B053                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_cann4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3641   B053             
3641   90C6             
3641   90C6 53          
3641   9156             
3641   9156 B0          
3641   9157             
3641   9157             
3641   B053             
3641   B053~                NEWTUNE(s_cann4)    
3641   B053~                NEWTUNE(s_cann4)    
3641   B053             
3642   B053                 \ .db isc_freq,sfreq_cann4
3642   B053 86 38       
3643   B055                 \ .db isc_ctrl,sctrl_cann4
3643   B055 87 42       
3644   B057                 \ .db isc_sfunc10,$00
3644   B057 90 00       
3645   B059                 \ .db isc_sebvol,$00
3645   B059 82 00       
3646   B05B                 \ .db isc_ctrlm,CHCTL_POLY17
3646   B05B 8A 80       
3647   B05D                 \ .db _REST,$3C
3647   B05D 00 3C       
3648   B05F                 \ .dw $0000
3648   B05F 00 00       
3649   B061                 
3650   B061             ;**************************************
3651   B061                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_ssplash = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$4b
3651   B061             
3651   9313             
3651   9313 61          
3651   93A3             
3651   93A3 B0          
3651   93A4             
3651   93A4             
3651   B061             
3651   B061~                NEWSNDAMP(sctrl_ssplash) ;,$4b
3651   B061~                NEWSNDAMP(sctrl_ssplash) ;,$4b
3651   B061             
3652   B061 02 3C           .byte $02,$3C
3653   B063 06 00       	.byte $06,$00
3654   B065 1E FC       	.byte $1E,$FC
3655   B067 0C 00       	.byte $0C,$00
3656   B069                 
3657   B069                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_ssplash = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$4b
3657   B069             
3657   91E9             
3657   91E9 69          
3657   9279             
3657   9279 B0          
3657   927A             
3657   927A             
3657   B069             
3657   B069~                NEWSNDFREQ(sfreq_ssplash)    ;,$4b
3657   B069~                NEWSNDFREQ(sfreq_ssplash)    ;,$4b
3657   B069             
3658   B069 0230002A00      .byte $02,$30,$00,$2A,$00
3659   B06E 000270000400    .byte $00,$02,$70,$00,$04,$00,$00
3659   B074 00
3660   B075                 
3661   B075                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_ssplash = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3661   B075             
3661   90C7             
3661   90C7 75          
3661   9157             
3661   9157 B0          
3661   9158             
3661   9158             
3661   B075             
3661   B075~                NEWTUNE(s_ssplash)  
3661   B075~                NEWTUNE(s_ssplash)  
3661   B075             
3662   B075                 \ .db isc_freq,sfreq_ssplash
3662   B075 86 39       
3663   B077                 \ .db isc_ctrl,sctrl_ssplash
3663   B077 87 43       
3664   B079                 \ .db isc_sfunc10,$00
3664   B079 90 00       
3665   B07B                 \ .db isc_sebvol,$00
3665   B07B 82 00       
3666   B07D                 \ .db isc_ctrlm,CHCTL_POLY17_5
3666   B07D 8A 00       
3667   B07F                 \ .db _REST,$2C
3667   B07F 00 2C       
3668   B081                 \ .db isc_ctrlm,CHCTL_POLY4
3668   B081 8A C0       
3669   B083                 \ .db _REST,$05
3669   B083 00 05       
3670   B085                 \ .dw $0000
3670   B085 00 00       
3671   B087                 
3672   B087             ;**************************************
3673   B087                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_rblow = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$4c
3673   B087             
3673   9314             
3673   9314 87          
3673   93A4             
3673   93A4 B0          
3673   93A5             
3673   93A5             
3673   B087             
3673   B087~                NEWSNDAMP(sctrl_rblow)   ;,$4c
3673   B087~                NEWSNDAMP(sctrl_rblow)   ;,$4c
3673   B087             
3674   B087 02 3C 06 00     .byte $02,$3C,$06,$00
3675   B08B 02 C4 06 00     .byte $02,$C4,$06,$00
3676   B08F 02 3C 04 FC     .byte $02,$3C,$04,$FC
3677   B093 02 00 02 FC     .byte $02,$00,$02,$FC
3678   B097 04 00 02 FC     .byte $04,$00,$02,$FC
3679   B09B 06 00 02 FC     .byte $06,$00,$02,$FC
3680   B09F 08 00 02 FC     .byte $08,$00,$02,$FC
3681   B0A3 0A 00 02 FC     .byte $0A,$00,$02,$FC
3682   B0A7 0E 00 02 FC     .byte $0E,$00,$02,$FC
3683   B0AB 10 00 02 FC     .byte $10,$00,$02,$FC
3684   B0AF 12 00 02 FC     .byte $12,$00,$02,$FC
3685   B0B3 14 00 02 FC     .byte $14,$00,$02,$FC
3686   B0B7 16 00 02 FC     .byte $16,$00,$02,$FC
3687   B0BB 18 00 02 FC     .byte $18,$00,$02,$FC
3688   B0BF 1A 00 02 FC     .byte $1A,$00,$02,$FC
3689   B0C3 10 00 02 FC     .byte $10,$00,$02,$FC
3690   B0C7                 
3691   B0C7                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_rblow = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$4c
3691   B0C7             
3691   91EA             
3691   91EA C7          
3691   927A             
3691   927A B0          
3691   927B             
3691   927B             
3691   B0C7             
3691   B0C7~                NEWSNDFREQ(sfreq_rblow)  ;,$4c
3691   B0C7~                NEWSNDFREQ(sfreq_rblow)  ;,$4c
3691   B0C7             
3692   B0C7 02 C0 03 E8     .byte $02,$C0,$03,$E8
3693   B0CB 00 00           .byte $00,$00
3694   B0CD                 
3695   B0CD                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_rblow = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3695   B0CD             
3695   90C8             
3695   90C8 CD          
3695   9158             
3695   9158 B0          
3695   9159             
3695   9159             
3695   B0CD             
3695   B0CD~                NEWTUNE(s_rblow)    
3695   B0CD~                NEWTUNE(s_rblow)    
3695   B0CD             
3696   B0CD                 \ .db isc_freq,sfreq_rblow
3696   B0CD 86 3A       
3697   B0CF                 \ .db isc_ctrl,sctrl_rblow
3697   B0CF 87 44       
3698   B0D1                 \ .db isc_sfunc10,$00
3698   B0D1 90 00       
3699   B0D3                 \ .db isc_sebvol,$00
3699   B0D3 82 00       
3700   B0D5                 \ .db isc_ctrlm,CHCTL_POLY4_5
3700   B0D5 8A 40       
3701   B0D7                 \ .db _REST,$EA
3701   B0D7 00 EA       
3702   B0D9                 \ .dw $0000
3702   B0D9 00 00       
3703   B0DB                 
3704   B0DB             ;**************************************
3705   B0DB                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_rblow2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$4d
3705   B0DB             
3705   9315             
3705   9315 DB          
3705   93A5             
3705   93A5 B0          
3705   93A6             
3705   93A6             
3705   B0DB             
3705   B0DB~                NEWSNDAMP(sctrl_rblow2)  ;,$4d
3705   B0DB~                NEWSNDAMP(sctrl_rblow2)  ;,$4d
3705   B0DB             
3706   B0DB 02 3C 06        .byte $02,$3C,$06
3707   B0DE 0002C4060002    .byte $00,$02,$C4,$06,$00,$02,$3C,$04,$FC,$02,$00,$02,$FC,$04,$00,$02
3707   B0E4 3C04FC020002FC040002
3708   B0EE FC060002FC08    .byte $FC,$06,$00,$02,$FC,$08,$00,$02,$FC,$0A,$00,$02,$FC,$0E,$00,$02
3708   B0F4 0002FC0A0002FC0E0002
3709   B0FE FC100002FC12    .byte $FC,$10,$00,$02,$FC,$12,$00,$02,$FC,$14,$00,$02,$FC,$16,$00,$02
3709   B104 0002FC140002FC160002
3710   B10E FC180002FC1A    .byte $FC,$18,$00,$02,$FC,$1A,$00,$02,$FC,$16,$00,$02,$FC
3710   B114 0002FC160002FC
3711   B11B                 
3712   B11B                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_rblow2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$4d
3712   B11B             
3712   91EB             
3712   91EB 1B          
3712   927B             
3712   927B B1          
3712   927C             
3712   927C             
3712   B11B             
3712   B11B~                NEWSNDFREQ(sfreq_rblow2) ;,$4d
3712   B11B~                NEWSNDFREQ(sfreq_rblow2) ;,$4d
3712   B11B             
3713   B11B 02 80 01        .byte $02,$80,$01
3714   B11E 04F0FF081000    .byte $04,$F0,$FF,$08,$10,$00,$08,$F0,$FF,$FF,$0D,$09,$08,$10,$00,$02
3714   B124 08F0FFFF0D0908100002
3715   B12E 60 FE           .byte $60,$FE
3716   B130                 
3717   B130                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_rblow2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3717   B130             
3717   90C9             
3717   90C9 30          
3717   9159             
3717   9159 B1          
3717   915A             
3717   915A             
3717   B130             
3717   B130~                NEWTUNE(s_rblow2)   
3717   B130~                NEWTUNE(s_rblow2)   
3717   B130             
3718   B130                 \ .db isc_freq,sfreq_rblow2
3718   B130 86 3B       
3719   B132                 \ .db isc_ctrl,sctrl_rblow2
3719   B132 87 45       
3720   B134                 \ .db isc_sfunc10,$00
3720   B134 90 00       
3721   B136                 \ .db isc_sebvol,$00
3721   B136 82 00       
3722   B138                 \ .db isc_ctrlm,CHCTL_POLY17_5
3722   B138 8A 00       
3723   B13A                 \ .db _REST,$F0
3723   B13A 00 F0       
3724   B13C                 \ .dw $0000
3724   B13C 00 00       
3725   B13E                 
3726   B13E             ;**************************************
3727   B13E                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_rblow3 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$4e
3727   B13E             
3727   9316             
3727   9316 3E          
3727   93A6             
3727   93A6 B1          
3727   93A7             
3727   93A7             
3727   B13E             
3727   B13E~                NEWSNDAMP(sctrl_rblow3)  ;,$4e
3727   B13E~                NEWSNDAMP(sctrl_rblow3)  ;,$4e
3727   B13E             
3728   B13E 023C020002C4    .byte $02,$3C,$02,$00,$02,$C4,$08,$00,$02,$3C,$06,$FC,$02,$00,$02,$FC
3728   B144 0800023C06FC020002FC
3729   B14E FF0207040002    .byte $FF,$02,$07,$04,$00,$02,$FC,$FF,$02,$07,$06,$00,$02,$FC,$FF,$02
3729   B154 FCFF0207060002FCFF02
3730   B15E 07080002FC08    .byte $07,$08,$00,$02,$FC,$08,$00,$02,$FC,$0A,$00,$02,$FC
3730   B164 0002FC0A0002FC
3731   B16B                 
3732   B16B                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_rblow3 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$4e
3732   B16B             
3732   91EC             
3732   91EC 6B          
3732   927C             
3732   927C B1          
3732   927D             
3732   927D             
3732   B16B             
3732   B16B~                NEWSNDFREQ(sfreq_rblow3) ;,$4e
3732   B16B~                NEWSNDFREQ(sfreq_rblow3) ;,$4e
3732   B16B             
3733   B16B 0230020AF0FF    .byte $02,$30,$02,$0A,$F0,$FF,$02,$D0,$FE,$5E,$10,$00
3733   B171 02D0FE5E1000
3734   B177                 
3735   B177                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_rblow3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3735   B177             
3735   90CA             
3735   90CA 77          
3735   915A             
3735   915A B1          
3735   915B             
3735   915B             
3735   B177             
3735   B177~                NEWTUNE(s_rblow3)   
3735   B177~                NEWTUNE(s_rblow3)   
3735   B177             
3736   B177                 \ .db isc_freq,sfreq_rblow3
3736   B177 86 3C       
3737   B179                 \ .db isc_ctrl,sctrl_rblow3
3737   B179 87 46       
3738   B17B                 \ .db isc_sfunc10,$00
3738   B17B 90 00       
3739   B17D                 \ .db isc_sebvol,$00
3739   B17D 82 00       
3740   B17F                 \ .db isc_ctrlm,CHCTL_POLY5
3740   B17F 8A 20       
3741   B181                 \ .db _REST,$32
3741   B181 00 32       
3742   B183                 \ .db isc_ctrlm,CHCTL_POLY17_5
3742   B183 8A 00       
3743   B185                 \ .db _REST,$03
3743   B185 00 03       
3744   B187                 \ .db isc_ctrlm,CHCTL_POLY5
3744   B187 8A 20       
3745   B189                 \ .db _REST,$39
3745   B189 00 39       
3746   B18B                 \ .dw $0000
3746   B18B 00 00       
3747   B18D                 
3748   B18D             ;**************************************
3749   B18D                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_escfall = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$52
3749   B18D             
3749   9317             
3749   9317 8D          
3749   93A7             
3749   93A7 B1          
3749   93A8             
3749   93A8             
3749   B18D             
3749   B18D~                NEWSNDAMP(sctrl_escfall) ;,$52
3749   B18D~                NEWSNDAMP(sctrl_escfall) ;,$52
3749   B18D             
3750   B18D 02 08           .byte $02,$08
3751   B18F FE 00       	.byte $FE,$00
3752   B191 FE 00       	.byte $FE,$00
3753   B193 FE 00       	.byte $FE,$00
3754   B195 FE 00       	.byte $FE,$00
3755   B197                 
3756   B197                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_escfall = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$52
3756   B197             
3756   91ED             
3756   91ED 97          
3756   927D             
3756   927D B1          
3756   927E             
3756   927E             
3756   B197             
3756   B197~                NEWSNDFREQ(sfreq_escfall)    ;,$52
3756   B197~                NEWSNDFREQ(sfreq_escfall)    ;,$52
3756   B197             
3757   B197 3E 00 00        .byte $3E,$00,$00
3758   B19A 02 10 00    	.byte $02,$10,$00
3759   B19D FF 0E 09    	.byte $FF,$0E,$09		;This is a jump value... 
3760   B1A0             							;	$FF - indicates jump
3761   B1A0             							;   $0E - indicates counter of times to loop
3762   B1A0             							;   $09 - is number of bytes to subtract from frequency PC 
3763   B1A0 3A 00 00    	.byte $3A,$00,$00
3764   B1A3                 
3765   B1A3                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_escfall = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3765   B1A3             
3765   90CB             
3765   90CB A3          
3765   915B             
3765   915B B1          
3765   915C             
3765   915C             
3765   B1A3             
3765   B1A3~                NEWTUNE(s_escfall)  
3765   B1A3~                NEWTUNE(s_escfall)  
3765   B1A3             
3766   B1A3                 \ .db isc_freq,sfreq_escfall
3766   B1A3 86 3D       
3767   B1A5                 \ .db isc_ctrl,sctrl_escfall
3767   B1A5 87 47       
3768   B1A7                 \ .db isc_sfunc10,$00
3768   B1A7 90 00       
3769   B1A9                 \ .db isc_sebvol,$00
3769   B1A9 82 00       
3770   B1AB                 \ .db isc_ctrlm,CHCTL_POLY17_5
3770   B1AB 8A 00       
3771   B1AD                 \ .db _REST,$02
3771   B1AD 00 02       
3772   B1AF                 \ .db isc_ctrlm,CHCTL_POLY17_5
3772   B1AF 8A 00       
3773   B1B1                 \ .db _REST,$FF
3773   B1B1 00 FF       
3774   B1B3                 \ .db isc_ctrlm,CHCTL_POLY17_5
3774   B1B3 8A 00       
3775   B1B5                 \ .db _REST,$FF
3775   B1B5 00 FF       
3776   B1B7                 \ .db isc_ctrlm,CHCTL_POLY17_5
3776   B1B7 8A 00       
3777   B1B9                 \ .db _REST,$FF
3777   B1B9 00 FF       
3778   B1BB                 \ .db isc_ctrlm,CHCTL_POLY17_5
3778   B1BB 8A 00       
3779   B1BD                 \ .db _REST,$FF
3779   B1BD 00 FF       
3780   B1BF                 \ .dw $0000
3780   B1BF 00 00       
3781   B1C1                 
3782   B1C1             ;**************************************
3783   B1C1                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_mazekill = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$55
3783   B1C1             
3783   9318             
3783   9318 C1          
3783   93A8             
3783   93A8 B1          
3783   93A9             
3783   93A9             
3783   B1C1             
3783   B1C1~                NEWSNDAMP(sctrl_mazekill)    ;,$55
3783   B1C1~                NEWSNDAMP(sctrl_mazekill)    ;,$55
3783   B1C1             
3784   B1C1 04 00 02        .byte $04,$00,$02
3785   B1C4 040200020404    .byte $04,$02,$00,$02,$04,$04,$00,$02,$04,$06,$00,$02,$04,$08,$00,$FF
3785   B1CA 000204060002040800FF
3786   B1D4 080702080A00    .byte $08,$07,$02,$08,$0A,$00,$02,$04,$28,$00,$10,$FC
3786   B1DA 0204280010FC
3787   B1E0                 
3788   B1E0                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_mazekill = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$55
3788   B1E0             
3788   91EE             
3788   91EE E0          
3788   927E             
3788   927E B1          
3788   927F             
3788   927F             
3788   B1E0             
3788   B1E0~                NEWSNDFREQ(sfreq_mazekill)   ;,$55
3788   B1E0~                NEWSNDFREQ(sfreq_mazekill)   ;,$55
3788   B1E0             
3789   B1E0 02 50 08 02     .byte $02,$50,$08,$02
3790   B1E4 00000230FE02    .byte $00,$00,$02,$30,$FE,$02,$00,$00,$02,$F0,$FE,$02,$00,$00,$02,$30
3790   B1EA 000002F0FE0200000230
3791   B1F4 020250FF02D0    .byte $02,$02,$50,$FF,$02,$D0,$FE,$02,$90,$00,$02,$00,$00,$02,$C0,$FE
3791   B1FA FE02900002000002C0FE
3792   B204 0260020210FF    .byte $02,$60,$02,$02,$10,$FF,$02,$00,$00,$02,$50,$FF,$02,$20,$01,$02
3792   B20A 0200000250FF02200102
3793   B214 90FE02000002    .byte $90,$FE,$02,$00,$00,$02,$80,$00,$02,$00,$00,$02,$C0,$FE,$02,$00
3793   B21A 800002000002C0FE0200
3794   B224 000290020240    .byte $00,$02,$90,$02,$02,$40,$FE,$02,$B0,$00,$02,$30,$FE,$02,$00,$00
3794   B22A FE02B0000230FE020000
3795   B234 02B000020000    .byte $02,$B0,$00,$02,$00,$00,$02,$C0,$FE,$02,$00,$00,$02,$F0,$02,$02
3795   B23A 02C0FE02000002F00202
3796   B244 50FD02C00002    .byte $50,$FD,$02,$C0,$00,$02,$00,$00,$02,$10,$01,$02,$10,$FD,$02,$D0
3796   B24A 00000210010210FD02D0
3797   B254 0102A0FE02A0    .byte $01,$02,$A0,$FE,$02,$A0,$00,$02,$00,$00,$02,$20,$01,$02,$A0,$FD
3797   B25A 0002000002200102A0FD
3798   B264 02000002E000    .byte $02,$00,$00,$02,$E0,$00,$02,$F0,$00,$02,$50,$FE,$02,$00,$00,$02
3798   B26A 02F0000250FE02000002
3799   B274 E00002000002    .byte $E0,$00,$02,$00,$00,$02,$70,$FE,$02,$70,$FF,$02,$00,$01,$02,$00
3799   B27A 70FE0270FF0200010200
3800   B284 FF0290010200    .byte $FF,$02,$90,$01,$02,$00,$FE,$02,$80,$00,$02,$50,$FF,$02,$00,$00
3800   B28A FE0280000250FF020000
3801   B294 023000028000    .byte $02,$30,$00,$02,$80,$00,$02,$00,$00,$04,$80,$FF,$02,$50,$00,$02
3801   B29A 0200000480FF02500002
3802   B2A4 100002B0FF02    .byte $10,$00,$02,$B0,$FF,$02,$70,$00,$02,$80,$FF,$02,$00,$00,$02,$A0
3802   B2AA 70000280FF02000002A0
3803   B2B4 0002000002D0    .byte $00,$02,$00,$00,$02,$D0,$FE,$02,$00,$00,$02,$D0,$00,$02,$60,$FF
3803   B2BA FE02000002D0000260FF
3804   B2C4 02400002C0FF    .byte $02,$40,$00,$02,$C0,$FF,$02,$D0,$FF,$02,$30,$00,$02,$F0,$FF,$02
3804   B2CA 02D0FF02300002F0FF02
3805   B2D4 40000270FF02    .byte $40,$00,$02,$70,$FF,$02,$00,$00,$02,$A0,$00,$02,$00,$00,$02,$60
3805   B2DA 000002A0000200000260
3806   B2E4 FF0200000260    .byte $FF,$02,$00,$00,$02,$60,$00
3806   B2EA 00
3807   B2EB                 
3808   B2EB                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_mazekill = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3808   B2EB             
3808   90CC             
3808   90CC EB          
3808   915C             
3808   915C B2          
3808   915D             
3808   915D             
3808   B2EB             
3808   B2EB~                NEWTUNE(s_mazekill) 
3808   B2EB~                NEWTUNE(s_mazekill) 
3808   B2EB             
3809   B2EB                 \ .db isc_dctl,$80
3809   B2EB 8B 80       
3810   B2ED                 \ .db isc_freq,sfreq_mazekill
3810   B2ED 86 3E       
3811   B2EF                 \ .db isc_ctrl,sctrl_mazekill
3811   B2EF 87 48       
3812   B2F1                 \ .db isc_sfunc10,$00
3812   B2F1 90 00       
3813   B2F3                 \ .db isc_sebvol,$00
3813   B2F3 82 00       
3814   B2F5                 \ .db isc_ctrlm,CHCTL_POLY4_5
3814   B2F5 8A 40       
3815   B2F7                 \ .db _REST,$02
3815   B2F7 00 02       
3816   B2F9                 \ .db isc_ctrlm,CHCTL_NOPOLY
3816   B2F9 8A A0       
3817   B2FB                 \ .db _REST,$B3
3817   B2FB 00 B3       
3818   B2FD                 \ .dw $0000
3818   B2FD 00 00       
3819   B2FF                 
3820   B2FF             ;**************************************
3821   B2FF                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_mazekill2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$56
3821   B2FF             
3821   9319             
3821   9319 FF          
3821   93A9             
3821   93A9 B2          
3821   93AA             
3821   93AA             
3821   B2FF             
3821   B2FF~                NEWSNDAMP(sctrl_mazekill2)   ;,$56
3821   B2FF~                NEWSNDAMP(sctrl_mazekill2)   ;,$56
3821   B2FF             
3822   B2FF 0400020402      .byte $04,$00,$02,$04,$02
3823   B304 000204040002    .byte $00,$02,$04,$04,$00,$02,$04,$06,$00,$02,$04,$08,$00,$FF,$08,$07
3823   B30A 04060002040800FF0807
3824   B314 02080A000204    .byte $02,$08,$0A,$00,$02,$04,$28,$00,$10,$FC
3824   B31A 280010FC
3825   B31E                 
3826   B31E                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_mazekill2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$56
3826   B31E             
3826   91EF             
3826   91EF 1E          
3826   927F             
3826   927F B3          
3826   9280             
3826   9280             
3826   B31E             
3826   B31E~                NEWSNDFREQ(sfreq_mazekill2)  ;,$56
3826   B31E~                NEWSNDFREQ(sfreq_mazekill2)  ;,$56
3826   B31E             
3827   B31E 025008020000    .byte $02,$50,$08,$02,$00,$00
3828   B324 0230FE020000    .byte $02,$30,$FE,$02,$00,$00,$02,$F0,$FE,$02,$00,$00,$02,$30,$02,$02
3828   B32A 02F0FE02000002300202
3829   B334 50FF02D0FE02    .byte $50,$FF,$02,$D0,$FE,$02,$90,$00,$02,$00,$00,$02,$C0,$FE,$02,$60
3829   B33A 900002000002C0FE0260
3830   B344 020210FF0200    .byte $02,$02,$10,$FF,$02,$00,$00,$02,$50,$FF,$02,$20,$01,$02,$90,$FE
3830   B34A 000250FF0220010290FE
3831   B354 020000028000    .byte $02,$00,$00,$02,$80,$00,$02,$00,$00,$02,$C0,$FE,$02,$00,$00,$02
3831   B35A 02000002C0FE02000002
3832   B364 90020240FE02    .byte $90,$02,$02,$40,$FE,$02,$B0,$00,$02,$30,$FE,$02,$00,$00,$02,$B0
3832   B36A B0000230FE02000002B0
3833   B374 0002000002C0    .byte $00,$02,$00,$00,$02,$C0,$FE,$02,$00,$00,$02,$F0,$02,$02,$50,$FD
3833   B37A FE02000002F0020250FD
3834   B384 02C000020000    .byte $02,$C0,$00,$02,$00,$00,$02,$10,$01,$02,$10,$FD,$02,$D0,$01,$02
3834   B38A 0210010210FD02D00102
3835   B394 A0FE02A00002    .byte $A0,$FE,$02,$A0,$00,$02,$00,$00,$02,$20,$01,$02,$A0,$FD,$02,$00
3835   B39A 000002200102A0FD0200
3836   B3A4 0002E00002F0    .byte $00,$02,$E0,$00,$02,$F0,$00,$02,$50,$FE,$02,$00,$00,$02,$E0,$00
3836   B3AA 000250FE02000002E000
3837   B3B4 0200000270FE    .byte $02,$00,$00,$02,$70,$FE,$02,$70,$FF,$02,$00,$01,$02,$00,$FF,$02
3837   B3BA 0270FF0200010200FF02
3838   B3C4 90010200FE02    .byte $90,$01,$02,$00,$FE,$02,$80,$00,$02,$50,$FF,$02,$00,$00,$02,$30
3838   B3CA 80000250FF0200000230
3839   B3D4 000280000200    .byte $00,$02,$80,$00,$02,$00,$00,$04,$80,$FF,$02,$50,$00,$02,$10,$00
3839   B3DA 000480FF025000021000
3840   B3E4 02B0FF027000    .byte $02,$B0,$FF,$02,$70,$00,$02,$80,$FF,$02,$00,$00,$02,$A0,$00,$02
3840   B3EA 0280FF02000002A00002
3841   B3F4 000002D0FE02    .byte $00,$00,$02,$D0,$FE,$02,$00,$00,$02,$D0,$00,$02,$60,$FF,$02,$40
3841   B3FA 000002D0000260FF0240
3842   B404 0002C0FF02D0    .byte $00,$02,$C0,$FF,$02,$D0,$FF,$02,$30,$00,$02,$F0,$FF,$02,$40,$00
3842   B40A FF02300002F0FF024000
3843   B414 0270FF020000    .byte $02,$70,$FF,$02,$00,$00,$02,$A0,$00,$02,$00,$00,$02,$60,$FF,$02
3843   B41A 02A0000200000260FF02
3844   B424 0000026000      .byte $00,$00,$02,$60,$00
3845   B429                 
3846   B429                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_mazekill2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3846   B429             
3846   90CD             
3846   90CD 29          
3846   915D             
3846   915D B4          
3846   915E             
3846   915E             
3846   B429             
3846   B429~                NEWTUNE(s_mazekill2)    
3846   B429~                NEWTUNE(s_mazekill2)    
3846   B429             
3847   B429                 \ .db isc_dctl,$80
3847   B429 8B 80       
3848   B42B                 \ .db isc_freq,sfreq_mazekill2
3848   B42B 86 3F       
3849   B42D                 \ .db isc_ctrl,sctrl_mazekill2
3849   B42D 87 49       
3850   B42F                 \ .db isc_sfunc10,$00
3850   B42F 90 00       
3851   B431                 \ .db isc_sebvol,$00
3851   B431 82 00       
3852   B433                 \ .db isc_ctrlm,CHCTL_POLY17
3852   B433 8A 80       
3853   B435                 \ .db _REST,$B4
3853   B435 00 B4       
3854   B437                 \ .dw $0000
3854   B437 00 00       
3855   B439             
3856   B439             
3857   B439             ;***************************************************************************
3858   B439             ;* Music Tables
3859   B439             ;***************************************************************************        
3860   B439             RATE_LARGO 		= 52d	;$34
3861   B439             RATE_DEFAULT	= 64d	;$40
3862   B439             RATE_MODERATO 	= 100d	;$64
3863   B439             RATE_ALLEGRO 	= 145d	;$91
3864   B439             RATE_VIVACE 	= 157d	;$9d
3865   B439             RATE_PRESTO 	= 177d	;$B1
3866   B439             
3867   B439             ;************************************
3868   B439             ;* Start Sound 
3869   B439             ;************************************
3870   B439             	;High Stacatto
3871   B439                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_start = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
3871   B439             
3871   90CE             
3871   90CE 39          
3871   915E             
3871   915E B4          
3871   915F             
3871   915F             
3871   B439             
3871   B439~                NEWTUNE(s_start)    
3871   B439~                NEWTUNE(s_start)    
3871   B439             
3872   B439                 \ .db isc_sebvol,$02
3872   B439 82 02       
3873   B43B                 \ .db isc_srate,RATE_VIVACE
3873   B43B 80 9D       
3874   B43D                 \ .db isc_ctrl,sctrl_hardswell
3874   B43D 87 05       
3875   B43F                 \ .db isc_sloops,$09
3875   B43F 8E 09       
3876   B441             		\ .db _B5,$20
3876   B441 4B 20       
3877   B443             		\ .db _Gb5,$20
3877   B443 46 20       
3878   B445             		\ .db _B4,$20
3878   B445 3F 20       
3879   B447             		\ .db _Gb5,$20
3879   B447 46 20       
3880   B449             		\ .db _B5,$20
3880   B449 4B 20       
3881   B44B             		\ .db _Gb5,$20
3881   B44B 46 20       
3882   B44D                 \ .db isc_sloope,$00
3882   B44D 8F 00       
3883   B44F                 \ .db _B5,$40
3883   B44F 4B 40       
3884   B451                 \ .db _REST,$80
3884   B451 00 80       
3885   B453                 \ .dw $0000
3885   B453 00 00       
3886   B455                     
3887   B455             	;Harmony High
3888   B455                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_start2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3888   B455             
3888   90CF             
3888   90CF 55          
3888   915F             
3888   915F B4          
3888   9160             
3888   9160             
3888   B455             
3888   B455~                NEWTUNE(s_start2)   
3888   B455~                NEWTUNE(s_start2)   
3888   B455             
3889   B455                 \ .db isc_sebvol,$03
3889   B455 82 03       
3890   B457                 \ .db isc_srate,RATE_VIVACE
3890   B457 80 9D       
3891   B459                 \ .db isc_ctrl,sctrl_hardswell
3891   B459 87 05       
3892   B45B                 \ .db _Eb4,$C0
3892   B45B 37 C0       
3893   B45D                 \ .db _Eb4,$C1
3893   B45D 37 C1       
3894   B45F                 \ .db _Db4,$C0
3894   B45F 35 C0       
3895   B461                 \ .db _Db4,$C1
3895   B461 35 C1       
3896   B463                 \ .db _B3,$C0
3896   B463 33 C0       
3897   B465                 \ .db _B3,$C1
3897   B465 33 C1       
3898   B467                 \ .db _Db4,$C0
3898   B467 35 C0       
3899   B469                 \ .db _Db4,$41
3899   B469 35 41       
3900   B46B                 \ .db _REST,$60
3900   B46B 00 60       
3901   B46D                 \ .db _Eb4,$20
3901   B46D 37 20       
3902   B46F                 \ .db _Eb4,$C0
3902   B46F 37 C0       
3903   B471                 \ .db _Eb4,$41
3903   B471 37 41       
3904   B473                 \ .db _REST,$80
3904   B473 00 80       
3905   B475                 \ .dw $0000
3905   B475 00 00       
3906   B477                     
3907   B477             	;Harmony Mid
3908   B477                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_start3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3908   B477             
3908   90D0             
3908   90D0 77          
3908   9160             
3908   9160 B4          
3908   9161             
3908   9161             
3908   B477             
3908   B477~                NEWTUNE(s_start3)   
3908   B477~                NEWTUNE(s_start3)   
3908   B477             
3909   B477                 \ .db isc_sebvol,$03
3909   B477 82 03       
3910   B479                 \ .db isc_srate,RATE_VIVACE
3910   B479 80 9D       
3911   B47B                 \ .db isc_ctrl,sctrl_hardswell
3911   B47B 87 05       
3912   B47D                 \ .db _Gb3,$C0
3912   B47D 2E C0       
3913   B47F                 \ .db _Gb3,$C1
3913   B47F 2E C1       
3914   B481                 \ .db _E3,$C0
3914   B481 2C C0       
3915   B483                 \ .db _E3,$C1
3915   B483 2C C1       
3916   B485                 \ .db _D3,$C0
3916   B485 2A C0       
3917   B487                 \ .db _D3,$C1
3917   B487 2A C1       
3918   B489                 \ .db _E3,$C0
3918   B489 2C C0       
3919   B48B                 \ .db _E3,$41
3919   B48B 2C 41       
3920   B48D                 \ .db _REST,$60
3920   B48D 00 60       
3921   B48F                 \ .db _Gb3,$20
3921   B48F 2E 20       
3922   B491                 \ .db _Gb3,$C0
3922   B491 2E C0       
3923   B493                 \ .db _Gb3,$41
3923   B493 2E 41       
3924   B495                 \ .db _REST,$80
3924   B495 00 80       
3925   B497                 \ .dw $0000
3925   B497 00 00       
3926   B499                  
3927   B499             	;Harmony Low
3928   B499                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_start4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3928   B499             
3928   90D1             
3928   90D1 99          
3928   9161             
3928   9161 B4          
3928   9162             
3928   9162             
3928   B499             
3928   B499~                NEWTUNE(s_start4)   
3928   B499~                NEWTUNE(s_start4)   
3928   B499             
3929   B499                 \ .db isc_sebvol,$03
3929   B499 82 03       
3930   B49B                 \ .db isc_srate,RATE_VIVACE
3930   B49B 80 9D       
3931   B49D                 \ .db isc_ctrl,sctrl_hardswell
3931   B49D 87 05       
3932   B49F                 \ .db _B2,$C0
3932   B49F 27 C0       
3933   B4A1                 \ .db _B2,$C1
3933   B4A1 27 C1       
3934   B4A3                 \ .db _A2,$C0
3934   B4A3 25 C0       
3935   B4A5                 \ .db _A2,$C1
3935   B4A5 25 C1       
3936   B4A7                 \ .db _G3,$C0
3936   B4A7 2F C0       
3937   B4A9                 \ .db _G3,$C1
3937   B4A9 2F C1       
3938   B4AB                 \ .db _A2,$C0
3938   B4AB 25 C0       
3939   B4AD                 \ .db _A2,$41
3939   B4AD 25 41       
3940   B4AF                 \ .db _REST,$60
3940   B4AF 00 60       
3941   B4B1                 \ .db _B2,$20
3941   B4B1 27 20       
3942   B4B3                 \ .db _B2,$C0
3942   B4B3 27 C0       
3943   B4B5                 \ .db _B2,$41
3943   B4B5 27 41       
3944   B4B7                 \ .db _REST,$80
3944   B4B7 00 80       
3945   B4B9                 \ .dw $0000
3945   B4B9 00 00       
3946   B4BB                     
3947   B4BB             	;High Beeps
3948   B4BB                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_start5 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
3948   B4BB             
3948   90D2             
3948   90D2 BB          
3948   9162             
3948   9162 B4          
3948   9163             
3948   9163             
3948   B4BB             
3948   B4BB~                NEWTUNE(s_start5)   
3948   B4BB~                NEWTUNE(s_start5)   
3948   B4BB             
3949   B4BB                 \ .db _REST,$10
3949   B4BB 00 10       
3950   B4BD                 \ .db _B5,$10
3950   B4BD 4B 10       
3951   B4BF                 \ .db _B5,$10
3951   B4BF 4B 10       
3952   B4C1                 \ .db _B5,$10
3952   B4C1 4B 10       
3953   B4C3                 \ .db isc_adbvol,-1
3953   B4C3 83 FF       
3954   B4C5                 \ .db _B5,$10
3954   B4C5 4B 10       
3955   B4C7                 \ .db _B5,$10
3955   B4C7 4B 10       
3956   B4C9                 \ .db _B5,$10
3956   B4C9 4B 10       
3957   B4CB                 \ .db _B5,$10
3957   B4CB 4B 10       
3958   B4CD                 \ .db isc_adbvol,1
3958   B4CD 83 01       
3959   B4CF                 \ .dw $0000
3959   B4CF 00 00       
3960   B4D1             
3961   B4D1             ;************************************	
3962   B4D1             ;* Enter Maze Music - High Monotone
3963   B4D1             ;************************************
3964   B4D1                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_mystery = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
3964   B4D1             
3964   90D3             
3964   90D3 D1          
3964   9163             
3964   9163 B4          
3964   9164             
3964   9164             
3964   B4D1             
3964   B4D1~                NEWTUNE(s_mystery)  
3964   B4D1~                NEWTUNE(s_mystery)  
3964   B4D1             
3965   B4D1                 \ .db isc_sebvol,$01
3965   B4D1 82 01       
3966   B4D3                 \ .db isc_srate,RATE_LARGO
3966   B4D3 80 34       
3967   B4D5                 \ .db isc_ctrl,sctrl_hardswell
3967   B4D5 87 05       
3968   B4D7                 \ .db isc_sloops,$02
3968   B4D7 8E 02       
3969   B4D9             		\ .db _REST,$80
3969   B4D9 00 80       
3970   B4DB             		\ .db isc_sjsr,s_start5
3970   B4DB 8D 42       
3971   B4DD                 \ .db isc_sloope,$00
3971   B4DD 8F 00       
3972   B4DF                 \ .db _REST,$80
3972   B4DF 00 80       
3973   B4E1                 \ .db _REST,$80
3973   B4E1 00 80       
3974   B4E3                 \ .db isc_sjsr,s_start5
3974   B4E3 8D 42       
3975   B4E5                 \ .db _B5,$40
3975   B4E5 4B 40       
3976   B4E7                 \ .db _REST,$40
3976   B4E7 00 40       
3977   B4E9                 \ .dw $0000
3977   B4E9 00 00       
3978   B4EB             
3979   B4EB             ;* Enter Maze Music - Harmony High
3980   B4EB                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_mystery2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3980   B4EB             
3980   90D4             
3980   90D4 EB          
3980   9164             
3980   9164 B4          
3980   9165             
3980   9165             
3980   B4EB             
3980   B4EB~                NEWTUNE(s_mystery2) 
3980   B4EB~                NEWTUNE(s_mystery2) 
3980   B4EB             
3981   B4EB                 \ .db isc_sebvol,$01
3981   B4EB 82 01       
3982   B4ED                 \ .db isc_srate,RATE_LARGO
3982   B4ED 80 34       
3983   B4EF                 \ .db isc_ctrl,sctrl_hardswell
3983   B4EF 87 05       
3984   B4F1                 \ .db isc_sloops,$02
3984   B4F1 8E 02       
3985   B4F3             		\ .db _G4,$80
3985   B4F3 3B 80       
3986   B4F5             		\ .db _Gb4,$40
3986   B4F5 3A 40       
3987   B4F7             		\ .db _REST,$40
3987   B4F7 00 40       
3988   B4F9                 \ .db isc_sloope,$00
3988   B4F9 8F 00       
3989   B4FB                 \ .db _F4,$80
3989   B4FB 39 80       
3990   B4FD                 \ .db _E4,$80
3990   B4FD 38 80       
3991   B4FF                 \ .db _Gb4,$C0
3991   B4FF 3A C0       
3992   B501                 \ .db _REST,$40
3992   B501 00 40       
3993   B503                 \ .dw $0000
3993   B503 00 00       
3994   B505             
3995   B505             ;* Enter Maze Music - Harmony Low       
3996   B505                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_mystery3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
3996   B505             
3996   90D5             
3996   90D5 05          
3996   9165             
3996   9165 B5          
3996   9166             
3996   9166             
3996   B505             
3996   B505~                NEWTUNE(s_mystery3) 
3996   B505~                NEWTUNE(s_mystery3) 
3996   B505             
3997   B505                 \ .db isc_sebvol,$01
3997   B505 82 01       
3998   B507                 \ .db isc_srate,RATE_LARGO
3998   B507 80 34       
3999   B509                 \ .db isc_ctrl,sctrl_hardswell
3999   B509 87 05       
4000   B50B                 \ .db isc_sloops,$02
4000   B50B 8E 02       
4001   B50D             		\ .db _E4,$80
4001   B50D 38 80       
4002   B50F             		\ .db _Eb4,$40
4002   B50F 37 40       
4003   B511             		\ .db _REST,$40
4003   B511 00 40       
4004   B513                 \ .db isc_sloope,$00
4004   B513 8F 00       
4005   B515                 \ .db _D4,$80
4005   B515 36 80       
4006   B517                 \ .db _Db4,$80
4006   B517 35 80       
4007   B519                 \ .db _Eb4,$C0
4007   B519 37 C0       
4008   B51B                 \ .db _REST,$40
4008   B51B 00 40       
4009   B51D                 \ .dw $0000
4009   B51D 00 00       
4010   B51F             
4011   B51F             ;* Enter Maze Music - Bass Line     
4012   B51F                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_mystery4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
4012   B51F             
4012   90D6             
4012   90D6 1F          
4012   9166             
4012   9166 B5          
4012   9167             
4012   9167             
4012   B51F             
4012   B51F~                NEWTUNE(s_mystery4) 
4012   B51F~                NEWTUNE(s_mystery4) 
4012   B51F             
4013   B51F                 \ .db isc_sebvol,$01
4013   B51F 82 01       
4014   B521                 \ .db isc_srate,RATE_LARGO
4014   B521 80 34       
4015   B523                 \ .db isc_ctrl,sctrl_hardswell
4015   B523 87 05       
4016   B525                 \ .db isc_sloops,$07
4016   B525 8E 07       
4017   B527             		\ .db _B1,$10
4017   B527 1B 10       
4018   B529             		\ .db _REST,$10
4018   B529 00 10       
4019   B52B             		\ .db _B2,$10
4019   B52B 27 10       
4020   B52D             		\ .db _REST,$10
4020   B52D 00 10       
4021   B52F             		\ .db _Bb2,$10
4021   B52F 26 10       
4022   B531             		\ .db _REST,$10
4022   B531 00 10       
4023   B533             		\ .db _Bb1,$10
4023   B533 1A 10       
4024   B535             		\ .db _REST,$10
4024   B535 00 10       
4025   B537                 \ .db isc_sloope,$00
4025   B537 8F 00       
4026   B539                 \ .db _B1,$40
4026   B539 1B 40       
4027   B53B                 \ .db _REST,$40
4027   B53B 00 40       
4028   B53D                 \ .dw $0000
4028   B53D 00 00       
4029   B53F              
4030   B53F             ;************************************ 
4031   B53F             ;* Finish Breakout Music
4032   B53F             ;************************************
4033   B53F                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_breakout = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
4033   B53F             
4033   90D7             
4033   90D7 3F          
4033   9167             
4033   9167 B5          
4033   9168             
4033   9168             
4033   B53F             
4033   B53F~                NEWTUNE(s_breakout) 
4033   B53F~                NEWTUNE(s_breakout) 
4033   B53F             
4034   B53F                 \ .db isc_sebvol,$02
4034   B53F 82 02       
4035   B541                 \ .db isc_srate,RATE_PRESTO
4035   B541 80 B1       
4036   B543                 \ .db isc_ctrl,sctrl_hardswell
4036   B543 87 05       
4037   B545                 \ .db isc_sloops,$02
4037   B545 8E 02       
4038   B547             		\ .db _D5,$C0
4038   B547 42 C0       
4039   B549             		\ .db _Db5,$60
4039   B549 41 60       
4040   B54B             		\ .db _REST,$40
4040   B54B 00 40       
4041   B54D             		\ .db _D5,$20
4041   B54D 42 20       
4042   B54F                 \ .db isc_sloope,$00
4042   B54F 8F 00       
4043   B551                 \ .db _D5,$60
4043   B551 42 60       
4044   B553                 \ .db _REST,$40
4044   B553 00 40       
4045   B555                 \ .db _Db5,$20
4045   B555 41 20       
4046   B557                 \ .db _Db5,$60
4046   B557 41 60       
4047   B559                 \ .db _REST,$40
4047   B559 00 40       
4048   B55B                 \ .db _D5,$20
4048   B55B 42 20       
4049   B55D                 \ .db _G4,$C0
4049   B55D 3B C0       
4050   B55F                 \ .db _G4,$C1
4050   B55F 3B C1       
4051   B561                 \ .db _B5,$C0
4051   B561 4B C0       
4052   B563                 \ .dw $0000
4052   B563 00 00       
4053   B565                     
4054   B565                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_breakout2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
4054   B565             
4054   90D8             
4054   90D8 65          
4054   9168             
4054   9168 B5          
4054   9169             
4054   9169             
4054   B565             
4054   B565~                NEWTUNE(s_breakout2)    
4054   B565~                NEWTUNE(s_breakout2)    
4054   B565             
4055   B565                 \ .db isc_sebvol,$02
4055   B565 82 02       
4056   B567                 \ .db isc_srate,RATE_PRESTO
4056   B567 80 B1       
4057   B569                 \ .db isc_ctrl,sctrl_hardswell
4057   B569 87 05       
4058   B56B                 \ .db isc_sloops,$02
4058   B56B 8E 02       
4059   B56D             		\ .db _B4,$C0
4059   B56D 3F C0       
4060   B56F             		\ .db _Bb4,$60
4060   B56F 3E 60       
4061   B571             		\ .db _REST,$40
4061   B571 00 40       
4062   B573             		\ .db _Bb4,$20
4062   B573 3E 20       
4063   B575                 \ .db isc_sloope,$00
4063   B575 8F 00       
4064   B577                 \ .db _B4,$60
4064   B577 3F 60       
4065   B579                 \ .db _REST,$40
4065   B579 00 40       
4066   B57B                 \ .db _Bb4,$20
4066   B57B 3E 20       
4067   B57D                 \ .db _Bb4,$60
4067   B57D 3E 60       
4068   B57F                 \ .db _REST,$40
4068   B57F 00 40       
4069   B581                 \ .db _Bb4,$20
4069   B581 3E 20       
4070   B583                 \ .db _B4,$C0
4070   B583 3F C0       
4071   B585                 \ .db _B4,$C1
4071   B585 3F C1       
4072   B587                 \ .db _D5,$C0
4072   B587 42 C0       
4073   B589                 \ .dw $0000
4073   B589 00 00       
4074   B58B                     
4075   B58B                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_breakout3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
4075   B58B             
4075   90D9             
4075   90D9 8B          
4075   9169             
4075   9169 B5          
4075   916A             
4075   916A             
4075   B58B             
4075   B58B~                NEWTUNE(s_breakout3)    
4075   B58B~                NEWTUNE(s_breakout3)    
4075   B58B             
4076   B58B                 \ .db isc_sebvol,$02
4076   B58B 82 02       
4077   B58D                 \ .db isc_srate,RATE_PRESTO
4077   B58D 80 B1       
4078   B58F                 \ .db isc_ctrl,sctrl_hardswell
4078   B58F 87 05       
4079   B591                 \ .db isc_sloops,$02
4079   B591 8E 02       
4080   B593             		\ .db _G5,$C0
4080   B593 47 C0       
4081   B595             		\ .db _G5,$60
4081   B595 47 60       
4082   B597             		\ .db _REST,$40
4082   B597 00 40       
4083   B599             		\ .db _G5,$20
4083   B599 47 20       
4084   B59B                 \ .db isc_sloope,$00
4084   B59B 8F 00       
4085   B59D                 \ .db _G5,$60
4085   B59D 47 60       
4086   B59F                 \ .db _REST,$40
4086   B59F 00 40       
4087   B5A1                 \ .db _G5,$20
4087   B5A1 47 20       
4088   B5A3                 \ .db _G5,$60
4088   B5A3 47 60       
4089   B5A5                 \ .db _REST,$40
4089   B5A5 00 40       
4090   B5A7                 \ .db _G5,$20
4090   B5A7 47 20       
4091   B5A9                 \ .db _G5,$C0
4091   B5A9 47 C0       
4092   B5AB                 \ .db _G5,$C1
4092   B5AB 47 C1       
4093   B5AD                 \ .db $53,$C0
4093   B5AD 53 C0       
4094   B5AF                 \ .dw $0000
4094   B5AF 00 00       
4095   B5B1                     
4096   B5B1                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_breakout4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
4096   B5B1             
4096   90DA             
4096   90DA B1          
4096   916A             
4096   916A B5          
4096   916B             
4096   916B             
4096   B5B1             
4096   B5B1~                NEWTUNE(s_breakout4)    
4096   B5B1~                NEWTUNE(s_breakout4)    
4096   B5B1             
4097   B5B1                 \ .db isc_sebvol,$02
4097   B5B1 82 02       
4098   B5B3                 \ .db isc_srate,RATE_PRESTO
4098   B5B3 80 B1       
4099   B5B5                 \ .db isc_ctrl,sctrl_hardswell
4099   B5B5 87 05       
4100   B5B7                 \ .db isc_sloops,$03
4100   B5B7 8E 03       
4101   B5B9             		\ .db _B3,$20
4101   B5B9 33 20       
4102   B5BB             		\ .db _G3,$20
4102   B5BB 2F 20       
4103   B5BD             		\ .db _B3,$20
4103   B5BD 33 20       
4104   B5BF             		\ .db _D4,$20
4104   B5BF 36 20       
4105   B5C1             		\ .db _B3,$20
4105   B5C1 33 20       
4106   B5C3             		\ .db _G3,$20
4106   B5C3 2F 20       
4107   B5C5             		\ .db _Bb3,$20
4107   B5C5 32 20       
4108   B5C7             		\ .db _G3,$20
4108   B5C7 2F 20       
4109   B5C9             		\ .db _Bb3,$20
4109   B5C9 32 20       
4110   B5CB             		\ .db _Db4,$20
4110   B5CB 35 20       
4111   B5CD             		\ .db _Bb3,$20
4111   B5CD 32 20       
4112   B5CF             		\ .db _G3,$20
4112   B5CF 2F 20       
4113   B5D1                 \ .db isc_sloope,$00
4113   B5D1 8F 00       
4114   B5D3                 \ .db _G3,$20
4114   B5D3 2F 20       
4115   B5D5                 \ .db _G2,$20
4115   B5D5 23 20       
4116   B5D7                 \ .db _A2,$20
4116   B5D7 25 20       
4117   B5D9                 \ .db _B2,$20
4117   B5D9 27 20       
4118   B5DB                 \ .db _C3,$20
4118   B5DB 28 20       
4119   B5DD                 \ .db _Db3,$20
4119   B5DD 29 20       
4120   B5DF                 \ .db _D3,$20
4120   B5DF 2A 20       
4121   B5E1                 \ .db _Db3,$20
4121   B5E1 29 20       
4122   B5E3                 \ .db _E3,$20
4122   B5E3 2C 20       
4123   B5E5                 \ .db _D3,$20
4123   B5E5 2A 20       
4124   B5E7                 \ .db _E3,$20
4124   B5E7 2C 20       
4125   B5E9                 \ .db _Gb3,$20
4125   B5E9 2E 20       
4126   B5EB                 \ .db _G3,$C0
4126   B5EB 2F C0       
4127   B5ED                 \ .dw $0000
4127   B5ED 00 00       
4128   B5EF             
4129   B5EF             ;************************************
4130   B5EF             ;* Maze Escape Music
4131   B5EF             ;************************************
4132   B5EF                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_escape = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4132   B5EF             
4132   90DB             
4132   90DB EF          
4132   916B             
4132   916B B5          
4132   916C             
4132   916C             
4132   B5EF             
4132   B5EF~                NEWTUNE(s_escape)   
4132   B5EF~                NEWTUNE(s_escape)   
4132   B5EF             
4133   B5EF                 \ .db isc_sebvol,$02
4133   B5EF 82 02       
4134   B5F1                 \ .db isc_ctrl,sctrl_hardswell
4134   B5F1 87 05       
4135   B5F3                 \ .db isc_srate,RATE_MODERATO
4135   B5F3 80 64       
4136   B5F5                 \ .db isc_sloops,$10
4136   B5F5 8E 10       
4137   B5F7             		\ .db _A5,$80
4137   B5F7 49 80       
4138   B5F9             		\ .db _A5,$81
4138   B5F9 49 81       
4139   B5FB             		\ .db isc_abfreq,$01
4139   B5FB 85 01       
4140   B5FD                 \ .db isc_sloope,$00
4140   B5FD 8F 00       
4141   B5FF                 \ .dw $0000
4141   B5FF 00 00       
4142   B601                     
4143   B601                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_escape2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
4143   B601             
4143   90DC             
4143   90DC 01          
4143   916C             
4143   916C B6          
4143   916D             
4143   916D             
4143   B601             
4143   B601~                NEWTUNE(s_escape2)  
4143   B601~                NEWTUNE(s_escape2)  
4143   B601             
4144   B601                 \ .db isc_sebvol,$02
4144   B601 82 02       
4145   B603                 \ .db isc_ctrl,sctrl_hardswell
4145   B603 87 05       
4146   B605                 \ .db isc_srate,RATE_MODERATO
4146   B605 80 64       
4147   B607                 \ .db isc_sloops,$10
4147   B607 8E 10       
4148   B609             		\ .db _REST,$60
4148   B609 00 60       
4149   B60B             		\ .db _REST,$10
4149   B60B 00 10       
4150   B60D             		\ .db _D4,$10
4150   B60D 36 10       
4151   B60F             		\ .db _D4,$40
4151   B60F 36 40       
4152   B611             		\ .db _A3,$40
4152   B611 31 40       
4153   B613             		\ .db isc_abfreq,$01
4153   B613 85 01       
4154   B615                 \ .db isc_sloope,$00
4154   B615 8F 00       
4155   B617                 \ .dw $0000
4155   B617 00 00       
4156   B619                     
4157   B619                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_escape3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
4157   B619             
4157   90DD             
4157   90DD 19          
4157   916D             
4157   916D B6          
4157   916E             
4157   916E             
4157   B619             
4157   B619~                NEWTUNE(s_escape3)  
4157   B619~                NEWTUNE(s_escape3)  
4157   B619             
4158   B619                 \ .db isc_sebvol,$02
4158   B619 82 02       
4159   B61B                 \ .db isc_ctrl,sctrl_hardswell
4159   B61B 87 05       
4160   B61D                 \ .db isc_srate,RATE_MODERATO
4160   B61D 80 64       
4161   B61F                 \ .db isc_sloops,$10
4161   B61F 8E 10       
4162   B621             		\ .db _REST,$60
4162   B621 00 60       
4163   B623             		\ .db _REST,$10
4163   B623 00 10       
4164   B625             		\ .db _A3,$10
4164   B625 31 10       
4165   B627             		\ .db _A3,$40
4165   B627 31 40       
4166   B629             		\ .db _Gb3,$40
4166   B629 2E 40       
4167   B62B             		\ .db isc_abfreq,$01
4167   B62B 85 01       
4168   B62D                 \ .db isc_sloope,$00
4168   B62D 8F 00       
4169   B62F                 \ .dw $0000
4169   B62F 00 00       
4170   B631                     
4171   B631                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_escape4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
4171   B631             
4171   90DE             
4171   90DE 31          
4171   916E             
4171   916E B6          
4171   916F             
4171   916F             
4171   B631             
4171   B631~                NEWTUNE(s_escape4)  
4171   B631~                NEWTUNE(s_escape4)  
4171   B631             
4172   B631                 \ .db isc_sebvol,$02
4172   B631 82 02       
4173   B633                 \ .db isc_ctrl,sctrl_hardswell
4173   B633 87 05       
4174   B635                 \ .db isc_srate,RATE_MODERATO
4174   B635 80 64       
4175   B637                 \ .db isc_sloops,$10
4175   B637 8E 10       
4176   B639             		\ .db _A1,$10
4176   B639 19 10       
4177   B63B             		\ .db _E2,$10
4177   B63B 20 10       
4178   B63D             		\ .db _A2,$10
4178   B63D 25 10       
4179   B63F             		\ .db _E3,$10
4179   B63F 2C 10       
4180   B641             		\ .db _Db3,$10
4180   B641 29 10       
4181   B643             		\ .db _A2,$10
4181   B643 25 10       
4182   B645             		\ .db _Db3,$10
4182   B645 29 10       
4183   B647             		\ .db _D3,$10
4183   B647 2A 10       
4184   B649             		\ .db _E3,$10
4184   B649 2C 10       
4185   B64B             		\ .db _D3,$10
4185   B64B 2A 10       
4186   B64D             		\ .db _B2,$10
4186   B64D 27 10       
4187   B64F             		\ .db _A2,$10
4187   B64F 25 10       
4188   B651             		\ .db _E2,$10
4188   B651 20 10       
4189   B653             		\ .db _D2,$10
4189   B653 1E 10       
4190   B655             		\ .db _Db2,$10
4190   B655 1D 10       
4191   B657             		\ .db _A1,$10
4191   B657 19 10       
4192   B659             		\ .db isc_abfreq,$01
4192   B659 85 01       
4193   B65B                 \ .db isc_sloope,$00
4193   B65B 8F 00       
4194   B65D                 \ .dw $0000
4194   B65D 00 00       
4195   B65F             
4196   B65F             ;************************************	
4197   B65F             ;*  Triumph Music (4 parts)
4198   B65F             ;*  s_triumph
4199   B65F             ;*  s_triumph2
4200   B65F             ;*  s_triumph3
4201   B65F             ;*  s_triumph4
4202   B65F             ;************************************
4203   B65F                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_triumph = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4203   B65F             
4203   90DF             
4203   90DF 5F          
4203   916F             
4203   916F B6          
4203   9170             
4203   9170             
4203   B65F             
4203   B65F~                NEWTUNE(s_triumph)   
4203   B65F~                NEWTUNE(s_triumph)   
4203   B65F             
4204   B65F                 \ .db isc_sebvol,$02
4204   B65F 82 02       
4205   B661                 \ .db isc_srate,RATE_LARGO
4205   B661 80 34       
4206   B663                 \ .db isc_ctrl,sctrl_hardswell
4206   B663 87 05       
4207   B665                 \ .db isc_sjsr,s_highscore
4207   B665 8D 53       
4208   B667                 \ .db _G5,$60
4208   B667 47 60       
4209   B669                 \ .db _G5,$20
4209   B669 47 20       
4210   B66B                 \ .db _E5,$20
4210   B66B 44 20       
4211   B66D                 \ .db _C5,$20
4211   B66D 40 20       
4212   B66F                 \ .db _G4,$40
4212   B66F 3B 40       
4213   B671                 \ .db _REST,$20
4213   B671 00 20       
4214   B673                 \ .db _G4,$20
4214   B673 3B 20       
4215   B675                 \ .db _C4,$20
4215   B675 34 20       
4216   B677                 \ .db _E4,$20
4216   B677 38 20       
4217   B679                 \ .db isc_sloops,$05
4217   B679 8E 05       
4218   B67B             		\ .db _G5,$10
4218   B67B 47 10       
4219   B67D             		\ .db _A5,$10
4219   B67D 49 10       
4220   B67F                 \ .db isc_sloope,$00
4220   B67F 8F 00       
4221   B681                 \ .db _G5,$10
4221   B681 47 10       
4222   B683                 \ .db _Gb5,$10
4222   B683 46 10       
4223   B685                 \ .db _G5,$20
4223   B685 47 20       
4224   B687                 \ .db _REST,$40
4224   B687 00 40       
4225   B689                 \ .db _E5,$40
4225   B689 44 40       
4226   B68B                 \ .db _REST,$20
4226   B68B 00 20       
4227   B68D                 \ .db isc_sjsr,s_highscore
4227   B68D 8D 53       
4228   B68F                 \ .db isc_sloops,$02
4228   B68F 8E 02       
4229   B691             		\ .db _A5,$60
4229   B691 49 60       
4230   B693             		\ .db _A5,$20
4230   B693 49 20       
4231   B695             		\ .db _G5,$20
4231   B695 47 20       
4232   B697             		\ .db _F5,$20
4232   B697 45 20       
4233   B699                 \ .db isc_sloope,$00
4233   B699 8F 00       
4234   B69B                 \ .db isc_sloops,$05
4234   B69B 8E 05       
4235   B69D             		\ .db _A5,$10
4235   B69D 49 10       
4236   B69F             		\ .db _B5,$10
4236   B69F 4B 10       
4237   B6A1                 \ .db isc_sloope,$00
4237   B6A1 8F 00       
4238   B6A3                 \ .db _A5,$10
4238   B6A3 49 10       
4239   B6A5                 \ .db _Ab5,$10
4239   B6A5 48 10       
4240   B6A7                 \ .db _A5,$60
4240   B6A7 49 60       
4241   B6A9                 \ .db _REST,$60
4241   B6A9 00 60       
4242   B6AB                 \ .dw $0000
4242   B6AB 00 00       
4243   B6AD                     
4244   B6AD                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_triumph2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4244   B6AD             
4244   90E0             
4244   90E0 AD          
4244   9170             
4244   9170 B6          
4244   9171             
4244   9171             
4244   B6AD             
4244   B6AD~                NEWTUNE(s_triumph2)   
4244   B6AD~                NEWTUNE(s_triumph2)   
4244   B6AD             
4245   B6AD                 \ .db isc_sebvol,$02
4245   B6AD 82 02       
4246   B6AF                 \ .db isc_srate,RATE_LARGO
4246   B6AF 80 34       
4247   B6B1                 \ .db isc_ctrl,sctrl_hardswell
4247   B6B1 87 05       
4248   B6B3                 \ .db isc_sjsr,s_highscore2  
4248   B6B3 8D 54       
4249   B6B5                 \ .db isc_sloops,$02
4249   B6B5 8E 02       
4250   B6B7             		\ .db isc_adbvol,2
4250   B6B7 83 02       
4251   B6B9             		\ .db _E4,$10
4251   B6B9 38 10       
4252   B6BB             		\ .db _F4,$10
4252   B6BB 39 10       
4253   B6BD             		\ .db _E4,$10
4253   B6BD 38 10       
4254   B6BF             		\ .db _D4,$10
4254   B6BF 36 10       
4255   B6C1             		\ .db _C4,$10
4255   B6C1 34 10       
4256   B6C3             		\ .db _B3,$10
4256   B6C3 33 10       
4257   B6C5             		\ .db isc_adbvol,-2
4257   B6C5 83 FE       
4258   B6C7             		\ .db _C4,$20
4258   B6C7 34 20       
4259   B6C9             		\ .db _REST,$40
4259   B6C9 00 40       
4260   B6CB                 \ .db isc_sloope,$00
4260   B6CB 8F 00       
4261   B6CD                 \ .db isc_adbvol,2
4261   B6CD 83 02       
4262   B6CF                 \ .db _D4,$10
4262   B6CF 36 10       
4263   B6D1                 \ .db _E4,$10
4263   B6D1 38 10       
4264   B6D3                 \ .db _F4,$10
4264   B6D3 39 10       
4265   B6D5                 \ .db _E4,$10
4265   B6D5 38 10       
4266   B6D7                 \ .db _D4,$10
4266   B6D7 36 10       
4267   B6D9                 \ .db _C4,$10
4267   B6D9 34 10       
4268   B6DB                 \ .db _B3,$10
4268   B6DB 33 10       
4269   B6DD                 \ .db _A3,$10
4269   B6DD 31 10       
4270   B6DF                 \ .db _B3,$10
4270   B6DF 33 10       
4271   B6E1                 \ .db _C4,$10
4271   B6E1 34 10       
4272   B6E3                 \ .db _D4,$10
4272   B6E3 36 10       
4273   B6E5                 \ .db _C4,$10
4273   B6E5 34 10       
4274   B6E7                 \ .db isc_adbvol,-2
4274   B6E7 83 FE       
4275   B6E9                 \ .db _D4,$20
4275   B6E9 36 20       
4276   B6EB                 \ .db _REST,$40
4276   B6EB 00 40       
4277   B6ED                 \ .db _D4,$40
4277   B6ED 36 40       
4278   B6EF                 \ .db _REST,$20
4278   B6EF 00 20       
4279   B6F1                 \ .db isc_sjsr,s_highscore2
4279   B6F1 8D 54       
4280   B6F3                 \ .db _C5,$60
4280   B6F3 40 60       
4281   B6F5                 \ .db _C5,$20
4281   B6F5 40 20       
4282   B6F7                 \ .db _C5,$20
4282   B6F7 40 20       
4283   B6F9                 \ .db _C5,$20
4283   B6F9 40 20       
4284   B6FB                 \ .db _B4,$60
4284   B6FB 3F 60       
4285   B6FD                 \ .db _B4,$20
4285   B6FD 3F 20       
4286   B6FF                 \ .db _B4,$20
4286   B6FF 3F 20       
4287   B701                 \ .db _B4,$20
4287   B701 3F 20       
4288   B703                 \ .db _E4,$60
4288   B703 38 60       
4289   B705                 \ .db _E4,$20
4289   B705 38 20       
4290   B707                 \ .db _E4,$20
4290   B707 38 20       
4291   B709                 \ .db _E4,$20
4291   B709 38 20       
4292   B70B                 \ .db _A4,$60
4292   B70B 3D 60       
4293   B70D                 \ .db _REST,$60
4293   B70D 00 60       
4294   B70F                 \ .dw $0000
4294   B70F 00 00       
4295   B711                     
4296   B711                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_triumph3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4296   B711             
4296   90E1             
4296   90E1 11          
4296   9171             
4296   9171 B7          
4296   9172             
4296   9172             
4296   B711             
4296   B711~                NEWTUNE(s_triumph3)   
4296   B711~                NEWTUNE(s_triumph3)   
4296   B711             
4297   B711                 \ .db isc_sebvol,$02
4297   B711 82 02       
4298   B713                 \ .db isc_srate,RATE_LARGO
4298   B713 80 34       
4299   B715                 \ .db isc_ctrl,sctrl_hardswell
4299   B715 87 05       
4300   B717                 \ .db isc_sjsr,s_highscore3
4300   B717 8D 55       
4301   B719                 \ .db _C5,$60
4301   B719 40 60       
4302   B71B                 \ .db _C5,$20
4302   B71B 40 20       
4303   B71D                 \ .db _G4,$20
4303   B71D 3B 20       
4304   B71F                 \ .db _E4,$20
4304   B71F 38 20       
4305   B721                 \ .db _E4,$40
4305   B721 38 40       
4306   B723                 \ .db _REST,$20
4306   B723 00 20       
4307   B725                 \ .db _E4,$20
4307   B725 38 20       
4308   B727                 \ .db _G4,$20
4308   B727 3B 20       
4309   B729                 \ .db _C5,$20
4309   B729 40 20       
4310   B72B                 \ .db _B4,$60
4310   B72B 3F 60       
4311   B72D                 \ .db _B4,$20
4311   B72D 3F 20       
4312   B72F                 \ .db _B4,$20
4312   B72F 3F 20       
4313   B731                 \ .db _B4,$20
4313   B731 3F 20       
4314   B733                 \ .db _B4,$20
4314   B733 3F 20       
4315   B735                 \ .db _REST,$40
4315   B735 00 40       
4316   B737                 \ .db _Ab4,$40
4316   B737 3C 40       
4317   B739                 \ .db _REST,$20
4317   B739 00 20       
4318   B73B                 \ .db isc_sjsr,s_highscore3
4318   B73B 8D 55       
4319   B73D                 \ .db isc_adbvol,2
4319   B73D 83 02       
4320   B73F                 \ .db _C4,$10
4320   B73F 34 10       
4321   B741                 \ .db _B3,$10
4321   B741 33 10       
4322   B743                 \ .db _A3,$10
4322   B743 31 10       
4323   B745                 \ .db _F4,$10
4323   B745 39 10       
4324   B747                 \ .db _A3,$10
4324   B747 31 10       
4325   B749                 \ .db _C4,$10
4325   B749 34 10       
4326   B74B                 \ .db isc_adbvol,-2
4326   B74B 83 FE       
4327   B74D                 \ .db _F4,$20
4327   B74D 39 20       
4328   B74F                 \ .db _REST,$40
4328   B74F 00 40       
4329   B751                 \ .db isc_adbvol,2
4329   B751 83 02       
4330   B753                 \ .db _D4,$10
4330   B753 36 10       
4331   B755                 \ .db _C4,$10
4331   B755 34 10       
4332   B757                 \ .db _B3,$10
4332   B757 33 10       
4333   B759                 \ .db _G3,$10
4333   B759 2F 10       
4334   B75B                 \ .db _B3,$10
4334   B75B 33 10       
4335   B75D                 \ .db _D4,$10
4335   B75D 36 10       
4336   B75F                 \ .db isc_adbvol,-2
4336   B75F 83 FE       
4337   B761                 \ .db _F4,$20
4337   B761 39 20       
4338   B763                 \ .db _REST,$40
4338   B763 00 40       
4339   B765                 \ .db isc_adbvol,2
4339   B765 83 02       
4340   B767                 \ .db _Db4,$10
4340   B767 35 10       
4341   B769                 \ .db _D4,$10
4341   B769 36 10       
4342   B76B                 \ .db _Db4,$10
4342   B76B 35 10       
4343   B76D                 \ .db _B3,$10
4343   B76D 33 10       
4344   B76F                 \ .db _A3,$10
4344   B76F 31 10       
4345   B771                 \ .db _B3,$10
4345   B771 33 10       
4346   B773                 \ .db isc_adbvol,-2
4346   B773 83 FE       
4347   B775                 \ .db _Db4,$20
4347   B775 35 20       
4348   B777                 \ .db _Db4,$20
4348   B777 35 20       
4349   B779                 \ .db _Db4,$20
4349   B779 35 20       
4350   B77B                 \ .db _Db4,$60
4350   B77B 35 60       
4351   B77D                 \ .db _REST,$60
4351   B77D 00 60       
4352   B77F                 \ .dw $0000
4352   B77F 00 00       
4353   B781                     
4354   B781                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_triumph4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4354   B781             
4354   90E2             
4354   90E2 81          
4354   9172             
4354   9172 B7          
4354   9173             
4354   9173             
4354   B781             
4354   B781~                NEWTUNE(s_triumph4)   
4354   B781~                NEWTUNE(s_triumph4)   
4354   B781             
4355   B781                 \ .db isc_sebvol,$02
4355   B781 82 02       
4356   B783                 \ .db isc_srate,RATE_LARGO
4356   B783 80 34       
4357   B785                 \ .db isc_ctrl,sctrl_hardswell
4357   B785 87 05       
4358   B787                 \ .db isc_sjsr,s_highscore4
4358   B787 8D 56       
4359   B789                 \ .db isc_sloops,$03
4359   B789 8E 03       
4360   B78B             		\ .db _G2,$60
4360   B78B 23 60       
4361   B78D             		\ .db _G2,$20
4361   B78D 23 20       
4362   B78F             		\ .db _G2,$20
4362   B78F 23 20       
4363   B791             		\ .db _G2,$20
4363   B791 23 20       
4364   B793                 \ .db isc_sloope,$00
4364   B793 8F 00       
4365   B795                 \ .db _G2,$20
4365   B795 23 20       
4366   B797                 \ .db _REST,$40
4366   B797 00 40       
4367   B799                 \ .db _E2,$40
4367   B799 20 40       
4368   B79B                 \ .db _REST,$20
4368   B79B 00 20       
4369   B79D                 \ .db isc_sjsr,s_highscore4
4369   B79D 8D 56       
4370   B79F                 \ .db isc_sloops,$03
4370   B79F 8E 03       
4371   B7A1             		\ .db _F2,$60
4371   B7A1 21 60       
4372   B7A3             		\ .db _F2,$20
4372   B7A3 21 20       
4373   B7A5             		\ .db _F2,$20
4373   B7A5 21 20       
4374   B7A7             		\ .db _F2,$20
4374   B7A7 21 20       
4375   B7A9             		\ .db isc_abfreq,$02
4375   B7A9 85 02       
4376   B7AB                 \ .db isc_sloope,$00
4376   B7AB 8F 00       
4377   B7AD                 \ .db isc_sbfreq,$00
4377   B7AD 84 00       
4378   B7AF                 \ .db _A2,$60
4378   B7AF 25 60       
4379   B7B1                 \ .db _REST,$60
4379   B7B1 00 60       
4380   B7B3                 \ .dw $0000
4380   B7B3 00 00       
4381   B7B5             
4382   B7B5             
4383   B7B5             ;************************************	
4384   B7B5             ;*  Common Music for High Score and
4385   B7B5             ;*  Triumph tunes. (4 parts)
4386   B7B5             ;*  s_highscore
4387   B7B5             ;*  s_highscore2
4388   B7B5             ;*  s_highscore3
4389   B7B5             ;*  s_highscore4
4390   B7B5             ;************************************
4391   B7B5                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_highscore = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
4391   B7B5             
4391   90E3             
4391   90E3 B5          
4391   9173             
4391   9173 B7          
4391   9174             
4391   9174             
4391   B7B5             
4391   B7B5~                NEWTUNE(s_highscore)    
4391   B7B5~                NEWTUNE(s_highscore)    
4391   B7B5             
4392   B7B5                 \ .db _Db5,$60
4392   B7B5 41 60       
4393   B7B7                 \ .db _Db4,$20
4393   B7B7 35 20       
4394   B7B9                 \ .db _E4,$20
4394   B7B9 38 20       
4395   B7BB                 \ .db _A4,$20
4395   B7BB 3D 20       
4396   B7BD                 \ .db _Db5,$20
4396   B7BD 41 20       
4397   B7BF                 \ .db _REST,$40
4397   B7BF 00 40       
4398   B7C1                 \ .db _B4,$40
4398   B7C1 3F 40       
4399   B7C3                 \ .db _REST,$20
4399   B7C3 00 20       
4400   B7C5                 \ .db _A4,$60
4400   B7C5 3D 60       
4401   B7C7                 \ .db _Gb4,$20
4401   B7C7 3A 20       
4402   B7C9                 \ .db _A4,$20
4402   B7C9 3D 20       
4403   B7CB                 \ .db _Db5,$20
4403   B7CB 41 20       
4404   B7CD                 \ .db _Gb5,$20
4404   B7CD 46 20       
4405   B7CF                 \ .db _REST,$40
4405   B7CF 00 40       
4406   B7D1                 \ .db _A5,$40
4406   B7D1 49 40       
4407   B7D3                 \ .db _REST,$20
4407   B7D3 00 20       
4408   B7D5                 \ .dw $0000
4408   B7D5 00 00       
4409   B7D7                     
4410   B7D7                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_highscore2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4410   B7D7             
4410   90E4             
4410   90E4 D7          
4410   9174             
4410   9174 B7          
4410   9175             
4410   9175             
4410   B7D7             
4410   B7D7~                NEWTUNE(s_highscore2)   
4410   B7D7~                NEWTUNE(s_highscore2)   
4410   B7D7             
4411   B7D7                 \ .db isc_adbvol,2
4411   B7D7 83 02       
4412   B7D9                 \ .db _Db4,$10
4412   B7D9 35 10       
4413   B7DB                 \ .db _D4,$10
4413   B7DB 36 10       
4414   B7DD                 \ .db _Db4,$10
4414   B7DD 35 10       
4415   B7DF                 \ .db _B3,$10
4415   B7DF 33 10       
4416   B7E1                 \ .db _A3,$10
4416   B7E1 31 10       
4417   B7E3                 \ .db _Ab3,$10
4417   B7E3 30 10       
4418   B7E5                 \ .db isc_adbvol,-2
4418   B7E5 83 FE       
4419   B7E7                 \ .db _A3,$20
4419   B7E7 31 20       
4420   B7E9                 \ .db _Db4,$20
4420   B7E9 35 20       
4421   B7EB                 \ .db _E4,$20
4421   B7EB 38 20       
4422   B7ED                 \ .db _A4,$20
4422   B7ED 3D 20       
4423   B7EF                 \ .db _REST,$40
4423   B7EF 00 40       
4424   B7F1                 \ .db _Ab4,$40
4424   B7F1 3C 40       
4425   B7F3                 \ .db _REST,$20
4425   B7F3 00 20       
4426   B7F5                 \ .db isc_adbvol,2
4426   B7F5 83 02       
4427   B7F7                 \ .db _Db4,$10
4427   B7F7 35 10       
4428   B7F9                 \ .db _D4,$10
4428   B7F9 36 10       
4429   B7FB                 \ .db _Db4,$10
4429   B7FB 35 10       
4430   B7FD                 \ .db _B3,$10
4430   B7FD 33 10       
4431   B7FF                 \ .db _A3,$10
4431   B7FF 31 10       
4432   B801                 \ .db _Ab3,$10
4432   B801 30 10       
4433   B803                 \ .db isc_adbvol,-2
4433   B803 83 FE       
4434   B805                 \ .db _A3,$20
4434   B805 31 20       
4435   B807                 \ .db _Db4,$20
4435   B807 35 20       
4436   B809                 \ .db _Gb4,$20
4436   B809 3A 20       
4437   B80B                 \ .db _A4,$20
4437   B80B 3D 20       
4438   B80D                 \ .db _REST,$40
4438   B80D 00 40       
4439   B80F                 \ .db _Eb4,$40
4439   B80F 37 40       
4440   B811                 \ .db _REST,$20
4440   B811 00 20       
4441   B813                 \ .dw $0000
4441   B813 00 00       
4442   B815                     
4443   B815                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_highscore3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4443   B815             
4443   90E5             
4443   90E5 15          
4443   9175             
4443   9175 B8          
4443   9176             
4443   9176             
4443   B815             
4443   B815~                NEWTUNE(s_highscore3)   
4443   B815~                NEWTUNE(s_highscore3)   
4443   B815             
4444   B815                 \ .db _E3,$60
4444   B815 2C 60       
4445   B817                 \ .db _E3,$20
4445   B817 2C 20       
4446   B819                 \ .db _E3,$20
4446   B819 2C 20       
4447   B81B                 \ .db _E3,$20
4447   B81B 2C 20       
4448   B81D                 \ .db _E3,$20
4448   B81D 2C 20       
4449   B81F                 \ .db _REST,$40
4449   B81F 00 40       
4450   B821                 \ .db _F3,$40
4450   B821 2D 40       
4451   B823                 \ .db _REST,$20
4451   B823 00 20       
4452   B825                 \ .db _Gb3,$60
4452   B825 2E 60       
4453   B827                 \ .db _Gb3,$20
4453   B827 2E 20       
4454   B829                 \ .db _Gb3,$20
4454   B829 2E 20       
4455   B82B                 \ .db _Gb3,$20
4455   B82B 2E 20       
4456   B82D                 \ .db _Gb3,$20
4456   B82D 2E 20       
4457   B82F                 \ .db _REST,$40
4457   B82F 00 40       
4458   B831                 \ .db _Gb3,$40
4458   B831 2E 40       
4459   B833                 \ .db _REST,$20
4459   B833 00 20       
4460   B835                 \ .dw $0000
4460   B835 00 00       
4461   B837                     
4462   B837                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_highscore4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4462   B837             
4462   90E6             
4462   90E6 37          
4462   9176             
4462   9176 B8          
4462   9177             
4462   9177             
4462   B837             
4462   B837~                NEWTUNE(s_highscore4)   
4462   B837~                NEWTUNE(s_highscore4)   
4462   B837             
4463   B837                 \ .db _A2,$60
4463   B837 25 60       
4464   B839                 \ .db _A2,$20
4464   B839 25 20       
4465   B83B                 \ .db _A2,$20
4465   B83B 25 20       
4466   B83D                 \ .db _A2,$20
4466   B83D 25 20       
4467   B83F                 \ .db _A2,$20
4467   B83F 25 20       
4468   B841                 \ .db _REST,$40
4468   B841 00 40       
4469   B843                 \ .db _Ab2,$40
4469   B843 24 40       
4470   B845                 \ .db _REST,$20
4470   B845 00 20       
4471   B847                 \ .db _Gb2,$60
4471   B847 22 60       
4472   B849                 \ .db _Gb2,$20
4472   B849 22 20       
4473   B84B                 \ .db _Gb2,$20
4473   B84B 22 20       
4474   B84D                 \ .db _Gb2,$20
4474   B84D 22 20       
4475   B84F                 \ .db _Gb2,$20
4475   B84F 22 20       
4476   B851                 \ .db _REST,$40
4476   B851 00 40       
4477   B853                 \ .db _B1,$40
4477   B853 1B 40       
4478   B855                 \ .db _REST,$20
4478   B855 00 20       
4479   B857                 \ .dw $0000
4479   B857 00 00       
4480   B859              
4481   B859             ;************************************
4482   B859             ;* High Score Music - 4 Parts
4483   B859             ;*  s_highscore5
4484   B859             ;*  s_highscore6
4485   B859             ;*  s_highscore7
4486   B859             ;*  s_highscore8
4487   B859             ;************************************
4488   B859                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_highscore5 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4488   B859             
4488   90E7             
4488   90E7 59          
4488   9177             
4488   9177 B8          
4488   9178             
4488   9178             
4488   B859             
4488   B859~                NEWTUNE(s_highscore5)   
4488   B859~                NEWTUNE(s_highscore5)   
4488   B859             
4489   B859                 \ .db isc_sebvol,$02
4489   B859 82 02       
4490   B85B                 \ .db isc_srate,RATE_ALLEGRO
4490   B85B 80 91       
4491   B85D                 \ .db isc_ctrl,sctrl_hardswell
4491   B85D 87 05       
4492   B85F                 \ .db isc_sjsr,s_highscore
4492   B85F 8D 53       
4493   B861                 \ .db _G5,$60
4493   B861 47 60       
4494   B863                 \ .db _G5,$20
4494   B863 47 20       
4495   B865                 \ .db _E5,$20
4495   B865 44 20       
4496   B867                 \ .db _C5,$20
4496   B867 40 20       
4497   B869                 \ .db _G4,$40
4497   B869 3B 40       
4498   B86B                 \ .db _REST,$20
4498   B86B 00 20       
4499   B86D                 \ .db _G4,$20
4499   B86D 3B 20       
4500   B86F                 \ .db _C4,$20
4500   B86F 34 20       
4501   B871                 \ .db _E4,$20
4501   B871 38 20       
4502   B873                 \ .db isc_sloops,$05
4502   B873 8E 05       
4503   B875             		\ .db _G5,$10
4503   B875 47 10       
4504   B877             		\ .db _A5,$10
4504   B877 49 10       
4505   B879                 \ .db isc_sloope,$00
4505   B879 8F 00       
4506   B87B                 \ .db _G5,$10
4506   B87B 47 10       
4507   B87D                 \ .db _Gb5,$10
4507   B87D 46 10       
4508   B87F                 \ .db _G5,$20
4508   B87F 47 20       
4509   B881                 \ .db _REST,$40
4509   B881 00 40       
4510   B883                 \ .db _E5,$40
4510   B883 44 40       
4511   B885                 \ .db _REST,$20
4511   B885 00 20       
4512   B887                 \ .db isc_sjsr,s_highscore
4512   B887 8D 53       
4513   B889                 \ .db isc_sloops,$02
4513   B889 8E 02       
4514   B88B             		\ .db _A5,$60
4514   B88B 49 60       
4515   B88D             		\ .db _A5,$20
4515   B88D 49 20       
4516   B88F             		\ .db _G5,$20
4516   B88F 47 20       
4517   B891             		\ .db _F5,$20
4517   B891 45 20       
4518   B893                 \ .db isc_sloope,$00
4518   B893 8F 00       
4519   B895                 \ .db isc_sloops,$05
4519   B895 8E 05       
4520   B897             		\ .db _A5,$10
4520   B897 49 10       
4521   B899             		\ .db _B5,$10
4521   B899 4B 10       
4522   B89B                 \ .db isc_sloope,$00
4522   B89B 8F 00       
4523   B89D                 \ .db _A5,$10
4523   B89D 49 10       
4524   B89F                 \ .db _Ab5,$10
4524   B89F 48 10       
4525   B8A1                 \ .db _A5,$60
4525   B8A1 49 60       
4526   B8A3                 \ .db _REST,$60
4526   B8A3 00 60       
4527   B8A5                 \ .dw $0000
4527   B8A5 00 00       
4528   B8A7                     
4529   B8A7                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_highscore6 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4529   B8A7             
4529   90E8             
4529   90E8 A7          
4529   9178             
4529   9178 B8          
4529   9179             
4529   9179             
4529   B8A7             
4529   B8A7~                NEWTUNE(s_highscore6)   
4529   B8A7~                NEWTUNE(s_highscore6)   
4529   B8A7             
4530   B8A7                 \ .db isc_sebvol,$02
4530   B8A7 82 02       
4531   B8A9                 \ .db isc_srate,RATE_ALLEGRO
4531   B8A9 80 91       
4532   B8AB                 \ .db isc_ctrl,sctrl_hardswell
4532   B8AB 87 05       
4533   B8AD                 \ .db isc_sjsr,s_highscore2  
4533   B8AD 8D 54       
4534   B8AF                 \ .db isc_sloops,$02
4534   B8AF 8E 02       
4535   B8B1             		\ .db isc_adbvol,2
4535   B8B1 83 02       
4536   B8B3             		\ .db _E4,$10
4536   B8B3 38 10       
4537   B8B5             		\ .db _F4,$10
4537   B8B5 39 10       
4538   B8B7             		\ .db _E4,$10
4538   B8B7 38 10       
4539   B8B9             		\ .db _D4,$10
4539   B8B9 36 10       
4540   B8BB             		\ .db _C4,$10
4540   B8BB 34 10       
4541   B8BD             		\ .db _B3,$10
4541   B8BD 33 10       
4542   B8BF             		\ .db isc_adbvol,-2
4542   B8BF 83 FE       
4543   B8C1             		\ .db _C4,$20
4543   B8C1 34 20       
4544   B8C3             		\ .db _REST,$40
4544   B8C3 00 40       
4545   B8C5                 \ .db isc_sloope,$00
4545   B8C5 8F 00       
4546   B8C7                 \ .db isc_adbvol,2
4546   B8C7 83 02       
4547   B8C9                 \ .db _D4,$10
4547   B8C9 36 10       
4548   B8CB                 \ .db _E4,$10
4548   B8CB 38 10       
4549   B8CD                 \ .db _F4,$10
4549   B8CD 39 10       
4550   B8CF                 \ .db _E4,$10
4550   B8CF 38 10       
4551   B8D1                 \ .db _D4,$10
4551   B8D1 36 10       
4552   B8D3                 \ .db _C4,$10
4552   B8D3 34 10       
4553   B8D5                 \ .db _B3,$10
4553   B8D5 33 10       
4554   B8D7                 \ .db _A3,$10
4554   B8D7 31 10       
4555   B8D9                 \ .db _B3,$10
4555   B8D9 33 10       
4556   B8DB                 \ .db _C4,$10
4556   B8DB 34 10       
4557   B8DD                 \ .db _D4,$10
4557   B8DD 36 10       
4558   B8DF                 \ .db _C4,$10
4558   B8DF 34 10       
4559   B8E1                 \ .db isc_adbvol,-2
4559   B8E1 83 FE       
4560   B8E3                 \ .db _D4,$20
4560   B8E3 36 20       
4561   B8E5                 \ .db _REST,$40
4561   B8E5 00 40       
4562   B8E7                 \ .db _D4,$40
4562   B8E7 36 40       
4563   B8E9                 \ .db _REST,$20
4563   B8E9 00 20       
4564   B8EB                 \ .db isc_sjsr,s_highscore2
4564   B8EB 8D 54       
4565   B8ED                 \ .db _C5,$60
4565   B8ED 40 60       
4566   B8EF                 \ .db _C5,$20
4566   B8EF 40 20       
4567   B8F1                 \ .db _C5,$20
4567   B8F1 40 20       
4568   B8F3                 \ .db _C5,$20
4568   B8F3 40 20       
4569   B8F5                 \ .db _B4,$60
4569   B8F5 3F 60       
4570   B8F7                 \ .db _B4,$20
4570   B8F7 3F 20       
4571   B8F9                 \ .db _B4,$20
4571   B8F9 3F 20       
4572   B8FB                 \ .db _B4,$20
4572   B8FB 3F 20       
4573   B8FD                 \ .db _E4,$60
4573   B8FD 38 60       
4574   B8FF                 \ .db _E4,$20
4574   B8FF 38 20       
4575   B901                 \ .db _E4,$20
4575   B901 38 20       
4576   B903                 \ .db _E4,$20
4576   B903 38 20       
4577   B905                 \ .db _A4,$60
4577   B905 3D 60       
4578   B907                 \ .db _REST,$60
4578   B907 00 60       
4579   B909                 \ .dw $0000
4579   B909 00 00       
4580   B90B                     
4581   B90B                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_highscore7 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4581   B90B             
4581   90E9             
4581   90E9 0B          
4581   9179             
4581   9179 B9          
4581   917A             
4581   917A             
4581   B90B             
4581   B90B~                NEWTUNE(s_highscore7)   
4581   B90B~                NEWTUNE(s_highscore7)   
4581   B90B             
4582   B90B                 \ .db isc_sebvol,$02
4582   B90B 82 02       
4583   B90D                 \ .db isc_srate,RATE_ALLEGRO
4583   B90D 80 91       
4584   B90F                 \ .db isc_ctrl,sctrl_hardswell
4584   B90F 87 05       
4585   B911                 \ .db isc_sjsr,s_highscore3
4585   B911 8D 55       
4586   B913                 \ .db _C5,$60
4586   B913 40 60       
4587   B915                 \ .db _C5,$20
4587   B915 40 20       
4588   B917                 \ .db _G4,$20
4588   B917 3B 20       
4589   B919                 \ .db _E4,$20
4589   B919 38 20       
4590   B91B                 \ .db _E4,$40
4590   B91B 38 40       
4591   B91D                 \ .db _REST,$20
4591   B91D 00 20       
4592   B91F                 \ .db _E4,$20
4592   B91F 38 20       
4593   B921                 \ .db _G4,$20
4593   B921 3B 20       
4594   B923                 \ .db _C5,$20
4594   B923 40 20       
4595   B925                 \ .db _B4,$60
4595   B925 3F 60       
4596   B927                 \ .db _B4,$20
4596   B927 3F 20       
4597   B929                 \ .db _B4,$20
4597   B929 3F 20       
4598   B92B                 \ .db _B4,$20
4598   B92B 3F 20       
4599   B92D                 \ .db _B4,$20
4599   B92D 3F 20       
4600   B92F                 \ .db _REST,$40
4600   B92F 00 40       
4601   B931                 \ .db _Ab4,$40
4601   B931 3C 40       
4602   B933                 \ .db _REST,$20
4602   B933 00 20       
4603   B935                 \ .db isc_sjsr,s_highscore3
4603   B935 8D 55       
4604   B937                 \ .db isc_adbvol,2
4604   B937 83 02       
4605   B939                 \ .db _C4,$10
4605   B939 34 10       
4606   B93B                 \ .db _B3,$10
4606   B93B 33 10       
4607   B93D                 \ .db _A3,$10
4607   B93D 31 10       
4608   B93F                 \ .db _F4,$10
4608   B93F 39 10       
4609   B941                 \ .db _A3,$10
4609   B941 31 10       
4610   B943                 \ .db _C4,$10
4610   B943 34 10       
4611   B945                 \ .db isc_adbvol,-2
4611   B945 83 FE       
4612   B947                 \ .db _F4,$20
4612   B947 39 20       
4613   B949                 \ .db _REST,$40
4613   B949 00 40       
4614   B94B                 \ .db isc_adbvol,2
4614   B94B 83 02       
4615   B94D                 \ .db _D4,$10
4615   B94D 36 10       
4616   B94F                 \ .db _C4,$10
4616   B94F 34 10       
4617   B951                 \ .db _B3,$10
4617   B951 33 10       
4618   B953                 \ .db _G3,$10
4618   B953 2F 10       
4619   B955                 \ .db _B3,$10
4619   B955 33 10       
4620   B957                 \ .db _D4,$10
4620   B957 36 10       
4621   B959                 \ .db isc_adbvol,-2
4621   B959 83 FE       
4622   B95B                 \ .db _F4,$20
4622   B95B 39 20       
4623   B95D                 \ .db _REST,$40
4623   B95D 00 40       
4624   B95F                 \ .db isc_adbvol,2
4624   B95F 83 02       
4625   B961                 \ .db _Db4,$10
4625   B961 35 10       
4626   B963                 \ .db _D4,$10
4626   B963 36 10       
4627   B965                 \ .db _Db4,$10
4627   B965 35 10       
4628   B967                 \ .db _B3,$10
4628   B967 33 10       
4629   B969                 \ .db _A3,$10
4629   B969 31 10       
4630   B96B                 \ .db _B3,$10
4630   B96B 33 10       
4631   B96D                 \ .db isc_adbvol,-2
4631   B96D 83 FE       
4632   B96F                 \ .db _Db4,$20
4632   B96F 35 20       
4633   B971                 \ .db _Db4,$20
4633   B971 35 20       
4634   B973                 \ .db _Db4,$20
4634   B973 35 20       
4635   B975                 \ .db _Db4,$60
4635   B975 35 60       
4636   B977                 \ .db _REST,$60
4636   B977 00 60       
4637   B979                 \ .dw $0000
4637   B979 00 00       
4638   B97B                     
4639   B97B                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_highscore8 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
4639   B97B             
4639   90EA             
4639   90EA 7B          
4639   917A             
4639   917A B9          
4639   917B             
4639   917B             
4639   B97B             
4639   B97B~                NEWTUNE(s_highscore8)   
4639   B97B~                NEWTUNE(s_highscore8)   
4639   B97B             
4640   B97B                 \ .db isc_sebvol,$02
4640   B97B 82 02       
4641   B97D                 \ .db isc_srate,RATE_ALLEGRO
4641   B97D 80 91       
4642   B97F                 \ .db isc_ctrl,sctrl_hardswell
4642   B97F 87 05       
4643   B981                 \ .db isc_sjsr,s_highscore4
4643   B981 8D 56       
4644   B983                 \ .db isc_sloops,$03
4644   B983 8E 03       
4645   B985             		\ .db _G2,$60
4645   B985 23 60       
4646   B987             		\ .db _G2,$20
4646   B987 23 20       
4647   B989             		\ .db _G2,$20
4647   B989 23 20       
4648   B98B             		\ .db _G2,$20
4648   B98B 23 20       
4649   B98D                 \ .db isc_sloope,$00
4649   B98D 8F 00       
4650   B98F                 \ .db _G2,$20
4650   B98F 23 20       
4651   B991                 \ .db _REST,$40
4651   B991 00 40       
4652   B993                 \ .db _E2,$40
4652   B993 20 40       
4653   B995                 \ .db _REST,$20
4653   B995 00 20       
4654   B997                 \ .db isc_sjsr,s_highscore4
4654   B997 8D 56       
4655   B999                 \ .db isc_sloops,$03
4655   B999 8E 03       
4656   B99B             		\ .db _F2,$60
4656   B99B 21 60       
4657   B99D             		\ .db _F2,$20
4657   B99D 21 20       
4658   B99F             		\ .db _F2,$20
4658   B99F 21 20       
4659   B9A1             		\ .db _F2,$20
4659   B9A1 21 20       
4660   B9A3             		\ .db isc_abfreq,$02
4660   B9A3 85 02       
4661   B9A5                 \ .db isc_sloope,$00
4661   B9A5 8F 00       
4662   B9A7                 \ .db isc_sbfreq,$00
4662   B9A7 84 00       
4663   B9A9                 \ .db _A2,$60
4663   B9A9 25 60       
4664   B9AB                 \ .db _REST,$60
4664   B9AB 00 60       
4665   B9AD                 \ .dw $0000
4665   B9AD 00 00       
4666   B9AF             
4667   B9AF             ;* Homeworld Tension Entrance
4668   B9AF                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_tense_1 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
4668   B9AF             
4668   90EB             
4668   90EB AF          
4668   917B             
4668   917B B9          
4668   917C             
4668   917C             
4668   B9AF             
4668   B9AF~                NEWTUNE(s_tense_1) 
4668   B9AF~                NEWTUNE(s_tense_1) 
4668   B9AF             
4669   B9AF                 \ .db isc_sebvol,$01
4669   B9AF 82 01       
4670   B9B1                 \ .db isc_srate,RATE_LARGO
4670   B9B1 80 34       
4671   B9B3                 \ .db isc_ctrl,sctrl_hardswell
4671   B9B3 87 05       
4672   B9B5                 \ .db isc_sloops,$07
4672   B9B5 8E 07       
4673   B9B7             		\ .db _B0,$18
4673   B9B7 0F 18       
4674   B9B9             		\ .db _REST,$18
4674   B9B9 00 18       
4675   B9BB             		\ .db _B1,$18
4675   B9BB 1B 18       
4676   B9BD             		\ .db _REST,$18
4676   B9BD 00 18       
4677   B9BF             		\ .db _A1,$18
4677   B9BF 19 18       
4678   B9C1             		\ .db _REST,$18
4678   B9C1 00 18       
4679   B9C3             		\ .db _Bb0,$18
4679   B9C3 0E 18       
4680   B9C5             		\ .db _REST,$18
4680   B9C5 00 18       
4681   B9C7                 \ .db isc_sloope,$00
4681   B9C7 8F 00       
4682   B9C9                 \ .dw $0000
4682   B9C9 00 00       
4683   B9CB             
4684   B9CB             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_tense_2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
4684   B9CB             
4684   90EC             
4684   90EC CB          
4684   917C             
4684   917C B9          
4684   917D             
4684   917D             
4684   B9CB             
4684   B9CB~            	NEWTUNE(s_tense_2) 
4684   B9CB~            	NEWTUNE(s_tense_2) 
4684   B9CB             
4685   B9CB                 \ .db isc_sebvol,$01
4685   B9CB 82 01       
4686   B9CD                 \ .db isc_srate,RATE_LARGO
4686   B9CD 80 34       
4687   B9CF                 \ .db isc_ctrl,sctrl_hardswell
4687   B9CF 87 05       
4688   B9D1                 \ .db isc_sloops,$07
4688   B9D1 8E 07       
4689   B9D3             		\ .db _E2,$60
4689   B9D3 20 60       
4690   B9D5             		\ .db _Eb2,$60
4690   B9D5 1F 60       
4691   B9D7                 \ .db isc_sloope,$00
4691   B9D7 8F 00       
4692   B9D9                 \ .dw $0000
4692   B9D9 00 00       
4693   B9DB             
4694   B9DB             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_tense_3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
4694   B9DB             
4694   90ED             
4694   90ED DB          
4694   917D             
4694   917D B9          
4694   917E             
4694   917E             
4694   B9DB             
4694   B9DB~            	NEWTUNE(s_tense_3) 
4694   B9DB~            	NEWTUNE(s_tense_3) 
4694   B9DB             
4695   B9DB                 \ .db isc_sebvol,$01
4695   B9DB 82 01       
4696   B9DD                 \ .db isc_srate,RATE_LARGO
4696   B9DD 80 34       
4697   B9DF                 \ .db isc_ctrl,sctrl_hardswell
4697   B9DF 87 05       
4698   B9E1                 \ .db isc_sloops,$07
4698   B9E1 8E 07       
4699   B9E3             		\ .db _G4,$60
4699   B9E3 3B 60       
4700   B9E5             		\ .db _Gb4,$60
4700   B9E5 3A 60       
4701   B9E7                 \ .db isc_sloope,$00
4701   B9E7 8F 00       
4702   B9E9                 \ .dw $0000
4702   B9E9 00 00       
4703   B9EB             	
4704   B9EB             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_tense_4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
4704   B9EB             
4704   90EE             
4704   90EE EB          
4704   917E             
4704   917E B9          
4704   917F             
4704   917F             
4704   B9EB             
4704   B9EB~            	NEWTUNE(s_tense_4) 
4704   B9EB~            	NEWTUNE(s_tense_4) 
4704   B9EB             
4705   B9EB                 \ .db isc_sebvol,$00
4705   B9EB 82 00       
4706   B9ED                 \ .db isc_srate,RATE_LARGO
4706   B9ED 80 34       
4707   B9EF                 \ .db isc_ctrl,sctrl_hardswell
4707   B9EF 87 05       
4708   B9F1                 \ .db isc_sloops,$0E
4708   B9F1 8E 0E       
4709   B9F3             		\ .db _REST,$18
4709   B9F3 00 18       
4710   B9F5             		\ .db _Gb6,$0C
4710   B9F5 52 0C       
4711   B9F7             		\ .db _REST,$0C
4711   B9F7 00 0C       
4712   B9F9             		\ .db _Gb6,$0C
4712   B9F9 52 0C       
4713   B9FB             		\ .db _REST,$0C
4713   B9FB 00 0C       
4714   B9FD             		\ .db _Gb6,$10
4714   B9FD 52 10       
4715   B9FF             		\ .db _REST,$08
4715   B9FF 00 08       
4716   BA01                 \ .db isc_sloope,$00
4716   BA01 8F 00       
4717   BA03                 \ .dw $0000
4717   BA03 00 00       
4718   BA05             	
4719   BA05                 ; NEWTUNE(s_newmusic_1) 
4720   BA05                 ; SETBVOL($01)
4721   BA05                 ; SETNRATE(RATE_DEFAULT)
4722   BA05                 ; SETSNDCONT(sctrl_hardswell)
4723   BA05                 ; SLOOPSTART($07)
4724   BA05             		; ;NOTE(_E1,$D0)
4725   BA05             		; ;NOTE(_F1,$D1)
4726   BA05             		; ;NOTE(_E1,$20)
4727   BA05             		; ;NOTE(_Eb1,$20)
4728   BA05             		; ;NOTE(_Ab1,$20)
4729   BA05             		; ;NOTE(_G1,$40)
4730   BA05             		; ;NOTE(_REST,$60)
4731   BA05             		
4732   BA05             		; ;NOTE(_E1,$50)
4733   BA05             		; ;NOTE(_REST,$30)
4734   BA05             		; ;NOTE(_E1,$20)
4735   BA05             		; ;NOTE(_Eb1,$20)
4736   BA05             		; ;NOTE(_Ab1,$20)
4737   BA05             		; ;NOTE(_G1,$20)
4738   BA05             		; ;NOTE(_B1,$20)
4739   BA05             		; ;NOTE(_Bb1,$40)
4740   BA05             		; ;NOTE(_REST,$10)
4741   BA05             		
4742   BA05             		; NOTE(_E0,$40)
4743   BA05             		; ;NOTE(_REST,$30)
4744   BA05             		; NOTE(_REST,$D0)
4745   BA05             		; ;NOTE(_E0,$20)
4746   BA05             		; ;NOTE(_Eb0,$20)
4747   BA05             		; ;NOTE(_Ab1,$20)
4748   BA05             		; ;NOTE(_G1,$40)
4749   BA05             		; ;NOTE(_REST,$10)
4750   BA05             		
4751   BA05             		; ;NOTE(_E0,$40)
4752   BA05             		; ;NOTE(_REST,$30)
4753   BA05             		; ;NOTE(_REST,$D0)
4754   BA05             		; ;NOTE(_E0,$20)
4755   BA05             		; ;NOTE(_Eb0,$20)
4756   BA05             		; ;NOTE(_B1,$20)
4757   BA05             		; ;NOTE(_Bb1,$40)
4758   BA05             			
4759   BA05             		; ;SLOOPSTART(5)
4760   BA05             	; ;		NOTE(_B1,$20)
4761   BA05             	; ;		NOTE(_Bb1,$20)
4762   BA05             	; ;		ADDBFREQ($02)
4763   BA05             	; ;	SLOOPEND
4764   BA05             		
4765   BA05             		
4766   BA05             		; ;NOTE(_Ab1,$20)
4767   BA05             		; ;NOTE(_G1,$20)
4768   BA05             		
4769   BA05             		; ;NOTE(_B1,$20)
4770   BA05             		; ;NOTE(_Bb1,$20)
4771   BA05             		
4772   BA05             		; ;NOTE(_C2,$20)
4773   BA05             		; ;NOTE(_Bb1,$20)
4774   BA05             		; ;ADDBFREQ($02)
4775   BA05                 ; SLOOPEND
4776   BA05                 ; ;NOTE(_B1,$40)
4777   BA05                 ; NOTE(_REST,$40)
4778   BA05                 ; ENDSND
4779   BA05             
4780   BA05             
4781   BA05             ; ;* Harmony High
4782   BA05                 ; NEWTUNE(s_newmusic_2) 
4783   BA05                 ; SETBVOL($01)
4784   BA05                 ; SETNRATE(RATE_DEFAULT)
4785   BA05                 ; SETSNDCONT(sctrl_hardswell)
4786   BA05                 ; SLOOPSTART($07)
4787   BA05             		; NOTE(_REST,$70)
4788   BA05             		; NOTE(_E2,$20)
4789   BA05             		; NOTE(_Eb2,$20)
4790   BA05             		; NOTE(_Ab3,$20)
4791   BA05             		; NOTE(_G3,$40)
4792   BA05                 ; SLOOPEND
4793   BA05                 ; ;NOTE(_F4,$80)
4794   BA05                 ; ;NOTE(_E4,$80)
4795   BA05                 ; ;NOTE(_Gb4,$C0)
4796   BA05                 ; NOTE(_REST,$40)
4797   BA05                 ; ENDSND
4798   BA05             
4799   BA05             ; ;* Harmony Low       
4800   BA05                 ; NEWTUNE(s_newmusic_3) 
4801   BA05                 ; SETBVOL($01)
4802   BA05                 ; SETNRATE(RATE_DEFAULT)
4803   BA05                 ; SETSNDCONT(sctrl_hardswell)
4804   BA05                 ; SLOOPSTART($07)
4805   BA05             		; NOTE(_REST,$70)
4806   BA05             		; NOTE(_Db2,$20)
4807   BA05             		; NOTE(_C2,$20)
4808   BA05             		; NOTE(_F3,$20)
4809   BA05             		; NOTE(_E3,$40)
4810   BA05                 ; SLOOPEND
4811   BA05                 ; ;NOTE(_D4,$80)
4812   BA05                 ; ;NOTE(_Db4,$80)
4813   BA05                 ; ;NOTE(_Eb4,$C0)
4814   BA05                 ; NOTE(_REST,$40)
4815   BA05                 ; ENDSND
4816   BA05             
4817   BA05                 ; NEWTUNE(s_newmusic_4)    
4818   BA05                 ; SETBVOL($00)
4819   BA05                 ; SETNRATE(RATE_PRESTO)
4820   BA05                 ; SETSNDCONT(sctrl_hardswell)
4821   BA05                 ; SLOOPSTART($40)
4822   BA05             		; NOTE(_G7,$0C)
4823   BA05             		; NOTE(_Gb7,$0C)
4824   BA05             		; NOTE(_REST,$0C)
4825   BA05             		; NOTE(_A7,$0C)
4826   BA05             		; NOTE(_G7,$0C)
4827   BA05             		; NOTE(_REST,$10)
4828   BA05             		; NOTE(_A7,$0C)
4829   BA05             		; NOTE(_Ab7,$0C)
4830   BA05             		; NOTE(_REST,$0C)
4831   BA05             		; NOTE(_F7,$0C)
4832   BA05             		; NOTE(_A7,$0C)
4833   BA05             		; NOTE(_Ab7,$0C)
4834   BA05             		; NOTE(_REST,$0C)
4835   BA05             		; NOTE(_F7,$0C)
4836   BA05                 ; SLOOPEND
4837   BA05                 ; ENDSND
4838   BA05             	
4839   BA05             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_newmusic_5 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
4839   BA05             
4839   90EF             
4839   90EF 05          
4839   917F             
4839   917F BA          
4839   9180             
4839   9180             
4839   BA05             
4839   BA05~            	NEWTUNE(s_newmusic_5)    
4839   BA05~            	NEWTUNE(s_newmusic_5)    
4839   BA05             
4840   BA05                 \ .db isc_sebvol,$00
4840   BA05 82 00       
4841   BA07                 \ .db isc_srate,RATE_PRESTO
4841   BA07 80 B1       
4842   BA09                 \ .db isc_ctrl,sctrl_hardswell
4842   BA09 87 05       
4843   BA0B                 \ .db isc_sloops,$40
4843   BA0B 8E 40       
4844   BA0D             		\ .db _REST,$0C
4844   BA0D 00 0C       
4845   BA0F             		\ .db _E6,$0C
4845   BA0F 50 0C       
4846   BA11             		\ .db _REST,$12
4846   BA11 00 12       
4847   BA13             		\ .db _F6,$0C
4847   BA13 51 0C       
4848   BA15             		\ .db _REST,$10
4848   BA15 00 10       
4849   BA17             		\ .db _G6,$0C
4849   BA17 53 0C       
4850   BA19             		\ .db _REST,$10
4850   BA19 00 10       
4851   BA1B             		\ .db _E6,$0C
4851   BA1B 50 0C       
4852   BA1D             		\ .db _REST,$0C
4852   BA1D 00 0C       
4853   BA1F             		\ .db _Gb6,$0C
4853   BA1F 52 0C       
4854   BA21             		\ .db _REST,$0C
4854   BA21 00 0C       
4855   BA23             		\ .db _E6,$0C
4855   BA23 50 0C       
4856   BA25                 \ .db isc_sloope,$00
4856   BA25 8F 00       
4857   BA27                 \ .dw $0000
4857   BA27 00 00       
4858   BA29             	
4859   BA29                 ; NEWTUNE(s_newmusic_4)  
4860   BA29                 ; SETBVOL($01)
4861   BA29                 ; SETNRATE(RATE_DEFAULT)
4862   BA29                 ; SETSNDCONT(sctrl_hardswell)
4863   BA29                 ; SLOOPSTART($02)
4864   BA29             		; NOTE(_REST,$80)
4865   BA29             		; SJSR(s_start5)
4866   BA29                 ; SLOOPEND
4867   BA29                 ; NOTE(_REST,$80)
4868   BA29                 ; NOTE(_REST,$80)
4869   BA29                 ; SJSR(s_start5)
4870   BA29                 ; NOTE(_B5,$40)
4871   BA29                 ; NOTE(_REST,$40)
4872   BA29                 ; ENDSND
4873   BA29             
4874   BA29             	
4875   BA29                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_spbonus_1 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
4875   BA29             
4875   90F0             
4875   90F0 29          
4875   9180             
4875   9180 BA          
4875   9181             
4875   9181             
4875   BA29             
4875   BA29~                NEWTUNE(s_spbonus_1) 
4875   BA29~                NEWTUNE(s_spbonus_1) 
4875   BA29             
4876   BA29                 \ .db isc_sebvol,$01
4876   BA29 82 01       
4877   BA2B                 \ .db isc_srate,RATE_LARGO
4877   BA2B 80 34       
4878   BA2D                 \ .db isc_ctrl,sctrl_hardswell
4878   BA2D 87 05       
4879   BA2F                 \ .db isc_sloops,$07
4879   BA2F 8E 07       
4880   BA31             		\ .db _B1,$10
4880   BA31 1B 10       
4881   BA33             		\ .db _REST,$10
4881   BA33 00 10       
4882   BA35             		\ .db _B2,$10
4882   BA35 27 10       
4883   BA37             		\ .db _REST,$10
4883   BA37 00 10       
4884   BA39             		\ .db _Bb2,$10
4884   BA39 26 10       
4885   BA3B             		\ .db _REST,$10
4885   BA3B 00 10       
4886   BA3D             		\ .db _Bb1,$10
4886   BA3D 1A 10       
4887   BA3F             		\ .db _REST,$10
4887   BA3F 00 10       
4888   BA41                 \ .db isc_sloope,$00
4888   BA41 8F 00       
4889   BA43                 \ .db _B1,$40
4889   BA43 1B 40       
4890   BA45                 \ .db _REST,$40
4890   BA45 00 40       
4891   BA47                 \ .dw $0000
4891   BA47 00 00       
4892   BA49             
4893   BA49             ; ;****************************************************************
4894   BA49             ; ; Victory Music - Bass line
4895   BA49             
4896   BA49             ; ;High Beeps
4897   BA49                 ; NEWTUNE(s_vic_high)   
4898   BA49                 ; NOTE(_REST,$10)
4899   BA49                 ; NOTE(_B5,$10)
4900   BA49                 ; NOTE(_B5,$10)
4901   BA49                 ; NOTE(_B5,$10)
4902   BA49                 ; ADDBVOL(-1)
4903   BA49                 ; NOTE(_B5,$10)
4904   BA49                 ; NOTE(_B5,$10)
4905   BA49                 ; NOTE(_B5,$10)
4906   BA49                 ; NOTE(_B5,$10)
4907   BA49                 ; ADDBVOL(1)
4908   BA49                 ; ENDSND
4909   BA49             	
4910   BA49             ; ;Common Bass Tune #1
4911   BA49             	; NEWTUNE(s_vic_bcommon1)
4912   BA49             	; NOTE(_REST,$10)
4913   BA49             	; NOTE(_REST,$20)
4914   BA49             	; NOTE(_REST,$20)
4915   BA49             	
4916   BA49             	; NOTE(_F1,$80)
4917   BA49             	; ;NOTE(_F1,$20)
4918   BA49             	; ;NOTE(_F1,$40)
4919   BA49             	; ;NOTE(_F1,$20)
4920   BA49             	; NOTE(_REST,$80)
4921   BA49             	; ;NOTE(_F1,$20)
4922   BA49             	; ;NOTE(_F1,$40)
4923   BA49             	; ;NOTE(_F1,$20)
4924   BA49             	
4925   BA49             	; NOTE(_F1,$80)
4926   BA49             	; NOTE(_REST,$80)
4927   BA49             	; ;NOTE(_F1,$20)
4928   BA49             	; ;NOTE(_F1,$20)
4929   BA49             	; ;NOTE(_F1,$20)
4930   BA49             	; ;NOTE(_F1,$20)
4931   BA49             	; ;NOTE(_F1,$20)
4932   BA49             	; ;NOTE(_F1,$20)
4933   BA49             	
4934   BA49             	; NOTE(_G1,$80)
4935   BA49             	; NOTE(_REST,$80)
4936   BA49             	; ;NOTE(_G1,$20)
4937   BA49             	; ;NOTE(_G1,$20)
4938   BA49             	; ;NOTE(_G1,$20)
4939   BA49             	; ;NOTE(_G1,$20)
4940   BA49             	; ;NOTE(_G1,$20)
4941   BA49             	; ;NOTE(_G1,$20)
4942   BA49             	
4943   BA49             	; NOTE(_G1,$80)
4944   BA49             	; NOTE(_REST,$80)
4945   BA49             	; ;NOTE(_G1,$20)
4946   BA49             	; ;NOTE(_G1,$20)
4947   BA49             	; ;NOTE(_G1,$20)
4948   BA49             	; ;NOTE(_G1,$20)
4949   BA49             	; ;NOTE(_G1,$20)
4950   BA49             	; ;NOTE(_G1,$20)
4951   BA49             	; ENDSND
4952   BA49             	
4953   BA49             	; NEWTUNE(s_vic_bcommon2)
4954   BA49             	; NOTE(_F1,$10)
4955   BA49             	; NOTE(_F1,$10)
4956   BA49             	; NOTE(_F1,$10)
4957   BA49             	; NOTE(_F1,$10)
4958   BA49             	; NOTE(_F1,$10)
4959   BA49             	; NOTE(_F1,$10)
4960   BA49             	; NOTE(_F1,$10)
4961   BA49             	; NOTE(_F1,$10)
4962   BA49             	; NOTE(_F1,$10)
4963   BA49             	; NOTE(_F1,$10)
4964   BA49             	; NOTE(_F1,$10)
4965   BA49             	; NOTE(_F1,$10)
4966   BA49             	; NOTE(_F1,$10)
4967   BA49             	; NOTE(_F1,$10)
4968   BA49             	; NOTE(_F1,$10)
4969   BA49             	; NOTE(_F1,$10)
4970   BA49             	
4971   BA49             	; NOTE(_F1,$10)
4972   BA49             	; NOTE(_F1,$10)
4973   BA49             	; NOTE(_F1,$10)
4974   BA49             	; NOTE(_F1,$10)
4975   BA49             	; NOTE(_F1,$10)
4976   BA49             	; NOTE(_F1,$10)
4977   BA49             	; NOTE(_F1,$10)
4978   BA49             	; NOTE(_F1,$10)
4979   BA49             	; NOTE(_F1,$10)
4980   BA49             	; NOTE(_F1,$10)
4981   BA49             	; NOTE(_F1,$10)
4982   BA49             	; NOTE(_F1,$10)
4983   BA49             	; NOTE(_F1,$10)
4984   BA49             	; NOTE(_F1,$10)
4985   BA49             	; NOTE(_F1,$10)
4986   BA49             	; NOTE(_F1,$10)
4987   BA49             	
4988   BA49             	; NOTE(_G1,$10)
4989   BA49             	; NOTE(_G1,$10)
4990   BA49             	; NOTE(_G1,$10)
4991   BA49             	; NOTE(_G1,$10)
4992   BA49             	; NOTE(_G1,$10)
4993   BA49             	; NOTE(_G1,$10)
4994   BA49             	; NOTE(_G1,$10)
4995   BA49             	; NOTE(_G1,$10)
4996   BA49             	; NOTE(_G1,$10)
4997   BA49             	; NOTE(_G1,$10)
4998   BA49             	; NOTE(_G1,$10)
4999   BA49             	; NOTE(_G1,$10)
5000   BA49             	; NOTE(_G1,$10)
5001   BA49             	; NOTE(_G1,$10)
5002   BA49             	; NOTE(_G1,$10)
5003   BA49             	; NOTE(_G1,$10)
5004   BA49             	
5005   BA49             	; NOTE(_G1,$10)
5006   BA49             	; NOTE(_G1,$10)
5007   BA49             	; NOTE(_G1,$10)
5008   BA49             	; NOTE(_G1,$10)
5009   BA49             	; NOTE(_G1,$10)
5010   BA49             	; NOTE(_G1,$10)
5011   BA49             	; NOTE(_G1,$10)
5012   BA49             	; NOTE(_G1,$10)
5013   BA49             	; NOTE(_G1,$10)
5014   BA49             	; NOTE(_G1,$10)
5015   BA49             	; NOTE(_G1,$10)
5016   BA49             	; NOTE(_G1,$10)
5017   BA49             	; NOTE(_G1,$10)
5018   BA49             	; NOTE(_G1,$10)
5019   BA49             	; NOTE(_G1,$10)
5020   BA49             	; NOTE(_G1,$10)
5021   BA49             	; ENDSND
5022   BA49             	
5023   BA49             	; NEWTUNE(s_vic_pcommon1)
5024   BA49             	; NOTE(_REST,$10)
5025   BA49             	; NOTE(_REST,$20)
5026   BA49             	; NOTE(_REST,$20)
5027   BA49             	; SLOOPSTART(4)
5028   BA49             		; NOTE(_A7,$01)
5029   BA49             		; NOTE(_REST,$F)
5030   BA49             		; NOTE(_A7,$01)
5031   BA49             		; NOTE(_REST,$F)
5032   BA49             		; NOTE(_A7,$01)
5033   BA49             		; NOTE(_REST,$F)
5034   BA49             	; SLOOPEND
5035   BA49             	; ENDSND
5036   BA49             	
5037   BA49             	; NEWTUNE(s_vic_pcommon2)
5038   BA49             	; SLOOPSTART(4)
5039   BA49             		; NOTE(_A7,$10)
5040   BA49             		; NOTE(_REST,$10)
5041   BA49             		; NOTE(_A7,$01)
5042   BA49             		; NOTE(_REST,$F)
5043   BA49             		; NOTE(_A7,$01)
5044   BA49             		; NOTE(_REST,$F)
5045   BA49             	; SLOOPEND
5046   BA49             	; ENDSND
5047   BA49             	
5048   BA49             	
5049   BA49             	; NEWTUNE(s_vic_perc) 
5050   BA49                 ; SETBVOL($06)
5051   BA49                 ; SETNRATE(RATE_DEFAULT)
5052   BA49                 ; SETSNDCONT(sctrl_d01)
5053   BA49             	; SETDIST(CHCTL_POLY17_5)
5054   BA49             	; SJSR(s_vic_pcommon1)
5055   BA49                 ; SLOOPSTART($02)
5056   BA49             		; SJSR(s_vic_pcommon2)
5057   BA49             	; SLOOPEND
5058   BA49                 ; ENDSND
5059   BA49             
5060   BA49                 ; NEWTUNE(s_vic_b1) 
5061   BA49                 ; SETBVOL($03)
5062   BA49                 ; SETNRATE(RATE_DEFAULT)
5063   BA49                 ; SETSNDCONT(sctrl_hardswell)
5064   BA49             	; SETBFREQ(12)
5065   BA49             	; SJSR(s_vic_bcommon1)
5066   BA49                 ; SLOOPSTART($02)
5067   BA49             		; SJSR(s_vic_bcommon2)
5068   BA49             	; SLOOPEND
5069   BA49                 ; ENDSND
5070   BA49             	
5071   BA49             	; NEWTUNE(s_vic_b2) 
5072   BA49                 ; SETBVOL($03)
5073   BA49                 ; SETNRATE(RATE_DEFAULT)
5074   BA49                 ; SETSNDCONT(sctrl_hardswell)
5075   BA49             	; SETBFREQ(4)						;4 steps higher - 3rd
5076   BA49             	; SJSR(s_vic_bcommon1)
5077   BA49                 ; SLOOPSTART($02)
5078   BA49             		; SJSR(s_vic_bcommon2)
5079   BA49             	; SLOOPEND
5080   BA49                 ; ENDSND
5081   BA49             	
5082   BA49             	; NEWTUNE(s_vic_b3) 
5083   BA49                 ; SETBVOL($03)
5084   BA49                 ; SETNRATE(RATE_DEFAULT)
5085   BA49                 ; SETSNDCONT(sctrl_hardswell)
5086   BA49             	; SETBFREQ(7)						;7 steps higher - 5th
5087   BA49             	; SJSR(s_vic_bcommon1)
5088   BA49                 ; SLOOPSTART($08)
5089   BA49             		; SJSR(s_vic_bcommon2)
5090   BA49             	; SLOOPEND
5091   BA49                 ; ENDSND
5092   BA49             	
5093   BA49             	; ;Main Tune - INTRO
5094   BA49             	; NEWTUNE(s_vic_tcommon1)
5095   BA49             	; ;First Measure
5096   BA49             	; NOTE(_Eb3,$10)
5097   BA49             	; NOTE(_Ab3,$10)
5098   BA49             	; NOTE(_Ab3,$10)
5099   BA49             	; NOTE(_G3,$10)
5100   BA49             	; NOTE(_Eb3,$10)
5101   BA49             	; ;Second Measure
5102   BA49             	; NOTE(_F3,$30)
5103   BA49             	; NOTE(_REST,$10)
5104   BA49             	; NOTE(_REST,$20)
5105   BA49             	; NOTE(_REST,$20)
5106   BA49             	; NOTE(_REST,$20)
5107   BA49             	; NOTE(_REST,$20)
5108   BA49             	; NOTE(_Ab3,$10)
5109   BA49             	; NOTE(_Ab3,$10)
5110   BA49             	; NOTE(_G3,$10)
5111   BA49             	; NOTE(_Eb3,$10)
5112   BA49             	; ;Second Measure
5113   BA49             	; NOTE(_F3,$30)
5114   BA49             	; NOTE(_REST,$10)
5115   BA49             	
5116   BA49             	; NOTE(_REST,$20)
5117   BA49             	; NOTE(_REST,$20)
5118   BA49             	; NOTE(_REST,$20)
5119   BA49             	; NOTE(_REST,$20)
5120   BA49             	; NOTE(_Ab3,$10)
5121   BA49             	; NOTE(_Ab3,$10)
5122   BA49             	; NOTE(_G3,$10)
5123   BA49             	; NOTE(_Eb3,$10)
5124   BA49             	; ;Third Measure
5125   BA49             	; NOTE(_G3,$30)
5126   BA49             	; NOTE(_REST,$10)
5127   BA49             	; NOTE(_REST,$20)
5128   BA49             	; NOTE(_REST,$20)
5129   BA49             	; NOTE(_REST,$20)
5130   BA49             	; NOTE(_REST,$28)
5131   BA49             	; NOTE(_Ab3,$10)
5132   BA49             	; NOTE(_Ab3,$10)
5133   BA49             	; NOTE(_G3,$10)
5134   BA49             	; NOTE(_Eb3,$10)
5135   BA49             	; ;Fourth Measure
5136   BA49             	; NOTE(_Bb3,$30)
5137   BA49             	; NOTE(_REST,$10)
5138   BA49             	; NOTE(_REST,$20)
5139   BA49             	; NOTE(_REST,$20)
5140   BA49             	; NOTE(_REST,$20)
5141   BA49             	; NOTE(_REST,$20)
5142   BA49             	; NOTE(_G3,$10)
5143   BA49             	; NOTE(_Ab3,$10)
5144   BA49             	; NOTE(_G3,$10)
5145   BA49             	; NOTE(_C3,$10)
5146   BA49             	; ENDSND
5147   BA49             	
5148   BA49             	; ;Main Tune 
5149   BA49             	; NEWTUNE(s_vic_tcommon2)
5150   BA49             	; ;First Measure
5151   BA49             	; NOTE(_F3,$30)
5152   BA49             	; NOTE(_REST,$10)
5153   BA49             	; NOTE(_REST,$20)
5154   BA49             	; NOTE(_REST,$20)
5155   BA49             	; NOTE(_REST,$20)
5156   BA49             	; NOTE(_REST,$10)
5157   BA49             	; NOTE(_Eb3,$10)
5158   BA49             	; NOTE(_Ab3,$10)
5159   BA49             	; NOTE(_Ab3,$10)
5160   BA49             	; NOTE(_G3,$10)
5161   BA49             	; NOTE(_Eb3,$10)
5162   BA49             	; ;Second Measure
5163   BA49             	; NOTE(_F3,$30)
5164   BA49             	; NOTE(_REST,$10)
5165   BA49             	; NOTE(_REST,$20)
5166   BA49             	; NOTE(_REST,$20)
5167   BA49             	; NOTE(_REST,$20)
5168   BA49             	; NOTE(_REST,$20)
5169   BA49             	; NOTE(_Ab3,$10)
5170   BA49             	; NOTE(_Ab3,$10)
5171   BA49             	; NOTE(_G3,$10)
5172   BA49             	; NOTE(_Eb3,$10)
5173   BA49             	; ;Third Measure
5174   BA49             	; NOTE(_G3,$30)
5175   BA49             	; NOTE(_REST,$10)
5176   BA49             	; NOTE(_REST,$20)
5177   BA49             	; NOTE(_REST,$20)
5178   BA49             	; NOTE(_REST,$20)
5179   BA49             	; NOTE(_REST,$20)
5180   BA49             	; NOTE(_Ab3,$10)
5181   BA49             	; NOTE(_Ab3,$10)
5182   BA49             	; NOTE(_G3,$10)
5183   BA49             	; NOTE(_Eb3,$10)
5184   BA49             	; ;Fourth Measure
5185   BA49             	; NOTE(_Bb3,$30)
5186   BA49             	; NOTE(_REST,$10)
5187   BA49             	; NOTE(_REST,$20)
5188   BA49             	; NOTE(_REST,$20)
5189   BA49             	; NOTE(_REST,$20)
5190   BA49             	; NOTE(_REST,$20)
5191   BA49             	; NOTE(_G3,$10)
5192   BA49             	; NOTE(_Ab3,$10)
5193   BA49             	; NOTE(_G3,$10)
5194   BA49             	; NOTE(_C3,$10)
5195   BA49             	; ENDSND
5196   BA49             	
5197   BA49             	; ;Fill Tune - INTRO
5198   BA49             	; NEWTUNE(s_vic_lead)   
5199   BA49                 ; SETBVOL($03)
5200   BA49                 ; SETNRATE(RATE_DEFAULT)
5201   BA49                 ; SETSNDCONT(sctrl_hardswell)
5202   BA49             	; SETDIST(CHCTL_NOPOLY)
5203   BA49             	; ;First Measure
5204   BA49             	; NOTE(_C3,$10)
5205   BA49             	; NOTE(_F3,$10)
5206   BA49             	; NOTE(_F3,$10)
5207   BA49             	; NOTE(_C3,$10)
5208   BA49             	; NOTE(_D3,$10)
5209   BA49             	; ;Second Measure
5210   BA49             	; NOTE(_REST,$20)
5211   BA49             	; NOTE(_REST,$20)
5212   BA49             	; NOTE(_REST,$20)
5213   BA49             	; NOTE(_A4,$20)
5214   BA49             	; NOTE(_A4,$20)
5215   BA49             	; NOTE(_G4,$10)
5216   BA49             	; NOTE(_F4,$10)
5217   BA49             	; NOTE(_F4,$20)   ;here
5218   BA49             	; NOTE(_E4,$20)	 ;here
5219   BA49             	; ;Second Measure
5220   BA49             	; NOTE(_REST,$30)
5221   BA49             	; NOTE(_REST,$10)
5222   BA49             	; NOTE(_REST,$20)
5223   BA49             	; NOTE(_A4,$20)
5224   BA49             	; NOTE(_A4,$20)
5225   BA49             	; NOTE(_G4,$10)
5226   BA49             	; NOTE(_F4,$10)
5227   BA49             	; NOTE(_F4,$20)   ;here
5228   BA49             	; NOTE(_E4,$20)	 ;here
5229   BA49             	; ;Third Measure
5230   BA49             	; NOTE(_REST,$30)
5231   BA49             	; NOTE(_REST,$10)
5232   BA49             	; NOTE(_REST,$20)
5233   BA49             	; NOTE(_A4,$20)
5234   BA49             	; NOTE(_A4,$20)
5235   BA49             	; NOTE(_G4,$10)
5236   BA49             	; NOTE(_F4,$10)
5237   BA49             	; NOTE(_F4,$20)   ;here
5238   BA49             	; NOTE(_E4,$20)	 ;here
5239   BA49             	; ;Fourth Measure
5240   BA49             	; NOTE(_REST,$30)
5241   BA49             	; NOTE(_REST,$10)
5242   BA49             	; NOTE(_REST,$20)
5243   BA49             	; NOTE(_A4,$20)
5244   BA49             	; NOTE(_A4,$20)
5245   BA49             	; NOTE(_G4,$10)
5246   BA49             	; NOTE(_F4,$10)
5247   BA49             	; NOTE(_F4,$20)   ;here
5248   BA49             	; NOTE(_E4,$20)	 ;here
5249   BA49             	; ENDSND
5250   BA49             	
5251   BA49             	; ;Harmony Mid - Key Tone
5252   BA49                 ; NEWTUNE(s_vic_mid)   
5253   BA49                 ; SETBVOL($03)
5254   BA49                 ; SETNRATE(RATE_DEFAULT)
5255   BA49                 ; SETSNDCONT(sctrl_hardswell)
5256   BA49             	; SETDIST(CHCTL_NOPOLY)
5257   BA49             	; SJSR(s_vic_tcommon1)
5258   BA49             	; SLOOPSTART($02)
5259   BA49             		; SJSR(s_vic_tcommon2)
5260   BA49             	; SLOOPEND
5261   BA49                 ; ENDSND
5262   BA49             	
5263   BA49             	; ;Harmony Low - 3rd
5264   BA49                 ; NEWTUNE(s_vic_mid1)   
5265   BA49                 ; SETBVOL($03)
5266   BA49                 ; SETNRATE(RATE_DEFAULT)
5267   BA49                 ; SETSNDCONT(sctrl_hardswell)
5268   BA49             	; SETBFREQ(7)	
5269   BA49             	; SJSR(s_vic_tcommon1)
5270   BA49             	; SLOOPSTART($02)
5271   BA49             		; SJSR(s_vic_tcommon2)
5272   BA49             	; SLOOPEND
5273   BA49                 ; ENDSND
5274   BA49             	
5275   BA49             
5276   BA49             	; ;Harmony Low - 5th
5277   BA49                 ; NEWTUNE(s_vic_mid2)   
5278   BA49                 ; SETBVOL(-12)
5279   BA49                 ; SETNRATE(RATE_DEFAULT)
5280   BA49                 ; SETSNDCONT(sctrl_hardswell)
5281   BA49             	; SETBFREQ(7)	
5282   BA49             	; SJSR(s_vic_tcommon1)
5283   BA49             	; SLOOPSTART($02)
5284   BA49             		; SJSR(s_vic_tcommon2)		
5285   BA49             	; SLOOPEND
5286   BA49                 ; ENDSND
5287   BA49             ;****************************************************************
5288   BA49              
5289   BA49                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_xlife = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$59
5289   BA49             
5289   931A             
5289   931A 49          
5289   93AA             
5289   93AA BA          
5289   93AB             
5289   93AB             
5289   BA49             
5289   BA49~                NEWSNDAMP(sctrl_xlife)   ;,$59
5289   BA49~                NEWSNDAMP(sctrl_xlife)   ;,$59
5289   BA49             
5290   BA49 02 3C           .byte $02,$3C
5291   BA4B 0E 00       	.byte $0E,$00
5292   BA4D 02 C4       	.byte $02,$C4
5293   BA4F 0E 00       	.byte $0E,$00
5294   BA51 FF 04 0B    	.byte $FF,$04,$0B			;Loop back 4 times
5295   BA54                 
5296   BA54                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_xlife = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$59
5296   BA54             
5296   91F0             
5296   91F0 54          
5296   9280             
5296   9280 BA          
5296   9281             
5296   9281             
5296   BA54             
5296   BA54~                NEWSNDFREQ(sfreq_xlife)  ;,$59
5296   BA54~                NEWSNDFREQ(sfreq_xlife)  ;,$59
5296   BA54             
5297   BA54 02 60 00        .byte $02,$60,$00
5298   BA57 9E 00 00    	.byte $9E,$00,$00
5299   BA5A             
5300   BA5A                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_xlife = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
5300   BA5A             
5300   90F1             
5300   90F1 5A          
5300   9181             
5300   9181 BA          
5300   9182             
5300   9182             
5300   BA5A             
5300   BA5A~                NEWTUNE(s_xlife)    
5300   BA5A~                NEWTUNE(s_xlife)    
5300   BA5A             
5301   BA5A                 \ .db isc_freq,sfreq_xlife
5301   BA5A 86 40       
5302   BA5C                 \ .db isc_ctrl,sctrl_xlife
5302   BA5C 87 4A       
5303   BA5E                 \ .db isc_sfunc10,$00
5303   BA5E 90 00       
5304   BA60                 \ .db isc_sebvol,$00
5304   BA60 82 00       
5305   BA62                 \ .db isc_ctrlm,CHCTL_NOPOLY
5305   BA62 8A A0       
5306   BA64                 \ .db _REST,$A0
5306   BA64 00 A0       
5307   BA66                 \ .dw $0000
5307   BA66 00 00       
5308   BA68                 
5309   BA68             ;*************************************
5310   BA68                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bonus = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$5a
5310   BA68             
5310   931B             
5310   931B 68          
5310   93AB             
5310   93AB BA          
5310   93AC             
5310   93AC             
5310   BA68             
5310   BA68~                NEWSNDAMP(sctrl_bonus)   ;,$5a
5310   BA68~                NEWSNDAMP(sctrl_bonus)   ;,$5a
5310   BA68             
5311   BA68 02 10 06 00     .byte $02,$10,$06,$00
5312   BA6C                 
5313   BA6C                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bonus = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$5a
5313   BA6C             
5313   91F1             
5313   91F1 6C          
5313   9281             
5313   9281 BA          
5313   9282             
5313   9282             
5313   BA6C             
5313   BA6C~                NEWSNDFREQ(sfreq_bonus)  ;,$5a
5313   BA6C~                NEWSNDFREQ(sfreq_bonus)  ;,$5a
5313   BA6C             
5314   BA6C 02F000060000    .byte $02,$F0,$00,$06,$00,$00
5315   BA72                     
5316   BA72                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bonus = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
5316   BA72             
5316   90F2             
5316   90F2 72          
5316   9182             
5316   9182 BA          
5316   9183             
5316   9183             
5316   BA72             
5316   BA72~                NEWTUNE(s_bonus)    
5316   BA72~                NEWTUNE(s_bonus)    
5316   BA72             
5317   BA72                 \ .db isc_freq,sfreq_bonus
5317   BA72 86 41       
5318   BA74                 \ .db isc_ctrl,sctrl_bonus
5318   BA74 87 4B       
5319   BA76                 \ .db isc_sfunc10,$00
5319   BA76 90 00       
5320   BA78                 \ .db isc_sebvol,$00
5320   BA78 82 00       
5321   BA7A                 \ .db isc_ctrlm,CHCTL_NOPOLY
5321   BA7A 8A A0       
5322   BA7C                 \ .db _REST,$08
5322   BA7C 00 08       
5323   BA7E                 \ .dw $0000
5323   BA7E 00 00       
5324   BA80                 
5325   BA80             ;*************************************
5326   BA80                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_shield = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$5b
5326   BA80             
5326   931C             
5326   931C 80          
5326   93AC             
5326   93AC BA          
5326   93AD             
5326   93AD             
5326   BA80             
5326   BA80~                NEWSNDAMP(sctrl_shield)  ;,$5b
5326   BA80~                NEWSNDAMP(sctrl_shield)  ;,$5b
5326   BA80             
5327   BA80                 ;.byte $02,$20,$02,$00,$02,$04,$FF,$06,$05
5328   BA80                 \ #if (16>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (16<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 16 << 1\		#endif\   #endif\ #endif              ;Eff Slope:8      Dur:2    Net:16
5328   BA80~                SCTRL(16,2)              ;Eff Slope:8      Dur:2    Net:16
5328   BA80~                SCTRL(16,2)              ;Eff Slope:8      Dur:2    Net:16
5328   BA80             
5328   BA80~                SCTRL(16,2)              ;Eff Slope:8      Dur:2    Net:16
5328   BA80~                SCTRL(16,2)              ;Eff Slope:8      Dur:2    Net:16
5328   BA80             
5328   BA80~                SCTRL(16,2)              ;Eff Slope:8      Dur:2    Net:16
5328   BA80~                SCTRL(16,2)              ;Eff Slope:8      Dur:2    Net:16
5328   BA80             
5328   BA80 02          
5328   BA81 20          
5328   BA82             
5328   BA82             
5328   BA82             
5329   BA82             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:2    Net:16
5329   BA82~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:16
5329   BA82~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:16
5329   BA82             
5329   BA82~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:16
5329   BA82~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:16
5329   BA82             
5329   BA82~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:16
5329   BA82~            	SCTRL(0,2)               ;Eff Slope:0      Dur:2    Net:16
5329   BA82             
5329   BA82 02          
5329   BA83 00          
5329   BA84             
5329   BA84             
5329   BA84             
5330   BA84             	\ .push *
5330   BA84             
5331   BA84             		\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:18
5331   BA84~            		SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:18
5331   BA84~            		SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:18
5331   BA84             
5331   BA84~            		SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:18
5331   BA84~            		SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:18
5331   BA84             
5331   BA84~            		SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:18
5331   BA84~            		SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:18
5331   BA84             
5331   BA84 02          
5331   BA85 04          
5331   BA86             
5331   BA86             
5331   BA86             
5332   BA86             	\ .pop __rpmsloop\ .db $FF,6,(*-__rpmsloop+3)                 ;Loop Back 6 times.
5332   BA86             
5332   BA86 FF 06 05    
5333   BA89             
5334   BA89                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_shield = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$5b
5334   BA89             
5334   91F2             
5334   91F2 89          
5334   9282             
5334   9282 BA          
5334   9283             
5334   9283             
5334   BA89             
5334   BA89~                NEWSNDFREQ(sfreq_shield) ;,$5b
5334   BA89~                NEWSNDFREQ(sfreq_shield) ;,$5b
5334   BA89             
5335   BA89                 \ .db 2 \ #if (56>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 56 << 1\	#endif\ #endif              ;Eff Slope:56     Dur:2    Net:112
5335   BA89 02          
5335   BA8A~                SFREQ(56,2)              ;Eff Slope:56     Dur:2    Net:112
5335   BA8A~                SFREQ(56,2)              ;Eff Slope:56     Dur:2    Net:112
5335   BA8A             
5335   BA8A~                SFREQ(56,2)              ;Eff Slope:56     Dur:2    Net:112
5335   BA8A~                SFREQ(56,2)              ;Eff Slope:56     Dur:2    Net:112
5335   BA8A             
5335   BA8A 70 00       
5335   BA8C             
5335   BA8C             
5336   BA8C             	\ .db 18 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (18 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif              ;Eff Slope:0      Dur:18   Net:112
5336   BA8C 12          
5336   BA8D~            	SFREQ(0,18)              ;Eff Slope:0      Dur:18   Net:112
5336   BA8D~            	SFREQ(0,18)              ;Eff Slope:0      Dur:18   Net:112
5336   BA8D             
5336   BA8D~            	SFREQ(0,18)              ;Eff Slope:0      Dur:18   Net:112
5336   BA8D~            	SFREQ(0,18)              ;Eff Slope:0      Dur:18   Net:112
5336   BA8D             
5336   BA8D 00 00       
5336   BA8F             
5336   BA8F             
5337   BA8F             	;.byte $02,$70,$00,$12,$00,$00
5338   BA8F                     
5339   BA8F                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_shield = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
5339   BA8F             
5339   90F3             
5339   90F3 8F          
5339   9183             
5339   9183 BA          
5339   9184             
5339   9184             
5339   BA8F             
5339   BA8F~                NEWTUNE(s_shield)   
5339   BA8F~                NEWTUNE(s_shield)   
5339   BA8F             
5340   BA8F                 \ .db isc_freq,sfreq_shield
5340   BA8F 86 42       
5341   BA91                 \ .db isc_ctrl,sctrl_shield
5341   BA91 87 4C       
5342   BA93                 \ .db isc_sfunc10,$00
5342   BA93 90 00       
5343   BA95                 \ .db isc_sebvol,$00
5343   BA95 82 00       
5344   BA97                 \ .db isc_ctrlm,CHCTL_POLY4
5344   BA97 8A C0       
5345   BA99                 \ .db _REST,$12
5345   BA99 00 12       
5346   BA9B                 \ .dw $0000
5346   BA9B 00 00       
5347   BA9D                 
5348   BA9D             ;*************************************
5349   BA9D                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_manwall = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$5c
5349   BA9D             
5349   931D             
5349   931D 9D          
5349   93AD             
5349   93AD BA          
5349   93AE             
5349   93AE             
5349   BA9D             
5349   BA9D~                NEWSNDAMP(sctrl_manwall) ;,$5c
5349   BA9D~                NEWSNDAMP(sctrl_manwall) ;,$5c
5349   BA9D             
5350   BA9D 023C080002F0    .byte $02,$3C,$08,$00,$02,$F0,$08,$00,$02,$F8,$02,$00,$02,$F8,$FF,$04
5350   BAA3 080002F8020002F8FF04
5351   BAAD 07 1A 00        .byte $07,$1A,$00
5352   BAB0                 
5353   BAB0                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_manwall = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$5c
5353   BAB0             
5353   91F3             
5353   91F3 B0          
5353   9283             
5353   9283 BA          
5353   9284             
5353   9284             
5353   BAB0             
5353   BAB0~                NEWSNDFREQ(sfreq_manwall)    ;,$5c
5353   BAB0~                NEWSNDFREQ(sfreq_manwall)    ;,$5c
5353   BAB0             
5354   BAB0 0E 00 00        .byte $0E,$00,$00
5355   BAB3 02 20 01    	.byte $02,$20,$01
5356   BAB6 06 00 00    	.byte $06,$00,$00
5357   BAB9 02 00 FF    	.byte $02,$00,$FF
5358   BABC 04 00 00    	.byte $04,$00,$00
5359   BABF 02 20 00    	.byte $02,$20,$00
5360   BAC2 04 00 00    	.byte $04,$00,$00
5361   BAC5 FF 05 09    	.byte $FF,$05,$09
5362   BAC8 02 30 00    	.byte $02,$30,$00
5363   BACB 04 00 00    	.byte $04,$00,$00
5364   BACE                         
5365   BACE                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_manwall = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
5365   BACE             
5365   90F4             
5365   90F4 CE          
5365   9184             
5365   9184 BA          
5365   9185             
5365   9185             
5365   BACE             
5365   BACE~                NEWTUNE(s_manwall)  
5365   BACE~                NEWTUNE(s_manwall)  
5365   BACE             
5366   BACE                 \ .db isc_freq,sfreq_manwall
5366   BACE 86 43       
5367   BAD0                 \ .db isc_ctrl,sctrl_manwall
5367   BAD0 87 4D       
5368   BAD2                 \ .db isc_sfunc10,$00
5368   BAD2 90 00       
5369   BAD4                 \ .db isc_sebvol,$00
5369   BAD4 82 00       
5370   BAD6                 \ .db isc_ctrlm,CHCTL_POLY17_5
5370   BAD6 8A 00       
5371   BAD8                 \ .db _REST,$44
5371   BAD8 00 44       
5372   BADA                 \ .dw $0000
5372   BADA 00 00       
5373   BADC                 
5374   BADC             ;*************************************
5375   BADC                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_oxygen = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$5d
5375   BADC             
5375   931E             
5375   931E DC          
5375   93AE             
5375   93AE BA          
5375   93AF             
5375   93AF             
5375   BADC             
5375   BADC~                NEWSNDAMP(sctrl_oxygen)  ;,$5d
5375   BADC~                NEWSNDAMP(sctrl_oxygen)  ;,$5d
5375   BADC             
5376   BADC 023C040002FC    .byte $02,$3C,$04,$00,$02,$FC,$FF,$08,$07,$02,$00,$02,$FC,$FF,$05,$07
5376   BAE2 FF0807020002FCFF0507
5377   BAEC                 
5378   BAEC                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_oxygen = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$5d
5378   BAEC             
5378   91F4             
5378   91F4 EC          
5378   9284             
5378   9284 BA          
5378   9285             
5378   9285             
5378   BAEC             
5378   BAEC~                NEWSNDFREQ(sfreq_oxygen) ;,$5d
5378   BAEC~                NEWSNDFREQ(sfreq_oxygen) ;,$5d
5378   BAEC             
5379   BAEC 50 00 00        .byte $50,$00,$00
5380   BAEF                     
5381   BAEF                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_oxygen = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
5381   BAEF             
5381   90F5             
5381   90F5 EF          
5381   9185             
5381   9185 BA          
5381   9186             
5381   9186             
5381   BAEF             
5381   BAEF~                NEWTUNE(s_oxygen)   
5381   BAEF~                NEWTUNE(s_oxygen)   
5381   BAEF             
5382   BAEF                 \ .db isc_freq,sfreq_oxygen
5382   BAEF 86 44       
5383   BAF1                 \ .db isc_ctrl,sctrl_oxygen
5383   BAF1 87 4E       
5384   BAF3                 \ .db isc_sfunc10,$00
5384   BAF3 90 00       
5385   BAF5                 \ .db isc_sebvol,$00
5385   BAF5 82 00       
5386   BAF7                 \ .db isc_ctrlm,CHCTL_POLY17
5386   BAF7 8A 80       
5387   BAF9                 \ .db _REST,$50
5387   BAF9 00 50       
5388   BAFB                 \ .dw $0000
5388   BAFB 00 00       
5389   BAFD                 
5390   BAFD             ;*************************************
5391   BAFD                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_robshot = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF  ;,$5e
5391   BAFD             
5391   931F             
5391   931F FD          
5391   93AF             
5391   93AF BA          
5391   93B0             
5391   93B0             
5391   BAFD             
5391   BAFD~                NEWSNDAMP(sctrl_robshot) ;,$5e
5391   BAFD~                NEWSNDAMP(sctrl_robshot) ;,$5e
5391   BAFD             
5392   BAFD 023C02F802CC    .byte $02,$3C,$02,$F8,$02,$CC,$02,$0C,$02,$00,$02,$FC,$02,$00,$02,$FC,$02,$00
5392   BB03 020C020002FC020002FC0200
5393   BB0F                 
5394   BB0F                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_robshot = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF     ;,$5e
5394   BB0F             
5394   91F5             
5394   91F5 0F          
5394   9285             
5394   9285 BB          
5394   9286             
5394   9286             
5394   BB0F             
5394   BB0F~                NEWSNDFREQ(sfreq_robshot)    ;,$5e
5394   BB0F~                NEWSNDFREQ(sfreq_robshot)    ;,$5e
5394   BB0F             
5395   BB0F 02 40 01        .byte $02,$40,$01
5396   BB12 04 00 00    	.byte $04,$00,$00
5397   BB15 02 C0 03    	.byte $02,$C0,$03
5398   BB18 0A 00 01    	.byte $0A,$00,$01
5399   BB1B                     
5400   BB1B                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_robshot = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF   
5400   BB1B             
5400   90F6             
5400   90F6 1B          
5400   9186             
5400   9186 BB          
5400   9187             
5400   9187             
5400   BB1B             
5400   BB1B~                NEWTUNE(s_robshot)  
5400   BB1B~                NEWTUNE(s_robshot)  
5400   BB1B             
5401   BB1B                 \ .db isc_freq,sfreq_robshot
5401   BB1B 86 45       
5402   BB1D                 \ .db isc_ctrl,sctrl_robshot
5402   BB1D 87 4F       
5403   BB1F                 \ .db isc_sfunc10,$00
5403   BB1F 90 00       
5404   BB21                 \ .db isc_sebvol,$00
5404   BB21 82 00       
5405   BB23                 \ .db isc_ctrlm,CHCTL_NOPOLY
5405   BB23 8A A0       
5406   BB25                 \ .db _REST,$12
5406   BB25 00 12       
5407   BB27                 \ .dw $0000
5407   BB27 00 00       
5408   BB29                 
5409   BB29             ;*************************************
5410   BB29                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_footstep = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF     ;,$5f
5410   BB29             
5410   9320             
5410   9320 29          
5410   93B0             
5410   93B0 BB          
5410   93B1             
5410   93B1             
5410   BB29             
5410   BB29~                NEWSNDAMP(sctrl_footstep)    ;,$5f
5410   BB29~                NEWSNDAMP(sctrl_footstep)    ;,$5f
5410   BB29             
5411   BB29 02 3C 02 C4     .byte $02,$3C,$02,$C4
5412   BB2D                 
5413   BB2D                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_footstep = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$5f
5413   BB2D             
5413   91F6             
5413   91F6 2D          
5413   9286             
5413   9286 BB          
5413   9287             
5413   9287             
5413   BB2D             
5413   BB2D~                NEWSNDFREQ(sfreq_footstep)   ;,$5f
5413   BB2D~                NEWSNDFREQ(sfreq_footstep)   ;,$5f
5413   BB2D             
5414   BB2D 02 10 00        .byte $02,$10,$00
5415   BB30 02 00 00    	.byte $02,$00,$00
5416   BB33                     
5417   BB33                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_footstep = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5417   BB33             
5417   90F7             
5417   90F7 33          
5417   9187             
5417   9187 BB          
5417   9188             
5417   9188             
5417   BB33             
5417   BB33~                NEWTUNE(s_footstep) 
5417   BB33~                NEWTUNE(s_footstep) 
5417   BB33             
5418   BB33                 \ .db isc_freq,sfreq_footstep
5418   BB33 86 46       
5419   BB35                 \ .db isc_ctrl,sctrl_footstep
5419   BB35 87 50       
5420   BB37                 \ .db isc_sfunc10,$00
5420   BB37 90 00       
5421   BB39                 \ .db isc_sebvol,$00
5421   BB39 82 00       
5422   BB3B                 \ .db isc_ctrlm,CHCTL_POLY17_5
5422   BB3B 8A 00       
5423   BB3D                 \ .db _REST,$04
5423   BB3D 00 04       
5424   BB3F                 \ .dw $0000
5424   BB3F 00 00       
5425   BB41                 
5426   BB41             ;*************************************
5427   BB41                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_nooxy = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$60
5427   BB41             
5427   9321             
5427   9321 41          
5427   93B1             
5427   93B1 BB          
5427   93B2             
5427   93B2             
5427   BB41             
5427   BB41~                NEWSNDAMP(sctrl_nooxy)   ;,$60
5427   BB41~                NEWSNDAMP(sctrl_nooxy)   ;,$60
5427   BB41             
5428   BB41 02 20           .byte $02,$20
5429   BB43 26 00       	.byte $26,$00
5430   BB45 02 E0       	.byte $02,$E0
5431   BB47 26 00       	.byte $26,$00
5432   BB49 FF 02 0B    	.byte $FF,$02,$0B
5433   BB4C                 
5434   BB4C                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_nooxy = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$60
5434   BB4C             
5434   91F7             
5434   91F7 4C          
5434   9287             
5434   9287 BB          
5434   9288             
5434   9288             
5434   BB4C             
5434   BB4C~                NEWSNDFREQ(sfreq_nooxy)  ;,$60
5434   BB4C~                NEWSNDFREQ(sfreq_nooxy)  ;,$60
5434   BB4C             
5435   BB4C 02 40 01        .byte $02,$40,$01
5436   BB4F EE 00 00    	.byte $EE,$00,$00
5437   BB52                     
5438   BB52                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_nooxy = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
5438   BB52             
5438   90F8             
5438   90F8 52          
5438   9188             
5438   9188 BB          
5438   9189             
5438   9189             
5438   BB52             
5438   BB52~                NEWTUNE(s_nooxy)    
5438   BB52~                NEWTUNE(s_nooxy)    
5438   BB52             
5439   BB52                 \ .db isc_freq,sfreq_nooxy
5439   BB52 86 47       
5440   BB54                 \ .db isc_ctrl,sctrl_nooxy
5440   BB54 87 51       
5441   BB56                 \ .db isc_sfunc10,$00
5441   BB56 90 00       
5442   BB58                 \ .db isc_sebvol,$00
5442   BB58 82 00       
5443   BB5A                 \ .db isc_ctrlm,CHCTL_NOPOLY
5443   BB5A 8A A0       
5444   BB5C                 \ .db _REST,$F0
5444   BB5C 00 F0       
5445   BB5E                 \ .dw $0000
5445   BB5E 00 00       
5446   BB60             
5447   BB60                 
5448   BB60             ;*************************************
5449   BB60                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_rhum = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   	 ;,$63
5449   BB60             
5449   9322             
5449   9322 60          
5449   93B2             
5449   93B2 BB          
5449   93B3             
5449   93B3             
5449   BB60             
5449   BB60~                NEWSNDAMP(sctrl_rhum)  	 ;,$63
5449   BB60~                NEWSNDAMP(sctrl_rhum)  	 ;,$63
5449   BB60             
5450   BB60             	\ #if (8>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (8<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 8 << 1\		#endif\   #endif\ #endif               ;Eff Slope:4      Dur:2    Net:8
5450   BB60~            	SCTRL(8,2)               ;Eff Slope:4      Dur:2    Net:8
5450   BB60~            	SCTRL(8,2)               ;Eff Slope:4      Dur:2    Net:8
5450   BB60             
5450   BB60~            	SCTRL(8,2)               ;Eff Slope:4      Dur:2    Net:8
5450   BB60~            	SCTRL(8,2)               ;Eff Slope:4      Dur:2    Net:8
5450   BB60             
5450   BB60~            	SCTRL(8,2)               ;Eff Slope:4      Dur:2    Net:8
5450   BB60~            	SCTRL(8,2)               ;Eff Slope:4      Dur:2    Net:8
5450   BB60             
5450   BB60 02          
5450   BB61 10          
5450   BB62             
5450   BB62             
5450   BB62             
5451   BB62             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (14 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 14 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:14   Net:8
5451   BB62~            	SCTRL(0,14)              ;Eff Slope:0      Dur:14   Net:8
5451   BB62~            	SCTRL(0,14)              ;Eff Slope:0      Dur:14   Net:8
5451   BB62             
5451   BB62~            	SCTRL(0,14)              ;Eff Slope:0      Dur:14   Net:8
5451   BB62~            	SCTRL(0,14)              ;Eff Slope:0      Dur:14   Net:8
5451   BB62             
5451   BB62~            	SCTRL(0,14)              ;Eff Slope:0      Dur:14   Net:8
5451   BB62~            	SCTRL(0,14)              ;Eff Slope:0      Dur:14   Net:8
5451   BB62             
5451   BB62 0E          
5451   BB63 00          
5451   BB64             
5451   BB64             
5451   BB64             
5452   BB64             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:10
5452   BB64~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
5452   BB64~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
5452   BB64             
5452   BB64~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
5452   BB64~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
5452   BB64             
5452   BB64~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
5452   BB64~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:10
5452   BB64             
5452   BB64 02          
5452   BB65 04          
5452   BB66             
5452   BB66             
5452   BB66             
5453   BB66             	\ #if (4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 4 << 1\		#endif\   #endif\ #endif               ;Eff Slope:2      Dur:4    Net:18
5453   BB66~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:18
5453   BB66~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:18
5453   BB66             
5453   BB66~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:18
5453   BB66~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:18
5453   BB66             
5453   BB66~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:18
5453   BB66~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:18
5453   BB66             
5453   BB66 04          
5453   BB67 08          
5453   BB68             
5453   BB68             
5453   BB68             
5454   BB68             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:20
5454   BB68~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:20
5454   BB68~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:20
5454   BB68             
5454   BB68~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:20
5454   BB68~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:20
5454   BB68             
5454   BB68~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:20
5454   BB68~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:20
5454   BB68             
5454   BB68 02          
5454   BB69 04          
5454   BB6A             
5454   BB6A             
5454   BB6A             
5455   BB6A             	\ #if (4>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (4<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (4 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 4 \ 			.db 4 << 1\		#endif\   #endif\ #endif               ;Eff Slope:2      Dur:4    Net:28
5455   BB6A~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:28
5455   BB6A~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:28
5455   BB6A             
5455   BB6A~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:28
5455   BB6A~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:28
5455   BB6A             
5455   BB6A~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:28
5455   BB6A~            	SCTRL(4,4)               ;Eff Slope:2      Dur:4    Net:28
5455   BB6A             
5455   BB6A 04          
5455   BB6B 08          
5455   BB6C             
5455   BB6C             
5455   BB6C             
5456   BB6C             	\ #if (2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (2 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 2 \ 			.db 2 << 1\		#endif\   #endif\ #endif               ;Eff Slope:1      Dur:2    Net:30
5456   BB6C~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
5456   BB6C~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
5456   BB6C             
5456   BB6C~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
5456   BB6C~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
5456   BB6C             
5456   BB6C~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
5456   BB6C~            	SCTRL(2,2)               ;Eff Slope:1      Dur:2    Net:30
5456   BB6C             
5456   BB6C 02          
5456   BB6D 04          
5456   BB6E             
5456   BB6E             
5456   BB6E             
5457   BB6E             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (24 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 24 \ 			.db 0 << 1\		#endif\   #endif\ #endif              ;Eff Slope:0      Dur:24   Net:30
5457   BB6E~            	SCTRL(0,24)              ;Eff Slope:0      Dur:24   Net:30
5457   BB6E~            	SCTRL(0,24)              ;Eff Slope:0      Dur:24   Net:30
5457   BB6E             
5457   BB6E~            	SCTRL(0,24)              ;Eff Slope:0      Dur:24   Net:30
5457   BB6E~            	SCTRL(0,24)              ;Eff Slope:0      Dur:24   Net:30
5457   BB6E             
5457   BB6E~            	SCTRL(0,24)              ;Eff Slope:0      Dur:24   Net:30
5457   BB6E~            	SCTRL(0,24)              ;Eff Slope:0      Dur:24   Net:30
5457   BB6E             
5457   BB6E 18          
5457   BB6F 00          
5457   BB70             
5457   BB70             
5457   BB70             
5458   BB70             	\ #if (-2>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (-2<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (22 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 22 \ 			.db -2 << 1\		#endif\   #endif\ #endif             ;Eff Slope:-1     Dur:22   Net:8
5458   BB70~            	SCTRL(-2,22)             ;Eff Slope:-1     Dur:22   Net:8
5458   BB70~            	SCTRL(-2,22)             ;Eff Slope:-1     Dur:22   Net:8
5458   BB70             
5458   BB70~            	SCTRL(-2,22)             ;Eff Slope:-1     Dur:22   Net:8
5458   BB70~            	SCTRL(-2,22)             ;Eff Slope:-1     Dur:22   Net:8
5458   BB70             
5458   BB70~            	SCTRL(-2,22)             ;Eff Slope:-1     Dur:22   Net:8
5458   BB70~            	SCTRL(-2,22)             ;Eff Slope:-1     Dur:22   Net:8
5458   BB70             
5458   BB70 16          
5458   BB71 FC          
5458   BB72             
5458   BB72             
5458   BB72             
5459   BB72             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (8 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 8 \ 			.db 0 << 1\		#endif\   #endif\ #endif               ;Eff Slope:0      Dur:8    Net:8
5459   BB72~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:8
5459   BB72~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:8
5459   BB72             
5459   BB72~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:8
5459   BB72~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:8
5459   BB72             
5459   BB72~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:8
5459   BB72~            	SCTRL(0,8)               ;Eff Slope:0      Dur:8    Net:8
5459   BB72             
5459   BB72 08          
5459   BB73 00          
5459   BB74             
5459   BB74             
5459   BB74             
5460   BB74             	
5461   BB74             	;Validated
5462   BB74                 ; .byte $02,$10
5463   BB74                 ; .byte $0E,$00
5464   BB74                 ; .byte $02,$04
5465   BB74                 ; .byte $04,$08
5466   BB74                 ; .byte $02,$04
5467   BB74                 ; .byte $04,$08
5468   BB74                 ; .byte $02,$04
5469   BB74                 ; .byte $18,$00
5470   BB74                 ; .byte $16,$FC
5471   BB74                 ; .byte $08,$00
5472   BB74                 
5473   BB74                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_rhum = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  ;,$63
5473   BB74             
5473   91F8             
5473   91F8 74          
5473   9288             
5473   9288 BB          
5473   9289             
5473   9289             
5473   BB74             
5473   BB74~                NEWSNDFREQ(sfreq_rhum) ;,$63
5473   BB74~                NEWSNDFREQ(sfreq_rhum) ;,$63
5473   BB74             
5474   BB74             	\ .db 2 \ #if (480>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (2 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 480 << 1\	#endif\ #endif             ;Eff Slope:480    Dur:2    Net:960
5474   BB74 02          
5474   BB75~            	SFREQ(480,2)             ;Eff Slope:480    Dur:2    Net:960
5474   BB75~            	SFREQ(480,2)             ;Eff Slope:480    Dur:2    Net:960
5474   BB75             
5474   BB75~            	SFREQ(480,2)             ;Eff Slope:480    Dur:2    Net:960
5474   BB75~            	SFREQ(480,2)             ;Eff Slope:480    Dur:2    Net:960
5474   BB75             
5474   BB75 C0 03       
5474   BB77             
5474   BB77             
5475   BB77             	\ .db 82 \ #if (0>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (82 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 0 << 1\	#endif\ #endif              ;Eff Slope:0      Dur:82   Net:960
5475   BB77 52          
5475   BB78~            	SFREQ(0,82)              ;Eff Slope:0      Dur:82   Net:960
5475   BB78~            	SFREQ(0,82)              ;Eff Slope:0      Dur:82   Net:960
5475   BB78             
5475   BB78~            	SFREQ(0,82)              ;Eff Slope:0      Dur:82   Net:960
5475   BB78~            	SFREQ(0,82)              ;Eff Slope:0      Dur:82   Net:960
5475   BB78             
5475   BB78 00 00       
5475   BB7A             
5475   BB7A             
5476   BB7A             	
5477   BB7A             	;Validated
5478   BB7A                 ;.byte $02,$C0,$03
5479   BB7A             	;.byte $52,$00,$00
5480   BB7A             
5481   BB7A                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_rhum = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
5481   BB7A             
5481   90F9             
5481   90F9 7A          
5481   9189             
5481   9189 BB          
5481   918A             
5481   918A             
5481   BB7A             
5481   BB7A~                NEWTUNE(s_rhum)   
5481   BB7A~                NEWTUNE(s_rhum)   
5481   BB7A             
5482   BB7A                 \ .db isc_dctl,$01
5482   BB7A 8B 01       
5483   BB7C                 \ .db isc_freq,sfreq_rhum
5483   BB7C 86 48       
5484   BB7E                 \ .db isc_ctrl,sctrl_rhum
5484   BB7E 87 52       
5485   BB80                 \ .db isc_sfunc10,$00
5485   BB80 90 00       
5486   BB82                 \ .db isc_sebvol,$00
5486   BB82 82 00       
5487   BB84                 \ .db isc_ctrlm,CHCTL_POLY4
5487   BB84 8A C0       
5488   BB86                 \ .db _REST,$54
5488   BB86 00 54       
5489   BB88                 \ .dw $0000
5489   BB88 00 00       
5490   BB8A                 
5491   BB8A             ;*************************************
5492   BB8A                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_redalert = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$64
5492   BB8A             
5492   9323             
5492   9323 8A          
5492   93B3             
5492   93B3 BB          
5492   93B4             
5492   93B4             
5492   BB8A             
5492   BB8A~                NEWSNDAMP(sctrl_redalert)  ;,$64
5492   BB8A~                NEWSNDAMP(sctrl_redalert)  ;,$64
5492   BB8A             
5493   BB8A 02 24 56 00     .byte $02,$24,$56,$00
5494   BB8E                 
5495   BB8E                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_redalert = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    ;,$64
5495   BB8E             
5495   91F9             
5495   91F9 8E          
5495   9289             
5495   9289 BB          
5495   928A             
5495   928A             
5495   BB8E             
5495   BB8E~                NEWSNDFREQ(sfreq_redalert)   ;,$64
5495   BB8E~                NEWSNDFREQ(sfreq_redalert)   ;,$64
5495   BB8E             
5496   BB8E 024007020000    .byte $02,$40,$07,$02,$00,$00,$02
5496   BB94 02
5497   BB95 00FE04000002    .byte $00,$FE,$04,$00,$00,$02,$F0,$01,$04,$00,$00,$02,$10,$FE,$04,$00
5497   BB9B F0010400000210FE0400
5498   BBA5 0002E0010400    .byte $00,$02,$E0,$01,$04,$00,$00,$02,$20,$FE,$04,$00,$00,$02,$E0,$01
5498   BBAB 000220FE04000002E001
5499   BBB5 040000FF040F    .byte $04,$00,$00,$FF,$04,$0F
5500   BBBB                     
5501   BBBB                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_redalert = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5501   BBBB             
5501   90FA             
5501   90FA BB          
5501   918A             
5501   918A BB          
5501   918B             
5501   918B             
5501   BBBB             
5501   BBBB~                NEWTUNE(s_redalert) 
5501   BBBB~                NEWTUNE(s_redalert) 
5501   BBBB             
5502   BBBB                 \ .db isc_freq,sfreq_redalert
5502   BBBB 86 49       
5503   BBBD                 \ .db isc_ctrl,sctrl_redalert
5503   BBBD 87 53       
5504   BBBF                 \ .db isc_sfunc10,$00
5504   BBBF 90 00       
5505   BBC1                 \ .db isc_sebvol,$00
5505   BBC1 82 00       
5506   BBC3                 \ .db isc_ctrlm,CHCTL_NOPOLY
5506   BBC3 8A A0       
5507   BBC5                 \ .db _REST,$58
5507   BBC5 00 58       
5508   BBC7                 \ .dw $0000
5508   BBC7 00 00       
5509   BBC9                 
5510   BBC9                 
5511   BBC9             ;*************************************
5512   BBC9                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_beeps = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   ;,$67
5512   BBC9             
5512   9324             
5512   9324 C9          
5512   93B4             
5512   93B4 BB          
5512   93B5             
5512   93B5             
5512   BBC9             
5512   BBC9~                NEWSNDAMP(sctrl_beeps)  ;,$67
5512   BBC9~                NEWSNDAMP(sctrl_beeps)  ;,$67
5512   BBC9             
5513   BBC9 02 10           .byte $02,$10
5514   BBCB 06 00       	.byte $06,$00
5515   BBCD 02 F0           .byte $02,$F0
5516   BBCF 02 00       	.byte $02,$00
5517   BBD1 FF 4A           .byte $FF,$4A
5518   BBD3 0B              .byte $0B
5519   BBD4                 
5520   BBD4                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_beeps = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$67
5520   BBD4             
5520   91FA             
5520   91FA D4          
5520   928A             
5520   928A BB          
5520   928B             
5520   928B             
5520   BBD4             
5520   BBD4~                NEWSNDFREQ(sfreq_beeps)  ;,$67
5520   BBD4~                NEWSNDFREQ(sfreq_beeps)  ;,$67
5520   BBD4             
5521   BBD4 02 F0 00        .byte $02,$F0,$00
5522   BBD7 0A 00 00    	.byte $0A,$00,$00
5523   BBDA 0C 00 00        .byte $0C,$00,$00
5524   BBDD FF 4A 06    	.byte $FF,$4A,$06
5525   BBE0                     
5526   BBE0                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_beeps = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
5526   BBE0             
5526   90FB             
5526   90FB E0          
5526   918B             
5526   918B BB          
5526   918C             
5526   918C             
5526   BBE0             
5526   BBE0~                NEWTUNE(s_beeps)    
5526   BBE0~                NEWTUNE(s_beeps)    
5526   BBE0             
5527   BBE0                 \ .db isc_freq,sfreq_beeps
5527   BBE0 86 4A       
5528   BBE2                 \ .db isc_ctrl,sctrl_beeps
5528   BBE2 87 54       
5529   BBE4                 \ .db isc_sfunc10,$00
5529   BBE4 90 00       
5530   BBE6                 \ .db isc_sebvol,$00
5530   BBE6 82 00       
5531   BBE8                 \ .db isc_ctrlm,CHCTL_NOPOLY
5531   BBE8 8A A0       
5532   BBEA                 \ .db _REST,$8A
5532   BBEA 00 8A       
5533   BBEC                 \ .db isc_ctrlm,CHCTL_NOPOLY
5533   BBEC 8A A0       
5534   BBEE                 \ .db _REST,$FF
5534   BBEE 00 FF       
5535   BBF0                 \ .db isc_ctrlm,CHCTL_NOPOLY
5535   BBF0 8A A0       
5536   BBF2                 \ .db _REST,$FF
5536   BBF2 00 FF       
5537   BBF4                 \ .db isc_ctrlm,CHCTL_NOPOLY
5537   BBF4 8A A0       
5538   BBF6                 \ .db _REST,$FF
5538   BBF6 00 FF       
5539   BBF8                 \ .dw $0000
5539   BBF8 00 00       
5540   BBFA                 	
5541   BBFA             	; .byte $33,$55
5542   BBFA             	; .byte $05,$54
5543   BBFA             	; .byte $FB,$01
5544   BBFA             	; .byte $00,$04
5545   BBFA             	; .byte $00,$01
5546   BBFA             	; .byte $40,$00
5547   BBFA             	; .byte $00,$10
5548   BBFA             	; .byte $00,$01
5549   BBFA             	; .byte $10,$00
5550   BBFA             	; .byte $00	
5551   BBFA             
5552   BBFA             ;* Shield Energize Sound 
5553   BBFA             
5554   BBFA             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\ir_scenergize_f1 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF 
5554   BBFA             
5554   91FB             
5554   91FB FA          
5554   928B             
5554   928B BB          
5554   928C             
5554   928C             
5554   BBFA             
5554   BBFA~            	NEWSNDFREQ(ir_scenergize_f1)
5554   BBFA~            	NEWSNDFREQ(ir_scenergize_f1)
5554   BBFA             
5555   BBFA 02 00 FF    	.db $02,$00,$FF 
5556   BBFD 78 F0 FF    	.db $78,$F0,$FF  
5557   BC00             	\ .dw $0000
5557   BC00 00 00       
5558   BC02             	
5559   BC02             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\ir_scenergize_f2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF 
5559   BC02             
5559   91FC             
5559   91FC 02          
5559   928C             
5559   928C BC          
5559   928D             
5559   928D             
5559   BC02             
5559   BC02~            	NEWSNDFREQ(ir_scenergize_f2)
5559   BC02~            	NEWSNDFREQ(ir_scenergize_f2)
5559   BC02             
5560   BC02 02 10 FF    	.db $02,$10,$FF  
5561   BC05 78 F0 FF    	.db $78,$F0,$FF 
5562   BC08             	\ .dw $0000
5562   BC08 00 00       
5563   BC0A             	
5564   BC0A             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\ir_scenergize_f3 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF 
5564   BC0A             
5564   91FD             
5564   91FD 0A          
5564   928D             
5564   928D BC          
5564   928E             
5564   928E             
5564   BC0A             
5564   BC0A~            	NEWSNDFREQ(ir_scenergize_f3)
5564   BC0A~            	NEWSNDFREQ(ir_scenergize_f3)
5564   BC0A             
5565   BC0A 02 00 06    	.db $02,$00,$06 
5566   BC0D 78 F0 FF    	.db $78,$F0,$FF 
5567   BC10             	\ .dw $0000
5567   BC10 00 00       
5568   BC12             	
5569   BC12             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\ir_scenergize_f4 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF 
5569   BC12             
5569   91FE             
5569   91FE 12          
5569   928E             
5569   928E BC          
5569   928F             
5569   928F             
5569   BC12             
5569   BC12~            	NEWSNDFREQ(ir_scenergize_f4)
5569   BC12~            	NEWSNDFREQ(ir_scenergize_f4)
5569   BC12             
5570   BC12 02 10 06    	.db $02,$10,$06    
5571   BC15 78 F0 FF    	.db $78,$F0,$FF 
5572   BC18             	\ .dw $0000
5572   BC18 00 00       
5573   BC1A             	
5574   BC1A             	\tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\ir_scenergize_c = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF 
5574   BC1A             
5574   9325             
5574   9325 1A          
5574   93B5             
5574   93B5 BC          
5574   93B6             
5574   93B6             
5574   BC1A             
5574   BC1A~            	NEWSNDAMP(ir_scenergize_c)
5574   BC1A~            	NEWSNDAMP(ir_scenergize_c)
5574   BC1A             
5575   BC1A 02 90 FA    	.db $02,$90,$FA   
5576   BC1D 78 00 00    	.db $78,$00,$00
5577   BC20             	\ .dw $0000
5577   BC20 00 00       
5578   BC22             
5579   BC22             rate_scenergize = 38d	
5580   BC22             	
5581   BC22             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_scenergize = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5581   BC22             
5581   90FC             
5581   90FC 22          
5581   918C             
5581   918C BC          
5581   918D             
5581   918D             
5581   BC22             
5581   BC22~            	NEWTUNE(s_scenergize) 
5581   BC22~            	NEWTUNE(s_scenergize) 
5581   BC22             
5582   BC22             	;SETDCTL($01)
5583   BC22                 \ .db isc_freq,ir_scenergize_f1
5583   BC22 86 4B       
5584   BC24                 \ .db isc_ctrl,ir_scenergize_c
5584   BC24 87 55       
5585   BC26                 \ .db isc_sfunc10,$00
5585   BC26 90 00       
5586   BC28                 \ .db isc_sebvol,$00
5586   BC28 82 00       
5587   BC2A             	\ .db isc_srate,rate_scenergize
5587   BC2A 80 26       
5588   BC2C                 \ .db isc_ctrlm,CHCTL_NOPOLY
5588   BC2C 8A A0       
5589   BC2E                 \ .db _REST,$4A
5589   BC2E 00 4A       
5590   BC30                 \ .dw $0000
5590   BC30 00 00       
5591   BC32             	
5592   BC32             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_scenergize2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5592   BC32             
5592   90FD             
5592   90FD 32          
5592   918D             
5592   918D BC          
5592   918E             
5592   918E             
5592   BC32             
5592   BC32~            	NEWTUNE(s_scenergize2) 
5592   BC32~            	NEWTUNE(s_scenergize2) 
5592   BC32             
5593   BC32                 \ .db isc_freq,ir_scenergize_f2
5593   BC32 86 4C       
5594   BC34                 \ .db isc_ctrl,ir_scenergize_c
5594   BC34 87 55       
5595   BC36                 \ .db isc_sfunc10,$00
5595   BC36 90 00       
5596   BC38                 \ .db isc_sebvol,$00
5596   BC38 82 00       
5597   BC3A             	\ .db isc_srate,rate_scenergize
5597   BC3A 80 26       
5598   BC3C                 \ .db isc_ctrlm,CHCTL_NOPOLY
5598   BC3C 8A A0       
5599   BC3E                 \ .db _REST,$4A
5599   BC3E 00 4A       
5600   BC40                 \ .dw $0000
5600   BC40 00 00       
5601   BC42             	
5602   BC42             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_scenergize3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5602   BC42             
5602   90FE             
5602   90FE 42          
5602   918E             
5602   918E BC          
5602   918F             
5602   918F             
5602   BC42             
5602   BC42~            	NEWTUNE(s_scenergize3) 
5602   BC42~            	NEWTUNE(s_scenergize3) 
5602   BC42             
5603   BC42                 \ .db isc_freq,ir_scenergize_f3
5603   BC42 86 4D       
5604   BC44                 \ .db isc_ctrl,ir_scenergize_c
5604   BC44 87 55       
5605   BC46                 \ .db isc_sfunc10,$00
5605   BC46 90 00       
5606   BC48                 \ .db isc_sebvol,$00
5606   BC48 82 00       
5607   BC4A             	\ .db isc_srate,rate_scenergize
5607   BC4A 80 26       
5608   BC4C                 \ .db isc_ctrlm,CHCTL_POLY5X
5608   BC4C 8A 60       
5609   BC4E                 \ .db _REST,$4A
5609   BC4E 00 4A       
5610   BC50                 \ .dw $0000
5610   BC50 00 00       
5611   BC52             	
5612   BC52             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_scenergize4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5612   BC52             
5612   90FF             
5612   90FF 52          
5612   918F             
5612   918F BC          
5612   9190             
5612   9190             
5612   BC52             
5612   BC52~            	NEWTUNE(s_scenergize4) 
5612   BC52~            	NEWTUNE(s_scenergize4) 
5612   BC52             
5613   BC52                 \ .db isc_freq,ir_scenergize_f4
5613   BC52 86 4E       
5614   BC54                 \ .db isc_ctrl,ir_scenergize_c
5614   BC54 87 55       
5615   BC56                 \ .db isc_sfunc10,$00
5615   BC56 90 00       
5616   BC58                 \ .db isc_sebvol,$00
5616   BC58 82 00       
5617   BC5A             	\ .db isc_srate,rate_scenergize
5617   BC5A 80 26       
5618   BC5C                 \ .db isc_ctrlm,CHCTL_POLY17
5618   BC5C 8A 80       
5619   BC5E                 \ .db _REST,$4A
5619   BC5E 00 4A       
5620   BC60                 \ .dw $0000
5620   BC60 00 00       
5621   BC62             
5622   BC62             ;Shield Constant Background sound	
5623   BC62                 ; NEWSNDAMP(s_scspin_c) ;,$52
5624   BC62                 ; .byte $02,$10
5625   BC62             	; .byte $FE,$00
5626   BC62             	; .byte $FE,$00
5627   BC62             	; .byte $FE,$00
5628   BC62             	; .byte $FE,$00
5629   BC62                 
5630   BC62                 ; NEWSNDFREQ(s_scspin_f)    
5631   BC62                 ; .byte $3E,$10,$09
5632   BC62             	; .byte $02,$10,$00
5633   BC62             	; .byte $FF,$0C,$09		
5634   BC62             	; .byte $3A,$00,$00
5635   BC62             	
5636   BC62             	; NEWTUNE(s_scspin) 
5637   BC62             	; ;SETDCTL($01)
5638   BC62                 ; SETSNDFREQ(s_scspin_f)
5639   BC62                 ; SETSNDCONT(s_scspin_c)
5640   BC62                 ; SNOATTRACT
5641   BC62             	; ;SETNRATE(rate_shield)
5642   BC62             	; SETBVOL($00)
5643   BC62                 ; SETDIST(CHCTL_NOPOLY)
5644   BC62             	; SLOOPSTART($7F)
5645   BC62             		; NOTE(_REST,$16)
5646   BC62             		; ;SETDIST(CHCTL_NOPOLY)
5647   BC62             		; ;NOTE(_REST,$FF)
5648   BC62             		; ;SETDIST(CHCTL_NOPOLY)
5649   BC62             		; ;NOTE(_REST,$FF)
5650   BC62             		; ;SETDIST(CHCTL_NOPOLY)
5651   BC62             		; ;NOTE(_REST,$FF)
5652   BC62             		; ;SETDIST(CHCTL_NOPOLY)
5653   BC62             		; ;NOTE(_REST,$FF)
5654   BC62             	; SLOOPEND
5655   BC62                 ; ENDSND
5656   BC62             	
5657   BC62             	; ;SETBVOL($00)
5658   BC62                 ; ;SETDIST(CHCTL_POLY17_5)
5659   BC62                 ; ;NOTE(_REST,$02)
5660   BC62                 ; ;ENDSND
5661   BC62             
5662   BC62             ;**************************************
5663   BC62             ;* Star Castle Shield Hit
5664   BC62             
5665   BC62                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\s_schit_c = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   
5665   BC62             
5665   9326             
5665   9326 62          
5665   93B6             
5665   93B6 BC          
5665   93B7             
5665   93B7             
5665   BC62             
5665   BC62~                NEWSNDAMP(s_schit_c)  
5665   BC62~                NEWSNDAMP(s_schit_c)  
5665   BC62             
5666   BC62 02 3C           .byte $02,$3C
5667   BC64 04 00       	.byte $04,$00
5668   BC66 06 F8       	.byte $06,$F8
5669   BC68 02 F4       	.byte $02,$F4
5670   BC6A 02 F8       	.byte $02,$F8
5671   BC6C                 
5672   BC6C                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\s_schit_f = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    
5672   BC6C             
5672   91FF             
5672   91FF 6C          
5672   928F             
5672   928F BC          
5672   9290             
5672   9290             
5672   BC6C             
5672   BC6C~                NEWSNDFREQ(s_schit_f)   
5672   BC6C~                NEWSNDFREQ(s_schit_f)   
5672   BC6C             
5673   BC6C 02 70 00        .byte $02,$70,$00
5674   BC6F 10 F0 FF    	.byte $10,$F0,$FF
5675   BC72             	
5676   BC72                 
5677   BC72                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_schit = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5677   BC72             
5677   9100             
5677   9100 72          
5677   9190             
5677   9190 BC          
5677   9191             
5677   9191             
5677   BC72             
5677   BC72~                NEWTUNE(s_schit) 
5677   BC72~                NEWTUNE(s_schit) 
5677   BC72             
5678   BC72                 \ .db isc_freq,s_schit_f
5678   BC72 86 4F       
5679   BC74                 \ .db isc_ctrl,s_schit_c
5679   BC74 87 56       
5680   BC76                 \ .db isc_sfunc10,$00
5680   BC76 90 00       
5681   BC78                 \ .db isc_sebvol,$00
5681   BC78 82 00       
5682   BC7A             	\ .db isc_ctrlm,CHCTL_POLY5 
5682   BC7A 8A 20       
5683   BC7C                 \ .db _REST,$10
5683   BC7C 00 10       
5684   BC7E                 \ .dw $0000
5684   BC7E 00 00       
5685   BC80             
5686   BC80             ;**************************************
5687   BC80             ;* Star Castle Panel Drop
5688   BC80             ;**************************************
5689   BC80             
5690   BC80             	\tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\s_scdrop_c = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   
5690   BC80             
5690   9327             
5690   9327 80          
5690   93B7             
5690   93B7 BC          
5690   93B8             
5690   93B8             
5690   BC80             
5690   BC80~            	NEWSNDAMP(s_scdrop_c)  
5690   BC80~            	NEWSNDAMP(s_scdrop_c)  
5690   BC80             
5691   BC80 02 3C           .byte $02,$3C
5692   BC82 2E 00       	.byte $2E,$00
5693   BC84                 
5694   BC84                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\s_scdrop_f = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF    
5694   BC84             
5694   9200             
5694   9200 84          
5694   9290             
5694   9290 BC          
5694   9291             
5694   9291             
5694   BC84             
5694   BC84~                NEWSNDFREQ(s_scdrop_f)   
5694   BC84~                NEWSNDFREQ(s_scdrop_f)   
5694   BC84             
5695   BC84 02 00 0F        .byte $02,$00,$0F
5696   BC87 2E 00 04    	.byte $2E,$00,$04
5697   BC8A             	
5698   BC8A                 
5699   BC8A                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_scdrop = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5699   BC8A             
5699   9101             
5699   9101 8A          
5699   9191             
5699   9191 BC          
5699   9192             
5699   9192             
5699   BC8A             
5699   BC8A~                NEWTUNE(s_scdrop) 
5699   BC8A~                NEWTUNE(s_scdrop) 
5699   BC8A             
5700   BC8A                 \ .db isc_freq,s_scdrop_f
5700   BC8A 86 50       
5701   BC8C                 \ .db isc_ctrl,s_scdrop_c
5701   BC8C 87 57       
5702   BC8E                 \ .db isc_sfunc10,$00
5702   BC8E 90 00       
5703   BC90                 \ .db isc_sebvol,$00
5703   BC90 82 00       
5704   BC92             	\ .db isc_ctrlm,CHCTL_NOPOLY 
5704   BC92 8A A0       
5705   BC94                 \ .db _REST,$30
5705   BC94 00 30       
5706   BC96                 \ .dw $0000
5706   BC96 00 00       
5707   BC98             
5708   BC98             ;**************************************
5709   BC98             ;* Tact Fail
5710   BC98             ;**************************************
5711   BC98                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_fail = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$59
5711   BC98             
5711   9328             
5711   9328 98          
5711   93B8             
5711   93B8 BC          
5711   93B9             
5711   93B9             
5711   BC98             
5711   BC98~                NEWSNDAMP(sctrl_fail)   ;,$59
5711   BC98~                NEWSNDAMP(sctrl_fail)   ;,$59
5711   BC98             
5712   BC98 02 3C           .byte $02,$3C
5713   BC9A 1E 00       	.byte $1E,$00
5714   BC9C 02 C4       	.byte $02,$C4
5715   BC9E 1E 00       	.byte $1E,$00
5716   BCA0 FF 03 0B    	.byte $FF,$03,$0B	;Branch back 4 times, $0B bytes (to the start $02)
5717   BCA3                 
5718   BCA3                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_fail = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$59
5718   BCA3             
5718   9201             
5718   9201 A3          
5718   9291             
5718   9291 BC          
5718   9292             
5718   9292             
5718   BCA3             
5718   BCA3~                NEWSNDFREQ(sfreq_fail)  ;,$59
5718   BCA3~                NEWSNDFREQ(sfreq_fail)  ;,$59
5718   BCA3             
5719   BCA3 02 60 00        .byte $02,$60,$00
5720   BCA6 FE 00 00    	.byte $FE,$00,$00
5721   BCA9             	
5722   BCA9             	;.byte $02,$60,$00
5723   BCA9             	;.byte $9E,$00,$00
5724   BCA9             
5725   BCA9                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_fail = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
5725   BCA9             
5725   9102             
5725   9102 A9          
5725   9192             
5725   9192 BC          
5725   9193             
5725   9193             
5725   BCA9             
5725   BCA9~                NEWTUNE(s_fail)    
5725   BCA9~                NEWTUNE(s_fail)    
5725   BCA9             
5726   BCA9                 \ .db isc_freq,sfreq_fail
5726   BCA9 86 51       
5727   BCAB                 \ .db isc_ctrl,sctrl_fail
5727   BCAB 87 58       
5728   BCAD                 \ .db isc_sfunc10,$00
5728   BCAD 90 00       
5729   BCAF                 \ .db isc_sebvol,$00
5729   BCAF 82 00       
5730   BCB1                 \ .db isc_ctrlm,CHCTL_POLY5
5730   BCB1 8A 20       
5731   BCB3                 \ .db _REST,$FE
5731   BCB3 00 FE       
5732   BCB5                 \ .dw $0000
5732   BCB5 00 00       
5733   BCB7             	
5734   BCB7             
5735   BCB7             ;**************************************
5736   BCB7             ;* Tact Fail - Background Tone
5737   BCB7             ;**************************************
5738   BCB7                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_fail2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF    ;,$59
5738   BCB7             
5738   9329             
5738   9329 B7          
5738   93B9             
5738   93B9 BC          
5738   93BA             
5738   93BA             
5738   BCB7             
5738   BCB7~                NEWSNDAMP(sctrl_fail2)   ;,$59
5738   BCB7~                NEWSNDAMP(sctrl_fail2)   ;,$59
5738   BCB7             
5739   BCB7 02 3C           .byte $02,$3C
5740   BCB9 1E 00       	.byte $1E,$00
5741   BCBB 02 C4       	.byte $02,$C4
5742   BCBD 1E 00       	.byte $1E,$00
5743   BCBF FF 03 0B    	.byte $FF,$03,$0B	;Branch back 4 times, $0B bytes (to the start $02)
5744   BCC2                 
5745   BCC2                 \tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_fail2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF   ;,$59
5745   BCC2             
5745   9202             
5745   9202 C2          
5745   9292             
5745   9292 BC          
5745   9293             
5745   9293             
5745   BCC2             
5745   BCC2~                NEWSNDFREQ(sfreq_fail2)  ;,$59
5745   BCC2~                NEWSNDFREQ(sfreq_fail2)  ;,$59
5745   BCC2             
5746   BCC2 02 00 06        .byte $02,$00,$06
5747   BCC5 FE 00 00    	.byte $FE,$00,$00
5748   BCC8             	
5749   BCC8             	;.byte $02,$60,$00
5750   BCC8             	;.byte $9E,$00,$00
5751   BCC8             
5752   BCC8                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_fail2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF     
5752   BCC8             
5752   9103             
5752   9103 C8          
5752   9193             
5752   9193 BC          
5752   9194             
5752   9194             
5752   BCC8             
5752   BCC8~                NEWTUNE(s_fail2)    
5752   BCC8~                NEWTUNE(s_fail2)    
5752   BCC8             
5753   BCC8                 \ .db isc_freq,sfreq_fail2
5753   BCC8 86 52       
5754   BCCA                 \ .db isc_ctrl,sctrl_fail2
5754   BCCA 87 59       
5755   BCCC                 \ .db isc_sfunc10,$00
5755   BCCC 90 00       
5756   BCCE                 \ .db isc_sebvol,$00
5756   BCCE 82 00       
5757   BCD0                 \ .db isc_ctrlm,CHCTL_NOPOLY
5757   BCD0 8A A0       
5758   BCD2                 \ .db _REST,$FE
5758   BCD2 00 FE       
5759   BCD4                 \ .dw $0000
5759   BCD4 00 00       
5760   BCD6             	
5761   BCD6             ;**************************************
5762   BCD6             ;* Broken Transporter Sound
5763   BCD6             ;**************************************
5764   BCD6                 ; NEWSNDAMP(sctrl_notrans)  
5765   BCD6                 ; .byte $02,$3C
5766   BCD6             	; .byte $42,$00
5767   BCD6             	
5768   BCD6             	; NEWSNDFREQ(sfreq_notrans) 
5769   BCD6                 ; .byte $04,$20,$0E
5770   BCD6             	; ;.byte $04,$00,$00
5771   BCD6             	; .byte $06,$10,$00
5772   BCD6             	; .byte $FF,$04,$06
5773   BCD6             	; .byte $0E,$F0,$FF
5774   BCD6             	
5775   BCD6                 
5776   BCD6                 ; NEWTUNE(s_notrans) 
5777   BCD6                 ; SETSNDFREQ(sfreq_notrans)
5778   BCD6                 ; SETSNDCONT(sctrl_notrans)
5779   BCD6                 ; SNOATTRACT
5780   BCD6                 ; SETBVOL($00)
5781   BCD6             	; SETDIST(CHCTL_NOPOLY) 
5782   BCD6                 ; NOTE(_REST,$28)
5783   BCD6                 ; ENDSND
5784   BCD6             	
5785   BCD6             	
5786   BCD6             ;*Maynard Fly In
5787   BCD6             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_maynard = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
5787   BCD6             
5787   9104             
5787   9104 D6          
5787   9194             
5787   9194 BC          
5787   9195             
5787   9195             
5787   BCD6             
5787   BCD6~            	NEWTUNE(s_maynard)
5787   BCD6~            	NEWTUNE(s_maynard)
5787   BCD6             
5788   BCD6                 \ .db isc_freq,sfreq_launch
5788   BCD6 86 04       
5789   BCD8                 \ .db isc_ctrl,sctrl_launch
5789   BCD8 87 0E       
5790   BCDA                 \ .db isc_sfunc10,$00
5790   BCDA 90 00       
5791   BCDC                 \ .db isc_sebvol,$00
5791   BCDC 82 00       
5792   BCDE                 \ .db isc_ctrlm,CHCTL_POLY17
5792   BCDE 8A 80       
5793   BCE0                 \ .db _REST,$FE
5793   BCE0 00 FE       
5794   BCE2                 \ .db isc_ctrlm,CHCTL_POLY17
5794   BCE2 8A 80       
5795   BCE4                 \ .db _REST,$8F
5795   BCE4 00 8F       
5796   BCE6             
5797   BCE6                 \ .db isc_freq,sfreq_bhend
5797   BCE6 86 53       
5798   BCE8                 \ .db isc_ctrl,sctrl_bhend
5798   BCE8 87 5A       
5799   BCEA                 \ .db isc_sfunc10,$00
5799   BCEA 90 00       
5800   BCEC             	\ .db isc_srate,RATE_LARGO
5800   BCEC 80 34       
5801   BCEE                 \ .db isc_sebvol,$0F
5801   BCEE 82 0F       
5802   BCF0                 \ .db isc_ctrlm,CHCTL_POLY17
5802   BCF0 8A 80       
5803   BCF2                 \ .db _REST,236
5803   BCF2 00 EC       
5804   BCF4             	\ .db isc_ctrlm,CHCTL_POLY17
5804   BCF4 8A 80       
5805   BCF6             	\ .db _REST,235
5805   BCF6 00 EB       
5806   BCF8             	\ .db isc_ctrlm,CHCTL_POLY17
5806   BCF8 8A 80       
5807   BCFA             	\ .db _REST,235
5807   BCFA 00 EB       
5808   BCFC                 \ .dw $0000
5808   BCFC 00 00       
5809   BCFE             	
5810   BCFE             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_maynard2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF 
5810   BCFE             
5810   9105             
5810   9105 FE          
5810   9195             
5810   9195 BC          
5810   9196             
5810   9196             
5810   BCFE             
5810   BCFE~            	NEWTUNE(s_maynard2)
5810   BCFE~            	NEWTUNE(s_maynard2)
5810   BCFE             
5811   BCFE                 \ .db isc_freq,sfreq_launch2
5811   BCFE 86 05       
5812   BD00                 \ .db isc_ctrl,sctrl_launch2
5812   BD00 87 0F       
5813   BD02                 \ .db isc_sfunc10,$00
5813   BD02 90 00       
5814   BD04                 \ .db isc_sebvol,$00
5814   BD04 82 00       
5815   BD06                 \ .db isc_ctrlm,CHCTL_POLY17_5
5815   BD06 8A 00       
5816   BD08                 \ .db _REST,$FE
5816   BD08 00 FE       
5817   BD0A                 \ .db isc_ctrlm,CHCTL_POLY17_5
5817   BD0A 8A 00       
5818   BD0C                 \ .db _REST,$8F
5818   BD0C 00 8F       
5819   BD0E                 \ .dw $0000
5819   BD0E 00 00       
5820   BD10             	
5821   BD10             ;* Black Hole End s_bhend
5822   BD10                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bhend = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   
5822   BD10             
5822   932A             
5822   932A 10          
5822   93BA             
5822   93BA BD          
5822   93BB             
5822   93BB             
5822   BD10             
5822   BD10~                NEWSNDAMP(sctrl_bhend)  
5822   BD10~                NEWSNDAMP(sctrl_bhend)  
5822   BD10             
5823   BD10                 \ #if (12>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (12<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (1 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 1 \ 			.db 12 << 1\		#endif\   #endif\ #endif              ;Eff Slope:6      Dur:1    Net:6
5823   BD10~                SCTRL(12,1)              ;Eff Slope:6      Dur:1    Net:6
5823   BD10~                SCTRL(12,1)              ;Eff Slope:6      Dur:1    Net:6
5823   BD10             
5823   BD10~                SCTRL(12,1)              ;Eff Slope:6      Dur:1    Net:6
5823   BD10~                SCTRL(12,1)              ;Eff Slope:6      Dur:1    Net:6
5823   BD10             
5823   BD10~                SCTRL(12,1)              ;Eff Slope:6      Dur:1    Net:6
5823   BD10~                SCTRL(12,1)              ;Eff Slope:6      Dur:1    Net:6
5823   BD10             
5823   BD10 01          
5823   BD11 18          
5823   BD12             
5823   BD12             
5823   BD12             
5824   BD12             	\ .push *
5824   BD12             
5825   BD12             	 \ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (235 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 235 \ 			.db 0 << 1\		#endif\   #endif\ #endif             ;Eff Slope:0      Dur:235  Net:6
5825   BD12~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5825   BD12~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5825   BD12             
5825   BD12~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5825   BD12~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5825   BD12             
5825   BD12~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5825   BD12~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5825   BD12             
5825   BD12 EB          
5825   BD13 00          
5825   BD14             
5825   BD14             
5825   BD14             
5826   BD14             	\ .pop __rpmsloop\ .db $FF,3,(*-__rpmsloop+3)
5826   BD14             
5826   BD14 FF 03 05    
5827   BD17             	
5828   BD17             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bhend = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  
5828   BD17             
5828   9203             
5828   9203 17          
5828   9293             
5828   9293 BD          
5828   9294             
5828   9294             
5828   BD17             
5828   BD17~            	NEWSNDFREQ(sfreq_bhend) 
5828   BD17~            	NEWSNDFREQ(sfreq_bhend) 
5828   BD17             
5829   BD17                 \ .db 1 \ #if (12>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (1 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 12 << 1\	#endif\ #endif              ;Eff Slope:12     Dur:1    Net:12
5829   BD17 01          
5829   BD18~                SFREQ(12,1)              ;Eff Slope:12     Dur:1    Net:12
5829   BD18~                SFREQ(12,1)              ;Eff Slope:12     Dur:1    Net:12
5829   BD18             
5829   BD18~                SFREQ(12,1)              ;Eff Slope:12     Dur:1    Net:12
5829   BD18~                SFREQ(12,1)              ;Eff Slope:12     Dur:1    Net:12
5829   BD18             
5829   BD18 18 00       
5829   BD1A             
5829   BD1A             
5830   BD1A             	\ .push *
5830   BD1A             
5831   BD1A             	 \ .db 235 \ #if (1>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (235 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 1 << 1\	#endif\ #endif             ;Eff Slope:0.09      Dur:235  Net:12
5831   BD1A EB          
5831   BD1B~            	 SFREQ(1,235)             ;Eff Slope:0.09      Dur:235  Net:12
5831   BD1B~            	 SFREQ(1,235)             ;Eff Slope:0.09      Dur:235  Net:12
5831   BD1B             
5831   BD1B~            	 SFREQ(1,235)             ;Eff Slope:0.09      Dur:235  Net:12
5831   BD1B~            	 SFREQ(1,235)             ;Eff Slope:0.09      Dur:235  Net:12
5831   BD1B             
5831   BD1B 02 00       
5831   BD1D             
5831   BD1D             
5832   BD1D             	\ .pop __rpmsloop\ .db $FF,3,(*-__rpmsloop+3)
5832   BD1D             
5832   BD1D FF 03 06    
5833   BD20                 
5834   BD20                 
5835   BD20                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bhend = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5835   BD20             
5835   9106             
5835   9106 20          
5835   9196             
5835   9196 BD          
5835   9197             
5835   9197             
5835   BD20             
5835   BD20~                NEWTUNE(s_bhend) 
5835   BD20~                NEWTUNE(s_bhend) 
5835   BD20             
5836   BD20                 \ .db isc_freq,sfreq_bhend
5836   BD20 86 53       
5837   BD22                 \ .db isc_ctrl,sctrl_bhend
5837   BD22 87 5A       
5838   BD24                 \ .db isc_sfunc10,$00
5838   BD24 90 00       
5839   BD26             	\ .db isc_srate,RATE_LARGO
5839   BD26 80 34       
5840   BD28                 \ .db isc_sebvol,$0F
5840   BD28 82 0F       
5841   BD2A                 \ .db isc_ctrlm,CHCTL_POLY17
5841   BD2A 8A 80       
5842   BD2C                 \ .db _REST,236
5842   BD2C 00 EC       
5843   BD2E             	\ .db isc_ctrlm,CHCTL_POLY17
5843   BD2E 8A 80       
5844   BD30             	\ .db _REST,235
5844   BD30 00 EB       
5845   BD32             	\ .db isc_ctrlm,CHCTL_POLY17
5845   BD32 8A 80       
5846   BD34             	\ .db _REST,235
5846   BD34 00 EB       
5847   BD36                 \ .dw $0000
5847   BD36 00 00       
5848   BD38             
5849   BD38             ;************************************
5850   BD38             ; Bonus Rollup Sound	
5851   BD38             ;************************************
5852   BD38             
5853   BD38                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bonusr = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   
5853   BD38             
5853   932B             
5853   932B 38          
5853   93BB             
5853   93BB BD          
5853   93BC             
5853   93BC             
5853   BD38             
5853   BD38~                NEWSNDAMP(sctrl_bonusr)  
5853   BD38~                NEWSNDAMP(sctrl_bonusr)  
5853   BD38             
5854   BD38                 \ #if (60>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (60<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (1 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 1 \ 			.db 60 << 1\		#endif\   #endif\ #endif              ;Eff Slope:6      Dur:1    Net:6
5854   BD38~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5854   BD38~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5854   BD38             
5854   BD38~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5854   BD38~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5854   BD38             
5854   BD38~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5854   BD38~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5854   BD38             
5854   BD38 01          
5854   BD39 78          
5854   BD3A             
5854   BD3A             
5854   BD3A             
5855   BD3A             	\ .push *
5855   BD3A             
5856   BD3A             	 \ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (235 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 235 \ 			.db 0 << 1\		#endif\   #endif\ #endif             ;Eff Slope:0      Dur:235  Net:6
5856   BD3A~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5856   BD3A~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5856   BD3A             
5856   BD3A~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5856   BD3A~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5856   BD3A             
5856   BD3A~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5856   BD3A~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5856   BD3A             
5856   BD3A EB          
5856   BD3B 00          
5856   BD3C             
5856   BD3C             
5856   BD3C             
5857   BD3C             	\ .pop __rpmsloop\ .db $FF,15,(*-__rpmsloop+3)
5857   BD3C             
5857   BD3C FF 0F 05    
5858   BD3F             	
5859   BD3F             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bonusr = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  
5859   BD3F             
5859   9204             
5859   9204 3F          
5859   9294             
5859   9294 BD          
5859   9295             
5859   9295             
5859   BD3F             
5859   BD3F~            	NEWSNDFREQ(sfreq_bonusr) 
5859   BD3F~            	NEWSNDFREQ(sfreq_bonusr) 
5859   BD3F             
5860   BD3F                 \ .db 1 \ #if (7>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (1 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 7 << 1\	#endif\ #endif              ;Eff Slope:12     Dur:1    Net:12
5860   BD3F 01          
5860   BD40~                SFREQ(7,1)              ;Eff Slope:12     Dur:1    Net:12
5860   BD40~                SFREQ(7,1)              ;Eff Slope:12     Dur:1    Net:12
5860   BD40             
5860   BD40~                SFREQ(7,1)              ;Eff Slope:12     Dur:1    Net:12
5860   BD40~                SFREQ(7,1)              ;Eff Slope:12     Dur:1    Net:12
5860   BD40             
5860   BD40 0E 00       
5860   BD42             
5860   BD42             
5861   BD42             	\ .push *
5861   BD42             
5862   BD42 EB FE FF    	 	 .byte $EB,$FE,$FF
5863   BD45             	\ .pop __rpmsloop\ .db $FF,15,(*-__rpmsloop+3)
5863   BD45             
5863   BD45 FF 0F 06    
5864   BD48             	
5865   BD48                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bonusr = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
5865   BD48             
5865   9107             
5865   9107 48          
5865   9197             
5865   9197 BD          
5865   9198             
5865   9198             
5865   BD48             
5865   BD48~                NEWTUNE(s_bonusr)   
5865   BD48~                NEWTUNE(s_bonusr)   
5865   BD48             
5866   BD48                 \ .db isc_freq,sfreq_bonusr
5866   BD48 86 54       
5867   BD4A                 \ .db isc_ctrl,sctrl_bonusr
5867   BD4A 87 5B       
5868   BD4C                 \ .db isc_sfunc10,$00
5868   BD4C 90 00       
5869   BD4E             	\ .db isc_srate,RATE_LARGO
5869   BD4E 80 34       
5870   BD50                 \ .db isc_sebvol,$00
5870   BD50 82 00       
5871   BD52                 \ .db isc_ctrlm,CHCTL_NOPOLY
5871   BD52 8A A0       
5872   BD54             	\ .db _REST,236
5872   BD54 00 EC       
5873   BD56             	\ .db isc_sloops,15	
5873   BD56 8E 0F       
5874   BD58             		\ .db _REST,235
5874   BD58 00 EB       
5875   BD5A                 \ .db isc_sloope,$00
5875   BD5A 8F 00       
5876   BD5C                 \ .dw $0000
5876   BD5C 00 00       
5877   BD5E             
5878   BD5E             	;Second Note
5879   BD5E                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bonusr2 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   
5879   BD5E             
5879   932C             
5879   932C 5E          
5879   93BC             
5879   93BC BD          
5879   93BD             
5879   93BD             
5879   BD5E             
5879   BD5E~                NEWSNDAMP(sctrl_bonusr2)  
5879   BD5E~                NEWSNDAMP(sctrl_bonusr2)  
5879   BD5E             
5880   BD5E                 \ #if (60>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (60<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (1 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 1 \ 			.db 60 << 1\		#endif\   #endif\ #endif              ;Eff Slope:6      Dur:1    Net:6
5880   BD5E~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5880   BD5E~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5880   BD5E             
5880   BD5E~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5880   BD5E~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5880   BD5E             
5880   BD5E~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5880   BD5E~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5880   BD5E             
5880   BD5E 01          
5880   BD5F 78          
5880   BD60             
5880   BD60             
5880   BD60             
5881   BD60             	\ .push *
5881   BD60             
5882   BD60             	 \ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (235 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 235 \ 			.db 0 << 1\		#endif\   #endif\ #endif             ;Eff Slope:0      Dur:235  Net:6
5882   BD60~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5882   BD60~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5882   BD60             
5882   BD60~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5882   BD60~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5882   BD60             
5882   BD60~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5882   BD60~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5882   BD60             
5882   BD60 EB          
5882   BD61 00          
5882   BD62             
5882   BD62             
5882   BD62             
5883   BD62             	\ .pop __rpmsloop\ .db $FF,15,(*-__rpmsloop+3)
5883   BD62             
5883   BD62 FF 0F 05    
5884   BD65             	
5885   BD65             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bonusr2 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  
5885   BD65             
5885   9205             
5885   9205 65          
5885   9295             
5885   9295 BD          
5885   9296             
5885   9296             
5885   BD65             
5885   BD65~            	NEWSNDFREQ(sfreq_bonusr2) 
5885   BD65~            	NEWSNDFREQ(sfreq_bonusr2) 
5885   BD65             
5886   BD65                 \ .db 1 \ #if (12>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (1 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 12 << 1\	#endif\ #endif              ;Eff Slope:12     Dur:1    Net:12
5886   BD65 01          
5886   BD66~                SFREQ(12,1)              ;Eff Slope:12     Dur:1    Net:12
5886   BD66~                SFREQ(12,1)              ;Eff Slope:12     Dur:1    Net:12
5886   BD66             
5886   BD66~                SFREQ(12,1)              ;Eff Slope:12     Dur:1    Net:12
5886   BD66~                SFREQ(12,1)              ;Eff Slope:12     Dur:1    Net:12
5886   BD66             
5886   BD66 18 00       
5886   BD68             
5886   BD68             
5887   BD68             	\ .push *
5887   BD68             
5888   BD68 EB FE FF    	 	 .byte $EB,$FE,$FF
5889   BD6B             	\ .pop __rpmsloop\ .db $FF,15,(*-__rpmsloop+3)
5889   BD6B             
5889   BD6B FF 0F 06    
5890   BD6E             	
5891   BD6E                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bonusr2 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
5891   BD6E             
5891   9108             
5891   9108 6E          
5891   9198             
5891   9198 BD          
5891   9199             
5891   9199             
5891   BD6E             
5891   BD6E~                NEWTUNE(s_bonusr2)   
5891   BD6E~                NEWTUNE(s_bonusr2)   
5891   BD6E             
5892   BD6E                 \ .db isc_freq,sfreq_bonusr2
5892   BD6E 86 55       
5893   BD70                 \ .db isc_ctrl,sctrl_bonusr2
5893   BD70 87 5C       
5894   BD72                 \ .db isc_sfunc10,$00
5894   BD72 90 00       
5895   BD74             	\ .db isc_srate,RATE_LARGO
5895   BD74 80 34       
5896   BD76                 \ .db isc_sebvol,$00
5896   BD76 82 00       
5897   BD78                 \ .db isc_ctrlm,CHCTL_NOPOLY
5897   BD78 8A A0       
5898   BD7A             	\ .db _REST,236
5898   BD7A 00 EC       
5899   BD7C             	\ .db isc_sloops,15	
5899   BD7C 8E 0F       
5900   BD7E             		\ .db _REST,235
5900   BD7E 00 EB       
5901   BD80                 \ .db isc_sloope,$00
5901   BD80 8F 00       
5902   BD82                 \ .dw $0000	
5902   BD82 00 00       
5903   BD84             
5904   BD84             	;Third Note
5905   BD84                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bonusr3 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   
5905   BD84             
5905   932D             
5905   932D 84          
5905   93BD             
5905   93BD BD          
5905   93BE             
5905   93BE             
5905   BD84             
5905   BD84~                NEWSNDAMP(sctrl_bonusr3)  
5905   BD84~                NEWSNDAMP(sctrl_bonusr3)  
5905   BD84             
5906   BD84                 \ #if (60>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (60<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (1 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 1 \ 			.db 60 << 1\		#endif\   #endif\ #endif              ;Eff Slope:6      Dur:1    Net:6
5906   BD84~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5906   BD84~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5906   BD84             
5906   BD84~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5906   BD84~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5906   BD84             
5906   BD84~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5906   BD84~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5906   BD84             
5906   BD84 01          
5906   BD85 78          
5906   BD86             
5906   BD86             
5906   BD86             
5907   BD86             	\ .push *
5907   BD86             
5908   BD86             	 \ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (235 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 235 \ 			.db 0 << 1\		#endif\   #endif\ #endif             ;Eff Slope:0      Dur:235  Net:6
5908   BD86~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5908   BD86~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5908   BD86             
5908   BD86~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5908   BD86~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5908   BD86             
5908   BD86~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5908   BD86~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5908   BD86             
5908   BD86 EB          
5908   BD87 00          
5908   BD88             
5908   BD88             
5908   BD88             
5909   BD88             	\ .pop __rpmsloop\ .db $FF,15,(*-__rpmsloop+3)
5909   BD88             
5909   BD88 FF 0F 05    
5910   BD8B             	
5911   BD8B             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bonusr3 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  
5911   BD8B             
5911   9206             
5911   9206 8B          
5911   9296             
5911   9296 BD          
5911   9297             
5911   9297             
5911   BD8B             
5911   BD8B~            	NEWSNDFREQ(sfreq_bonusr3) 
5911   BD8B~            	NEWSNDFREQ(sfreq_bonusr3) 
5911   BD8B             
5912   BD8B                 \ .db 1 \ #if (15>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (1 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 15 << 1\	#endif\ #endif              ;Eff Slope:12     Dur:1    Net:12
5912   BD8B 01          
5912   BD8C~                SFREQ(15,1)              ;Eff Slope:12     Dur:1    Net:12
5912   BD8C~                SFREQ(15,1)              ;Eff Slope:12     Dur:1    Net:12
5912   BD8C             
5912   BD8C~                SFREQ(15,1)              ;Eff Slope:12     Dur:1    Net:12
5912   BD8C~                SFREQ(15,1)              ;Eff Slope:12     Dur:1    Net:12
5912   BD8C             
5912   BD8C 1E 00       
5912   BD8E             
5912   BD8E             
5913   BD8E             	\ .push *
5913   BD8E             
5914   BD8E EB FE FF    	 	 .byte $EB,$FE,$FF
5915   BD91             	\ .pop __rpmsloop\ .db $FF,15,(*-__rpmsloop+3)
5915   BD91             
5915   BD91 FF 0F 06    
5916   BD94             	
5917   BD94                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bonusr3 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
5917   BD94             
5917   9109             
5917   9109 94          
5917   9199             
5917   9199 BD          
5917   919A             
5917   919A             
5917   BD94             
5917   BD94~                NEWTUNE(s_bonusr3)   
5917   BD94~                NEWTUNE(s_bonusr3)   
5917   BD94             
5918   BD94                 \ .db isc_freq,sfreq_bonusr3
5918   BD94 86 56       
5919   BD96                 \ .db isc_ctrl,sctrl_bonusr3
5919   BD96 87 5D       
5920   BD98                 \ .db isc_sfunc10,$00
5920   BD98 90 00       
5921   BD9A             	\ .db isc_srate,RATE_LARGO
5921   BD9A 80 34       
5922   BD9C                 \ .db isc_sebvol,$00
5922   BD9C 82 00       
5923   BD9E                 \ .db isc_ctrlm,CHCTL_NOPOLY
5923   BD9E 8A A0       
5924   BDA0             	\ .db _REST,236
5924   BDA0 00 EC       
5925   BDA2             	\ .db isc_sloops,15	
5925   BDA2 8E 0F       
5926   BDA4             		\ .db _REST,235
5926   BDA4 00 EB       
5927   BDA6                 \ .db isc_sloope,$00
5927   BDA6 8F 00       
5928   BDA8                 \ .dw $0000	
5928   BDA8 00 00       
5929   BDAA             
5930   BDAA             	;Fourth Note
5931   BDAA                 \tmpptr .set *\ .org t_ampenv_l+i_ampenv\ .byte (tmpptr&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (tmpptr/$100)\sctrl_bonusr4 = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   
5931   BDAA             
5931   932E             
5931   932E AA          
5931   93BE             
5931   93BE BD          
5931   93BF             
5931   93BF             
5931   BDAA             
5931   BDAA~                NEWSNDAMP(sctrl_bonusr4)  
5931   BDAA~                NEWSNDAMP(sctrl_bonusr4)  
5931   BDAA             
5932   BDAA                 \ #if (60>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (60<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (1 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 1 \ 			.db 60 << 1\		#endif\   #endif\ #endif              ;Eff Slope:6      Dur:1    Net:6
5932   BDAA~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5932   BDAA~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5932   BDAA             
5932   BDAA~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5932   BDAA~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5932   BDAA             
5932   BDAA~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5932   BDAA~                SCTRL(60,1)              ;Eff Slope:6      Dur:1    Net:6
5932   BDAA             
5932   BDAA 01          
5932   BDAB 78          
5932   BDAC             
5932   BDAC             
5932   BDAC             
5933   BDAC             	\ .push *
5933   BDAC             
5934   BDAC             	 \ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (235 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 235 \ 			.db 0 << 1\		#endif\   #endif\ #endif             ;Eff Slope:0      Dur:235  Net:6
5934   BDAC~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5934   BDAC~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5934   BDAC             
5934   BDAC~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5934   BDAC~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5934   BDAC             
5934   BDAC~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5934   BDAC~            	 SCTRL(0,235)             ;Eff Slope:0      Dur:235  Net:6
5934   BDAC             
5934   BDAC EB          
5934   BDAD 00          
5934   BDAE             
5934   BDAE             
5934   BDAE             
5935   BDAE             	\ .pop __rpmsloop\ .db $FF,15,(*-__rpmsloop+3)
5935   BDAE             
5935   BDAE FF 0F 05    
5936   BDB1             	
5937   BDB1             	\tmpptr .set *\ .org t_freqenv_l+i_freqenv\ .byte (tmpptr&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (tmpptr/$100)\sfreq_bonusr4 = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  
5937   BDB1             
5937   9207             
5937   9207 B1          
5937   9297             
5937   9297 BD          
5937   9298             
5937   9298             
5937   BDB1             
5937   BDB1~            	NEWSNDFREQ(sfreq_bonusr4) 
5937   BDB1~            	NEWSNDFREQ(sfreq_bonusr4) 
5937   BDB1             
5938   BDB1                 \ .db 1 \ #if (13>$7FFF)\ 	.error "Slope value too high, must be less than 256."\ #else\	#if (1 > $FE)\		.error "Duration must be less than 255."\	#else\ 		.dw 13 << 1\	#endif\ #endif              ;Eff Slope:12     Dur:1    Net:12
5938   BDB1 01          
5938   BDB2~                SFREQ(13,1)              ;Eff Slope:12     Dur:1    Net:12
5938   BDB2~                SFREQ(13,1)              ;Eff Slope:12     Dur:1    Net:12
5938   BDB2             
5938   BDB2~                SFREQ(13,1)              ;Eff Slope:12     Dur:1    Net:12
5938   BDB2~                SFREQ(13,1)              ;Eff Slope:12     Dur:1    Net:12
5938   BDB2             
5938   BDB2 1A 00       
5938   BDB4             
5938   BDB4             
5939   BDB4             	\ .push *
5939   BDB4             
5940   BDB4 EB FE FF    	 	 .byte $EB,$FE,$FF
5941   BDB7             	\ .pop __rpmsloop\ .db $FF,15,(*-__rpmsloop+3)
5941   BDB7             
5941   BDB7 FF 0F 06    
5942   BDBA             	
5943   BDBA                 \tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_bonusr4 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
5943   BDBA             
5943   910A             
5943   910A BA          
5943   919A             
5943   919A BD          
5943   919B             
5943   919B             
5943   BDBA             
5943   BDBA~                NEWTUNE(s_bonusr4)   
5943   BDBA~                NEWTUNE(s_bonusr4)   
5943   BDBA             
5944   BDBA                 \ .db isc_freq,sfreq_bonusr4
5944   BDBA 86 57       
5945   BDBC                 \ .db isc_ctrl,sctrl_bonusr4
5945   BDBC 87 5E       
5946   BDBE                 \ .db isc_sfunc10,$00
5946   BDBE 90 00       
5947   BDC0             	\ .db isc_srate,RATE_LARGO
5947   BDC0 80 34       
5948   BDC2                 \ .db isc_sebvol,$00
5948   BDC2 82 00       
5949   BDC4                 \ .db isc_ctrlm,CHCTL_POLY4_5
5949   BDC4 8A 40       
5950   BDC6             	\ .db _REST,236
5950   BDC6 00 EC       
5951   BDC8             	\ .db isc_sloops,15	
5951   BDC8 8E 0F       
5952   BDCA             		\ .db _REST,235
5952   BDCA 00 EB       
5953   BDCC                 \ .db isc_sloope,$00
5953   BDCC 8F 00       
5954   BDCE                 \ .dw $0000		
5954   BDCE 00 00       
5955   BDD0             	
5956   BDD0             ;Max WooWoo Background Sound
5957   BDD0                 \tmpptr .set *\maxsndcbufd = *\ .org t_ampenv_l+i_ampenv\ .byte (maxsndcbuf&$FF)\ .org t_ampenv_h+i_ampenv\ .byte (maxsndfbuf/$100)\sctrl_maxmv = i_ampenv\i_ampenv .set i_ampenv + 1\ .org tmpptr\#IF i_ampenv > (numenv)\	.error "RPM: Too many amplitude envelopes defined. Increase limit."\#ENDIF   	 
5957   BDD0             
5957   BDD0             
5957   932F             
5957   932F E2          
5957   93BF             
5957   93BF 05          
5957   93C0             
5957   93C0             
5957   BDD0             
5957   BDD0~                NEWMXSNDENV(sctrl_maxmv)  	 
5957   BDD0~                NEWMXSNDENV(sctrl_maxmv)  	 
5957   BDD0             
5958   BDD0             	\ #if (12>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (12<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (1 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 1 \ 			.db 12 << 1\		#endif\   #endif\ #endif  	
5958   BDD0~            	SCTRL(12,1)  	
5958   BDD0~            	SCTRL(12,1)  	
5958   BDD0             
5958   BDD0~            	SCTRL(12,1)  	
5958   BDD0~            	SCTRL(12,1)  	
5958   BDD0             
5958   BDD0~            	SCTRL(12,1)  	
5958   BDD0~            	SCTRL(12,1)  	
5958   BDD0             
5958   BDD0 01          
5958   BDD1 18          
5958   BDD2             
5958   BDD2             
5958   BDD2             
5959   BDD2             	\ #if (0>$64)\ 	.error "Slope value too high, must be less than 64."\ #else\ 	#if (0<-$63)\ 		.error "Slope value too high, must be greater than -63."\   #else\		#if (80 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.db 80 \ 			.db 0 << 1\		#endif\   #endif\ #endif    
5959   BDD2~            	SCTRL(0,80)    
5959   BDD2~            	SCTRL(0,80)    
5959   BDD2             
5959   BDD2~            	SCTRL(0,80)    
5959   BDD2~            	SCTRL(0,80)    
5959   BDD2             
5959   BDD2~            	SCTRL(0,80)    
5959   BDD2~            	SCTRL(0,80)    
5959   BDD2             
5959   BDD2 50          
5959   BDD3 00          
5959   BDD4             
5959   BDD4             
5959   BDD4             
5960   BDD4             maxsndcbuflen	=  * - maxsndcbufd   
5961   BDD4                 \tmpptr .set *\maxsndfbufd = *\ .org t_freqenv_l+i_freqenv\ .byte (maxsndfbuf&$FF)\ .org t_freqenv_h+i_freqenv\ .byte (maxsndfbuf/$100)\sfreq_maxmv = i_freqenv\i_freqenv .set i_freqenv + 1\ .org tmpptr\#IF i_freqenv > (numenv)\	.error "RPM: Too many frequency envelopes defined. Increase limit."\#ENDIF  
5961   BDD4             
5961   BDD4             
5961   9208             
5961   9208 F6          
5961   9298             
5961   9298 05          
5961   9299             
5961   9299             
5961   BDD4             
5961   BDD4~                NEWMXSNDFREQ(sfreq_maxmv) 
5961   BDD4~                NEWMXSNDFREQ(sfreq_maxmv) 
5961   BDD4             
5962   BDD4             	\ .db 1 \ #if (-36>32767)\ 	.error "Slope value too high, must be less than or equal to 32767."\ #else\   #if (-36<-32768)\       .error "Slope value too low, must be greater than or equal too -32768."\	#else\		#if (1 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.dw -36\		#endif\ 	#endif\ #endif	;SFREQ2(-1536,1)
5962   BDD4 01          
5962   BDD5~            	SFREQ2(-36,1)	;SFREQ2(-1536,1)
5962   BDD5~            	SFREQ2(-36,1)	;SFREQ2(-1536,1)
5962   BDD5             
5962   BDD5~            	SFREQ2(-36,1)	;SFREQ2(-1536,1)
5962   BDD5~            	SFREQ2(-36,1)	;SFREQ2(-1536,1)
5962   BDD5             
5962   BDD5~            	SFREQ2(-36,1)	;SFREQ2(-1536,1)
5962   BDD5~            	SFREQ2(-36,1)	;SFREQ2(-1536,1)
5962   BDD5             
5962   BDD5 DC FF       
5962   BDD7             
5962   BDD7             
5962   BDD7             
5963   BDD7             	\ .db 40 \ #if (-64>32767)\ 	.error "Slope value too high, must be less than or equal to 32767."\ #else\   #if (-64<-32768)\       .error "Slope value too low, must be greater than or equal too -32768."\	#else\		#if (40 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.dw -64\		#endif\ 	#endif\ #endif
5963   BDD7 28          
5963   BDD8~            	SFREQ2(-64,40)
5963   BDD8~            	SFREQ2(-64,40)
5963   BDD8             
5963   BDD8~            	SFREQ2(-64,40)
5963   BDD8~            	SFREQ2(-64,40)
5963   BDD8             
5963   BDD8~            	SFREQ2(-64,40)
5963   BDD8~            	SFREQ2(-64,40)
5963   BDD8             
5963   BDD8 C0 FF       
5963   BDDA             
5963   BDDA             
5963   BDDA             
5964   BDDA             	\ .db 40 \ #if (64>32767)\ 	.error "Slope value too high, must be less than or equal to 32767."\ #else\   #if (64<-32768)\       .error "Slope value too low, must be greater than or equal too -32768."\	#else\		#if (40 > $FE)\			.error "Duration must be less than 255."\		#else\ 			.dw 64\		#endif\ 	#endif\ #endif
5964   BDDA 28          
5964   BDDB~            	SFREQ2(64,40)
5964   BDDB~            	SFREQ2(64,40)
5964   BDDB             
5964   BDDB~            	SFREQ2(64,40)
5964   BDDB~            	SFREQ2(64,40)
5964   BDDB             
5964   BDDB~            	SFREQ2(64,40)
5964   BDDB~            	SFREQ2(64,40)
5964   BDDB             
5964   BDDB 40 00       
5964   BDDD             
5964   BDDD             
5964   BDDD             
5965   BDDD             maxsndfbuflen	=  * - maxsndfbufd
5966   BDDD                            
5967   BDDD             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_maxmv = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF    
5967   BDDD             
5967   910B             
5967   910B DD          
5967   919B             
5967   919B BD          
5967   919C             
5967   919C             
5967   BDDD             
5967   BDDD~            	NEWTUNE(s_maxmv)   
5967   BDDD~            	NEWTUNE(s_maxmv)   
5967   BDDD             
5968   BDDD                 \ .db isc_freq,sfreq_maxmv
5968   BDDD 86 58       
5969   BDDF                 \ .db isc_ctrl,sctrl_maxmv
5969   BDDF 87 5F       
5970   BDE1                 \ .db isc_sfunc10,$00
5970   BDE1 90 00       
5971   BDE3             	\ .db isc_srate,RATE_DEFAULT
5971   BDE3 80 40       
5972   BDE5                 \ .db isc_sebvol,$00
5972   BDE5 82 00       
5973   BDE7                 \ .db isc_ctrlm,CHCTL_NOPOLY
5973   BDE7 8A A0       
5974   BDE9             	\ .db isc_sloops,1
5974   BDE9 8E 01       
5975   BDEB             		\ .db _REST,80		;MUST BE EVEN
5975   BDEB 00 50       
5976   BDED             	\ .db isc_sloope,$00
5976   BDED 8F 00       
5977   BDEF                 \ .dw $0000
5977   BDEF 00 00       
5978   BDF1             
5979   BDF1             
5980   BDF1             
5981   BDF1             ; ;Hidden Level background sound #1
5982   BDF1             hlbksl = $10
5983   BDF1             
5984   BDF1             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_hiddenbk1 = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  
5984   BDF1             
5984   910C             
5984   910C F1          
5984   919C             
5984   919C BD          
5984   919D             
5984   919D             
5984   BDF1             
5984   BDF1~            	NEWTUNE(s_hiddenbk1) 
5984   BDF1~            	NEWTUNE(s_hiddenbk1) 
5984   BDF1             
5985   BDF1                 \ .db isc_sebvol,$08
5985   BDF1 82 08       
5986   BDF3             	;ADDBVOL(-4)
5987   BDF3                 \ .db isc_srate,$25 ;RATE_LARGO
5987   BDF3 80 25       
5988   BDF5                 \ .db isc_ctrl,sctrl_hardswell
5988   BDF5 87 05       
5989   BDF7             	\ .db isc_sjsr,s_hiddenbk1x
5989   BDF7 8D 7D       
5990   BDF9             	\ .db isc_sjsr,s_hiddenbk1x
5990   BDF9 8D 7D       
5991   BDFB             	\ .db isc_sjsr,s_hiddenbk1x
5991   BDFB 8D 7D       
5992   BDFD             	\ .db isc_sjsr,s_hiddenbk1x
5992   BDFD 8D 7D       
5993   BDFF             	\ .db isc_sjsr,s_hiddenbk1x
5993   BDFF 8D 7D       
5994   BE01             	\ .db isc_sjsr,s_hiddenbk1x
5994   BE01 8D 7D       
5995   BE03             	\ .db isc_sjsr,s_hiddenbk1x
5995   BE03 8D 7D       
5996   BE05             	\ .db isc_sjsr,s_hiddenbk1x
5996   BE05 8D 7D       
5997   BE07             	\ .db isc_sjsr,s_hiddenbk1x
5997   BE07 8D 7D       
5998   BE09             	\ .db isc_sjsr,s_hiddenbk1x
5998   BE09 8D 7D       
5999   BE0B             	\ .db isc_sjsr,s_hiddenbk1x
5999   BE0B 8D 7D       
6000   BE0D             	\ .db isc_sjsr,s_hiddenbk1x
6000   BE0D 8D 7D       
6001   BE0F             	\ .db isc_sjsr,s_hiddenbk1x
6001   BE0F 8D 7D       
6002   BE11             	\ .dw $0000
6002   BE11 00 00       
6003   BE13             	
6004   BE13             	
6005   BE13             	
6006   BE13             	\tmpptr .set *\ .org t_tune_l+i_tune\ .byte (tmpptr&$FF)\ .org t_tune_h+i_tune\ .byte (tmpptr/$100)\s_hiddenbk1x = i_tune\i_tune .set i_tune+1\ .org tmpptr\#IF i_tune > (numtun)\	.error "RPM: Too many Tunes defined. Increase limit."\#ENDIF  	
6006   BE13             
6006   910D             
6006   910D 13          
6006   919D             
6006   919D BE          
6006   919E             
6006   919E             
6006   BE13             
6006   BE13~            	NEWTUNE(s_hiddenbk1x) 	
6006   BE13~            	NEWTUNE(s_hiddenbk1x) 	
6006   BE13             
6007   BE13                 \ .db isc_sloops,$8
6007   BE13 8E 08       
6008   BE15             		\ .db _A0,hlbksl
6008   BE15 0D 10       
6009   BE17             		\ .db _A0,hlbksl
6009   BE17 0D 10       
6010   BE19             		\ .db _REST,$hlbksl
6010   BE19 00 10       
6011   BE1B             		\ .db _A0,$hlbksl
6011   BE1B 0D 10       
6012   BE1D             		\ .db _A0,$hlbksl
6012   BE1D 0D 10       
6013   BE1F             		\ .db _REST,hlbksl
6013   BE1F 00 10       
6014   BE21             		\ .db _A0,hlbksl
6014   BE21 0D 10       
6015   BE23             		\ .db _A0,hlbksl
6015   BE23 0D 10       
6016   BE25             		\ .db _REST,hlbksl
6016   BE25 00 10       
6017   BE27             		\ .db _A0,hlbksl ;*2
6017   BE27 0D 10       
6018   BE29             		\ .db _REST,$hlbksl
6018   BE29 00 10       
6019   BE2B             		\ .db _C1,hlbksl
6019   BE2B 10 10       
6020   BE2D             		\ .db _D1,hlbksl
6020   BE2D 12 10       
6021   BE2F             		\ .db _C1,hlbksl
6021   BE2F 10 10       
6022   BE31             		\ .db _D1,hlbksl
6022   BE31 12 10       
6023   BE33             		\ .db _C1,hlbksl
6023   BE33 10 10       
6024   BE35             		
6025   BE35             		\ .db _A0,hlbksl
6025   BE35 0D 10       
6026   BE37             		\ .db _A0,hlbksl
6026   BE37 0D 10       
6027   BE39             		\ .db _REST,$hlbksl
6027   BE39 00 10       
6028   BE3B             		\ .db _A0,$hlbksl
6028   BE3B 0D 10       
6029   BE3D             		\ .db _A0,$hlbksl
6029   BE3D 0D 10       
6030   BE3F             		\ .db _REST,hlbksl
6030   BE3F 00 10       
6031   BE41             		\ .db _A0,hlbksl
6031   BE41 0D 10       
6032   BE43             		\ .db _A0,hlbksl
6032   BE43 0D 10       
6033   BE45             		\ .db _REST,hlbksl
6033   BE45 00 10       
6034   BE47             		\ .db _A0,hlbksl ;*2
6034   BE47 0D 10       
6035   BE49             		\ .db _REST,$hlbksl
6035   BE49 00 10       
6036   BE4B             		\ .db _C1,hlbksl
6036   BE4B 10 10       
6037   BE4D             		\ .db _D1,hlbksl
6037   BE4D 12 10       
6038   BE4F             		\ .db _E1,hlbksl
6038   BE4F 14 10       
6039   BE51             		\ .db _F1,hlbksl
6039   BE51 15 10       
6040   BE53             		\ .db _G1,hlbksl
6040   BE53 17 10       
6041   BE55             	\ .db isc_sloope,$00
6041   BE55 8F 00       
6042   BE57             	
6043   BE57             	\ .db _A1,hlbksl*2
6043   BE57 19 20       
6044   BE59             	\ .db _G1,hlbksl*2
6044   BE59 17 20       
6045   BE5B             	\ .db _F1,hlbksl*2
6045   BE5B 15 20       
6046   BE5D             	\ .db _D1,hlbksl*2
6046   BE5D 12 20       
6047   BE5F             	\ .db _C1,hlbksl*2
6047   BE5F 10 20       
6048   BE61             	\ .db _G0,hlbksl*2
6048   BE61 0B 20       
6049   BE63             	\ .db _Ab0,hlbksl*2
6049   BE63 0C 20       
6050   BE65                 \ .dw $0000
6050   BE65 00 00       
6051   BE67             
6052   BE67             ; ;Hidden Level background sound #2	
6053   BE67             ; ;Robots - Flight of the Conchords
6054   BE67             ; hlbksl2 = $16
6055   BE67             
6056   BE67             	; NEWTUNE(s_hiddenbk2) 
6057   BE67                 ; SETBVOL($08)
6058   BE67             	; ;ADDBVOL(-4)
6059   BE67                 ; SETNRATE(RATE_LARGO)
6060   BE67             	; SETDIST(CHCTL_NOPOLY)
6061   BE67                 ; SETSNDCONT(sctrl_hardswell) ;sctrl_robot)
6062   BE67             	
6063   BE67             	; SLOOPSTART(8)
6064   BE67             		; NOTE(_A1,hlbksl2)
6065   BE67             		; NOTE(_A1,hlbksl2)
6066   BE67             		; NOTE(_A1,hlbksl2)
6067   BE67             		; NOTE(_A1,hlbksl2)
6068   BE67             		; NOTE(_A1,hlbksl2)
6069   BE67             		; NOTE(_A1,hlbksl2)
6070   BE67             		; NOTE(_A1,hlbksl2)
6071   BE67             		; NOTE(_E2,hlbksl2)
6072   BE67             	; SLOOPEND
6073   BE67             	; SLOOPSTART(2)
6074   BE67             		; NOTE(_A1,hlbksl2)
6075   BE67             		; NOTE(_A2,hlbksl2)
6076   BE67             		; NOTE(_A1,hlbksl2)
6077   BE67             		; NOTE(_A2,hlbksl2)
6078   BE67             		; NOTE(_D2,hlbksl2)
6079   BE67             		; NOTE(_D3,hlbksl2)
6080   BE67             		; NOTE(_D2,hlbksl2)
6081   BE67             		; NOTE(_D3,hlbksl2)
6082   BE67             		; NOTE(_C2,hlbksl2)
6083   BE67             		; NOTE(_C3,hlbksl2)
6084   BE67             		; NOTE(_C2,hlbksl2)
6085   BE67             		; NOTE(_C3,hlbksl2)
6086   BE67             		; NOTE(_D2,hlbksl2)
6087   BE67             		; NOTE(_D3,hlbksl2)
6088   BE67             		; NOTE(_D2,hlbksl2)
6089   BE67             		; NOTE(_D3,hlbksl2)
6090   BE67             	; SLOOPEND
6091   BE67             	; SLOOPSTART(8)
6092   BE67             		; NOTE(_A1,hlbksl2)
6093   BE67             		; NOTE(_A1,hlbksl2)
6094   BE67             		; NOTE(_A1,hlbksl2)
6095   BE67             		; NOTE(_A1,hlbksl2)
6096   BE67             		; NOTE(_A1,hlbksl2)
6097   BE67             		; NOTE(_A1,hlbksl2)
6098   BE67             		; NOTE(_A1,hlbksl2)
6099   BE67             		; NOTE(_E2,hlbksl2)
6100   BE67             	; SLOOPEND
6101   BE67             	; SLOOPSTART(1)
6102   BE67             		; NOTE(_F2,hlbksl2)
6103   BE67             		; NOTE(_F2,hlbksl2)
6104   BE67             		; NOTE(_F2,hlbksl2)
6105   BE67             		; NOTE(_F3,hlbksl2)
6106   BE67             		; NOTE(_F2,hlbksl2)
6107   BE67             		; NOTE(_REST,hlbksl2)
6108   BE67             		; NOTE(_REST,hlbksl2)
6109   BE67             		; NOTE(_F2,hlbksl2)
6110   BE67             		; NOTE(_F3,hlbksl2)
6111   BE67             		; NOTE(_F2,hlbksl2)
6112   BE67             		; NOTE(_F3,hlbksl2)
6113   BE67             		; NOTE(_F2,hlbksl2)
6114   BE67             		; NOTE(_REST,hlbksl2)
6115   BE67             		; NOTE(_REST,hlbksl2)
6116   BE67             		; NOTE(_REST,hlbksl2)
6117   BE67             		; NOTE(_REST,hlbksl2)
6118   BE67             		
6119   BE67             		; NOTE(_G2,hlbksl2)
6120   BE67             		; NOTE(_G2,hlbksl2)
6121   BE67             		; NOTE(_G2,hlbksl2)
6122   BE67             		; NOTE(_G3,hlbksl2)
6123   BE67             		; NOTE(_G2,hlbksl2)
6124   BE67             		; NOTE(_REST,hlbksl2)
6125   BE67             		; NOTE(_REST,hlbksl2)
6126   BE67             		; NOTE(_G2,hlbksl2)
6127   BE67             		; NOTE(_G3,hlbksl2)
6128   BE67             		; NOTE(_G2,hlbksl2)
6129   BE67             		; NOTE(_G3,hlbksl2)
6130   BE67             		; NOTE(_G2,hlbksl2)
6131   BE67             		; NOTE(_REST,hlbksl2)
6132   BE67             		; NOTE(_REST,hlbksl2)
6133   BE67             		; NOTE(_REST,hlbksl2)
6134   BE67             		; NOTE(_REST,hlbksl2)
6135   BE67             		
6136   BE67             		; NOTE(_D2,hlbksl2)
6137   BE67             		; NOTE(_D2,hlbksl2)
6138   BE67             		; NOTE(_D2,hlbksl2)
6139   BE67             		; NOTE(_D3,hlbksl2)
6140   BE67             		; NOTE(_D2,hlbksl2)
6141   BE67             		; NOTE(_REST,hlbksl2)
6142   BE67             		; NOTE(_REST,hlbksl2)
6143   BE67             		; NOTE(_D2,hlbksl2)
6144   BE67             		; NOTE(_D3,hlbksl2)
6145   BE67             		; NOTE(_D2,hlbksl2)
6146   BE67             		; NOTE(_D2,hlbksl2)
6147   BE67             		; NOTE(_D2,hlbksl2)
6148   BE67             		; NOTE(_REST,hlbksl2)
6149   BE67             		; NOTE(_REST,hlbksl2)
6150   BE67             		; NOTE(_REST,hlbksl2)
6151   BE67             		; NOTE(_REST,hlbksl2)
6152   BE67             		
6153   BE67             		; NOTE(_C2,hlbksl2)
6154   BE67             		; NOTE(_C2,hlbksl2)
6155   BE67             		; NOTE(_C2,hlbksl2)
6156   BE67             		; NOTE(_C3,hlbksl2)
6157   BE67             		; NOTE(_C2,hlbksl2)
6158   BE67             		; NOTE(_REST,hlbksl2)
6159   BE67             		; NOTE(_REST,hlbksl2)
6160   BE67             		; NOTE(_C2,hlbksl2)
6161   BE67             		; NOTE(_C3,hlbksl2)
6162   BE67             		; NOTE(_C2,hlbksl2)
6163   BE67             		; NOTE(_C2,hlbksl2)
6164   BE67             		; NOTE(_C2,hlbksl2)
6165   BE67             		; NOTE(_REST,hlbksl2)
6166   BE67             		; NOTE(_REST,hlbksl2)
6167   BE67             		; NOTE(_REST,hlbksl2)
6168   BE67             		; NOTE(_REST,hlbksl2)
6169   BE67             	; SLOOPEND
6170   BE67             	; SLOOPSTART(8)
6171   BE67             		; NOTE(_A1,hlbksl2)
6172   BE67             		; NOTE(_A1,hlbksl2)
6173   BE67             		; NOTE(_A1,hlbksl2)
6174   BE67             		; NOTE(_A1,hlbksl2)
6175   BE67             		; NOTE(_A1,hlbksl2)
6176   BE67             		; NOTE(_A1,hlbksl2)
6177   BE67             		; NOTE(_A1,hlbksl2)
6178   BE67             		; NOTE(_E2,hlbksl2)
6179   BE67             	; SLOOPEND
6180   BE67                 ; ENDSND
6181   BE67             	
6182   BE67             ; ;Hidden Level background sound #3
6183   BE67             ; ;Chameleon
6184   BE67             ; hlbksl3 = 30
6185   BE67             
6186   BE67             	; NEWTUNE(s_hiddenbk3) 
6187   BE67                 ; SETBVOL($08)
6188   BE67             	; ;ADDBVOL(-4)
6189   BE67                 ; SETNRATE(RATE_LARGO)
6190   BE67                 ; SETSNDCONT(sctrl_funk)
6191   BE67                 ; SLOOPSTART(4)
6192   BE67             		; NOTE(_REST,hlbksl3)
6193   BE67             		; NOTE(_G0,hlbksl3)
6194   BE67             		; NOTE(_Ab0,hlbksl3)
6195   BE67             		; NOTE(_A0,hlbksl3)
6196   BE67             		; NOTE(_Bb0,hlbksl3)
6197   BE67             		; NOTE(_REST,hlbksl3/2)
6198   BE67             		; NOTE(_Ab1+1,$hlbksl3)
6199   BE67             		; NOTE(_REST,hlbksl3/2)
6200   BE67             		; NOTE(_Bb1+1,hlbksl3)
6201   BE67             		; NOTE(_REST,hlbksl3)
6202   BE67             		; ;NOTE(_REST,hlbksl3)
6203   BE67             
6204   BE67             		; NOTE(_REST,hlbksl3)
6205   BE67             		; NOTE(_C1,hlbksl3)
6206   BE67             		; NOTE(_Db1,hlbksl3)
6207   BE67             		; NOTE(_D1,hlbksl3)
6208   BE67             		; NOTE(_Eb1,hlbksl3)
6209   BE67             		; NOTE(_REST,hlbksl3/2)
6210   BE67             		; NOTE(_Db2+1,$hlbksl3)
6211   BE67             		; NOTE(_REST,hlbksl3/2)
6212   BE67             		; NOTE(_Eb2+1,hlbksl3)
6213   BE67             		; NOTE(_REST,hlbksl3)
6214   BE67             
6215   BE67             	; SLOOPEND
6216   BE67             	; SETSNDCONT(sctrl_hardswell)
6217   BE67             	; SLOOPSTART(4)
6218   BE67             		; NOTE(_Bb1+1,hlbksl3)
6219   BE67             		; NOTE(_REST,hlbksl3/2)
6220   BE67             		; NOTE(_Ab1+1,hlbksl3)
6221   BE67             		; NOTE(_REST,hlbksl3/2)
6222   BE67             		; NOTE(_F1+1,hlbksl3)
6223   BE67             		; NOTE(_REST,hlbksl3/2)
6224   BE67             		; NOTE(_Db3+1,hlbksl3)
6225   BE67             		; NOTE(_REST,hlbksl3/2)
6226   BE67             		; NOTE(_Bb3+1,hlbksl3)
6227   BE67             		; NOTE(_REST,hlbksl3/2)
6228   BE67             	    ; NOTE(_Bb1+1,hlbksl3/2)
6229   BE67             		; NOTE(_Ab1+1,hlbksl3/2)
6230   BE67             		; NOTE(_F1+1,hlbksl3/2)
6231   BE67             		; NOTE(_Ab1+1,hlbksl3/2)
6232   BE67             		; NOTE(_Bb1+1,hlbksl3/2)
6233   BE67             		; NOTE(_REST,hlbksl3/2)
6234   BE67             		; NOTE(_REST,hlbksl3/2)
6235   BE67             		; NOTE(_Db3+1,hlbksl3)
6236   BE67             		; NOTE(_REST,hlbksl3/2)
6237   BE67             		; NOTE(_Eb3+1,hlbksl3)
6238   BE67             		; NOTE(_REST,hlbksl3/2)
6239   BE67             	; SLOOPEND
6240   BE67             	
6241   BE67                 ; ENDSND
6242   BE67             
6243   BE67             ; ;Hidden Level background sound #4
6244   BE67             ; ;I Robot
6245   BE67             ; hlbksl4 = $18
6246   BE67             ; hlbksr4 = $18
6247   BE67             
6248   BE67             	; NEWTUNE(s_hiddenbk4) 
6249   BE67                 ; SETBVOL($08)
6250   BE67             	; ;ADDBVOL(-4)
6251   BE67                 ; SETNRATE(150d) ;Default is 64d
6252   BE67                 ; SETSNDCONT(sctrl_hardswell2)
6253   BE67             	; SLOOPSTART(7)
6254   BE67             		; NOTE(_F1,hlbksl4)			;D String Fret 3
6255   BE67             		; NOTE(_REST,hlbksr4)
6256   BE67             		; NOTE(_G1,hlbksl4)			;G String Fret 0
6257   BE67             		; NOTE(_REST,hlbksr4)
6258   BE67             		; NOTE(_Bb1,hlbksl4)			;G String Fret 3
6259   BE67             		; NOTE(_REST,hlbksr4)
6260   BE67             		; NOTE(_G1,hlbksl4)			;G String Fret 0
6261   BE67             		; NOTE(_REST,hlbksr4)
6262   BE67             		; NOTE(_F1,hlbksl4)			;D String Fret 3
6263   BE67             		; NOTE(_REST,hlbksr4)
6264   BE67             		; NOTE(_G1,hlbksl4)			;G String Fret 0
6265   BE67             		; NOTE(_REST,hlbksr4)
6266   BE67             		; NOTE(_C1,hlbksl4*4)		;whole - A String Fret 3
6267   BE67                 ; SLOOPEND
6268   BE67             	; NOTE(_F1,hlbksl4)			;D String Fret 3
6269   BE67             	; NOTE(_REST,hlbksr4)
6270   BE67             	; NOTE(_G1,hlbksl4)			;G String Fret 0
6271   BE67             	; NOTE(_REST,hlbksr4)
6272   BE67             	; NOTE(_F1,hlbksl4)			;D String Fret 3
6273   BE67             	; NOTE(_REST,hlbksr4)
6274   BE67             	; NOTE(_G1,hlbksl4)			;G String Fret 0
6275   BE67             	; NOTE(_REST,hlbksr4)
6276   BE67             	; NOTE(_Bb1,hlbksl4)			;G String Fret 3
6277   BE67             	; NOTE(_REST,hlbksr4)
6278   BE67             	; NOTE(_G1,hlbksl4)			;G String Fret 0
6279   BE67             	; NOTE(_REST,hlbksr4)
6280   BE67             	; NOTE(_C1,hlbksl4*4)		;whole - A String Fret 3
6281   BE67             	; SLOOPSTART(7)
6282   BE67             		; NOTE(_C1,hlbksl4)			;A String Fret 3
6283   BE67             		; NOTE(_REST,hlbksr4)
6284   BE67             		; NOTE(_G1,hlbksl4)			;G String Fret 0
6285   BE67             		; NOTE(_REST,hlbksr4)
6286   BE67             		; NOTE(_F1,hlbksl4)			;D String Fret 3
6287   BE67             		; NOTE(_REST,hlbksr4)
6288   BE67             		; NOTE(_G1,hlbksl4)			;G String Fret 0
6289   BE67             		; NOTE(_REST,hlbksr4)
6290   BE67             		; NOTE(_Bb1,hlbksl4)			;G String Fret 3
6291   BE67             		; NOTE(_REST,hlbksr4)
6292   BE67             		; NOTE(_G1,hlbksl4)			;G String Fret 0
6293   BE67             		; NOTE(_REST,hlbksr4)
6294   BE67             		; NOTE(_C1,hlbksl4*4)		;whole - A String Fret 3
6295   BE67             	; SLOOPEND
6296   BE67             	; ;Bar 51
6297   BE67             	; NOTE(_C1,hlbksl4)			;A String Fret 3
6298   BE67             	; NOTE(_REST,hlbksr4)
6299   BE67             	; NOTE(_G1,hlbksl4)			;G String Fret 0
6300   BE67             	; NOTE(_REST,hlbksr4)
6301   BE67             	; NOTE(_F1,hlbksl4)			;D String Fret 3
6302   BE67             	; NOTE(_REST,hlbksr4)
6303   BE67             	; NOTE(_G1,hlbksl4)			;G String Fret 0
6304   BE67             	; NOTE(_REST,hlbksr4)
6305   BE67             	; NOTE(_Bb1,hlbksl4)			;G String Fret 3
6306   BE67             	; NOTE(_REST,hlbksr4)
6307   BE67             	; NOTE(_G1,hlbksl4)			;G String Fret 0
6308   BE67             	; NOTE(_REST,hlbksr4)
6309   BE67             	; NOTE(_Eb1,hlbksl4*4)			;whole - D String Fret 1
6310   BE67             
6311   BE67             	; NOTE(_Eb1,hlbksl4)			;whole - D String Fret 1
6312   BE67             	; NOTE(_REST,hlbksr4)
6313   BE67             	; NOTE(_Bb1,hlbksl4)			;G String 3rd Fret = Bb
6314   BE67             	; NOTE(_REST,hlbksr4)
6315   BE67             	; NOTE(_Ab1,hlbksl4)			;G String 1st Fret = Ab
6316   BE67             	; NOTE(_REST,hlbksr4)
6317   BE67             	; NOTE(_Bb1,hlbksl4)			;G String 3rd Fret = Bb
6318   BE67             	; NOTE(_REST,hlbksr4)
6319   BE67             	; NOTE(_Eb2,hlbksl4)			;G String 8th Fret = Eb2
6320   BE67             	; NOTE(_REST,hlbksr4)
6321   BE67             	; NOTE(_Bb1,hlbksl4)			;D String 8th Fret = Bb
6322   BE67             	; NOTE(_REST,hlbksr4)
6323   BE67             	; NOTE(_Eb1,hlbksl4*4)		;double A String 6th Fret = Eb
6324   BE67             	; NOTE(_REST,hlbksr4)
6325   BE67             	; ;Bar 52
6326   BE67             	; NOTE(_Eb1,hlbksl4)			;A String 6th Fret = Eb
6327   BE67             	; NOTE(_REST,hlbksr4)
6328   BE67             	; NOTE(_Bb1,hlbksl4)			;G String 3rd Fret = Bb
6329   BE67             	; NOTE(_REST,hlbksr4)
6330   BE67             	; NOTE(_Ab1,hlbksl4)			;G String 1st Fret = Ab
6331   BE67             	; NOTE(_REST,hlbksr4)
6332   BE67             	; NOTE(_Bb1,hlbksl4)			;G String 3rd Fret = Bb
6333   BE67             	; NOTE(_REST,hlbksr4)
6334   BE67             	; NOTE(_Eb2,hlbksl4)			;G String 8th Fret = Eb2
6335   BE67             	; NOTE(_REST,hlbksr4)
6336   BE67             	; NOTE(_Bb1,hlbksl4)			;D String 8th Fret = Bb
6337   BE67             	; NOTE(_REST,hlbksr4)
6338   BE67             	; NOTE(_C0,hlbksl4*4)		;double E String 8th Fret = C
6339   BE67             	; NOTE(_REST,hlbksr4)
6340   BE67                 ; ENDSND
6341   BE67             
6342   BE67             ;****************************************** 
6343   BE67             ;* Speech Data goes here 
6344   BE67             ;* NOTE: Each block must end with $FF,$FF           
6345   BE67             ;******************************************
6346   BE67              
6347   BE67~            #IF ___tlk == 1
6348   BE67~            
6349   BE67~            ;Speech Chip Test binary from Gauntlet
6350   BE67~            sps_test
6351   BE67~                .db $0C,$F8,$21,$9C,$01,$3F,$A6,$33,$E0,$A7,$76,$01,$FC,$D4,$0C,$06
6352   BE67~                .db $E8,$32,$AC,$EC,$43,$28,$E4,$76,$AD,$B2,$4E,$A6,$90,$3B,$95,$CA
6353   BE67~                .db $3C,$99,$40,$DD,$46,$6E,$E3,$14,$02,$B9,$1B,$B9,$F5,$93,$09,$D6
6354   BE67~                .db $5E,$A5,$D2,$4E,$CA,$D8,$BD,$91,$42,$DD,$65,$98,$9B,$D9,$36,$C0
6355   BE67~                .db $AF,$65,$0A,$78,$7B,$D3,$00,$6F,$6E,$0A,$E0,$B5,$6D,$06,$DC,$36
6356   BE67~                .db $05,$06,$B8,$D9,$DD,$00,$EF,$6C,$19,$E0,$AD,$EB,$51,$DE,$B6,$E1
6357   BE67~                .db $02,$B2,$47,$BE,$1C,$93,$50,$CC,$1E,$69,$53,$A2,$91,$53,$69,$C4
6358   BE67~                .db $43,$BA,$B8,$77,$CD,$16,$36,$11,$9A,$D6,$95,$9A,$5F,$79,$6A,$58
6359   BE67~                .db $4E,$1A,$6E,$96,$E1,$69,$31,$39,$39,$95,$87,$A5,$66,$6D,$70,$40
6360   BE67~                .db $31,$2E,$0A,$28,$36,$84,$01,$C5,$95,$00,$80,$03,$8E,$50,$72,$40
6361   BE67~                .db $03,$22,$C3,$CE,$CA,$2C,$B2,$60,$0D,$AB,$EA,$D0,$8C,$B5,$B4,$CC
6362   BE67~                .db $A6,$4A,$D2,$A7,$D2,$32,$BA,$6C,$4D,$EF,$49,$43,$6F,$72,$24,$AD
6363   BE67~                .db $2B,$35,$2D,$BB,$F0,$F0,$15,$9D,$D4,$A4,$C3,$C3,$46,$54,$52,$26
6364   BE67~                .db $49,$76,$68,$53,$49,$DE,$50,$C8,$49,$13,$06,$E9,$BB,$90,$60,$B1
6365   BE67~                .db $19,$C4,$1F,$CA,$4A,$D4,$B1,$11,$7E,$2A,$35,$16,$3A,$20,$80,$AB
6366   BE67~                .db $D2,$09,$F0,$55,$E8,$03,$FF                          
6367   BE67~            spx_test
6368   BE67~             
6369   BE67~            ; 1-10 countdown data from Gauntlet 
6370   BE67~            sps_one
6371   BE67~            	.db $AC,$53,$A2,$AB,$52,$4D,$B3,$4E,$A8,$AE,$74,$B3,$CC,$5A,$6E,$BA
6372   BE67~            	.db $CA,$CC,$16,$AB,$99,$DB,$0C,$35,$DB,$AA,$60,$B1,$CB,$D9,$A3,$98
6373   BE67~            	.db $84,$E7,$ED,$24,$9A,$92,$22,$1B,$DE,$C9,$6D,$76,$89,$22,$FF,$C6
6374   BE67~            	.db $B0,$85,$2D,$0A,$E6,$83,$2A,$6B,$B7,$38,$9A,$0B,$89,$A8,$32,$D2
6375   BE67~            	.db $A4,$CF,$24,$A3,$CA,$28,$92,$1F,$F1,$8C,$AA,$A3,$CE,$B1,$D9,$BC
6376   BE67~            	.db $CA,$8E,$BE,$A4,$10,$B6,$89,$12,$86,$AC,$D8,$59,$27,$8D,$9B,$B2
6377   BE67~            	.db $16,$27,$ED,$BA,$6E,$CA,$92,$4D,$B5,$EB,$BA,$B9,$68,$56,$91,$6A
6378   BE67~            	.db $AA,$D6,$AC,$59,$45,$AA,$A9,$DA,$B2,$71,$14,$8B,$26,$6A,$2F,$C9
6379   BE67~            	.db $C1,$3A,$CB,$A2,$93,$67,$C9,$36,$A2,$FB,$00,$FF
6380   BE67~            spx_one
6381   BE67~            
6382   BE67~            sps_two
6383   BE67~            		.db $02,$68,$41,$8D,$01,$25,$39,$27,$37,$47,$36,$B6,$58,$92,$BC,$14
6384   BE67~            		.db $59,$D5,$F3,$4D,$F2,$BC,$35,$8B,$F2,$3B,$C9,$B7,$26,$22,$4A,$E7
6385   BE67~            		.db $A4,$D0,$D8,$F4,$08,$99,$1D,$12,$9D,$DD,$DC,$AB,$A1,$CB,$54,$D4
6386   BE67~            		.db $31,$CE,$45,$21,$E7,$C5,$D3,$34,$17,$85,$92,$D7,$32,$B7,$6C,$ED
6387   BE67~            		.db $6A,$91,$22,$9D,$7D,$AB,$6B,$85,$6B,$4F,$D6,$B6,$6E,$90,$A6,$23
6388   BE67~            		.db $45,$D2,$9A,$49,$BA,$89,$10,$4D,$6A,$16,$69,$3B,$43,$24,$A9,$DA
6389   BE67~            		.db $94,$1D,$77,$16,$B7,$EC,$D0,$66,$D2,$58,$9D,$92,$9B,$2C,$63,$8D
6390   BE67~            		.db $8A,$F9,$00,$FF
6391   BE67~            spx_two
6392   BE67~            
6393   BE67~            sps_three
6394   BE67~            		.db $04,$48,$C2,$DC,$A5,$B1,$92,$BB,$45,$5A,$13,$85,$81,$56,$A1,$69
6395   BE67~            		.db $4C,$18,$3A,$78,$3B,$67,$09,$41,$6C,$A8,$35,$DC,$3A,$84,$79,$A2
6396   BE67~            		.db $46,$C8,$A3,$16,$97,$AC,$24,$ED,$4D,$5A,$52,$82,$B0,$6E,$D6,$6D
6397   BE67~            		.db $69,$11,$26,$B6,$55,$65,$64,$4D,$1B,$73,$F5,$DC,$91,$0F,$69,$4C
6398   BE67~            		.db $35,$73,$5A,$D9,$85,$32,$F7,$D4,$69,$D5,$10,$46,$54,$53,$A7,$35
6399   BE67~            		.db $93,$2B,$51,$CD,$E2,$D6,$4F,$6E,$44,$35,$4D,$CA,$B0,$B8,$12,$D6
6400   BE67~            		.db $D4,$4E,$D3,$92,$46,$98,$33,$3B,$4D,$93,$2B,$71,$CD,$EC,$34,$0F
6401   BE67~            		.db $AE,$24,$3D,$93,$DD,$5A,$99,$92,$CF,$54,$71,$5B,$15,$4A,$3E,$5B
6402   BE67~            		.db $86,$EC,$56,$71,$56,$3B,$E9,$07,$FF
6403   BE67~            spx_three
6404   BE67~            
6405   BE67~            sps_four
6406   BE67~            		.db $08,$C8,$D6,$9C,$02,$2E,$96,$AB,$52,$B8,$AA,$86,$48,$F5,$57,$76
6407   BE67~            		.db $9B,$9A,$22,$35,$36,$8C,$AD,$6A,$8A,$65,$DF,$74,$D2,$BA,$29,$51
6408   BE67~            		.db $69,$2B,$88,$A7,$A4,$CC,$FA,$AD,$24,$9C,$93,$72,$93,$B7,$82,$68
6409   BE67~            		.db $76,$29,$74,$9D,$4A,$92,$25,$A5,$B4,$B5,$2B,$50,$57,$97,$DA,$A7
6410   BE67~            		.db $AA,$14,$5A,$55,$5A,$DF,$23,$52,$74,$55,$E9,$7D,$37,$2F,$B5,$55
6411   BE67~            		.db $65,$08,$43,$AD,$42,$57,$A6,$31,$76,$8E,$36,$DD,$98,$A6,$D4,$B1
6412   BE67~            		.db $4A,$6D,$55,$98,$53,$C7,$2C,$97,$4D,$61,$4E,$1D,$2B,$5D,$36,$B9
6413   BE67~            		.db $39,$0D,$AC,$74,$DD,$E5,$D6,$34,$B0,$D2,$AC,$37,$59,$7D,$C1,$75
6414   BE67~            		.db $0D,$93,$0F,$FF
6415   BE67~            spx_four
6416   BE67~            
6417   BE67~            sps_five
6418   BE67~            		.db $08,$C8,$C6,$9C,$02,$04,$08,$33,$2C,$65,$61,$A5,$46,$4E,$94,$96
6419   BE67~            		.db $C5,$15,$6E,$D9,$51,$46,$96,$F2,$98,$7B,$56,$19,$59,$F6,$EB,$16
6420   BE67~            		.db $59,$67,$14,$29,$B6,$BB,$F7,$94,$51,$A5,$52,$16,$D9,$53,$47,$93
6421   BE67~            		.db $4A,$A9,$47,$57,$1D,$7D,$1E,$66,$5E,$13,$65,$0C,$B9,$B8,$45,$4D
6422   BE67~            		.db $99,$31,$E6,$AA,$61,$3D,$51,$C6,$98,$93,$7A,$64,$47,$1D,$63,$89
6423   BE67~            		.db $6A,$5E,$5D,$A5,$4D,$C5,$A9,$7B,$F5,$98,$32,$65,$CF,$56,$53,$65
6424   BE67~            		.db $DA,$5C,$8C,$6A,$F4,$4C,$69,$4B,$F1,$4A,$D1,$B5,$B8,$2D,$D5,$AA
6425   BE67~            		.db $B8,$C7,$E3,$B0,$D6,$20,$EA,$E2,$4B,$D0,$8A,$83,$44,$45,$9A,$02
6426   BE67~            		.db $B2,$98,$20,$69,$D9,$A2,$C8,$6A,$A3,$36,$67,$10,$41,$AB,$4F,$68
6427   BE67~            		.db $E5,$42,$EA,$01,$FF
6428   BE67~            spx_five
6429   BE67~            
6430   BE67~            sps_six
6431   BE67~            		.db $08,$58,$22,$8D,$00,$47,$55,$10,$E0,$48,$57,$02,$6C,$DD,$4E,$80
6432   BE67~            		.db $29,$53,$4B,$5C,$BC,$98,$F8,$D6,$1D,$71,$31,$C6,$1E,$3D,$77,$64
6433   BE67~            		.db $DD,$87,$A8,$E6,$93,$51,$76,$1F,$A2,$96,$4B,$5A,$DF,$53,$B0,$B8
6434   BE67~            		.db $AF,$31,$47,$5B,$2C,$E6,$39,$07,$80,$00,$E5,$50,$10,$60,$A8,$0B
6435   BE67~            		.db $02,$2C,$35,$41,$80,$A3,$32,$08,$B0,$54,$3B,$01,$96,$28,$47,$C0
6436   BE67~            		.db $E6,$EE,$08,$B8,$2A,$1D,$1E,$FF
6437   BE67~            spx_six
6438   BE67~            
6439   BE67~            sps_seven
6440   BE67~            		.db $08,$98,$26,$8D,$00,$4B,$86,$12,$60,$89,$D0,$10,$75,$55,$2C,$5C
6441   BE67~            		.db $B5,$4A,$9C,$A2,$4A,$4C,$46,$1D,$71,$C9,$EE,$E2,$5D,$67,$C5,$D5
6442   BE67~            		.db $95,$B9,$E6,$9C,$91,$14,$57,$EA,$9A,$53,$4A,$9E,$6D,$AA,$4B,$5C
6443   BE67~            		.db $51,$75,$14,$AE,$61,$51,$29,$95,$39,$B8,$2A,$C7,$94,$51,$57,$9B
6444   BE67~            		.db $EA,$12,$77,$46,$57,$63,$89,$6A,$2D,$19,$43,$0B,$E5,$22,$B1,$38
6445   BE67~            		.db $4D,$4D,$86,$B2,$C9,$1C,$37,$55,$25,$6A,$EC,$F3,$DC,$54,$8D,$AA
6446   BE67~            		.db $52,$CC,$37,$4B,$D1,$AC,$2A,$55,$4F,$AD,$D9,$88,$0A,$57,$3D,$B5
6447   BE67~            		.db $25,$2B,$C2,$52,$4D,$1F,$FF
6448   BE67~            spx_seven
6449   BE67~            
6450   BE67~            sps_eight
6451   BE67~            		.db $A9,$28,$5E,$D4,$AB,$AB,$8C,$74,$38,$13,$C9,$5A,$33,$92,$11,$5C
6452   BE67~            		.db $D8,$73,$C9,$48,$BA,$37,$91,$EC,$25,$23,$E9,$4E,$59,$7A,$E6,$8C
6453   BE67~            		.db $7C,$18,$16,$9E,$99,$DD,$9A,$15,$4C,$C0,$67,$4D,$19,$56,$0A,$05
6454   BE67~            		.db $9A,$D6,$7A,$00,$00,$06,$4C,$16,$8A,$80,$61,$59,$10,$D0,$8C,$29
6455   BE67~            		.db $02,$B2,$76,$01,$00,$78,$FF
6456   BE67~            spx_eight
6457   BE67~            
6458   BE67~            sps_nine
6459   BE67~            		.db $6A,$48,$9C,$B2,$DC,$6D,$9B,$D6,$4B,$2E,$B3,$8C,$35,$F2,$16,$3C
6460   BE67~            		.db $49,$6C,$F1,$C8,$4B,$F1,$24,$CF,$29,$23,$2B,$A1,$C2,$25,$C6,$8E
6461   BE67~            		.db $34,$DB,$8D,$50,$9D,$32,$D2,$EC,$D6,$34,$A3,$CA,$48,$B3,$5B,$D3
6462   BE67~            		.db $88,$2A,$23,$CB,$76,$4D,$23,$AA,$8C,$2C,$DB,$35,$CD,$A8,$32,$F2
6463   BE67~            		.db $E2,$D6,$34,$62,$F2,$A8,$4A,$6E,$37,$CD,$B2,$A3,$69,$A1,$C2,$D8
6464   BE67~            		.db $E7,$8C,$B6,$87,$70,$35,$5F,$3C,$FA,$1E,$52,$C5,$7C,$C9,$18,$46
6465   BE67~            		.db $70,$65,$8B,$45,$63,$1C,$5E,$45,$22,$66,$B5,$69,$3A,$65,$09,$5F
6466   BE67~            		.db $14,$96,$26,$54,$A4,$BC,$92,$59,$8A,$22,$0B,$CB,$32,$66,$C9,$9A
6467   BE67~            		.db $5C,$AD,$E3,$A8,$35,$2B,$36,$B5,$AA,$2D,$D6,$62,$44,$44,$B2,$F2
6468   BE67~            		.db $03,$FF
6469   BE67~            spx_nine
6470   BE67~            
6471   BE67~            sps_ten
6472   BE67~            		.db $0C,$18,$C2,$8D,$00,$4B,$B8,$A6,$A4,$C7,$14,$95,$A8,$52,$C2,$62
6473   BE67~            		.db $C5,$23,$27,$CA,$08,$6B,$E2,$90,$6E,$3B,$2B,$68,$59,$5D,$AD,$2B
6474   BE67~            		.db $AF,$B0,$65,$57,$D3,$6E,$BC,$A2,$96,$43,$4D,$A6,$CE,$4A,$6A,$29
6475   BE67~            		.db $35,$AE,$3A,$2B,$AB,$39,$5D,$A5,$AA,$AE,$A2,$46,$57,$D3,$A9,$32
6476   BE67~            		.db $EA,$1A,$8A,$55,$6A,$4C,$EB,$9A,$1D,$62,$F5,$C9,$A1,$2F,$D6,$48
6477   BE67~            		.db $A8,$AB,$BA,$A9,$1A,$15,$85,$AE,$E6,$A6,$6A,$44,$15,$BB,$A9,$9B
6478   BE67~            		.db $AB,$32,$36,$8C,$69,$66,$29,$46,$C5,$28,$E7,$EA,$E5,$01,$FF
6479   BE67~            spx_ten
6480   BE67~            
6481   BE67~            sps_xxx
6482   BE67~            
6483   BE67~            	.db $00,$82,$49,$D2,$53,$23,$E2,$0A,$80,$19,$F3,$00,$0C,$69,$99,$80
6484   BE67~            	.db $EE,$34,$1A,$C0,$9A,$78,$C9,$9C,$D4,$CC,$A6,$64,$4D,$54,$21,$53
6485   BE67~            	.db $4C,$92,$0E,$39,$B8,$4A,$09,$4A,$D3,$54,$17,$3D,$D5,$A8,$4D,$D3
6486   BE67~            	.db $BD,$CB,$D4,$80,$A4,$C5,$F4,$26,$D2,$13,$D2,$04,$5B,$F8,$2E,$4D
6487   BE67~            	.db $4C,$2A,$4E,$F8,$D2,$D9,$A9,$11,$EB,$E1,$9B,$80,$C0,$C6,$C4,$85
6488   BE67~            	.db $2F,$4B,$18,$D2,$22,$1F,$BC,$09,$30,$48,$4B,$2C,$30,$AB,$D5,$41
6489   BE67~            	.db $29,$73,$71,$B4,$19,$63,$D9,$CC,$C5,$C1,$7A,$5C,$E5,$30,$CF,$5A
6490   BE67~            	.db $CA,$09,$4D,$4C,$9C,$68,$D9,$5B,$35,$2E,$DA,$72,$50,$1B,$91,$68
6491   BE67~            	.db $00,$00,$00,$00,$00,$00,$80,$10,$F0,$26,$CD,$A8,$B2,$D0,$C0,$98
6492   BE67~            	.db $4A,$87,$66,$AA,$04,$73,$D3,$12,$EA,$28,$15,$CC,$C9,$08,$68,$6A
6493   BE67~            	.db $14,$70,$26,$DC,$B0,$A9,$91,$C0,$9E,$F0,$C0,$BA,$4D,$36,$D9,$DC
6494   BE67~            	.db $8D,$12,$17,$25,$64,$17,$0F,$4C,$55,$8A,$D0,$4D,$C2,$C9,$55,$52
6495   BE67~            	.db $43,$57,$09,$A7,$58,$49,$0B,$53,$34,$8C,$62,$A5,$DA,$4F,$B1,$50
6496   BE67~            	.db $AE,$94,$CC,$D0,$D8,$53,$A9,$76,$B2,$42,$12,$2F,$C7,$44,$C9,$F1
6497   BE67~            	.db $2E,$CC,$1A,$53,$07,$D7,$DA,$C8,$48,$6C,$E3,$06,$69,$73,$2C,$31
6498   BE67~            	.db $8B,$1A,$68,$EC,$55,$E5,$26,$C2,$23,$71,$56,$D4,$2B,$90,$1D,$BC
6499   BE67~            	.db $0C,$4E,$93,$89,$06,$F0,$3C,$C8,$C5,$26,$B2,$C1,$CD,$66,$15,$5B
6500   BE67~            	.db $C8,$05,$3D,$C7,$0C,$6D,$23,$17,$C4,$EA,$28,$8C,$85,$06,$AA,$A3
6501   BE67~            	.db $62,$38,$11,$69,$92,$51,$6D,$D3,$24,$E8,$28,$41,$6D,$92,$AD,$20
6502   BE67~            	.db $A0,$56,$25,$74,$26,$AF,$BE,$2A,$56,$01,$00,$00,$00,$00,$00,$C0
6503   BE67~            	.db $00,$D3,$B3,$36,$B9,$08,$DA,$49,$52,$5A,$64,$6D,$7A,$43,$28,$51
6504   BE67~            	.db $50,$78,$9F,$25,$A2,$26,$49,$E3,$75,$56,$11,$5D,$07,$83,$A7,$39
6505   BE67~            	.db $03,$4A,$62,$1C,$1A,$F6,$18,$39,$AE,$B8,$68,$9C,$63,$E0,$A6,$24
6506   BE67~            	.db $C0,$69,$96,$90,$DA,$A2,$0E,$BB,$3E,$41,$AE,$8D,$38,$B8,$66,$4D
6507   BE67~            	.db $45,$34,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$1A,$4B,$43
6508   BE67~            	.db $C0,$10,$E5,$08,$18,$2E,$83,$00,$23,$A4,$32,$60,$F8,$74,$06,$4C
6509   BE67~            	.db $EB,$CE,$80,$11,$52,$05,$D0,$94,$A9,$03,$79,$F2,$EE,$C0,$D8,$45
6510   BE67~            	.db $D6,$A5,$D2,$12,$1A,$17,$C5,$B7,$08,$0B,$6C,$54,$D4,$D0,$3C,$2D
6511   BE67~            	.db $21,$71,$D1,$42,$8D,$D0,$C4,$24,$C1,$D0,$35,$52,$1B,$92,$08,$87
6512   BE67~            	.db $0E,$4B,$0F,$76,$CC,$6C,$EA,$22,$25,$CD,$89,$71,$44,$8A,$F6,$22
6513   BE67~            	.db $D6,$C1,$D5,$BE,$46,$1B,$99,$18,$97,$C7,$E8,$30,$6C,$C2,$3C,$5C
6514   BE67~            	.db $63,$53,$C1,$35,$F2,$C0,$AB,$44,$C5,$C6,$C8,$03,$AB,$4B,$15,$9C
6515   BE67~            	.db $20,$17,$B4,$6E,$33,$B2,$8D,$6E,$6C,$AA,$BD,$D9,$16,$1A,$BD,$D2
6516   BE67~            	.db $C8,$92,$24,$A8,$CA,$5A,$2C,$4A,$1C,$A3,$27,$6B,$55,$2F,$49,$0C
6517   BE67~            	.db $00,$00,$00,$00,$00,$00,$80,$80,$26,$DD,$11,$D0,$B5,$0B,$03,$98
6518   BE67~            	.db $0F,$23,$40,$57,$1E,$04,$18,$21,$94,$00,$DD,$86,$32,$A0,$1B,$35
6519   BE67~            	.db $01,$54,$9B,$A9,$80,$66,$DD,$8D,$4B,$5A,$75,$05,$24,$49,$8A,$F6
6520   BE67~            	.db $B3,$31,$10,$27,$69,$DA,$D6,$64,$93,$D2,$64,$3A,$1D,$1B,$49,$76
6521   BE67~            	.db $9C,$EB,$74,$9C,$39,$DA,$41,$BA,$4C,$3D,$6A,$6C,$0B,$00,$14,$D0
6522   BE67~            	.db $AA,$B8,$02,$6A,$C6,$10,$C0,$88,$5B,$08,$E8,$22,$04,$01,$53,$84
6523   BE67~            	.db $21,$60,$28,$57,$04,$74,$5B,$86,$00,$C6,$43,$C9,$13,$85,$79,$85
6524   BE67~            	.db $25,$23,$84,$27,$95,$55,$15,$99,$00,$87,$85,$23,$A0,$04,$53,$00
6525   BE67~            	.db $04,$CC,$65,$09,$00,$00,$00,$00,$00,$80,$80,$E6,$23,$10,$30,$75
6526   BE67~            	.db $26,$02,$86,$B2,$40,$C0,$D4,$6E,$86,$11,$AD,$4C,$42,$93,$14,$39
6527   BE67~            	.db $2C,$76,$2F,$74,$5D,$94,$B8,$D8,$BD,$30,$71,$29,$E3,$12,$B3,$C6
6528   BE67~            	.db $C4,$E5,$89,$4B,$DD,$0A,$13,$97,$35,$0E,$75,$2B,$48,$5C,$F4,$D8
6529   BE67~            	.db $35,$AC,$30,$71,$32,$63,$D1,$B4,$84,$C4,$C9,$8A,$49,$D3,$13,$52
6530   BE67~            	.db $07,$C7,$C5,$28,$0E,$76,$1C,$2E,$1B,$A3,$C5,$38,$89,$71,$8D,$8D
6531   BE67~            	.db $91,$C0,$24,$C6,$35,$C6,$C7,$92,$1C,$AB,$41,$59,$1B,$2F,$52,$C5
6532   BE67~            	.db $06,$1A,$63,$CC,$15,$29,$32,$B4,$51,$AF,$74,$25,$04,$A8,$C9,$94
6533   BE67~            	.db $01,$3D,$B8,$33,$80,$85,$72,$01,$B4,$58,$C1,$CE,$2C,$DD,$BD,$3C
6534   BE67~            	.db $09,$6A,$53,$72,$B7,$62,$35,$00,$00,$00,$00,$00,$80,$80,$66,$C2
6535   BE67~            	.db $10,$C0,$4C,$18,$02,$86,$09,$43,$40,$93,$6A,$04,$18,$3A,$DC,$48
6536   BE67~            	.db $41,$9B,$7B,$78,$12,$27,$E9,$87,$55,$2B,$AC,$9D,$A2,$1F,$46,$9D
6537   BE67~            	.db $70,$32,$AA,$7E,$98,$75,$C6,$5A,$69,$FA,$41,$EE,$38,$6B,$A5,$CB
6538   BE67~            	.db $87,$91,$AB,$98,$8D,$A1,$1F,$66,$2E,$B3,$31,$96,$3D,$D8,$39,$8C
6539   BE67~            	.db $DA,$D9,$BE,$E3,$64,$0A,$1B,$E3,$98,$46,$E3,$6E,$4C,$4C,$2F,$BB
6540   BE67~            	.db $0C,$9B,$2B,$35,$AE,$4D,$BC,$DC,$AC,$56,$B9,$36,$CA,$52,$29,$53
6541   BE67~            	.db $E6,$7A,$4F,$2B,$E1,$48,$49,$67,$1D,$AE,$95,$33,$45,$5B,$49,$98
6542   BE67~            	.db $AE,$29,$05,$01,$D5,$63,$03,$00,$00,$00,$00,$00,$00,$00,$00,$10
6543   BE67~            	.db $A0,$6A,$37,$47,$65,$ED,$E1,$E1,$89,$11,$D0,$B9,$3B,$01,$9A,$CE
6544   BE67~            	.db $70,$49,$D2,$1E,$5E,$E2,$C4,$28,$B8,$66,$6B,$B0,$5C,$A7,$F2,$A2
6545   BE67~            	.db $E3,$A9,$74,$4C,$49,$97,$8E,$A6,$4A,$0E,$0A,$9F,$B6,$66,$C2,$38
6546   BE67~            	.db $A8,$A2,$C6,$5A,$10,$ED,$A0,$89,$38,$1B,$8A,$B2,$83,$26,$6D,$5D
6547   BE67~            	.db $2A,$CA,$76,$BA,$34,$75,$21,$60,$DB,$98,$DC,$F5,$B9,$80,$2D,$65
6548   BE67~            	.db $D3,$78,$6B,$88,$8E,$D4,$C9,$CD,$5C,$12,$24,$62,$2E,$B7,$73,$09
6549   BE67~            	.db $98,$8A,$8D,$42,$D6,$25,$42,$12,$E2,$52,$BD,$EB,$88,$76,$90,$2D
6550   BE67~            	.db $58,$5D,$31,$46,$42,$63,$41,$9C,$ED,$9A,$18,$01,$95,$4A,$21,$80
6551   BE67~            	.db $09,$2A,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$2C,$1B,$A6,$80
6552   BE67~            	.db $69,$53,$1D,$30,$94,$5B,$00,$A6,$56,$0B,$C0,$F0,$AA,$41,$E0,$3A
6553   BE67~            	.db $B7,$92,$91,$A5,$8C,$C7,$5E,$36,$50,$17,$64,$5E,$67,$54,$88,$6D
6554   BE67~            	.db $50,$79,$AD,$F5,$04,$C4,$AE,$E2,$B5,$D6,$93,$90,$38,$9D,$F7,$9C
6555   BE67~            	.db $08,$81,$6D,$4C,$BA,$7D,$32,$15,$89,$B2,$C9,$F3,$F4,$74,$D8,$CC
6556   BE67~            	.db $21,$DF,$C2,$D3,$E1,$21,$97,$3C,$8E,$76,$85,$8B,$5C,$F4,$D9,$D2
6557   BE67~            	.db $8C,$0E,$72,$C0,$53,$2B,$0B,$C9,$68,$0B,$43,$C4,$2C,$9C,$A2,$34
6558   BE67~            	.db $16,$37,$73,$77,$8C,$56,$99,$CD,$DC,$DB,$29,$00,$00,$00,$00,$00
6559   BE67~            	.db $00,$00,$00,$00,$00,$00,$00,$20,$03,$7C,$E6,$0C,$B7,$4B,$2C,$F8
6560   BE67~            	.db $99,$C3,$DC,$0E,$33,$E8,$17,$EC,$D0,$B0,$4E,$D3,$8F,$71,$9A,$6D
6561   BE67~            	.db $27,$2D,$1C,$C1,$19,$56,$5C,$B4,$B8,$99,$7B,$90,$71,$A9,$E3,$14
6562   BE67~            	.db $9D,$20,$47,$C5,$8C,$5D,$A5,$92,$6C,$16,$2B,$26,$B5,$2A,$74,$54
6563   BE67~            	.db $9C,$E8,$25,$AB,$D0,$B1,$39,$85,$8F,$8C,$81,$DA,$C2,$C5,$C3,$C7
6564   BE67~            	.db $4C,$23,$31,$17,$CD,$2C,$77,$AC,$44,$5C,$B8,$2A,$CD,$29,$32,$71
6565   BE67~            	.db $C1,$8C,$76,$C5,$58,$E8,$06,$A3,$DA,$15,$E4,$20,$07,$B4,$EC,$74
6566   BE67~            	.db $92,$83,$7A,$6C,$A3,$6A,$D8,$0A,$7A,$A2,$34,$8B,$D1,$58,$68,$CB
6567   BE67~            	.db $D2,$4C,$47,$12,$A3,$2D,$7B,$D6,$09,$B3,$8C,$B6,$EC,$4D,$3B,$C4
6568   BE67~            	.db $0E,$00,$00,$00,$00,$00,$00,$00,$51,$40,$DA,$0E,$37,$3A,$C4,$02
6569   BE67~            	.db $B5,$B3,$0C,$99,$B1,$16,$A4,$69,$37,$52,$C2,$0E,$50,$AB,$DC,$58
6570   BE67~            	.db $89,$B0,$41,$EC,$0E,$23,$25,$A2,$05,$B1,$3B,$9C,$D8,$BA,$46,$8A
6571   BE67~            	.db $E8,$69,$81,$16,$34,$EE,$7A,$23,$40,$71,$D2,$A4,$AF,$2D,$67,$26
6572   BE67~            	.db $49,$D7,$DE,$37,$42,$D8,$04,$C3,$64,$5D,$73,$65,$E2,$2C,$D5,$75
6573   BE67~            	.db $39,$99,$89,$3A,$E4,$E6,$E5,$62,$A6,$C2,$91,$87,$57,$4C,$98,$1A
6574   BE67~            	.db $57,$1E,$1E,$33,$63,$EC,$5C,$DB,$B8,$2D,$45,$B1,$19,$4C,$97,$B2
6575   BE67~            	.db $10,$C7,$66,$D0,$D5,$52,$D2,$99,$A8,$41,$35,$89,$08,$A7,$2B,$3C
6576   BE67~            	.db $D9,$35,$34,$1D,$8D,$18,$C5,$10,$2B,$0F,$B8,$64,$E4,$93,$3D,$B3
6577   BE67~            	.db $A0,$22,$17,$1E,$92,$B5,$90,$82,$5C,$30,$C5,$3B,$32,$36,$3A,$6D
6578   BE67~            	.db $74,$13,$2D,$5B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF
6579   BE67~            
6580   BE67~            spx_xxx
6581   BE67~            
6582   BE67~            sps_maxintruder
6583   BE67~            	.db $FF,$FF
6584   BE67~            spx_maxintruder
6585   BE67~            
6586   BE67~            sps_maxdestint
6587   BE67~            	.db $FF,$FF
6588   BE67~            spx_maxdestint
6589   BE67~            
6590   BE67~            sps_maxdestroy
6591   BE67~            	.db $FF,$FF
6592   BE67~            spx_maxdestroy
6593   BE67~            
6594   BE67~            sps_maxhaha1
6595   BE67~            	.db $FF,$FF
6596   BE67~            spx_maxhaha1
6597   BE67~            
6598   BE67~            sps_maxhaha2
6599   BE67~            	.db $FF,$FF
6600   BE67~            spx_maxhaha2
6601   BE67~            
6602   BE67~            sps_maxhaha3
6603   BE67~            	.db $FF,$FF
6604   BE67~            spx_maxhaha3
6605   BE67~            
6606   BE67~            sps_maxwewin
6607   BE67~            	.db $FF,$FF
6608   BE67~            spx_maxwewin
6609   BE67~            
6610   BE67~            sps_maxyoulose
6611   BE67~            	.db $FF,$FF
6612   BE67~            spx_maxyoulose
6613   BE67~            
6614   BE67~            sps_maxattack
6615   BE67~            	.db $FF,$FF
6616   BE67~            spx_maxattack
6617   BE67~            
6618   BE67~            sps_maxcannot
6619   BE67~            	;youcannot_F100
6620   BE67~            	.db $00,$C0,$E6,$80,$35,$EB,$5A,$B0,$9B,$33,$94,$AC,$AB,$40,$61
6621   BE67~            	.db $4E,$5C,$AC,$3F,$03,$85,$D9,$29,$A9,$3B,$0F,$14,$66,$61,$B3,$B7
6622   BE67~            	.db $A8,$A4,$99,$49,$D9,$0C,$A3,$51,$6C,$C6,$ED,$4C,$43,$06,$A2,$19
6623   BE67~            	.db $F8,$8C,$F0,$68,$8C,$66,$CA,$DD,$CB,$55,$D2,$00,$66,$75,$2B,$40
6624   BE67~            	.db $D7,$6A,$03,$E8,$91,$65,$CD,$59,$6B,$4F,$B0,$D5,$31,$87,$10,$9B
6625   BE67~            	.db $29,$52,$C7,$1C,$5D,$4C,$B9,$09,$6D,$73,$F0,$D9,$99,$4E,$B4,$CC
6626   BE67~            	.db $49,$58,$FB,$A8,$50,$37,$53,$9F,$13,$61,$4A,$CC,$4C,$63,$AE,$87
6627   BE67~            	.db $3A,$0E,$B3,$D6,$31,$D6,$2A,$BB,$CC,$21,$7A,$C5,$98,$E0,$36,$87
6628   BE67~            	.db $50,$6E,$A5,$66,$CA,$1C,$E2,$A4,$A4,$99,$49,$73,$A8,$65,$DA,$62
6629   BE67~            	.db $3A,$CD,$21,$4F,$70,$59,$E0,$30,$FB,$D9,$A6,$E7,$81,$D5,$EC,$5E
6630   BE67~            	.db $88,$9E,$85,$46,$B3,$5D,$A5,$5C,$2A,$0A,$CD,$36,$8D,$B2,$A8,$4C
6631   BE67~            	.db $34,$FB,$38,$AA,$2A,$12,$D9,$4C,$9F,$07,$C4,$44,$52,$B3,$78,$6A
6632   BE67~            	.db $9C,$1B,$CA,$CD,$6A,$97,$58,$79,$C1,$32,$3B,$37,$91,$CD,$A6,$CA
6633   BE67~            	.db $1C,$74,$75,$0F,$89,$4D,$B3,$73,$35,$5D,$4C,$AE,$CC,$5E,$D7,$74
6634   BE67~            	.db $29,$B1,$34,$7B,$D7,$DD,$A9,$E4,$D2,$6C,$73,$57,$87,$42,$0B,$B3
6635   BE67~            	.db $73,$BD,$A5,$4A,$4D,$CC,$34,$F4,$58,$8A,$1C,$36,$93,$54,$CB,$62
6636   BE67~            	.db $A9,$C8,$4C,$42,$2D,$73,$28,$26,$33,$CA,$B9,$C2,$EE,$88,$CC,$24
6637   BE67~            	.db $67,$9B,$B8,$62,$35,$3B,$3B,$13,$6A,$42,$D4,$9C,$84,$B7,$B9,$0B
6638   BE67~            	.db $53,$73,$74,$5D,$96,$6A,$9D,$CC,$51,$75,$5B,$69,$3C,$34,$7B,$DB
6639   BE67~            	.db $E1,$A1,$4E,$FF,$FF
6640   BE67~            spx_maxcannot
6641   BE67~            
6642   BE67~            sps_maxwillnot
6643   BE67~            	;youwillnot_F100
6644   BE67~            	.db $00,$08,$A8,$84,$54,$CC,$09,$EA,$D4,$A8,$30,$33,$07,$EC,$93
6645   BE67~            	.db $6B,$44,$DC,$EC,$49,$74,$9D,$13,$0E,$73,$E4,$5C,$BD,$15,$28,$CD
6646   BE67~            	.db $51,$63,$EF,$44,$21,$37,$73,$17,$BD,$09,$B1,$C4,$8C,$4F,$BA,$A9
6647   BE67~            	.db $0F,$22,$33,$FA,$22,$16,$55,$91,$CC,$E8,$1B,$8B,$47,$63,$32,$D3
6648   BE67~            	.db $CF,$A2,$31,$95,$C5,$4C,$1F,$73,$54,$97,$08,$33,$EF,$69,$5E,$31
6649   BE67~            	.db $A1,$CC,$3A,$46,$4D,$46,$84,$32,$AB,$EC,$D3,$95,$06,$CB,$AC,$6A
6650   BE67~            	.db $74,$75,$06,$6C,$B3,$09,$55,$11,$51,$A1,$CC,$BA,$75,$72,$56,$C9
6651   BE67~            	.db $34,$EB,$3A,$05,$39,$15,$C2,$6C,$FD,$2C,$78,$CF,$08,$B3,$2E,$33
6652   BE67~            	.db $68,$B3,$C0,$CC,$A2,$4F,$E0,$54,$68,$33,$F3,$B4,$CD,$9E,$51,$DD
6653   BE67~            	.db $CC,$7D,$8F,$7A,$44,$2D,$B3,$5D,$A5,$B9,$66,$BA,$CC,$7E,$56,$CA
6654   BE67~            	.db $A4,$E1,$32,$87,$3A,$C1,$5D,$81,$CA,$1C,$CA,$24,$77,$05,$4E,$73
6655   BE67~            	.db $68,$E5,$D2,$69,$B8,$CD,$A1,$4C,$68,$65,$C8,$30,$87,$16,$69,$33
6656   BE67~            	.db $83,$C8,$EC,$87,$59,$8F,$91,$46,$B3,$2E,$AD,$C4,$2A,$02,$CD,$22
6657   BE67~            	.db $A5,$88,$8A,$08,$34,$D3,$52,$C6,$E1,$B2,$D0,$8C,$6F,$AA,$98,$4B
6658   BE67~            	.db $22,$33,$FD,$AA,$6C,$53,$59,$CC,$F2,$09,$C7,$79,$40,$37,$AB,$23
6659   BE67~            	.db $E1,$95,$86,$D3,$EC,$5C,$65,$25,$07,$49,$73,$30,$36,$55,$2A,$34
6660   BE67~            	.db $CD,$C1,$78,$4F,$2B,$D1,$30,$7B,$5D,$D5,$2D,$44,$D3,$1C,$74,$4D
6661   BE67~            	.db $A7,$0A,$4D,$73,$50,$35,$5D,$2E,$38,$CC,$5E,$D7,$54,$88,$50,$33
6662   BE67~            	.db $7B,$E5,$E3,$1D,$44,$C8,$8C,$72,$8F,$A8,$3B,$21,$33,$EC,$D5,$A6
6663   BE67~            	.db $2A,$97,$CC,$A8,$F4,$AA,$1A,$5D,$32,$93,$54,$A7,$62,$AA,$D1,$4C
6664   BE67~            	.db $6A,$AF,$B2,$4B,$13,$B3,$B5,$5B,$39,$69,$48,$CD,$41,$C7,$58,$85
6665   BE67~            	.db $10,$31,$47,$ED,$29,$ED,$82,$D9,$1C,$4C,$26,$97,$8A,$46,$B3,$F7
6666   BE67~            	.db $D6,$E5,$E2,$10,$CD,$51,$45,$84,$5B,$FF,$FF
6667   BE67~            spx_maxwillnot
6668   BE67~            
6669   BE67~            sps_maxbeback
6670   BE67~            	.db $FF,$FF
6671   BE67~            spx_maxbeback
6672   BE67~            
6673   BE67~            sps_maxahhhh
6674   BE67~            	.db $FF,$FF
6675   BE67~            spx_maxahhhh
6676   BE67~            
6677   BE67~            sps_maxohhhh
6678   BE67~            	.db $FF,$FF
6679   BE67~            spx_maxohhhh
6680   BE67~            
6681   BE67~            sps_maxeeeeww
6682   BE67~            	.db $FF,$FF
6683   BE67~            spx_maxeeeeww
6684   BE67~            
6685   BE67~            
6686   BE67~            sps_maxactivate
6687   BE67~            	;jessactivated_S1.90.bin
6688   BE67~            	.db $00,$00,$05,$A8,$81,$BD,$BC,$39,$68,$A7,$A7,$91,$76,$A5,$68
6689   BE67~            	.db $BD,$16,$41,$D2,$5D,$BC,$5A,$E9,$84,$46,$5F,$0A,$EA,$13,$61,$08
6690   BE67~            	.db $FD,$BE,$54,$AC,$B0,$21,$F4,$47,$6B,$E1,$22,$94,$00,$02,$D0,$A4
6691   BE67~            	.db $70,$FA,$A3,$F2,$EC,$8E,$50,$EA,$D7,$C1,$A7,$2C,$02,$B1,$9F,$E7
6692   BE67~            	.db $AC,$52,$0B,$45,$7E,$19,$62,$4A,$3C,$92,$F8,$4D,$B0,$AA,$A8,$40
6693   BE67~            	.db $EE,$77,$C1,$B7,$2B,$85,$86,$DF,$3B,$DB,$9A,$24,$EB,$FE,$60,$74
6694   BE67~            	.db $73,$83,$8C,$F9,$9D,$C9,$9E,$0E,$A2,$E8,$37,$AA,$72,$D2,$0D,$43
6695   BE67~            	.db $02,$86,$10,$11,$BF,$4C,$55,$3B,$41,$8C,$FD,$DA,$56,$6F,$06,$50
6696   BE67~            	.db $FF,$FF
6697   BE67~            	
6698   BE67~            	;jessactivated_S1.50.bin
6699   BE67~            	; .db $00,$00,$05,$A8,$81,$A3,$6D,$39,$68,$67,$A4,$D1,$B6,$A4,$68
6700   BE67~            	; .db $BD,$16,$41,$CB,$5D,$BC,$5A,$E9,$44,$26,$71,$8A,$EA,$93,$59,$1A
6701   BE67~            	; .db $FD,$A1,$54,$5E,$58,$64,$F4,$27,$17,$5D,$19,$76,$D0,$12,$63,$44
6702   BE67~            	; .db $A5,$DB,$81,$00,$4C,$EF,$5C,$8E,$A8,$3C,$BB,$23,$94,$B9,$75,$F0
6703   BE67~            	; .db $69,$8F,$40,$E2,$E3,$A5,$AA,$CD,$42,$91,$5F,$86,$98,$54,$8F,$25
6704   BE67~            	; .db $7E,$13,$AC,$2B,$AA,$50,$F8,$6C,$F0,$ED,$4A,$A1,$E1,$F3,$CE,$B7
6705   BE67~            	; .db $26,$C5,$86,$3F,$18,$DD,$DA,$A0,$EA,$7E,$67,$6B,$A6,$53,$28,$FA
6706   BE67~            	; .db $8C,$AA,$9C,$0A,$23,$90,$80,$21,$44,$D4,$2F,$73,$D5,$4E,$10,$13
6707   BE67~            	; .db $BF,$76,$D5,$5B,$49,$14,$FF,$FF
6708   BE67~            spx_maxactivate
6709   BE67~            
6710   BE67~            sps_maxhaha
6711   BE67~            	;jessha_S1.90.bin
6712   BE67~            	.db $00,$00,$CA,$28,$AE,$AB,$23,$A2,$94,$31,$9B,$4A,$57,$2B,$D3
6713   BE67~            	.db $8E,$E8,$BB,$DC,$7D,$74,$3B,$63,$AE,$F2,$C8,$D1,$E5,$08,$DB,$D2
6714   BE67~            	.db $BA,$8C,$A6,$2B,$F4,$4A,$F1,$28,$9A,$BE,$E4,$7C,$55,$3C,$8A,$01
6715   BE67~            	.db $9A,$B0,$24,$42,$B6,$35,$6E,$19,$15,$00,$10,$D0,$8C,$B7,$B1,$43
6716   BE67~            	.db $8B,$E0,$88,$D0,$E9,$0F,$B5,$DA,$BC,$4A,$95,$2F,$CC,$28,$AD,$09
6717   BE67~            	.db $9D,$7E,$BF,$B3,$39,$CB,$A8,$FB,$43,$AD,$10,$F3,$20,$EE,$2F,$3A
6718   BE67~            	.db $CA,$85,$4A,$B3,$BF,$E8,$EC,$54,$2B,$0D,$00,$E8,$2F,$2E,$CA,$CC
6719   BE67~            	.db $8D,$28,$C7,$97,$70,$8D,$30,$1B,$BE,$50,$BA,$CD,$BD,$54,$FA,$43
6720   BE67~            	.db $EE,$32,$8F,$49,$E9,$0F,$B5,$46,$BD,$4B,$B9,$DF,$9F,$4C,$A9,$34
6721   BE67~            	.db $6A,$FE,$D0,$32,$28,$5C,$2C,$FB,$93,$AF,$14,$11,$A1,$68,$4C,$A1
6722   BE67~            	.db $5C,$3C,$03,$03,$00,$10,$A0,$DA,$68,$F3,$87,$6D,$EE,$AD,$62,$C3
6723   BE67~            	.db $1F,$76,$84,$75,$1A,$0D,$7F,$D8,$99,$5A,$65,$D8,$FC,$A1,$74,$8B
6724   BE67~            	.db $78,$10,$F5,$C7,$54,$C1,$E6,$41,$D0,$12,$5D,$B7,$89,$05,$05,$00
6725   BE67~            	.db $00,$56,$17,$57,$6D,$EE,$E1,$CC,$1F,$52,$15,$7B,$04,$71,$BF,$BF
6726   BE67~            	.db $E6,$51,$2E,$D4,$FD,$FE,$7A,$58,$A7,$30,$F5,$FB,$5D,$21,$E1,$C1
6727   BE67~            	.db $D4,$1F,$5A,$BB,$A4,$1B,$16,$7F,$88,$15,$60,$1A,$56,$FC,$C9,$78
6728   BE67~            	.db $32,$7B,$61,$F1,$67,$1B,$C5,$A2,$66,$10,$50,$B9,$17,$FF,$FF
6729   BE67~            spx_maxhaha
6730   BE67~            
6731   BE67~            sps_maxuggh
6732   BE67~            	;jess2_uggh_S0.90.bin
6733   BE67~                .db $00,$AA,$90,$C3,$52,$2A,$2E,$B8,$5D,$57,$2B,$CE,$B8,$E8
6734   BE67~            	.db $76,$59,$7D,$38,$FC,$82,$DB,$F9,$B2,$C2,$C8,$82,$EE,$E0,$4F,$C3
6735   BE67~            	.db $26,$02,$86,$9D,$6F,$2F,$4A,$2F,$69,$76,$79,$24,$75,$B3,$A0,$DB
6736   BE67~            	.db $C5,$D6,$A2,$8D,$01,$6E,$97,$5B,$52,$26,$07,$86,$43,$4D,$2B,$AE
6737   BE67~            	.db $1C,$18,$4E,$BB,$C4,$64,$72,$A4,$39,$C5,$D3,$E4,$C9,$82,$E2,$F0
6738   BE67~            	.db $CD,$1B,$D5,$47,$13,$4D,$0C,$30,$EB,$08,$8D,$68,$30,$48,$BB,$DD
6739   BE67~            	.db $22,$FF             
6740   BE67~            spx_maxuggh
6741   BE67~            
6742   BE67~            ; ;sps_indy_6C
6743   BE67~            ; sps_maxback
6744   BE67~            		; .db $AD,$4F,$A6,$C6,$5D,$DA,$8C,$AE,$18,$9F,$74,$69,$3B,$DA,$62,$7D
6745   BE67~            		; .db $C2,$A4,$ED,$68,$AA,$D3,$31,$97,$B6,$A3,$6E,$4E,$C6,$42,$D6,$8D
6746   BE67~            		; .db $AA,$39,$69,$73,$6D,$DB,$EA,$E6,$79,$D4,$69,$6B,$6B,$9B,$A7,$B6
6747   BE67~            		; .db $C4,$6E,$AD,$EB,$11,$CB,$1A,$DA,$B5,$6E,$24,$2A,$6B,$70,$D7,$FA
6748   BE67~            		; .db $E6,$B1,$2C,$C9,$5B,$EB,$9B,$C5,$0A,$67,$EF,$A5,$AF,$06,$33,$92
6749   BE67~            		; .db $DD,$A7,$BE,$48,$CA,$4C,$4A,$9F,$86,$AA,$C8,$B3,$28,$7D,$18,$AB
6750   BE67~            		; .db $92,$34,$07,$E7,$6E,$AA,$9A,$C2,$02,$9C,$8B,$29,$71,$09,$13,$75
6751   BE67~            		; .db $2B,$66,$CF,$35,$53,$2D,$0D,$5A,$3C,$B5,$88,$08,$27,$6D,$E8,$DE
6752   BE67~            		; .db $1C,$82,$BA,$8D,$A1,$27,$37,$0C,$6C,$D7,$86,$1E,$CD,$30,$70,$19
6753   BE67~            		; .db $9A,$8A,$33,$C3,$C0,$B6,$78,$2A,$43,$B6,$62,$D2,$D4,$B6,$0D,$D9
6754   BE67~            		; .db $58,$70,$C9,$DA,$D6,$17,$13,$C9,$A9,$EB,$DA,$54,$AD,$97,$25,$B7
6755   BE67~            		; .db $6B,$53,$71,$D6,$96,$D2,$AE,$8D,$C5,$E9,$68,$69,$BB,$36,$15,$AF
6756   BE67~            		; .db $A3,$A9,$6D,$DB,$92,$A2,$0D,$87,$B7,$2D,$5B,$CC,$D6,$12,$D9,$06
6757   BE67~            		; .db $00,$01,$31,$04,$21,$20,$B9,$E4,$07,$FF
6758   BE67~            ; spx_maxback
6759   BE67~            
6760   BE67~            sps_ugh1ow
6761   BE67~            ;ug1_S35
6762   BE67~            	.db $00,$00,$00
6763   BE67~            	.db $8E,$E3,$3D,$4A,$23,$07,$25,$96,$97,$2A,$33,$1B
6764   BE67~            	.db $98,$22,$99,$A2,$D4,$F2,$44,$62,$45,$CE,$52,$F7,$83,$89,$E5,$23
6765   BE67~            	.db $4C,$2B,$07,$26,$8E,$4F,$0F,$A9,$1E,$98,$38,$D9,$22,$39,$FB,$60
6766   BE67~            	.db $10,$45,$ED,$E4,$F4,$43,$4E,$16,$B3,$8C,$37,$06,$19,$8D,$DF,$70
6767   BE67~            	.db $E9,$1C,$A0,$4C,$FE,$C5,$B2,$CB,$20,$73,$F8,$0F,$A7,$CC,$C0,$C4
6768   BE67~            	.db $E5,$C7,$D4,$C6,$0D,$32,$93,$8F,$32,$2A,$2F,$44,$18,$E9,$AA,$D8
6769   BE67~            	.db $F4,$24,$32,$7C,$4D,$C1,$CC,$41,$28,$E0,$5D,$45,$2B,$4C,$21,$8E
6770   BE67~            	.db $FB,$10,$34,$AD,$8C,$9C,$30,$8D,$38,$34,$31,$00,$FF,$FF
6771   BE67~            spx_ughlow
6772   BE67~            
6773   BE67~            sps_ughmid
6774   BE67~            ;ug1_S30
6775   BE67~            	.db $00,$00,$00
6776   BE67~            	.db $8E,$E2,$3D,$4A,$23,$07,$25,$92,$97,$2A,$33,$1B
6777   BE67~            	.db $98,$3C,$99,$A2,$D4,$F2,$44,$22,$45,$CE,$52,$F7,$83,$89,$E4,$23
6778   BE67~            	.db $4C,$2B,$07,$26,$8A,$4F,$0F,$A9,$1E,$98,$28,$D9,$22,$39,$FB,$60
6779   BE67~            	.db $60,$44,$ED,$E4,$F4,$43,$8E,$17,$B3,$8C,$37,$06,$19,$81,$DF,$70
6780   BE67~            	.db $E9,$1C,$A0,$64,$FE,$C5,$B2,$CB,$20,$D3,$F8,$0F,$A7,$CC,$C0,$C4
6781   BE67~            	.db $E4,$C7,$D4,$C6,$0D,$32,$99,$8F,$32,$2A,$2F,$44,$08,$E9,$AA,$D8
6782   BE67~            	.db $F4,$24,$92,$7C,$4D,$C1,$CC,$41,$C8,$E1,$5D,$45,$2B,$4C,$21,$8A
6783   BE67~            	.db $FB,$10,$34,$AD,$8C,$B4,$30,$8D,$38,$34,$31,$00,$FF,$FF
6784   BE67~            spx_ughmid
6785   BE67~            
6786   BE67~            sps_ughhig
6787   BE67~            ;ug1_S25
6788   BE67~            	.db $00,$00,$00,
6789   BE67~            	.db $0E,$E3,$3D,$4A,$23,$07,$25,$94,$97,$2A,$33,$1B
6790   BE67~            	.db $98,$0C,$99,$A2,$D4,$F2,$44,$42,$45,$CE,$52,$F7,$83,$09,$E5,$23
6791   BE67~            	.db $4C,$2B,$07,$26,$8C,$4F,$0F,$A9,$1E,$98,$30,$D9,$22,$39,$FB,$60
6792   BE67~            	.db $20,$44,$ED,$E4,$F4,$43,$8E,$12,$B3,$8C,$37,$06,$19,$9A,$DF,$70
6793   BE67~            	.db $E9,$1C,$A0,$38,$FE,$C5,$B2,$CB,$20,$13,$F8,$0F,$A7,$CC,$C0,$44
6794   BE67~            	.db $E2,$C7,$D4,$C6,$0D,$32,$8E,$8F,$32,$2A,$2F,$44,$10,$E9,$AA,$D8
6795   BE67~            	.db $F4,$24,$62,$7D,$4D,$C1,$CC,$41,$48,$E3,$5D,$45,$2B,$4C,$21,$8C
6796   BE67~            	.db $FB,$10,$34,$AD,$8C,$84,$30,$8D,$38,$34,$31,$00,$FF,$FF
6797   BE67~            spx_ughhig
6798   BE67~            
6799   BE67~            sps_suffocate
6800   BE67~            	;ug4_S0.40.wav
6801   BE67~            	.db $C4,$A5,$3E,$37,$30,$9D,$08,$82,$A6,$AA,$34
6802   BE67~            	.db $2B,$E9,$3C,$9E,$32,$A2,$AA,$44,$20,$79,$9C,$F4,$8A,$06,$C5,$A7
6803   BE67~            	.db $79,$2A,$22,$6A,$16,$9F,$E6,$EE,$F4,$98,$D9,$7C,$EE,$6B,$D2,$7D
6804   BE67~            	.db $41,$0B,$78,$EA,$B2,$8A,$09,$23,$D4,$BA,$CB,$D2,$17,$0E,$46,$9B
6805   BE67~            	.db $4E,$A9,$A8,$D9,$78,$9E,$B6,$24,$2D,$62,$13,$79,$9B,$B6,$D0,$92
6806   BE67~            	.db $2D,$E7,$65,$CB,$D2,$2B,$16,$4D,$A4,$4A,$0F,$1F,$98,$0C,$DE,$2B
6807   BE67~            	.db $AC,$3C,$50,$31,$F9,$6C,$B7,$B6,$00,$C9,$E2,$AB,$D2,$D2,$0B,$16
6808   BE67~            	.db $9B,$8F,$49,$4B,$2B,$11,$1C,$3A,$AB,$34,$A2,$50,$72,$79,$E9,$B4
6809   BE67~            	.db $F4,$82,$C1,$E5,$AD,$5A,$35,$03,$06,$8F,$8F,$4C,$8D,$0C,$1C,$7C
6810   BE67~            	.db $DE,$BA,$55,$A3,$A0,$F3,$E9,$C8,$D0,$28,$43,$2E,$A0,$A3,$5D,$3D
6811   BE67~            	.db $0D,$B9,$80,$F6,$4A,$F1,$32,$60,$22,$DA,$BA,$C4,$D2,$80,$89,$68
6812   BE67~            	.db $99,$16,$F6,$10,$2A,$A2,$A5,$97,$C8,$42,$AA,$88,$D4,$2E,$52,$0F
6813   BE67~            	.db $A9,$22,$DA,$CA,$35,$53,$A0,$88,$C9,$A8,$46,$09,$83,$22,$C6,$3D
6814   BE67~            	.db $83,$23,$05,$8A,$98,$E4,$2A,$D6,$30,$C0,$12,$14,$AB,$C8,$C2,$00
6815   BE67~            	.db $49,$70,$0C,$E3,$8D,$00,$28,$01,$A3,$1C,$C3,$0D,$A1,$84,$EA,$74
6816   BE67~            	.db $98,$A8,$88,$62,$E0,$CC,$31,$A7,$24,$8A,$A1,$8A,$66,$8B,$01,$28
6817   BE67~            	.db $42,$36,$9C,$BC,$22,$A2,$08,$C4,$2A,$B2,$34,$88,$62,$60,$33,$29
6818   BE67~            	.db $AA,$14,$A0,$94,$CB,$18,$65,$A9,$08,$FF,$FF
6819   BE67~            spx_suffocate
6820   BE67~            
6821   BE67~            
6822   BE67~            
6823   BE67~            ;The Force will be with you!
6824   BE67~            sps_sw1	
6825   BE67~            	.db $04,$30,$3A,$BC,$2D,$D1,$17,$AB,$6E,$91,$B2,$07,$95,$A2,$1E
6826   BE67~            	.db $49,$14,$60,$94,$AB,$02,$B2,$37,$33,$40,$4A,$65,$06,$60,$5B,$7C
6827   BE67~            	.db $F5,$7E,$99,$68,$76,$E5,$35,$F8,$1E,$4E,$52,$93,$D7,$E0,$5B,$3A
6828   BE67~            	.db $4B,$4C,$59,$A3,$AF,$E9,$AC,$31,$65,$CD,$61,$44,$90,$D6,$94,$B5
6829   BE67~            	.db $C5,$E0,$4D,$5C,$95,$C7,$50,$C5,$BA,$A8,$C5,$4E,$C0,$02,$96,$09
6830   BE67~            	.db $98,$24,$2B,$00,$55,$54,$29,$20,$8B,$52,$01,$24,$5E,$5A,$1A,$E7
6831   BE67~            	.db $5B,$C5,$AA,$76,$9B,$43,$F4,$60,$AE,$C6,$6D,$09,$C9,$13,$B9,$1B
6832   BE67~            	.db $97,$D5,$67,$37,$96,$AA,$5D,$56,$CD,$2B,$D2,$2C,$71,$D8,$3D,$8B
6833   BE67~            	.db $CC,$F0,$24,$6D,$0A,$5E,$DC,$2A,$6B,$8F,$35,$38,$4E,$AF,$AC,$D5
6834   BE67~            	.db $56,$1F,$39,$BC,$AA,$56,$59,$7D,$B0,$50,$8D,$46,$69,$37,$2E,$CC
6835   BE67~            	.db $C5,$1A,$97,$D5,$67,$33,$95,$6C,$DC,$16,$9F,$25,$34,$AB,$F6,$58
6836   BE67~            	.db $63,$A2,$B0,$9A,$C8,$63,$0B,$91,$AD,$62,$AC,$94,$C3,$EB,$D0,$88
6837   BE67~            	.db $B2,$9D,$D6,$2C,$42,$3C,$2C,$4E,$F9,$82,$08,$8B,$2C,$DB,$0A,$80
6838   BE67~            	.db $35,$B3,$FC,$DE,$4A,$74,$A5,$25,$03,$D0,$62,$5D,$5E,$13,$3C,$33
6839   BE67~            	.db $2A,$52,$FA,$BC,$0D,$77,$CF,$84,$E1,$0F,$CA,$DD,$D5,$5B,$31,$40
6840   BE67~            	.db $45,$13,$06,$98,$E2,$42,$00,$A3,$C3,$E0,$01,$FF,$FF
6841   BE67~            spx_sw1
6842   BE67~            
6843   BE67~            sps_indy_01
6844   BE67~            		.db $AD,$4F,$A6,$C6,$5D,$DA,$8C,$AE,$18,$9F,$74,$69,$3B,$DA,$62,$7D
6845   BE67~            		.db $C2,$A4,$ED,$68,$AA,$D3,$31,$97,$B6,$A3,$6E,$4E,$C6,$42,$D6,$8D
6846   BE67~            		.db $AA,$39,$69,$73,$6D,$DB,$EA,$E6,$79,$D4,$69,$6B,$6B,$9B,$A7,$B6
6847   BE67~            		.db $C4,$6E,$AD,$EB,$11,$CB,$1A,$DA,$B5,$6E,$24,$2A,$6B,$70,$D7,$FA
6848   BE67~            		.db $E6,$B1,$2C,$C9,$5B,$EB,$9B,$C5,$0A,$67,$EF,$A5,$AF,$06,$33,$92
6849   BE67~            		.db $DD,$A7,$BE,$48,$CA,$4C,$4A,$9F,$86,$AA,$C8,$B3,$28,$7D,$18,$AB
6850   BE67~            		.db $92,$34,$07,$E7,$6E,$AA,$9A,$C2,$02,$9C,$8B,$29,$71,$09,$13,$75
6851   BE67~            		.db $2B,$66,$CF,$35,$53,$2D,$0D,$5A,$3C,$B5,$88,$08,$27,$6D,$E8,$DE
6852   BE67~            		.db $1C,$82,$BA,$8D,$A1,$27,$37,$0C,$6C,$D7,$86,$1E,$CD,$30,$70,$19
6853   BE67~            		.db $9A,$8A,$33,$C3,$C0,$B6,$78,$2A,$43,$B6,$62,$D2,$D4,$B6,$0D,$D9
6854   BE67~            		.db $58,$70,$C9,$DA,$D6,$17,$13,$C9,$A9,$EB,$DA,$54,$AD,$97,$25,$B7
6855   BE67~            		.db $6B,$53,$71,$D6,$96,$D2,$AE,$8D,$C5,$E9,$68,$69,$BB,$36,$15,$AF
6856   BE67~            		.db $A3,$A9,$6D,$DB,$92,$A2,$0D,$87,$B7,$2D,$5B,$CC,$D6,$12,$D9,$06
6857   BE67~            		.db $00,$01,$31,$04,$21,$20,$B9,$E4,$07,$FF
6858   BE67~            spx_indy_01
6859   BE67~            
6860   BE67~            
6861   BE67             #ENDIF
6862   BE67             
6863   BE67             
6864   BE67             ;*************************************
6865   BE67             ;* System Startup Pointers           
6866   BE67             ;*************************************
6867   BE67             
6868   BE67             #IF ___oki = 1
6869   BE67~                #if $ > $bffa \ .error "GAMMA ROM has extended outside of design size." \ #endif
6869   BE67~                #if $ > $bffa \ .error "GAMMA ROM has extended outside of design size." \ #endif
6869   BE67             
6870   BFF9                 .org $BFF9  
6871   BFF9 00          chkg    .chk $8000,$FFFF,$00
6872   BFFA                 .org $BFFA
6873   BFFA~            #ELSE
6874   BFFA~            
6875   BFFA~                #if $ > $fffa \ .error "GAMMA ROM has extended outside of design size." \ #endif
6875   BFFA~                #if $ > $fffa \ .error "GAMMA ROM has extended outside of design size." \ #endif
6875   BFFA~                #if $ > $fffa \ .error "GAMMA ROM has extended outside of design size." \ #endif
6876   BFFA~                .org $FFF9  
6877   BFFA~            chkg    .chk $8000,$FFFF,$00
6878   BFFA~                .org $FFFA
6879   BFFA             #ENDIF    
6880   BFFA EC 8A           .word   g_nmi
6881   BFFC 0D 80           .word   g_main
6882   BFFE 2F 81           .word   g_irq
6883   C000                     
6884   C000                 .end
6885   C000             
6886   C000             



Type Key: N=NULL_SEG C=CODE_SEG B=BIT_SEG X=EXTD_SEG D=DATA_SEG
          L=Local
          E=Export

Value    Type    Usages    Label
-----    ----    ------    ------------------------------
0001     N      00000        ANIMATE_OXYGEN                  
0080     N      00000        AUDCTL_POLY9                    
0040     N      00002        AUDCTL_CH1_179                  
0020     N      00002        AUDCTL_CH3_179                  
0010     N      00002        AUDCTL_12_16B                   
0008     N      00002        AUDCTL_34_16B                   
0004     N      00000        AUDCTL_13HP                     
0002     N      00000        AUDCTL_34HP                     
0001     N      00000        AUDCTL_15K                      
0000     N      00024        CHCTL_POLY17_5                  
0020     N      00005        CHCTL_POLY5                     
0040     N      00016        CHCTL_POLY4_5                   
0060     N      00002        CHCTL_POLY5X                    
0080     N      00023        CHCTL_POLY17                    
00A0     N      00040        CHCTL_NOPOLY                    
00C0     N      00011        CHCTL_POLY4                     
00E0     N      00001        CHCTL_NOPOLY2                   
0010     N      00000        CHCTL_FORCE                     
0000     N      00004        DEBUG                           
0000     N      00000        DISPLAY_COPYRIGHT               
0000     N      00000        DISABLE_HCOUNT                  
0001     N      00000        DISABLE_FASTTRANSITIONS         
0007     N      00002        DEFAULT_VOLUME                  
0000     N      00000        ENABLE_WASTE                    
0080     N      00002        EE_ERASE                        
0040     N      00004        EE_WRITE                        
0020     N      00002        EE_READ                         
0000     N      00004        EE_DONE                         
0000     N      00000        FORCE_TESSERACT_ANIMATION       
0001     N      00000        FORCE_HIDE_FRAMECOUNT           
0000     N      00000        FORCE_HOMEWORLD_BONUS           
0000     N      00000        FORCE_DESIGNERS                 
0000     N      00002        IDENTIFIER_AL                   
0001     N      00000        IDENTIFIER_AH                   
0002     N      00000        IDENTIFIER_P0                   
0003     N      00000        IDENTIFIER_P1                   
0004     N      00000        IDENTIFIER_P2                   
0005     N      00000        IDENTIFIER_P3                   
0006     N      00000        IDENTIFIER_P4                   
0007     N      00000        IDENTIFIER_P5                   
0008     N      00000        IDENTIFIER_P6                   
0009     N      00000        IDENTIFIER_P7                   
000A     N      00000        IDENTIFIER_VR                   
000B     N      00000        IDENTIFIER_V0                   
000C     N      00000        IDENTIFIER_V1                   
000D     N      00000        IDENTIFIER_V2                   
000E     N      00000        IDENTIFIER_V3                   
000F     N      00002        IDENTIFIER_GG                   
0010     N      00000        IDENTIFIER_BL                   
0011     N      00002        IDENTIFIER_BH                   
0012     N      00000        IDCOUNT                         
0000     N      00002        LANGUAGE                        
0000     N      00002        LEVEL_EDITOR                    
0001     N      00001        MAJOR_VERSION                   
0000     N      00001        MINOR_VERSION                   
0001     N      00000        MAX_LEVITATIONS                 
0009     N      00000        NUMLIVES                        
0004     N      00004        NUMPOKEY                        
0010     N      00102        NUM_CHANNELS                    
0000     N      00000        NOREPL                          
2000     N      00008        POKEYBASE                       
0000     N      00002        POKEY_CH0                       
0004     N      00002        POKEY_CH1                       
0008     N      00002        POKEY_CH2                       
000C     N      00002        POKEY_CH3                       
2000     N      00010        POKEY_0                         
2008     N      00004        POKEY_1                         
2010     N      00002        POKEY_2                         
2018     N      00002        POKEY_3                         
0000     N      00000        POKEY_FREQ1                     
0001     N      00000        POKEY_CONT1                     
0002     N      00000        POKEY_FREQ2                     
0003     N      00000        POKEY_CONT2                     
0004     N      00000        POKEY_FREQ3                     
0005     N      00000        POKEY_CONT3                     
0006     N      00000        POKEY_FREQ4                     
0007     N      00000        POKEY_CONT4                     
0020     N      00008        POKEY_AUDCTL                    
0020     N      00002        POKEY_ALLPOT                    
0021     N      00000        POKEY_STIMER                    
0021     N      00000        POKEY_KBCODE                    
0022     N      00000        POKEY_SKRES                     
0022     N      00004        POKEY_RANDOM                    
0023     N      00002        POKEY_POTGO                     
0025     N      00000        POKEY_SEROUT                    
0025     N      00000        POKEY_SERIN                     
0026     N      00000        POKEY_IRQEN                     
0026     N      00000        POKEY_IRQST                     
0027     N      00000        POKEY_SKCTL                     
0027     N      00000        POKEY_SKSTAT                    
FFFFFFFF     N      00000        REPL                            
0034     N      00019        RATE_LARGO                      
0040     N      00002        RATE_DEFAULT                    
0064     N      00004        RATE_MODERATO                   
0091     N      00004        RATE_ALLEGRO                    
009D     N      00004        RATE_VIVACE                     
00B1     N      00005        RATE_PRESTO                     
0000     N      00002        SPEECH                          
0001     N      00000        STARTLEVEL                      
0000     N      00000        TOURNAMENT_EDITION              
0000     N      00024        ___tlk                          
0001     N      00016        ___oki                          
0001     N      00004        ___imm                          
0001     N      00000        ___nmi                          
0001     N      00002        ___exm                          
BDB4     N      00024        __rpmsloop                      
001E     N      00121        _isccount                       
8937     N      00060        _iscbase                        
0062     N      00388        ___noteidx                      
0000     N      00235        _REST                           
0001     N      00000        _A_                             
0002     N      00000        _Bb_                            
0003     N      00000        _B_                             
0004     N      00000        _C0                             
0005     N      00000        _Db0                            
0006     N      00000        _D0                             
0007     N      00000        _Eb0                            
0008     N      00000        _E0                             
0009     N      00000        _F0                             
000A     N      00000        _Gb0                            
000B     N      00001        _G0                             
000C     N      00001        _Ab0                            
000D     N      00014        _A0                             
000E     N      00001        _Bb0                            
000F     N      00001        _B0                             
0010     N      00005        _C1                             
0011     N      00000        _Db1                            
0012     N      00004        _D1                             
0013     N      00000        _Eb1                            
0014     N      00001        _E1                             
0015     N      00002        _F1                             
0016     N      00000        _Gb1                            
0017     N      00002        _G1                             
0018     N      00000        _Ab1                            
0019     N      00004        _A1                             
001A     N      00002        _Bb1                            
001B     N      00006        _B1                             
001C     N      00000        _C2                             
001D     N      00001        _Db2                            
001E     N      00001        _D2                             
001F     N      00001        _Eb2                            
0020     N      00005        _E2                             
0021     N      00008        _F2                             
0022     N      00005        _Gb2                            
0023     N      00011        _G2                             
0024     N      00001        _Ab2                            
0025     N      00015        _A2                             
0026     N      00002        _Bb2                            
0027     N      00009        _B2                             
0028     N      00001        _C3                             
0029     N      00004        _Db3                            
002A     N      00006        _D3                             
002B     N      00000        _Eb3                            
002C     N      00013        _E3                             
002D     N      00001        _F3                             
002E     N      00013        _Gb3                            
002F     N      00010        _G3                             
0030     N      00002        _Ab3                            
0031     N      00015        _A3                             
0032     N      00003        _Bb3                            
0033     N      00023        _B3                             
0034     N      00018        _C4                             
0035     N      00025        _Db4                            
0036     N      00024        _D4                             
0037     N      00008        _Eb4                            
0038     N      00028        _E4                             
0039     N      00011        _F4                             
003A     N      00005        _Gb4                            
003B     N      00012        _G4                             
003C     N      00003        _Ab4                            
003D     N      00007        _A4                             
003E     N      00005        _Bb4                            
003F     N      00024        _B4                             
0040     N      00016        _C5                             
0041     N      00006        _Db5                            
0042     N      00005        _D5                             
0043     N      00000        _Eb5                            
0044     N      00004        _E5                             
0045     N      00002        _F5                             
0046     N      00006        _Gb5                            
0047     N      00021        _G5                             
0048     N      00002        _Ab5                            
0049     N      00015        _A5                             
004A     N      00000        _Bb5                            
004B     N      00014        _B5                             
004C     N      00000        _C6                             
004D     N      00000        _Db6                            
004E     N      00000        _D6                             
004F     N      00000        _Eb6                            
0050     N      00003        _E6                             
0051     N      00001        _F6                             
0052     N      00004        _Gb6                            
0053     N      00001        _G6                             
0054     N      00000        _Ab6                            
0055     N      00000        _A6                             
0056     N      00000        _Bb6                            
0057     N      00000        _B6                             
0058     N      00000        _C7                             
0059     N      00000        _Db7                            
005A     N      00000        _D7                             
005B     N      00000        _Eb7                            
005C     N      00000        _E7                             
005D     N      00000        _F7                             
005E     N      00000        _Gb7                            
005F     N      00000        _G7                             
0060     N      00000        _Ab7                            
0061     N      00000        _A7                             
0001     N      00000        alphaxmtd                       
0002     N      00006        alpharcvd                       
2020     N      00004        audctl                          
2020     N      00004        allpot                          
061C     N      00017        atime1                          
0620     N      00001        atime2                          
8B46     N      00002        advqueue                        
0001     N      00002        counter1                        
0002     N      00002        counter2                        
4800     N      00002        counter                         
000A     N      00005        cur_snd                         
002D     N      00013        cnt1                            
002E     N      00005        cnt2                            
0200     N      00021        ch_sid                          
0210     N      00005        ch_eflg                         
0220     N      00015        ch_tuneptr                    
0230     N      00027        ch_tuneptr+___CHNS                    
0240     N      00015        ch_ctrl_l                       
0250     N      00013        ch_ctrl_h                       
0260     N      00015        ch_freq                       
0270     N      00013        ch_freq+___CHNS                       
0280     N      00015        ch_mys_28                       
0290     N      00013        ch_mys_29                       
02A0     N      00013        ch_ratedif_l                    
02B0     N      00011        ch_ratedif_h                    
02C0     N      00015        ch_vol                          
02D0     N      00031        ch_localpc                      
02E0     N      00035        ch_pri                          
02F0     N      00011        ch_ctrldidx                     
0300     N      00009        ch_ctrl_run                     
0310     N      00007        ch_ctrl_lastv                   
0320     N      00011        ch_ctrl_lcnt                    
0330     N      00011        ch_freqdidx                     
0340     N      00009        ch_freq_run                     
0350     N      00007        ch_freq_lastd                   
0360     N      00007        ch_freq_last                   
0370     N      00007        ch_freq_last+___CHNS                   
0380     N      00011        ch_freq_lcnt                    
0390     N      00009        ch_rate                         
03A0     N      00015        ch_key                          
03B0     N      00013        ch_mys_3b                       
03C0     N      00015        ch_mys_3c                       
03D0     N      00009        ch_ctrlmask                     
03E0     N      00007        ch_synthmode                    
03F0     N      00015        ch_synthfadj                  
0400     N      00017        ch_synthfadj+___CHNS                  
0410     N      00005        ch_jmppc                      
0420     N      00009        ch_jmppc+___CHNS                      
0430     N      00005        ch_jmplocpc                     
0440     N      00005        ch_looppc                     
0450     N      00005        ch_looppc+___CHNS                     
0460     N      00005        ch_looplocalpc                  
0470     N      00009        ch_loopcount                    
0480     N      00009        ch_mys_48                       
0490     N      00013        ch_mys_49                       
04B0     N      00007        ch_mys_4b                       
04C0     N      00011        ch_pchan                        
05DF     N      00011        curctrl                         
0602     N      00002        cksumop                         
0613     N      00004        cksumxw                         
0624     N      00004        cksumgs                         
06ED     N      00004        cksummz                         
06FC     N      00004        cksumwc                         
0706     N      00002        cksumit                         
0713     N      00002        cksumhs                         
0717     N      00002        cksumts                         
801A     N      00003        cindy                           
8042     N      00003        c_reset                         
808B     N      00003        chkwrps                         
0010     N      00011        chan1                           
0020     N      00016        chan2                           
0040     N      00012        chan3                           
0080     N      00002        chan4                           
8215     N      00003        callf                           
8AE4     N      00002        choffh                          
8AE8     N      00003        choffl                          
985C     N      00003        compee                          
989D     N      00003        coin1                           
98A2     N      00003        coin2                           
99B8     N      00002        classwarp                       
0000     N      00000        cmdp_g_snd_fak                  
0001     N      00000        cmdp_snd_coin                   
0002     N      00000        cmdp_snd_launch                 
0003     N      00000        cmdp_snd_passby                 
0004     N      00000        cmdp_snd_b1a                    
0005     N      00000        cmdp_snd_b1e                    
0006     N      00000        cmdp_snd_b2a                    
0007     N      00000        cmdp_snd_b2b                    
0008     N      00000        cmdp_snd_b2c                    
0009     N      00000        cmdp_snd_b2d                    
000A     N      00000        cmdp_snd_b3a                    
000B     N      00000        cmdp_snd_b3b                    
000C     N      00000        cmdp_snd_c1                     
000D     N      00000        cmdp_snd_c2                     
000E     N      00000        cmdp_snd_c3                     
000F     N      00000        cmdp_snd_c4                     
0010     N      00000        cmdp_snd_c5                     
0011     N      00000        cmdp_snd_c7                     
0012     N      00000        cmdp_snd_d1                     
0013     N      00000        cmdp_snd_d3                     
0014     N      00000        cmdp_snd_d4                     
0015     N      00000        cmdp_snd_d5                     
0016     N      00000        cmdp_snd_e1                     
0017     N      00000        cmdp_snd_e2                     
0018     N      00000        cmdp_snd_e3                     
0019     N      00000        cmdp_snd_e4                     
001A     N      00000        cmdp_snd_f2                     
001B     N      00000        cmdp_snd_f3                     
001C     N      00000        cmdp_snd_f4                     
001D     N      00000        cmdp_snd_h1                     
001E     N      00000        cmdp_snd_h2                     
001F     N      00000        cmdp_snd_h3                     
0020     N      00000        cmdp_snd_i1a                    
0021     N      00000        cmdp_snd_i1b                    
0022     N      00000        cmdp_snd_i1c                    
0023     N      00000        cmdp_snd_i2a                    
0024     N      00000        cmdp_snd_i2c                    
0025     N      00000        cmdp_snd_i2d                    
0026     N      00000        cmdp_snd_i2f                    
0027     N      00000        cmdp_snd_i2g                    
0028     N      00000        cmdp_snd_i2h                    
0029     N      00000        cmdp_snd_i2i                    
002A     N      00000        cmdp_snd_b1d                    
002B     N      00000        cmdp_snd_d2                     
002C     N      00000        cmdp_snd_i4b                    
002D     N      00000        cmdp_snd_i4c                    
002E     N      00000        cmdp_snd_i6                     
002F     N      00000        cmdp_snd_i7a                    
0030     N      00000        cmdp_snd_i7b                    
0031     N      00000        cmdp_snd_i7c                    
0032     N      00000        cmdp_snd_i8                     
0033     N      00000        cmdp_snd_i9                     
0034     N      00000        cmdp_snd_j3                     
0035     N      00000        cmdp_snd_j6                     
0036     N      00000        cmdp_snd_mys                    
0037     N      00000        cmdp_snd_brk                    
0038     N      00000        cmdp_snd_str                    
0039     N      00000        cmdp_snd_hsc                    
003A     N      00000        cmdp_snd_hro                    
003B     N      00000        cmdp_snd_triumph                
003C     N      00000        cmdp_snd_spbonus                
003D     N      00000        cmdp_snd_scenergize             
003E     N      00000        cmdp_snd_schit                  
003F     N      00000        cmdp_snd_scdrop                 
0040     N      00000        cmdp_snd_fail                   
0041     N      00000        cmdp_snd_maynard                
0042     N      00000        cmdp_snd_bhend                  
0043     N      00000        cmdp_snd_bonusr                 
0044     N      00001        cmdp_snd_maxmv                  
0045     N      00000        cmdp_snd_hiddenbk1              
BFF9     N      00001        chkg                            
05DD     N      00009        datnum                          
05DE     N      00007        datflg                          
80D3     N      00002        domaxsound                      
0000     N      00041        dbm0                            
0001     N      00000        dbm3                            
0002     N      00000        dbm6                            
0003     N      00000        dbm9                            
0004     N      00000        dbm12                           
0005     N      00000        dbm15                           
0006     N      00000        dbm18                           
0007     N      00000        dbm21                           
0008     N      00000        dbm24                           
88A7     N      00005        dopokey                         
88EF     N      00002        dosimm                          
8B40     N      00003        discard                         
8B42     N      00003        discard2                        
957E     N      00003        nullenvelope                   
99A3     N      00003        dscore                          
99AF     N      00003        dinit                           
00E5     N      00002        dip_emask0                      
0001     N      00002        dip_emask1                      
6020     N      00016        eerom                           
0002     N      00007        eflg0                           
0003     N      00001        eflg1                           
0004     N      00001        eflg2                           
0005     N      00001        eflg3                           
0006     N      00001        eflg4                           
0007     N      00001        eflg5                           
0008     N      00001        eflg6                           
0009     N      00001        eflg7                           
001C     N      00005        eerdy                           
001D     N      00017        eesrce                          
001F     N      00011        eedest                          
0021     N      00007        eezflg                          
0022     N      00013        eerequ                          
0023     N      00013        eerwrq                          
0024     N      00019        eebad                           
0025     N      00017        eeflg                           
0026     N      00001        eebc                            
0027     N      00009        eeidx                           
0028     N      00005        eelen                           
0029     N      00013        eesel                           
002A     N      00011        eecsum                          
0603     N      00024        extlie                          
07F7     N      00007        eerbad                          
0001     N      00010        eflg_scores                     
0002     N      00010        eflg_initials                   
0004     N      00010        eflg_xwarp                      
0008     N      00010        eflg_game                       
0010     N      00010        eflg_maze                       
0020     N      00006        eflg_option                     
0040     N      00006        eflg_warpco                     
0080     N      00008        eflg_tesser                     
975A     N      00001        eezhis                          
975E     N      00003        eezbook                         
97A3     N      00005        eeupd                           
9810     N      00002        eesetup                         
9995     N      00012        exitr                           
9998     N      00026        exitnr                          
9B40     N      00002        endtst                          
0001     N      00013        framecnt                        
07FF     N      00009        fpgaspeech                      
80AA     N      00002        framecntl                       
8407     N      00003        functbl                         
000A     N      00000        g_numhs                         
0003     N      00006        g_savecnt                       
0002     N      00002        g_tout                          
0003     N      00012        g_done                          
04D6     N      00005        gw_queue                        
0556     N      00011        gw_i                            
0557     N      00011        gw_ia                           
055A     N      00007        gr_queue                        
05DA     N      00013        gr_i                            
05DB     N      00009        gr_ia                           
0614     N      00032        game1                           
0618     N      00001        game2                           
0002     N E    00000        g_numstop                       
0002     N E    00000        g_numstxl                       
0010     N E    00000        g_numstwx                       
0010     N E    00000        g_numstgs                       
00C8     N E    00000        g_numstmz                       
0009     N E    00000        g_numstit                       
000C     N E    00000        g_numsths                       
0007     N E    00000        g_numwarps                      
0003     N E    00000        g_numtessr                      
800D     N      00003        g_main                          
812F     N      00003        g_irq                           
8AEC     N      00003        g_nmi                           
9762     N      00003        genzer                          
978E     N      00002        genreq                          
9863     N      00002        game_irq                        
98D0     N      00003        genwarps                        
98D8     N      00003        genwarpsx                       
9923     N      00003        getdip0                         
992F     N      00003        getdip1                         
9935     N      00003        getset0                         
993B     N      00003        getset1                         
9963     N      00003        geteeflgs                       
9968     N      00003        geteedone                       
99C6     N      00002        g_stest                         
9B82     N      00003        geths                           
9B99     N      00003        getin                           
9BB0     N      00003        gettes                          
9BC7     N      00003        getstap                         
9C4C     N      00003        getstawx                        
9C98     N      00003        getstamz                        
9D18     N      00003        getwarp                         
9D3A     N      00003        genwarp                         
0000     N E    00000        g_snd_fak                       
0001     N E    00000        g_geth                          
0002     N E    00000        g_geti                          
0003     N E    00000        g_sendh                         
0004     N E    00000        g_sendi                         
0005     N E    00000        g_gstamz                        
0006     N E    00000        g_sstap                         
0007     N E    00000        g_ctrl                          
0008     N E    00000        g_rand                          
0009     N E    00000        g_swtc                          
000A     N E    00000        g_getdip0                       
000B     N E    00000        g_getdip1                       
000C     N E    00000        g_getset0                       
000D     N E    00000        g_getset1                       
000E     N E    00000        g_eeflgs                        
000F     N E    00000        g_eedone                        
0010     N E    00000        g_cn1                           
0011     N E    00000        g_cn2                           
0012     N E    00000        g_clro                          
0013     N E    00000        g_sstawx                        
0014     N E    00000        g_sstamz                        
0015     N E    00000        g_swarps                        
0016     N E    00000        g_gwarp                         
0017     N E    00000        g_gstap                         
0018     N E    00000        g_gstawx                        
0019     N E    00000        g_setopt0                       
001A     N E    00000        g_setopt1                       
001B     N E    00000        g_classwarp                     
001C     N E    00000        g_genwarp                       
001D     N E    00000        g_getts                         
001E     N E    00000        g_sendtes                       
001F     N E    00000        g_sendmaxsnd                    
0020     N E    00000        g_setctrlp1                     
0021     N E    00000        g_setctrlp2                     
0022     N E    00000        g_clrh                          
0023     N E    00000        g_clrs                          
0024     N E    00000        g_sndstop                       
0707     N      00016        hscore                          
0010     N      00039        hlbksl                          
2800     N      00002        input                           
3000     N      00008        indata                          
4000     N      00006        intack                          
0000     N      00015        irqcnt                          
05E0     N      00005        imm_id                          
05E1     N      00005        iarg                            
06FD     N      00016        initl                           
80BC     N      00003        initmaxbuf                      
817C     N      00004        initrpm                         
829B     N      00003        immexe                          
0080     N      00042        isc_srate                       
0081     N      00000        isc_arate                       
0082     N      00116        isc_sebvol                      
0083     N      00026        isc_adbvol                      
0084     N      00002        isc_sbfreq                      
0085     N      00006        isc_abfreq                      
0086     N      00085        isc_freq                        
0087     N      00116        isc_ctrl                        
0088     N      00000        isc_unk1                        
0089     N      00000        isc_unk2                        
008A     N      00120        isc_ctrlm                       
008B     N      00017        isc_dctl                        
008C     N      00000        isc_syn                         
008D     N      00031        isc_sjsr                        
008E     N      00037        isc_sloops                      
008F     N      00037        isc_sloope                      
0090     N      00085        isc_sfunc10                     
0091     N      00000        isc_sfunc11                     
0092     N      00000        isc_envsh                       
0093     N      00000        isc_nzper                       
0094     N      00000        isc_nzperl                      
0095     N      00000        isc_nzperh                      
0096     N      00000        isc_repb                        
0097     N      00000        isc_unk4                        
0098     N      00000        isc_unk5                        
0099     N      00000        isc_jmpback                     
009A     N      00000        isc_unk6                        
009B     N      00000        isc_clctl                       
009C     N      00000        isc_sbfreqd                     
009D     N      00000        isc_abfreqd                     
0059     N      00890        i_freqenv                       
0060     N      00960        i_ampenv                        
007E     N      01260        i_tune                          
004B     N      00001        ir_scenergize_f1                
004C     N      00001        ir_scenergize_f2                
004D     N      00001        ir_scenergize_f3                
004E     N      00001        ir_scenergize_f4                
0055     N      00004        ir_scenergize_c                 
002B     N      00001        kilscores                       
8220     N      00003        killp                           
8238     N      00003        killid                          
825A     N      00003        killch                          
3800     N      00004        leta                            
0015     N      00001        lastoki                         
04C5     N      00007        loc_even_cont                   
04C6     N      00005        loc_even_freq                   
04C9     N      00007        loc_odd_freq                    
9B44     N      00003        ldhsin                          
9B68     N      00003        loadop                          
002F     N      00015        maxsnd                          
0030     N      00001        maxcounter                      
05E2     N      00006        maxsndcbuf                      
05F6     N      00010        maxsndfbuf                      
0625     N      00022        mzstats                         
BDD0     N      00003        maxsndcbufd                     
0004     N      00002        maxsndcbuflen                   
BDD4     N      00003        maxsndfbufd                     
0009     N      00002        maxsndfbuflen                   
00AD     N      00988        numcom                          
0090     N      00142        numsnd                          
0090     N      01014        numtun                          
0010     N      00008        numimm                          
0027     N      00000        numtlk                          
0090     N      00378        numenv                          
0024     N      00076        numexc                          
0002     N      00004        numfcns                         
000C     N      00010        numsths                         
0009     N      00010        numstit                         
0003     N      00010        numtessers                      
0007     N      00016        numwarps                        
00C8     N      00006        numstmz                         
0002     N      00004        numstop                         
0002     N      00004        numstxl                         
0010     N      00008        numstxw                         
0010     N      00004        numstgs                         
FFFFFFFF     N      00138        no_exe                          
FFFFFFFF     N      00000        no_ext                          
841B     N      00001        nocmd                           
8B66     N      00002        nmiex                           
007F     N      00086        numoki                          
9670     N      00005        notes                           
978C     N      00010        nozero                          
9897     N      00001        neg                             
9AF3     N      00005        nxtone                          
9AFD     N      00003        nxtpat                          
5000     N      00026        outdata                         
0600     N      00024        options                         
8325     N      00002        openchan                        
83E6     N      00003        okicmd                          
83FD     N      00003        okiwrite                        
0029     N      00410        o_okiptr                        
0001     N      00007        o_userfunction                  
009F     N      01275        o_commandnum                    
009F     N      00954        o_commandparam                  
0046     N      00420        o_tunestarts                    
007D     N      00750        o_priority                      
007D     N      00750        o_schann                         
007D     N      00750        o_stune                         
0000     N      00000        o_driver                        
0000     N      00000        o_tunecont                      
0000     N      00000        o_immfunc                       
0000     N      00000        o_immarg                        
0000     N      00000        o_immsid                        
0000     N      00000        o_immque                        
00AD     N      01038        o_exceptidx                     
0023     N      00245        o_exceptptr                     
9A4D     N      00002        ok1                             
2023     N      00004        potgo                           
2800     N      00006        portst                          
04A0     N      00027        preg_chanp                      
04C1     N      00021        po_4c1                          
04C2     N      00011        po_4c2                          
04C3     N      00023        po_even_odd                     
04C4     N      00011        po_4c4                          
04C7     N      00017        po_odd_cont                     
04C8     N      00013        po_even_cont                    
04CA     N      00007        po_odd_freq                     
04CB     N      00009        po_even_freq                    
04CC     N      00009        po_4cc                          
04CD     N      00007        po_choff                        
04CE     N      00017        po_4ce                          
04CF     N      00009        po_4cf                          
04D0     N      00007        po_4d0                          
04D1     N      00013        po_audctl                       
04D2     N      00013        po_4d2                          
04D3     N      00009        po_4d3                          
04D4     N      00007        po_4d4                          
04D5     N      00013        po_audctl_mask                  
07F6     N      00005        pokbad                          
815F     N      00002        pokmain                         
8ADC     N      00003        devadl                         
8AE0     N      00003        devadh                         
996D     N      00003        pokran                          
9B2E     N      00004        pats                            
9B3F     N      00003        patend                          
0080     N      00012        qsize                           
2022     N      00006        random                          
202A     N      00000        random1                         
000D     N      00091        tuneptr                         
000F     N      00045        devptr                       
0011     N      00073        fasave                         
0013     N      00009        silevel                          
002C     N      00001        reqwai                          
0558     N      00005        reportf                         
05DC     N      00009        r_nptr                          
07F4     N      00009        rambad                          
07F5     N      00005        rombad                          
0000     N      00003        rt_attract                      
0001     N      00002        rt_eflag                        
0002     N      00001        rt_gosub                        
0003     N      00001        rt_killpri                      
0004     N      00005        rt_killid                       
0005     N      00001        rt_killdev                      
0006     N      00074        rt_sound                        
0007     N      00000        rt_report                       
0008     N      00041        rt_speech                       
0009     N      00002        rt_immed                        
FFFFFFFF     N      00070        rt_except                       
827F     N      00005        repbyte                         
841C     N      00007        rpmmain                         
8455     N      00015        rpmnext                         
8597     N      00002        rpmm3                           
8719     N      00005        rnext                           
873D     N      00005        rpm_inst                        
0000     N      00000        rpm_pc                          
9732     N      00001        rpm_end                         
979B     N      00003        reinall                         
98A7     N      00003        reseths                         
98AD     N      00003        resetst                         
98B3     N      00003        resetop                         
98B9     N      00003        reswarps                        
9980     N      00003        rolgig                          
9AC0     N      00001        ramtest                         
9B41     N      00002        ramerr                          
0026     N      00004        rate_scenergize                 
0014     N      00001        sirqcnt                         
0559     N      00011        sindex                          
0600     N      00017        starts                          
0718     N      00037        stats_temp                      
81EE     N      00003        scomm                           
8207     N      00003        setslvl                         
820A     N      00003        sceflg                          
82E8     N      00003        strtsnd                         
84FD     N      00004        sifin                           
88BA     N      00002        simmsel                         
88D9     N      00002        ssimm                           
88FB     N      00005        sfunctbl                        
8937     N      00003        sfunc08                         
898C     N      00003        sfunc09                         
8995     N      00003        sampenv                         
89A4     N      00003        sfreqenv                        
89B3     N      00003        saddrate                        
89B7     N      00003        ssetrate                        
89BC     N      00003        sadbamp                         
89C0     N      00003        ssebamp                         
89C5     N      00003        saddkey                         
89C9     N      00003        ssetkey                         
89CE     N      00003        saddkeyd                        
89DB     N      00003        ssetkeyd                        
89E4     N      00003        ssetctrlm                       
89E8     N      00003        sdctl                           
89FC     N      00003        sfunc1B                         
8A13     N      00003        ssynth                          
8A17     N      00003        sjsr                            
8A41     N      00003        sloopi                          
8A57     N      00003        sloopj                          
8A73     N      00003        spriclrb0                       
8A8C     N      00003        spriadd                         
8A9B     N      00003        srepb                           
8AA0     N      00003        sfunc17                         
8ABA     N      00003        sfunc18                         
8ACB     N      00003        sjmpback                        
0046     N      00350        stsndcount                      
0000     N      00000        sfreq_none                      
0000     N      00000        sctrl_none                      
0001     N      00000        sfreq_d06                       
0001     N      00000        sctrl_d01                       
0002     N      00000        sctrl_d02                       
0003     N      00000        sctrl_d03                       
0004     N      00000        sctrl_d04                       
0005     N      00031        sctrl_hardswell                 
0006     N      00000        sctrl_hardswell2                
0007     N      00000        sctrl_funk                      
0008     N      00000        sctrl_funk2                     
0009     N      00000        sctrl_robot                     
000A     N      00000        sctrl_horn                      
000B     N      00000        sctrl_d05                       
9905     N      00003        sendmaxsnd                      
9913     N      00003        setctrlp1                       
991B     N      00003        setctrlp2                       
9941     N      00003        setopt0                         
9952     N      00003        setopt1                         
9973     N      00003        switch                          
9CD9     N      00003        sendhs                          
9CE2     N      00003        sendinit                        
9CEB     N      00003        sendtess                        
9CF4     N      00003        sendstap                        
9CFD     N      00003        sendstawx                       
9D06     N      00003        sendstamz                       
9D0F     N      00003        sendwarps                       
0025     N E    00000        snd_coin                        
0026     N E    00000        snd_launch                      
0027     N E    00000        snd_passby                      
0028     N E    00000        snd_b1a                         
0029     N E    00000        snd_b1e                         
002A     N E    00000        snd_b2a                         
002B     N E    00000        snd_b2b                         
002C     N E    00000        snd_b2c                         
002D     N E    00000        snd_b2d                         
002E     N E    00000        snd_b3a                         
002F     N E    00000        snd_b3b                         
0030     N E    00000        snd_c1                          
0031     N E    00000        snd_c2                          
0032     N E    00000        snd_c3                          
0033     N E    00000        snd_c4                          
0034     N E    00000        snd_c5                          
0035     N E    00001        snd_c7                          
0036     N E    00000        snd_c6                          
0037     N E    00000        snd_d1                          
0038     N E    00000        snd_d3                          
0039     N E    00000        snd_d4                          
003A     N E    00000        snd_d5                          
003B     N E    00000        snd_e1                          
003C     N E    00000        snd_e2                          
003D     N E    00000        snd_e3                          
003E     N E    00000        snd_e4                          
003F     N E    00000        snd_f2                          
0040     N E    00000        snd_f3                          
0041     N E    00000        snd_f4                          
0042     N E    00000        snd_h1                          
0043     N E    00000        snd_h2                          
0044     N E    00000        snd_h3                          
0045     N E    00000        snd_i1a                         
0046     N E    00000        snd_i1b                         
0047     N E    00000        snd_i1c                         
0048     N E    00000        snd_i2a                         
0049     N E    00000        snd_i2c                         
004A     N E    00000        snd_i2d                         
004B     N E    00000        snd_i2f                         
004C     N E    00000        snd_i2g                         
004D     N E    00000        snd_i2h                         
004E     N E    00000        snd_i2i                         
004F     N E    00000        snd_b1d                         
0050     N E    00000        snd_d2                          
0051     N E    00000        snd_i4b                         
0052     N E    00000        snd_i4c                         
0053     N E    00000        snd_i6                          
0054     N E    00000        snd_i7a                         
0055     N E    00000        snd_i7b                         
0056     N E    00000        snd_i7c                         
0057     N E    00000        snd_i8                          
0058     N E    00000        snd_i9                          
0059     N E    00000        snd_j3                          
005A     N E    00000        snd_j6                          
005B     N E    00000        snd_mys                         
005C     N E    00000        snd_brk                         
005D     N E    00000        snd_str                         
005E     N E    00000        snd_hsc                         
005F     N E    00001        snd_hro                         
0060     N E    00000        snd_triumph                     
0061     N E    00000        snd_spbonus                     
0062     N E    00000        snd_kilhro                      
0063     N E    00000        snd_scenergize                  
0064     N E    00000        snd_schit                       
0065     N E    00000        snd_scdrop                      
0066     N E    00000        snd_fail                        
0067     N E    00000        snd_maynard                     
0068     N E    00000        snd_kilmaynard                  
0069     N E    00001        snd_bhend                       
006A     N E    00000        snd_bonusr                      
006B     N E    00002        snd_maxmv                       
006C     N E    00000        snd_kilmax                      
006D     N E    00001        snd_hiddenbk1                   
006E     N E    00000        snd_kilbak                      
006F     N E    00000        sp_test                         
0070     N E    00000        sp_one                          
0071     N E    00000        sp_two                          
0072     N E    00000        sp_three                        
0073     N E    00000        sp_four                         
0074     N E    00000        sp_five                         
0075     N E    00000        sp_six                          
0076     N E    00000        sp_seven                        
0077     N E    00000        sp_eight                        
0078     N E    00000        sp_nine                         
0079     N E    00000        sp_ten                          
007A     N E    00000        sp_maxintruder                  
007B     N E    00000        sp_maxdestint                   
007C     N E    00000        sp_maxdestroy                   
007D     N E    00000        sp_maxhaha1                     
007E     N E    00000        sp_maxhaha2                     
007F     N E    00000        sp_maxhaha3                     
0080     N E    00000        sp_maxwewin                     
0081     N E    00000        sp_maxyoulose                   
0082     N E    00000        sp_maxactivate                  
0083     N E    00000        sp_maxattack                    
0084     N E    00000        sp_maxcannot                    
0085     N E    00000        sp_maxwillnot                   
0086     N E    00000        sp_maxbeback                    
0087     N E    00000        sp_maxahhhh                     
0088     N E    00000        sp_maxohhhh                     
0089     N E    00000        sp_maxeeeeww                    
008A     N E    00000        sp_rexhurry                     
008B     N E    00000        sp_rexcomeon                    
008C     N E    00000        sp_rexouttahere                 
008D     N E    00000        sp_rexooof                      
008E     N E    00000        sp_rexooom                      
008F     N E    00000        sp_rexouch                      
0090     N E    00000        sp_rexuggh                      
0091     N E    00000        sp_rexuhoh                      
0092     N E    00000        sp_rexumhmm                     
0093     N E    00000        sp_rexummm                      
0094     N E    00000        sp_rexwhoa                      
0095     N E    00000        sp_rexwoohoo                    
0096     N E    00000        sp_sw1                          
0097     N E    00000        sp_indy_01                      
0098     N E    00000        snd_off                         
0099     N E    00000        snd_onn                         
009A     N E    00000        snd_med                         
009B     N E    00000        snd_on3                         
009C     N E    00000        snd_of3                         
009D     N E    00000        snd_kil5                        
009E     N E    00000        snd_stp0                        
000C     N      00000        sctrl_blank                     
0002     N      00000        sfreq_blank                     
0000     N      00001        s_blank                         
000D     N      00001        sctrl_coin                      
0003     N      00001        sfreq_coin                      
0001     N      00001        s_coin                          
000E     N      00002        sctrl_launch                    
0004     N      00002        sfreq_launch                    
0002     N      00001        s_launch                        
000F     N      00002        sctrl_launch2                   
0005     N      00002        sfreq_launch2                   
0003     N      00001        s_launch2                       
0010     N      00001        sctrl_passby                    
0006     N      00001        sfreq_passby                    
0004     N      00001        s_passby                        
0011     N      00001        sctrl_passby2                   
0007     N      00001        sfreq_passby2                   
0005     N      00001        s_passby2                       
0012     N      00001        sctrl_galert                    
0008     N      00001        sfreq_galert                    
0006     N      00001        s_galert                        
0013     N      00001        sctrl_blaunch                   
0009     N      00001        sfreq_blaunch                   
0007     N      00001        s_blaunch                       
0014     N      00001        sctrl_bbrick                    
000A     N      00001        sfreq_bbrick                    
0008     N      00001        s_bbrick                        
0015     N      00001        sctrl_bpaddle                   
000B     N      00001        sfreq_bpaddle                   
0009     N      00001        s_bpaddle                       
0016     N      00001        sctrl_bmissp                    
000C     N      00001        sfreq_bmissp                    
000A     N      00001        s_bmissp                        
0017     N      00001        sctrl_digit                     
000D     N      00001        sfreq_digit                     
000B     N      00001        s_digit                         
0018     N      00000        sctrl_notused1                  
000E     N      00000        sfreq_notused1                  
000C     N      00000        s_notused1                      
0019     N      00000        sctrl_notused2                  
000F     N      00000        sfreq_notused2                  
000D     N      00000        s_notused2                      
001A     N      00000        sctrl_notused3                  
0010     N      00000        sfreq_notused3                  
000E     N      00000        s_notused3                      
001B     N      00001        sctrl_ccorrect                  
0011     N      00001        sfreq_ccorrect                  
000F     N      00001        s_ccorrect                      
001C     N      00001        sctrl_exp                       
0012     N      00001        sfreq_exp                       
0010     N      00001        s_exp                           
001D     N      00001        sctrl_exp2                      
0013     N      00001        sfreq_exp2                      
0011     N      00001        s_exp2                          
001E     N      00001        sctrl_exp3                      
0014     N      00001        sfreq_exp3                      
0012     N      00005        s_exp3                          
001F     N      00001        sctrl_exp4                      
0015     N      00001        sfreq_exp4                      
0013     N      00001        s_exp4                          
0020     N      00001        sctrl_exp5                      
0016     N      00001        sfreq_exp5                      
0014     N      00002        s_exp5                          
0021     N      00001        sctrl_exp6                      
0017     N      00001        sfreq_exp6                      
0015     N      00002        s_exp6                          
0022     N      00001        sctrl_pfire                     
0018     N      00001        sfreq_pfire                     
0016     N      00001        s_pfire                         
0023     N      00001        sctrl_shotstat                  
0019     N      00001        sfreq_shotstat                  
0017     N      00002        s_shotstat                      
0024     N      00001        sctrl_fishhatch                 
001A     N      00001        sfreq_fishhatch                 
0018     N      00001        s_fishhatch                     
0025     N      00001        sctrl_reactor                   
001B     N      00001        sfreq_reactor                   
0019     N      00001        s_reactor                       
0026     N      00001        sctrl_reactor2                  
001C     N      00001        sfreq_reactor2                  
001A     N      00001        s_reactor2                      
0027     N      00001        sctrl_goosefish                 
001D     N      00001        sfreq_goosefish                 
001B     N      00001        s_goosefish                     
0028     N      00001        sctrl_blowfish                  
001E     N      00001        sfreq_blowfish                  
001C     N      00001        s_blowfish                      
0029     N      00001        sctrl_blowfish2                 
001F     N      00001        sfreq_blowfish2                 
001D     N      00001        s_blowfish2                     
002A     N      00001        sctrl_circfish                  
0020     N      00001        sfreq_circfish                  
001E     N      00001        s_circfish                      
002B     N      00001        sctrl_circfish2                 
0021     N      00001        sfreq_circfish2                 
001F     N      00001        s_circfish2                     
002C     N      00001        sctrl_feject                    
0022     N      00001        sfreq_feject                    
0020     N      00001        s_feject                        
002D     N      00001        sctrl_fshot                     
0023     N      00001        sfreq_fshot                     
0021     N      00001        s_fshot                         
002E     N      00001        sctrl_blowspin                  
0024     N      00001        sfreq_blowspin                  
0022     N      00001        s_blowspin                      
002F     N      00001        sctrl_mazehit                   
0025     N      00001        sfreq_mazehit                   
0023     N      00001        s_mazehit                       
0030     N      00001        sctrl_exp7                      
0026     N      00001        sfreq_exp7                      
0024     N      00001        s_exp7                          
0031     N      00001        sctrl_lshot                     
0027     N      00001        sfreq_lshot                     
0025     N      00001        s_lshot                         
0032     N      00001        sctrl_hitshield                 
0028     N      00001        sfreq_hitshield                 
0026     N      00001        s_hitshield                     
0033     N      00001        sctrl_noshield                  
0029     N      00001        sfreq_noshield                  
0027     N      00001        s_noshield                      
0034     N      00001        sctrl_manhit                    
002A     N      00001        sfreq_manhit                    
0028     N      00001        s_manhit                        
0035     N      00001        sctrl_mantrip                   
002B     N      00001        sfreq_mantrip                   
0029     N      00002        s_mantrip                       
0036     N      00001        sctrl_spikes                    
002C     N      00001        sfreq_spikes                    
002A     N      00001        s_spikes                        
0037     N      00001        sctrl_spikes2                   
002D     N      00001        sfreq_spikes2                   
002B     N      00001        s_spikes2                       
0038     N      00001        sctrl_spikes3                   
002E     N      00001        sfreq_spikes3                   
002C     N      00001        s_spikes3                       
0039     N      00001        sctrl_key                       
002F     N      00001        sfreq_key                       
002D     N      00001        s_key                           
003A     N      00001        sctrl_door                      
0030     N      00001        sfreq_door                      
002E     N      00001        s_door                          
003B     N      00001        sctrl_handoff                   
0031     N      00001        sfreq_handoff                   
002F     N      00001        s_handoff                       
003C     N      00001        sctrl_handon                    
0032     N      00001        sfreq_handon                    
0030     N      00001        s_handon                        
003D     N      00001        sctrl_trans                     
0033     N      00001        sfreq_trans                     
0031     N      00001        s_trans                         
003E     N      00000        sctrl_trans2                    
0034     N      00000        sfreq_trans2                    
0032     N      00001        s_trans2                        
003F     N      00001        sctrl_cann                      
0035     N      00001        sfreq_cann                      
0033     N      00001        s_cann                          
0040     N      00001        sctrl_cann2                     
0036     N      00001        sfreq_cann2                     
0034     N      00001        s_cann2                         
0041     N      00001        sctrl_cann3                     
0037     N      00001        sfreq_cann3                     
0035     N      00001        s_cann3                         
0042     N      00001        sctrl_cann4                     
0038     N      00001        sfreq_cann4                     
0036     N      00001        s_cann4                         
0043     N      00001        sctrl_ssplash                   
0039     N      00001        sfreq_ssplash                   
0037     N      00001        s_ssplash                       
0044     N      00001        sctrl_rblow                     
003A     N      00001        sfreq_rblow                     
0038     N      00001        s_rblow                         
0045     N      00001        sctrl_rblow2                    
003B     N      00001        sfreq_rblow2                    
0039     N      00003        s_rblow2                        
0046     N      00001        sctrl_rblow3                    
003C     N      00001        sfreq_rblow3                    
003A     N      00003        s_rblow3                        
0047     N      00001        sctrl_escfall                   
003D     N      00001        sfreq_escfall                   
003B     N      00001        s_escfall                       
0048     N      00001        sctrl_mazekill                  
003E     N      00001        sfreq_mazekill                  
003C     N      00001        s_mazekill                      
0049     N      00001        sctrl_mazekill2                 
003F     N      00001        sfreq_mazekill2                 
003D     N      00001        s_mazekill2                     
003E     N      00001        s_start                         
003F     N      00001        s_start2                        
0040     N      00001        s_start3                        
0041     N      00001        s_start4                        
0042     N      00002        s_start5                        
0043     N      00001        s_mystery                       
0044     N      00001        s_mystery2                      
0045     N      00001        s_mystery3                      
0046     N      00001        s_mystery4                      
0047     N      00001        s_breakout                      
0048     N      00001        s_breakout2                     
0049     N      00001        s_breakout3                     
004A     N      00001        s_breakout4                     
004B     N      00001        s_escape                        
004C     N      00001        s_escape2                       
004D     N      00001        s_escape3                       
004E     N      00001        s_escape4                       
004F     N      00001        s_triumph                       
0050     N      00001        s_triumph2                      
0051     N      00001        s_triumph3                      
0052     N      00001        s_triumph4                      
0053     N      00004        s_highscore                     
0054     N      00004        s_highscore2                    
0055     N      00004        s_highscore3                    
0056     N      00004        s_highscore4                    
0057     N      00001        s_highscore5                    
0058     N      00001        s_highscore6                    
0059     N      00001        s_highscore7                    
005A     N      00001        s_highscore8                    
005B     N      00000        s_tense_1                       
005C     N      00000        s_tense_2                       
005D     N      00000        s_tense_3                       
005E     N      00000        s_tense_4                       
005F     N      00000        s_newmusic_5                    
0060     N      00001        s_spbonus_1                     
004A     N      00001        sctrl_xlife                     
0040     N      00001        sfreq_xlife                     
0061     N      00002        s_xlife                         
004B     N      00001        sctrl_bonus                     
0041     N      00001        sfreq_bonus                     
0062     N      00001        s_bonus                         
004C     N      00001        sctrl_shield                    
0042     N      00001        sfreq_shield                    
0063     N      00001        s_shield                        
004D     N      00001        sctrl_manwall                   
0043     N      00001        sfreq_manwall                   
0064     N      00001        s_manwall                       
004E     N      00001        sctrl_oxygen                    
0044     N      00001        sfreq_oxygen                    
0065     N      00001        s_oxygen                        
004F     N      00001        sctrl_robshot                   
0045     N      00001        sfreq_robshot                   
0066     N      00001        s_robshot                       
0050     N      00001        sctrl_footstep                  
0046     N      00001        sfreq_footstep                  
0067     N      00001        s_footstep                      
0051     N      00001        sctrl_nooxy                     
0047     N      00001        sfreq_nooxy                     
0068     N      00001        s_nooxy                         
0052     N      00001        sctrl_rhum                      
0048     N      00001        sfreq_rhum                      
0069     N      00001        s_rhum                          
0053     N      00001        sctrl_redalert                  
0049     N      00001        sfreq_redalert                  
006A     N      00001        s_redalert                      
0054     N      00001        sctrl_beeps                     
004A     N      00001        sfreq_beeps                     
006B     N      00001        s_beeps                         
006C     N      00001        s_scenergize                    
006D     N      00001        s_scenergize2                   
006E     N      00001        s_scenergize3                   
006F     N      00001        s_scenergize4                   
0056     N      00001        s_schit_c                       
004F     N      00001        s_schit_f                       
0070     N      00001        s_schit                         
0057     N      00001        s_scdrop_c                      
0050     N      00001        s_scdrop_f                      
0071     N      00001        s_scdrop                        
0058     N      00001        sctrl_fail                      
0051     N      00001        sfreq_fail                      
0072     N      00001        s_fail                          
0059     N      00001        sctrl_fail2                     
0052     N      00001        sfreq_fail2                     
0073     N      00001        s_fail2                         
0074     N      00001        s_maynard                       
0075     N      00001        s_maynard2                      
005A     N      00002        sctrl_bhend                     
0053     N      00002        sfreq_bhend                     
0076     N      00001        s_bhend                         
005B     N      00001        sctrl_bonusr                    
0054     N      00001        sfreq_bonusr                    
0077     N      00001        s_bonusr                        
005C     N      00001        sctrl_bonusr2                   
0055     N      00001        sfreq_bonusr2                   
0078     N      00001        s_bonusr2                       
005D     N      00001        sctrl_bonusr3                   
0056     N      00001        sfreq_bonusr3                   
0079     N      00001        s_bonusr3                       
005E     N      00001        sctrl_bonusr4                   
0057     N      00001        sfreq_bonusr4                   
007A     N      00001        s_bonusr4                       
005F     N      00001        sctrl_maxmv                     
0058     N      00001        sfreq_maxmv                     
007B     N      00001        s_maxmv                         
007C     N      00001        s_hiddenbk1                     
007D     N      00013        s_hiddenbk1x                    
0008     N      00004        ticmdbflen                      
0004     N      00002        tirdyflg                        
2800     N      00002        tirdy                           
5800     N      00008        tidata                          
5900     N      00006        tiwrite                         
8000     N      00002        tireset                         
0016     N      00017        temp1                           
0018     N      00009        temp2                           
001A     N      00025        temp3                           
0714     N      00016        tessers                         
07F0     N      00007        tstart                          
07F2     N      00009        tend                            
8B75     N      00005        t_userfunction                  
8B79     N      00322        t_commandtype                   
8C26     N      00323        t_commandparam                  
8CD3     N      00142        t_tunestarts                    
8D63     N      00253        t_priority                      
8DF3     N      00253        t_schan                         
8E83     N      00252        t_stune                         
8F13     N      00252        t_tunecont                      
8FA3     N      00002        t_immfunc                       
8FB3     N      00002        t_immarg                        
8FC3     N      00002        t_immsid                        
8FD3     N      00002        t_immchn                        
8FE3     N      00348        t_exceptidx                     
9090     N      00255        t_tune_l                        
9120     N      00255        t_tune_h                        
91B0     N      00180        t_freqenv_l                     
9240     N      00180        t_freqenv_h                     
92D0     N      00194        t_ampenv_l                      
9360     N      00194        t_ampenv_h                      
93F0     N      00073        t_exceptptr                     
9438     N      00001        t_mystery                       
9480     N      00084        t_okicmd                        
94FF     N      00084        t_okiattch                      
007D     N      00875        tunenum                         
BE13     N      03516        tmpptr                          
9732     N      00003        teax                            
973A     N      00005        teasrl                          
974A     N      00005        teadel                          
9AC0     N      00001        tstram                          
9AC0     N      00002        tst2k                           
9DFF     N      00002        timot                           
883B     N      00003        updpok                          
0002     N      01094        var1_                           
9E10     N      01164        var2_                           
0000     N      01141        var3_                           
9DEF     N      00764        var4_                           
0780     N      00005        vram                            
0786     N      00001        vadl0                           
0787     N      00007        vadh0                           
0799     N      00003        vadl1                           
079A     N      00007        vadh1                           
07A4     N      00003        vadl2                           
07A5     N      00005        vadh2                           
07A7     N      00003        vadl3                           
07A8     N      00005        vadh3                           
9ADD     N      00005        voltbl                          
9B2E     N      00002        vtend                           
0605     N      00009        warps                           
06EE     N      00026        warpcodes                       
9766     N      00003        wrhs                            
976A     N      00003        wrini                           
976E     N      00003        wrtes                           
9772     N      00003        wrhsini                         
9776     N      00003        wrstg                           
977A     N      00003        wrmaze                          
977E     N      00003        wrxwarp                         
9782     N      00003        wrbook                          
9786     N      00005        wrwarpc                         
978A     N      00007        wropt                           
98BF     N      00005        warpclass                       
000B     N      00019        xferbuf                         
9DD3     N      00011        xfer                            
9E05     N      00009        xfer2                           
9A14     N      00003        zpgtst                          

tasm: Number of errors = 0
